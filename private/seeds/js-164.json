{
    "items": [
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Does it work if you pass \"this\" into the init function?</p>\n\n<p>something like: (untested)</p>\n\n<pre><code>var obj = {\n    prop:function(){ alert('This just ran.'); },\n    init:(function(o){ o.prop(); })(this);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I think you want to try something like this:</p>\n\n<pre><code>var obj = {\n    prop: function() { alert('This just ran.'); },\n    init: function() { obj.prop(); }\n}\n</code></pre>\n\n<p>Object literals reqire comma-separated members without semicolons.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is not possible: obj doesn't exist until the whole block is interpreted.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Why don't you use the contructor model (actually, I have no idea of its correct name):</p>\n\n<pre><code>function Obj() {\n    // Initialising code goes here:\n    alert( 'Loaded!' );\n\n    // ...\n\n    // Private properties/methods:\n    var message = 'hello',\n        sayHello = function() {\n            alert(message);\n        };\n\n    // Public properties/methods:\n    this.prop = function() {\n        sayHello();\n    };\n\n    // Encapsulation:\n    this.setMessage = function(newMessage) {\n        message = newMessage;\n    };\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var instance = new Obj();\ninstance.setMessage('Boo');\ninstance.prop();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to create multiple instances of similar objects, you should use plain old constructor functions (remember to put shared properties in the prototype!).</p>\n\n<p>If you want to create a single object, consider using an anonymous constructor. Your example would read:</p>\n\n<pre><code>var obj = new (function() {\n    this.prop = function() {\n        alert('This just ran.');\n    }\n\n    // init code goes here:\n    this.prop();\n});\n</code></pre>\n\n<p>This has an additional benefit over object literals: the constructor function can be used as a closure over 'private' variables.</p>\n\n<p>Don't overuse object literals: they may make simple things simple, but complex things will get overly complicated.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Yes, obj does not seem to exist locally till later. This worked for me with <code>setTimeout</code>. Tested ok on IE8, FF5, Chrome 12, Opera v11.5. Not sure about the 50 milliseconds though, I imagine it is enough.</p>\n\n<pre><code>var obj = {\n    prop: function() { alert('This just ran.') },\n    init: ( function(){ setTimeout(function(){obj.prop()},50) } )()\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Init in jQuery-like style</p>\n\n<pre><code>(function() {\n\n  var $ = function(){\n    return new $.fn.init();\n  };\n\n  $.fn = $.prototype = {\n    init: function(){\n      this.prop();\n    },\n    prop: function(){\n      alert('This just ran.');\n    }\n  };\n\n  $.fn.init.prototype = $.fn;\n\n  $();\n\n})();\n</code></pre>\n\n<p><a href=\"http://jsbin.com/oRObUT/1/edit?html,js,console\" rel=\"nofollow\"><strong><code>jsbin.com</code></strong></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A simple alternative: </p>\n\n<pre><code>var obj = {\n\n  init: function(){ \n    alert('loaded');\n  }\n\n}.init();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>this is an update to the example submitted by user1575313.</p>\n\n<p>the original code works but it limits the use of the object after setup. By returning the object reference in the init method it allows the object to be used outside the object. </p>\n\n<p>link to jsFiddle. <a href=\"http://jsfiddle.net/efa5pt6f/\" rel=\"nofollow\">jsFiddle</a></p>\n\n<pre><code>var obj = {\n\ninit: function()\n{ \n    alert('loaded'); \n\n    this.consoleLog(); \n\n    /* we want to return this to keep object \n    usable after auto init */ \n    return this;\n}, \n\nconsoleLog: function() \n{\n    console.log(1); \n}\n\n}.init(); \n\n/* the obj should now be usable outside the auto init */ \nobj.consoleLog();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've realized you can have a property in an object run automatically like this:</p>\n\n<pre><code>var obj = {\n\n    init:(function(){ alert('loaded');})();\n\n}\n</code></pre>\n\n<p>I'm trying to use this method as an initializer for the object. The problem I'm running into is passing a reference to 'obj' to the init property. I suspect it generates errors because the obj hasn't been completely built in browser yet. I'm trying to do the following, but unsuccessfully. If there's a way to do this, I'd love to know how.</p>\n\n<pre><code>var obj = {\n    prop:function(){ alert('This just ran.'); },\n    init:(function(){ obj.prop(); })();\n}\n</code></pre>\n",
            "last_activity_date": 1420047279,
            "question_id": 623474,
            "score": 13,
            "tags": [
                "javascript",
                "initialization"
            ],
            "title": "Javascript - object initializer?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>All watches are evaluated (sometimes multiple times) every digest loop.  The digest loop is entered as a result of some event, or calling $apply().  Watches are not called periodically based on a timer.</p>\n\n<p>See <a href=\"http://docs.angularjs.org/guide/concepts\">http://docs.angularjs.org/guide/concepts</a></p>\n\n<blockquote>\n  <p>The browser's event-loop waits for an event to arrive.  The event's callback gets executed... Once the callback executes, the browser leaves the JavaScript context and re-renders the view based on DOM changes. Angular modifies the normal JavaScript flow by providing its own event processing loop. This splits the JavaScript into classical and Angular execution context... Angular executes [some] stimulusFn(), which typically modifies application state.  Angular enters the $digest loop. The loop is made up of two smaller loops which process $evalAsync queue and the $watch list. The $digest loop keeps iterating until the model stabilizes, which means that the $evalAsync queue is empty and the $watch list does not detect any changes. The $watch list is a set of expressions which may have changed since last iteration. If a change is detected then the $watch function is called which typically updates the DOM with the new value.</p>\n</blockquote>\n\n<p><img src=\"http://i.stack.imgur.com/EvHjB.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 23
                }
            ],
            "body": "<p>I'm reading a lot about AngularJS nowadays, and I came across that magical $watch function. I understand how to use it, but I wonder how is it implemented in the background. Is it a time interval function? Or is it Angular calling this watch every statement executed?</p>\n\n<p>I don't want to dig into the source code right now, and I would glad if one of you already know the answer and want to share his knowledge about the subject.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1378391400,
            "question_id": 18634666,
            "score": 12,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-scope"
            ],
            "title": "How does AngularJS&#39;s $watch function work?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I can't seem to find any formal API for this (maybe in the future they will implement one), and I don't think that you can be sure that indoor tiles will be with empty description.</p>\n\n<p>What I found to be working for me is using this API:\nRun an HTTP GET to this address: \"<a href=\"http://cbk0.google.com/cbk?output=xml&amp;ll=52.358445,4.88103\" rel=\"nofollow\">http://cbk0.google.com/cbk?output=xml&amp;ll=52.358445,4.88103</a>\" with the ll=LONG,LAT</p>\n\n<p>This is an internal API used to find a target location pano_id. It also gives us some information on what we can do with it: zoom levels, what streets you're on, etc.</p>\n\n<p>I've noticed that all the results for coordinates that have indoor street view images, have <code>scene=\"_number\" level_id=\"_id\"</code>  in the <code>data_properties</code> tag of the panorama. And so, for each location you can run this request and look for these values in the data_properties of the result XML</p>\n\n<p>some examples:</p>\n\n<pre><code>indoors:\nhttp://cbk0.google.com/cbk?output=xml&amp;ll=52.358445,4.88103\nhttp://maps.google.com/cbk?output=xml&amp;ll=32.051626,34.7613\n\noutdoors:\nhttp://cbk0.google.com/cbk?output=xml&amp;ll=52.358766,4.880494\nhttp://maps.google.com/cbk?output=xml&amp;ll=32.07782,34.785789\n</code></pre>\n\n<p>Source: <a href=\"http://diddling.blogspot.co.il/2008/01/hacking-google-street-view.html\" rel=\"nofollow\">Hacking google street view</a></p>\n\n<p><strong>Update</strong></p>\n\n<p>It seems that to get local businesses right pano_id you need to add <code>&amp;it=all</code> to the request\nexample:</p>\n\n<pre><code>http://cbk0.google.com/cbk?output=xml&amp;hl=x-local&amp;ll=34.058593,-118.240673&amp;it=all\n</code></pre>\n\n<p>this the the right pano_id for this place, you can verify it using this API</p>\n\n<pre><code>http://cbk0.google.com/cbk?output=tile&amp;panoid=70o9Pukc2KSjO-PfeHussw&amp;zoom=3&amp;x=5&amp;y=1\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Here's a feature request I filed with Google:<br>\"Option to disable indoor street views\"<br>\n<a href=\"https://code.google.com/p/gmaps-api-issues/issues/detail?id=4831\" rel=\"nofollow\">https://code.google.com/p/gmaps-api-issues/issues/detail?id=4831</a></p>\n\n<p>Feel free to star the ticket there to help it get some attention</p>\n\n<p>(Is this OK etiquette-wise?  ...not a real answer (yet), but seems worthy of sharing here so interested parties can star/track the ticket)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Today more and more businesses use street view to show apartments from indoors.</p>\n\n<p>My program supplies ability to show street view according to selected business. But I don't want to show indoors. Only Outdoors. Because Indoors blocks me to move, only to turn 360 degrees.</p>\n\n<p><strong>Does anyone know how to fetch from street view API some value if I'm going to show indoors or outdoors?</strong> </p>\n\n<p>Thank you very much,</p>\n\n<p>This is my snippets of code so far that open street view according to selected address:</p>\n\n<pre><code>function load_map_and_street_view_from_address(address) {\n\nvar geocoder = new google.maps.Geocoder();\ngeocoder.geocode( {\n    'address': address\n}, function(results, status) {\n    if (status == google.maps.GeocoderStatus.OK) {\n        var gps = results[0].geometry.location;\n        create_map_and_streetview(gps.lat(), gps.lng(), 'map_canvas', 'pano');\n    }\n });\n}\n\n\nfunction create_map_and_streetview(lat, lng, map_id, street_view_id) {\nvar googlePos = new google.maps.LatLng(lat,lng);\n\naddLatLng = new google.maps.LatLng(lat,lng);\nvar service = new google.maps.StreetViewService();\nservice.getPanoramaByLocation(addLatLng, 50, showPanoData);\n\n}\n\nfunction showPanoData(panoData, status) {\nif (status != google.maps.StreetViewStatus.OK) {\n    $('#pano').html('No StreetView Picture Available').attr('style', 'text-align:center;font-weight:bold').show();\n    return;\n}\n$('#pano').show();\nvar angle = computeAngle(addLatLng, panoData.location.latLng);\n\nvar panoOptions = {\n    position: addLatLng,\n    addressControl: false,\n    linksControl: false,\n    panControl: false,\n    zoomControlOptions: {\n        style: google.maps.ZoomControlStyle.SMALL\n    },\n    pov: {\n        heading: angle,\n        pitch: 10,\n        zoom: 1\n    },\n    enableCloseButton: true,\n    visible:true\n};\n\npanorama.setOptions(panoOptions);\n\n}\n\nfunction computeAngle(endLatLng, startLatLng) {\nvar DEGREE_PER_RADIAN = 57.2957795;\nvar RADIAN_PER_DEGREE = 0.017453;\n\nvar dlat = endLatLng.lat() - startLatLng.lat();\nvar dlng = endLatLng.lng() - startLatLng.lng();\n\nvar yaw = Math.atan2(dlng * Math.cos(endLatLng.lat() * RADIAN_PER_DEGREE), dlat)\n* DEGREE_PER_RADIAN;\nreturn wrapAngle(yaw);\n}\n\nfunction wrapAngle(angle) {\nif (angle &gt;= 360) {\n    angle -= 360;\n} else if (angle &lt; 0) {\n    angle += 360;\n}\nreturn angle;\n};\n</code></pre>\n\n<p>The main Idea was to get Panorama location and verify distance to closest places around 360 degrees. </p>\n",
            "last_activity_date": 1365719431,
            "question_id": 14796604,
            "score": 12,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "google-street-view"
            ],
            "title": "How to know if street view panorama is indoors or outdoors"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The second parameter of the <code>open</code> method is a url, not an array of HTML elements.</p>\n\n<p>So you can use <a href=\"http://api.jquery.com/jQuery.each/\" rel=\"nofollow\"><code>each</code></a> to iterate over the elements, get their <code>src</code> attribute using <a href=\"http://api.jquery.com/attr/\" rel=\"nofollow\"><code>.attr()</code></a> and pass that into the method.</p>\n\n<p>Since you have the images loaded already, instead of doing another request for each one, you might be able to use a method I discussed in another question: <a href=\"http://stackoverflow.com/questions/10985889/check-if-user-is-blocking-3rd-party-domain/11005566#11005566\">Check if user is blocking 3rd party domain</a></p>\n\n<p>If your images aren't of fixed height/width, a non-existent image will produce a small icon indicating the image doesn't exist. You can use the size of the image to see if the image was loaded or not.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Sending multiples ajax requests is unnecessary when you can use the <code>onerror</code> event.</p>\n\n<p>Check out the related <a href=\"http://stackoverflow.com/a/92819/1331430\">jQuery/Javascript to replace broken images</a> post.</p>\n\n<p>Adapting that to your needs:</p>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;img src=\"someimage.png\" onerror=\"imgError(this);\" /&gt;\n</code></pre>\n\n<p><strong>JS:</strong></p>\n\n<pre><code>function imgError(image){\n    image.style.display = 'none';\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ult_combo/uqm9t/\"><strong>Fiddle</strong></a></p>\n\n<p>Or with jQuery:</p>\n\n<pre><code>function imgError(image){\n    $(image).hide();\n}\n</code></pre>\n\n<hr>\n\n<p>I normally wouldn't use inline JS in the HTML, and even considered using an <a href=\"http://api.jquery.com/error/\"><code>.error</code></a> handler:</p>\n\n<pre><code>$('#test img').error(function() {\n    $(this).hide();\n});\n</code></pre>\n\n<p><strong>But</strong> the above will not work if the handler attaching is executed after the error event has fired, hence I suggest the first solution.</p>\n",
                    "is_accepted": false,
                    "score": 20
                }
            ],
            "body": "<p>Using php to get 100 photos url from a db and show them on a page, but some photos may no longer exist. If the photo url is fail (404) I want to use jquery to hide the image and don't want to show any error picture. This is my code but it doesn't work.</p>\n\n<p>html</p>\n\n<pre><code>&lt;div id=test&gt;\n    &lt;img src=\"http://test.com/test1.jpg\" /&gt;\n    &lt;img src=\" http://test.com/test2.jpg\" /&gt;\n    &lt;img src=\"http://test.com/test3.jpg\" /&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>jquery</p>\n\n<pre><code>var pic_list = jQuery(\"#test img\");\n\npic_list.load(function () {\n    var http = new XMLHttpRequest();\n    http.open('HEAD', pic_list, false);\n    http.send();\n    if (http.status == 404) {\n        pic_list.hide();\n    } else {\n        pic_list.show();\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1350852361,
            "question_id": 12994419,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "jQuery to check image exists if head 404 than hide it"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This is similar to <a href=\"http://en.wikipedia.org/wiki/Knapsack_problem\" rel=\"nofollow\">0-1 Knapsack problem</a> or <a href=\"http://en.wikipedia.org/wiki/Subset_sum_problem\" rel=\"nofollow\">Subset sum problem</a>.</p>\n\n<p>If weights are not very large integer numbers, a dynamic programming solution should be efficient.</p>\n\n<hr>\n\n<p>Here is javascript implementation of dynamic programming algorithm. If you want random groups, just random shuffle the list of people before applying this algorithm.</p>\n\n<pre><code>var p = {\n   jane:126,\n   julia:112,\n...\n};\n\nfunction subset(people, min, max)\n{\n  var subsets = [];\n  subsets[0] = '';\n\n  for (var person in people)\n  {\n    for (var s = min-1; s &gt;= 0; --s)\n    {\n      if (s in subsets)\n      {\n        var sum = s + people[person];\n\n        if (!(sum in subsets))\n        {\n          subsets[sum] = subsets[s] + ' ' + person;\n\n          if (sum &gt;= min &amp;&amp; sum &lt;= max)\n          {\n            return subsets[sum];\n          }\n        }\n      }\n    }\n  }\n\n  return 'Not found';\n}\n\nprint(subset(p, 818, 822));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>It looks like a variation of the \"binary knapsack problem\", with the added bound that if the best fit is still outside the acceptable range, the answer is rejected.</p>\n\n<p>You may want to look into \"polynomial time approximations\".</p>\n\n<p>One approach could be to sort the set by weight. Then you start looking from the middle downwards and upwards: you get dan, john,  david, alex and you're at 779. You add jane and find yourself at 905 and that's too much by 87; so you check the name below, julia, that's 112, and look the closest match between differences. Exchanging Alex with Julia (210-112) would lose you 98, exchanging David with Julia will lose 84. Lather, rinse, repeat.</p>\n\n<p>The algorithm is O(n log n) for sorting, and then depends on set size. It has several drawbacks (not guaranteed to converge, groups will tend to be contiguous, it will gather people near the starting point, etc.), but if you just want \"a group\", it might be enough.</p>\n\n<p>You can also implement the algorithm recursively. The very worst case would be O(n^3 log n), but if you're really working with human beings (weights clustered in reasonably small ranges, smooth curve), convergence is likely to be pretty quick.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is what I call a \"sort and bracket\" problem. The way you solve it is by sorting the data and then bracketing around the target value or target range.</p>\n\n<p>For example, in this case the sorted order is:</p>\n\n<p>98<br>\n112<br>\n126<br>\n182<br>\n191<br>\n196<br>\n210<br>\n213<br>\n223<br>\n237<br></p>\n\n<p>Now you average the list: 178.8. Therefore the starting bracket is (126,182). Start moving out from this average: sum(126,182,112,191,98) = 709, too small. Delete the 98 and replace with value from the other side: 196, ie sum(126,182,112,191,196) = 807, still too small. Go to next value on high side, sum(126,182,112,191,210)=821. Ok, found one match. By continuing this process you can find every match. Basically what bracketing does is help you search only a subset of all the possible combinations so you do not have to check every combination. You are generating combinations outward from an average, instead of from one end or the other.</p>\n\n<p>Whenever your sum exceeds/falls below the range you terminate the combination generation on the high/low side and switch to the other. This is the optimal solution to the problem.</p>\n\n<p>Implementation Method: to implement this algorithm you need to get a combination generator that works in \"lexicographical\" order. You then start with n, say 5, items and determine the median combination as I have shown above. You then get the next lower combination, if you are low, you switch to the next higher combination and so on.</p>\n\n<p>-------------- ADDENDUM -------------------</p>\n\n<p>After thinking about this it might be better to use a plain changes-type algorithm for this rather than a lexicographical combinator. This type of algorithm will generate all combinations, but only switch any 2 elements at a given time. Basically you modify this algorithm to switch direction whenever it goes out of bounds (goes above the range or below it).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is answer to a similar question <a href=\"http://stackoverflow.com/questions/12837431/find-combinations-sum-of-elements-in-array-whose-sum-equal-to-a-given-number?rq=1\">Find combination(s) sum of element(s) in array whose sum equal to a given number</a></p>\n\n<pre><code>&lt;?php\n\n$limit = 12;\n$array = array(6,1,10,4,1,3,11,2,15,5,12,10,17);\n\necho implode(', ',$array).'&lt;br&gt;';\n\n// remove items 15 and 17 because they are great then $limit = 12\n$array = array_filter($array, function($var) use ($limit) {\n  return ($var &lt;= $limit);\n});\n\nrsort($array);\necho implode(', ',$array);\n\n// the algorithm is usable if the number of elements is less than 20 (because set_time_limit)\n$num = count($array); \n\n//The total number of possible combinations \n$total = pow(2, $num);\n\n$out = array();\n\n// algorithm from http://r.je/php-find-every-combination.html\n// loop through each possible combination  \nfor ($i = 0; $i &lt; $total; $i++) {  \n\n    $comb = array();\n\n    // for each combination check if each bit is set \n    for ($j = 0; $j &lt; $num; $j++) { \n       // is bit $j set in $i? \n        if (pow(2, $j) &amp; $i){\n          $comb[] = $array[$j];\n        }      \n    } \n\n    if (array_sum($comb) == $limit)\n    {\n      $out[] = $comb;\n    }\n}\n\narray_multisort(array_map('count', $out), SORT_ASC, $out);\n\n$out = array_unique($out, SORT_REGULAR);\n\nforeach($out as $result) echo implode(', ', $result).'&lt;br&gt;';\n</code></pre>\n\n<p>The output of this code is list of combinations whose sum is just $limit(12)...</p>\n\n<pre><code>12\n10, 2\n11, 1\n5, 4, 3\n6, 4, 2\n6, 5, 1\n10, 1, 1\n5, 4, 2, 1\n6, 3, 2, 1\n6, 4, 1, 1\n5, 3, 2, 1, 1\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want an algorithm (no specific language) to find a subset from a set of integers such that their sum is within a certain range.</p>\n\n<p>For example, if I have a group of people, whose weights are as follows.</p>\n\n<pre><code>var people:{\n   jane:126,\n   julia:112,\n   charles:98,\n   john:182,\n   bob:213,\n   edgar: 237,\n   jay: 223,\n   dan: 191,\n   alex: 210,\n   david: 196\n}\n</code></pre>\n\n<p>Now, from these people, I'd like to find a subset whose combined weight is between 818-822 pounds (If you're trying to do the math... don't bother, these numbers are out of my head, and I don't even know if there's a solution with this dataset).  The number of people in the group doesn't matter, just a group from the larger set.  And really, any group will do (although random is better in my case).</p>\n\n<p>Note that this is just a quick example... there would actually be hundreds of people, and it would be possible that there would be no combination that would fit into this criteria.  Because the actual numbers would be much larger than this, I'm concerned about a n^n problem and running through thousands of iterations, even though I need this to run very quickly.</p>\n\n<p>Maybe I fell asleep during that day in computer science class, but I haven't been able to come up with anything other than brute force methods.  </p>\n\n<p>I've tagged this as javascript, simply because that is closest to my actual implementation (and it reads easier).  Open to other solutions, as long as they aren't predicated on some Cthulhu function somewhere.</p>\n\n<p>I know this is a weird question to ask on SO, but any help here would be appreciated.</p>\n\n<hr>\n\n<p>Ok, I'm stumped.  23 hours to post a bounty for something that I can grok code-wise -- my background is certainly not in this realm, and I have a hard time even discerning the notations used to describe the problem, let alone the solutions.</p>\n\n<p>Anybody want to help me out and throw me some sample javascript code that I can modify to the final project?  I'll be adding a 250pt bounty when I can... but if a decent solution comes through I'll hand it out when the time comes.</p>\n",
            "last_activity_date": 1389797046,
            "question_id": 12807855,
            "score": 12,
            "tags": [
                "javascript",
                "algorithm"
            ],
            "title": "Algorithm: Extract subset based on property sum"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>Note: The example below does not work as expected! Look at <strong>zelexir</strong> answer for clarification!</p>\n</blockquote>\n\n<p>You can use memberfunctions</p>\n\n<pre><code>itemTpl: [\n    ...\n    '&lt;tpl switch=\"post_type\"&gt;',\n    '&lt;tpl case=\"new_user\"&gt;',\n        '&lt;p&gt;{post_text_teaser}&lt;/p&gt;',\n        '&lt;p&gt;{timestamp}&lt;/p&gt;',\n    '&lt;tpl default&gt;',\n        '&lt;p&gt;{[this.doAction(post_text_teaser)]}&lt;/p&gt;',\n    ...,\n    {\n        // XTemplate configuration:\n        disableFormats: true,\n        // member functions:\n        doAction: function(name){\n           return Ext.String.ellipsis(name + \"\\\", 4);\n        }\n    }\n]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use a function inside a template</p>\n\n<pre><code>itemTpl: [\n    ...\n    '&lt;tpl switch=\"post_type\"&gt;',\n    '&lt;tpl case=\"new_user\"&gt;',\n        '&lt;p&gt;{post_text_teaser}&lt;/p&gt;',\n        '&lt;p&gt;{timestamp}&lt;/p&gt;',\n    '&lt;tpl default&gt;',\n        '&lt;p&gt;{[this.concatenate(values.post_text_teaser)]}&lt;/p&gt;',\n    ...,\n    {\n        concatenate: function(teaser) {\n               return Ext.String.ellipsis( + teaser + \\, 4);\n        }\n    }\n]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This should solve your problem:</p>\n\n<pre><code>    '&lt;tpl switch=\"post_type\"&gt;',\n        '&lt;tpl case=\"new_user\"&gt;',\n            '&lt;p&gt;{post_text_teaser}&lt;/p&gt;',\n            '&lt;p&gt;{timestamp}&lt;/p&gt;',\n        '&lt;tpl default&gt;',\n            '&lt;p&gt;{[Ext.String.ellipsis(values.post_text_teaser,4,false)]}&lt;/p&gt;',\n    '&lt;/tpl&gt;'\n</code></pre>\n\n<p>you can find more information about the XTemplate at <a href=\"http://docs.sencha.com/touch/2-0/#!/api/Ext.XTemplate\">Sencha Docs</a></p>\n\n<p>The thing with template member function is that as far as I know you cannot define them directly in the itemTpl in the regular way, but need to explicitly define a new XTemplate and then use that in your itemTpl. See example:</p>\n\n<pre><code>var tpl = new XTemplate(\n    '&lt;tpl switch=\"post_type\"&gt;',\n        '&lt;tpl case=\"new_user\"&gt;',\n            '&lt;p&gt;{post_text_teaser}&lt;/p&gt;',\n            '&lt;p&gt;{timestamp}&lt;/p&gt;',\n        '&lt;tpl default&gt;',\n            '&lt;p&gt;{[this.shorten(values.post_text_teaser)]}&lt;/p&gt;',\n    '&lt;/tpl&gt;',\n    {        \n        shorten: function(name){\n           return Ext.String.ellipsis(name,4,false);\n        }\n    }\n);\n\n...\n\nitemTpl: tpl,\n\n...\n</code></pre>\n\n<p><a href=\"http://www.senchafiddle.com/#Kb5jz\"><strong>Senchafiddle example</strong></a></p>\n\n<p>This should work fine as will the code below (just insert the code from the XTemplate above). </p>\n\n<pre><code>itemTpl: new XTemplate(...),\n</code></pre>\n\n<p><a href=\"http://www.senchafiddle.com/#ktSDx\"><strong>Senchafiddle example</strong></a></p>\n\n<p>Hope that this sortens it out!</p>\n\n<p><strong>edit</strong> noticed that I hade missed the closing  tags, sometimes it works without them, but it's good practice to always use them as they could cause interesting errors (in this case a missing bracket on the generated code).</p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>I would like to use Ext's <a href=\"http://docs.sencha.com/touch/2-0/#!/api/Ext.String\">String</a> method on some text that will be output to the view.</p>\n\n<p>For example:</p>\n\n<pre><code>itemTpl: [\n    ...\n    '&lt;tpl switch=\"post_type\"&gt;',\n    '&lt;tpl case=\"new_user\"&gt;',\n        '&lt;p&gt;{post_text_teaser}&lt;/p&gt;',\n        '&lt;p&gt;{timestamp}&lt;/p&gt;',\n    '&lt;tpl default&gt;',\n        '&lt;p&gt;' + Ext.String.ellipsis( + '{post_text_teaser}' + \\, 4) + '&lt;/p&gt;',\n    ...\n].join(''),\n</code></pre>\n\n<p>but of course the concatenation in line 10 is illegal.</p>\n\n<p>Do you know if it's possible or how to do this correctly?</p>\n",
            "last_activity_date": 1420025798,
            "question_id": 12589176,
            "score": 12,
            "tags": [
                "javascript",
                "extjs",
                "extjs4",
                "sencha-touch",
                "sencha-touch-2"
            ],
            "title": "How to call functions within a XTemplate (itemTpl)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>var str = \" ($\";\n\nstr = str.trim();\n\nalert(str);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<pre><code>[].filter.call( str, function( c ) {\n    return c.charCodeAt( 0 ) !== 8203;\n} );\n</code></pre>\n\n<p>Filter each character to remove the 8203 char code (zero-width space unicode number).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Unicode has the following zero-width characters:</p>\n\n<ul>\n<li>U+200B zero width space</li>\n<li>U+200C zero width non-joiner Unicode code point</li>\n<li>U+200D zero width joiner Unicode code point</li>\n<li>U+FEFF zero width no-break space Unicode code point</li>\n</ul>\n\n<p>To remove them from a string in JavaScript, you can use a simple regular expression:</p>\n\n<pre><code>var userInput = 'a\\u200Bb\\u200Cc\\u200Dd\\uFEFFe';\nconsole.log(userInput.length); // 9\nvar result = userInput.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\nconsole.log(result.length); // 5\n</code></pre>\n\n<p>Note that there are many more symbols that may not be visible. Some of <a href=\"http://en.wikipedia.org/wiki/Control_character#In_ASCII\">ASCII\u2019s control characters</a>, for example.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I had a problem some invisible characters were corrupting my JSON and causing <strong>Unexpected Token ILLEGAL</strong> exception which was crashing my site.</p>\n\n<p>Here is my solution using RegExp variable:</p>\n\n<pre><code>    var re = new RegExp(\"\\u2028|\\u2029\");\n    var result = text.replace(re, '');\n</code></pre>\n\n<p>More about Javascript and zero width spaces you can find here:\n<a href=\"http://timelessrepo.com/json-isnt-a-javascript-subset\" rel=\"nofollow\">Javascript and Zero Width Spaces</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I take user-input (JS code) and execute (process) them in realtime to show some output.</p>\n\n<p>Sometimes the code has those zero width space, it's really weird. i don't know how the users are input'ing that. Example - \"<code>(\u200b$\".length === 3</code></p>\n\n<p>I need to be able to remove that character from my code in JS. how do i do so ? or maybe theres some other way to execute that JS code so that the browser doesn't takes the zero width space characters into account ?</p>\n",
            "last_activity_date": 1413734364,
            "question_id": 11305797,
            "score": 12,
            "tags": [
                "javascript",
                "unicode"
            ],
            "title": "Remove zero-width space characters from a JavaScript string"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In the documentation linked</p>\n\n<pre><code> init: function() {\n    var childViews = this.get('childViews');\n    var descriptionView = App.DescriptionView.create();\n    childViews.pushObject(descriptionView);\n    this.addButton();\n    return this._super();\n  },\n</code></pre>\n\n<p><code>_super()</code> is called AFTER the descriptionView is created and pushed onto the <code>childViews</code> array.</p>\n\n<p>That's because the superclass <code>init</code> implementation is going to take the childViews array and do stuff with it.  If you called <code>_super</code> before adding the <code>descriptionView</code> to the array, it wouldn't get processed by whatever <code>init</code> does....</p>\n\n<p>I'm inferring, but that's the way it works in Sproutcore, from which Ember derives, so I think it's probably the same.</p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I've been going through the Ember documentation and am seeing an inconsistency in where the <code>_super</code> method is being called when overriding <code>init</code>.</p>\n\n<p>This is the most common and is what I've been using so far</p>\n\n<pre><code>var Foo = Em.Object.extend({\n    init: function(){\n        this._super();\n        // ... my stuff ...\n    }\n});\n</code></pre>\n\n<p>last night I was reading through <a href=\"http://emberjs.com/guides/view_layer/\">this write up</a> and saw an example doing this </p>\n\n<pre><code>var Bar = Em.Object.extend({\n    init: function(){\n        // ... my stuff ...\n        return this._super();\n    }\n});\n</code></pre>\n\n<p>It was actually an <code>Ember.ContainerView</code> in the code snippet.</p>\n\n<p>Can anyone explain this? My code OCD is acting up and I can't move on until I know.</p>\n",
            "last_activity_date": 1358715272,
            "question_id": 10852988,
            "score": 12,
            "tags": [
                "javascript",
                "ember.js",
                "method-overriding"
            ],
            "title": "Ember.js where to call this._super()"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>They are not equivalent.</p>\n\n<ul>\n<li><p><code>parseInt()</code> turns strings into numbers, reading up to and ignoring the first non-integer character, and also possibly performing base conversion (e.g. interpreting a string as octal, or hexadecimal).</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>parseInt('011');         // 9\nparseInt('42 cats');     // 42\nparseInt('0xcafebabe');  // 3405691582\nparseInt('deadbeef',16); // 3735928559\nparseInt('deadbeef',36); // 1049836114599\n</code></pre></li>\n<li><p><code>var x = ~~y;</code> is a 'trick'&mdash;similar to <code>var x = y &lt;&lt; 0;</code>&mdash;that (ab)uses the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Bitwise_Operators\">unary bitwise NOT operator</a> to force the result to be in the range of a signed 32-bit integer, discarding any non-integer portion.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>~~'011';        // 11        \n~~'42 cats';    // 0\n~~'0xcafebabe'; // -889275714\n~~'deadbeef';   // 0\n</code></pre></li>\n</ul>\n\n<p>Using <code>~~x</code> is often done because:</p>\n\n<ol>\n<li>It's usually faster than calling a method.</li>\n<li>It's faster to type than anything else.</li>\n<li>It makes power users feel cool because it's sort of inscrutable and also sort of justifiable. :)</li>\n</ol>\n\n<p><em>As seen in the <code>cafebabe</code> test, numbers above 2<sup>31</sup>-1 (2,147,483,647) or below -2<sup>31</sup> (\u22122,147,483,648) will \"wrap around\" due to the limits of a signed 32-bit integer.</em></p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<pre><code>~~\"red\" === 0\n\nisNaN(parseInt(\"red\"))\n</code></pre>\n\n<p>parseInt can handle over 32 bit numbers as well</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>parseInt</code> isn't limited to signed 32 bit numbers.</p>\n\n<pre><code>   // Top range for a bitwise operator provides a valid result\n~~((Math.pow(2,32)/2)-1); // 2147483647\n\n   // Beyond the top range provides undesired result\n~~(Math.pow(2,32)/2); // -2147483648\n</code></pre>\n\n<p>Also, with <code>parseInt</code> you can specify the radix.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Simple: It the more readable and convinient variant.</p>\n\n<p>The bitwise NOT operator is designed for some other use, but can be misused for truncating float values. In your example, <code>Math.floor</code> had also been possible.</p>\n\n<p>Also, they don't behave similiar in many cases. <code>parseInt</code> is no limited to 32 bit, it can parse numbers represented in different positional notations and it also handles non-numeric values with <code>NaN</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/5971645/what-is-the-double-tilde-operator-in-javascript\">What is the &ldquo;double tilde&rdquo; (~~) operator in JavaScript?</a>  </p>\n</blockquote>\n\n\n\n<p>The D3 tutorial gives a function that produces a random sequence:</p>\n\n<pre><code>var t = 1297110663, // start time (seconds since epoch)\n    v = 70, // start value (subscribers)\n    data = d3.range(33).map(next); // starting dataset\n\nfunction next() {\n  return {\n    time: ++t,\n    value: v = ~~Math.max(10, Math.min(90, v + 10 * (Math.random() - .5)))\n  };\n}\n</code></pre>\n\n<p>Note the ~~ (tilda tilda) in:</p>\n\n<pre><code>    value: v = ~~Math.max(10, Math.min(90, v + 10 * (Math.random() - .5)))\n</code></pre>\n\n<p>From playing around in the javascript terminal, I see:</p>\n\n<pre><code>~~1\n1\n~~-1\n-1\n~~-1.3\n-1\nparseInt(5)\n5\nparseInt(-5)\n-5\nparseInt(-5.3)\n-5\nparseInt(5.3)\n5\n</code></pre>\n\n<p>Since ~~ and parseInt seem to be equivalent, whats the rationale for using parseInt?</p>\n",
            "last_activity_date": 1338500985,
            "question_id": 10841204,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "~~ vs parseInt?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://layout.jquery-dev.net/\">UI-Layout</a> stays up-to-date and does \"splitting\" and alot more, and is fairly easy to use.</p>\n\n<p>See <a href=\"http://layout.jquery-dev.net/demos/complex.html\">complex demo</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I was experiencing this same issue. After looking around in the splitter.js file for a while, I came across this section of code:</p>\n\n<pre><code>// Resize event handler; triggered immediately to set initial position\n    splitter.bind(\"resize\", function(e, size){          \n        // Custom events bubble in jQuery 1.3; don't get into a Yo Dawg\n        if ( e.target != this ) return;\n\n        ......\n\n    }).trigger(\"resize\" , [initPos]);\n</code></pre>\n\n<p>The \"yo dawg\" reference was the dead giveaway :)</p>\n\n<p>Sure enough, after debugging it in Chrome, there is excessive recursion in this particular event handler function. The developer who wrote it attempted to resolve the issue, but for some reason the newer version of the JQuery library does not work as expected, and the escape condition is never met. From what I can tell, this particular piece of code is only used during page load to set the initial position of the splitter. I found that the splitter was still usable aside from the stack overflow, and the only reason I noticed the problem was because my javascript code after initializing the splitter wasn't running. If you have time, see if you can find out why this part of the code isn't working and post a fix. If you're in a hurry and don't mind duct-tape, put a try catch around the line of code where you call the .splitter() function. It seems to work fine in both Chrome 19 and IE 9.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Per Steven Hunt's answer, I have a workaround by adding try/catch blocks, and removing a recursive call. </p>\n\n<p>Replace the block below (from around line 149ish) with this modified version-</p>\n\n<pre><code>        try\n        {\n\n          if ( opts.anchorToWindow ) {\n            // Account for margin or border on the splitter container and enforce min height\n            splitter._hadjust = dimSum(splitter, \"borderTopWidth\", \"borderBottomWidth\", \"marginBottom\");\n            splitter._hmin = Math.max(dimSum(splitter, \"minHeight\"), 20);\n            $(window).bind(\"resize\", function(){\n                var top = splitter.offset().top;\n                var wh = $(window).height();\n                splitter.css(\"height\", Math.max(wh-top-splitter._hadjust, splitter._hmin)+\"px\");\n            }).trigger(\"resize\");\n\n          }\n          else if ( opts.resizeToWidth &amp;&amp; !$.browser.msie )\n            $(window).bind(\"resize\", function(){\n                splitter.trigger(\"resize\"); \n            });\n          }\n        catch(err)\n        {\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I ran into the same problem in the process of upgrading a site to jQuery 1.8. After a bit of debugging and poking around in the code, it seems to me there were two issues: the resize event was getting triggered unnecessarily in a few places, and it was getting triggered on the splitter before the splitter's resize event handler had been setup. I switched the order of the last two chunks of code to make sure the splitter's resize event handler gets set up first and tidied up a few lines. It now looks like this:</p>\n\n<pre><code>  // Resize event handler\n  splitter.bind(\"resize\", function(e, size){\n    // Determine new width/height of splitter container\n    splitter._DF = splitter[0][opts.pxFixed] - splitter._PBF;\n    splitter._DA = splitter[0][opts.pxSplit] - splitter._PBA;\n    // Bail if splitter isn't visible or content isn't there yet\n    if ( splitter._DF &lt;= 0 || splitter._DA &lt;= 0 ) return;\n    // Re-divvy the adjustable dimension; maintain size of the preferred pane\n    resplit(!isNaN(size)? size : (!(opts.sizeRight||opts.sizeBottom)? A[0][opts.pxSplit] :\n        splitter._DA-B[0][opts.pxSplit]-bar._DA));\n    e.stopPropagation();\n  });\n\n  // Resize event propagation and splitter sizing\n  if ( opts.anchorToWindow ) {\n    // Account for margin or border on the splitter container and enforce min height\n    splitter._hadjust = dimSum(splitter, \"borderTopWidth\", \"borderBottomWidth\", \"marginBottom\");\n    splitter._hmin = Math.max(dimSum(splitter, \"minHeight\"), 20);\n    splitter._bottomOffset = opts.bottomOffset ? opts.bottomOffset : 0;\n    $(window).bind(\"resize\", function(){\n      var top = splitter.offset().top;\n      var wh = $(window).height() - splitter._bottomOffset;\n      splitter.css(\"height\", Math.max(wh-top-splitter._hadjust, splitter._hmin)+\"px\");\n      splitter.trigger(\"resize\");\n    }).trigger(\"resize\");\n  }\n  else if ( opts.resizeToWidth )\n    $(window).bind(\"resize\", function(){\n      splitter.trigger(\"resize\");\n    });\n</code></pre>\n\n<p>Also, make sure you remove</p>\n\n<pre><code>if ( !$.browser.msie ) panes.trigger(\"resize\");\n</code></pre>\n\n<p>from the reSplit function. I've uploaded the whole thing to a <a href=\"https://github.com/jhbwood/jquery-splitter\">GitHub repo</a> if you want to see it all in one place.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There's an updated fork of jQuery.splitter that works with jQuery 1.8 (also 1.9 if you restore <code>jQuery.browser</code>) at <a href=\"https://github.com/e1ven/jQuery-Splitter\">https://github.com/e1ven/jQuery-Splitter</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<pre><code>I'm using Splitter.js in a project.\n</code></pre>\n\n<p>The code is from <a href=\"http://methvin.com/splitter/\">http://methvin.com/splitter/</a>\nThe specific JS is at <a href=\"http://methvin.com/splitter/splitter.js\">http://methvin.com/splitter/splitter.js</a></p>\n\n<p>When using jQuery v1.5.2, the code works correctly.</p>\n\n<p>When I move to jQuery v1.7.2, the code fails, and gives a \"Too Much recursion\" error.\nThis also appears to happen when I use jQuery 1.6.2</p>\n\n<p>Does anyone have a workaround for this?</p>\n\n<p>I did find an (updated?) version of splitter.js at <a href=\"https://bungeni-exist.googlecode.com/svn-history/r188/xq-framework/trunk/db/framework/assets/bungeni/scripts/splitter.js\">https://bungeni-exist.googlecode.com/svn-history/r188/xq-framework/trunk/db/framework/assets/bungeni/scripts/splitter.js</a> but this doesn't appear to solve the problem.</p>\n\n<p>Any advice would be appreciated.</p>\n",
            "last_activity_date": 1358796265,
            "question_id": 10097458,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "version"
            ],
            "title": "Splitter.js won&#39;t work with new versions of jQuery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>To add one day to a date object:</p>\n\n<pre><code>var date = new Date();\n\n// add a day\ndate.setDate(date.getDate() + 1);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 39
                },
                {
                    "body": "<p>In my humble opinion the best way is to just add a full day in milliseconds, depending on how you factor your code it can mess up if your on the last day of the month.</p>\n\n<p>for example Feb 28 or march 31.</p>\n\n<p>Here is an example of how i would do it:</p>\n\n<pre><code>var current = new Date(); //'Mar 11 2015' current.getTime() = 1426060964567\nvar followingDay = new Date(current.getTime() + 86400000); // + 1 day in ms\nfollowingDay.toLocaleDateString();\n</code></pre>\n\n<p>imo this insures accuracy</p>\n\n<p>here is another example i Do not like that can work for you but not as clean that dose the above </p>\n\n<pre><code>var today = new Date('12/31/2015');\nvar tomorrow = new Date(today);\ntomorrow.setDate(today.getDate()+1);\ntomorrow.toLocaleDateString();\n</code></pre>\n\n<p>imho this === 'POOP'</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have </p>\n\n<pre><code>var ds = stringFormat(\"{day} {date} {month} {year}\", { \n                day: companyname.i18n.translate(\"day\", language)[date.getUTCDay()], \n                date: date.getUTCDate(), \n                month: companyname.i18n.translate(\"month\", language)[date.getUTCMonth()], \n                year: date.getUTCFullYear() \n});\n</code></pre>\n\n<p>how do I add +1 into it? </p>\n\n<p>ive added +1 unto getUTCDay() and getUTCDate() but 'Sunday' doesnt display it. </p>\n",
            "last_activity_date": 1426062131,
            "question_id": 9989382,
            "score": 12,
            "tags": [
                "javascript"
            ],
            "title": "Add +1 to current date"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The problem is, that the CSS3 transformations doesn't actually change the position of the elements in anyway. Of course the browsers \"know\" that they are repositioned, because it renders them, but this information is not provided back to the DOM/API. </p>\n\n<p>The only thing I can think of, is to calculate the positions based on the transformations yourself, since these are \"simple\" <a href=\"http://en.wikipedia.org/wiki/Transformation_matrix\" rel=\"nofollow\">matrix transformations</a>.</p>\n\n<p>Unfortunately Algebra class has been too long ago, that I can't tell you anymore how to do it - only that it is possible.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Have you tried using <a href=\"https://developer.mozilla.org/en/DOM/element.getBoundingClientRect\"><code>getBoundingClientRect()</code></a>?</p>\n\n<p>I've used it successfully in the past to calculate the dimensions of elements that have been transformed with the <code>transform</code> property.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Using <a href=\"https://developer.mozilla.org/en/DOM/element.getBoundingClientRect\" rel=\"nofollow\">getBoundingClientRect</a> is a good idea but will only give you the coordinates of the rectangle that contains your shape, not the exact coordinates of the 4 topleft, bottomright, bottomleft, topright corners.</p>\n\n<p>You'd only be able to do this by taking each of those non-transformed coordinates and applying the transform via javascript. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a very complicated site built on CSS3 that has html elements 3d-transformed, rotated, flipped, flopped and just generally distorted.</p>\n\n<p>I'm trying to figure out the on-screen location of one of these elements and don't see any way to do so.  I was wondering if anyone has any ingenious ideas.</p>\n\n<p>Alternatively, if anyone can explain the math behind <code>-webkit-perspective</code>, I can figure out the position as that's the only thing I'm not sure how to model.</p>\n",
            "last_activity_date": 1380030905,
            "question_id": 8025622,
            "score": 12,
            "tags": [
                "javascript",
                "css",
                "css3",
                "css-transforms",
                "webkit-transform"
            ],
            "title": "How to get screen position of CSS3-3d transformed elements?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Sencha Touch -  a full mobile JS library, along with widgets, animations and all sort of utilities for mobile html5 development. </p>\n\n<p>Backbone - a  lightweight library that provides all sorts of utilities for a JS app (structure, models, collections, key-value binding, templating...).</p>\n\n<p>So I don't really see room for comparison here. Both are aimed at different things really. While some of their functionality may overlap, their aim is different. As for developing an app with phonegap and whether to pick Secnha Touch or Backbone - I'd say it depends on the app. I've done Phonegap apps with both - Sencha has a lot of things built in already. In some cases that means faster app development. Other times it might be a hindrance. Backbone gives you basic, non-mobile-specific utilities to build your app. Meaning, writing styles by hand, animations... To sum it up, it depends on the app and your personal preferences/coding style. </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Sencha Touch (our product) is intended to be an all-in-one application framework that provides all the functionality you need to create great looking apps. Everything is designed to work all together on all the major mobile browsers. It's a cleanly architected object-oriented approach to developing apps.</p>\n\n<p>As an \"all-in-one\" framework, it gives you a full set of resolution-independent UI widgets (carousels, lists, tabs, toolbars, etc. etc.) an MVC library, event management, utility libraries, animation, a theming system, object lifecycle management, a layout system, a drawing and charting library and more stuff than you can shake a stick at... Because it's all designed to work together, the initial learning is higher, but once you're there people swear it's light-years more productive than anything else. </p>\n\n<p>vs.</p>\n\n<p>Backbone.js, which is a simple MVC library. It's about 1,000 lines of code and gives you 5 classes:</p>\n\n<ul>\n<li>Model</li>\n<li>View </li>\n<li>Router</li>\n<li>Collection</li>\n<li>Events</li>\n</ul>\n\n<p>It has a dependency on underscore.js for utility functions, so you'll need that too. You will also probably need to use a separate templating library as well as a DOM abstraction/manipulation library like jQuery or jQuery Mobile which also has some UI widgets and a bunch of other libraries to build a full app. But some people prefer to research and hand-curate their individual libraries.</p>\n\n<p>Update: I wanted to add more detail to repond to Ben Bishop's answer below. Aaron Conran, who's our Sencha Architect lead and a Sencha lifer has helped me out with this addition.</p>\n\n<p>There is a definite world view difference between Sencha and backbone. In general, Sencha tends to stay in the JS world and we expect that your JS will generate your HTML content. Backbone on the other hand is kind of a mishmash between an HTML and JS. There's no cut and dry reason to using one or the other, although we believe that data-driven apps of any complexity are better served by the Sencha approach. Ok on to details.</p>\n\n<p>First off re: Classes, Ben's example of declaring a class in JS would put a copy of every property and method in every instance of the object. Typically working in raw JavaScript, you want to put these on the prototype so that they are shared across instances of the class <code>MyClass</code>. The Sencha class system does this automatically for you. </p>\n\n<p>Additionally in raw JavaScript, users have to grok prototypical inheritance correctly in order to properly inherit from or mix in a particular class. Sencha takes care fo thsi without you having to worry.  </p>\n\n<p>As far as \"magic strings\" go (although I'd argue that's a rather negative characterization) you don't have to use them if you don't like them in 4.x , instead you can use Ext.extend with direct identifiers (although this is officially deprecated since 4.0.0 <a href=\"http://docs.sencha.com/touch/2-1/#!/api/Ext-method-extend\">http://docs.sencha.com/touch/2-1/#!/api/Ext-method-extend</a>).</p>\n\n<p>Using magic strings is useful in a few ways.</p>\n\n<p>First off we can worry less about dependency order and when any class is defined/extended from. This matters in complex apps</p>\n\n<p>For example</p>\n\n<pre><code>Ext.define('Turtle', { extend: 'Animal' }); \nExt.define('Animal', { });\n</code></pre>\n\n<p>Works because Sencha waits until the Animal class is defined before defining the Turtle class.</p>\n\n<p>In contrast:</p>\n\n<pre><code>Turtle = Ext.extend(Animal, {\n});\nAnimal = Ext.extend({}, {\n});\n</code></pre>\n\n<p>Does'nt work because we can't find the variable reference Animal. </p>\n\n<p>Second, using strings means we can support dynamic loading. For example if we have</p>\n\n<pre><code>Ext.define('MyApp.foo.MyClass', {\n    extend: 'MyApp.foo.ParentClass'\n});\n</code></pre>\n\n<p>If you follow a strict class name to JS folder convention, the class loader knows where to load the class namely:</p>\n\n<ul>\n<li>MyApp.foo.MyClass lives in app/foo/MyClass.js</li>\n<li>MyApp.foo.ParentClass lives in app/foo/ParentClass.js</li>\n</ul>\n\n<p>This technique makes it easy for Sencha to do useful things:\n - The class manager will automatically create proper objects without you having to create &amp; manage namespaces\n - Determine the classname of any class or instance\nExt.ClassManager.getName(myInstance) -> \"MyApp.foo.MyClass\"</p>\n\n<ul>\n<li><p>Perform some action when a particular class is defined</p>\n\n<p>Ext.ClassManager.onCreated(function() {\n}, scope, 'MyApp.foo.MyClass');</p></li>\n<li><p>Support namespace rewriting, for example if you need to run two versions of the same set of classes concurrently in the same page... you can rewrite the namespace of Sencha Touch's \"Ext\" top level namespace to something else. </p></li>\n</ul>\n\n<p>Ok, on to Templates.\nIn the Sencha templating system, users can embed their templates within any HTML tag that won't muck with it: for example script tags with a custom type (or more typically in Sencha's case a textarea) </p>\n\n<pre><code>var myTpl = Ext.XTemplate.from('theIdOfMyTpl')\n</code></pre>\n\n<p>You can also store your templates in separate files and load them via an XHR. Though we generally recommend you write something on the server side to manage this for good performance.</p>\n\n<p>re: IDE's \nSencha Architect handles this stuff automatically out of the box (including any places it's referenced in the project, etc). I believe our Eclipse plugin also handles this, but I'd have to check.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Sencha touch gives you a lot of pre-made widgets, but its a lot of work if you want to customize them, or create something \"off the beaten path\". You end up creating a custom component and digging through lots of layers.</p>\n\n<p>Backbone is more lower-level access and not as \"packaged\". If you need mobile UI components you can use something like jqtouch - also written by david kaneda, before he went to sencha. not as fully featured, but the basics are there.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Seiryuu is correct. Comparing Sencha Touch vs Backbone.js is like comparing apples and oranges. However, I do want to highlight some differences you will see in developing with either of them.</p>\n\n<p>Before I start, I want to clarify what Backbone is exactly....</p>\n\n<p>Backbone.js is a framework to compliment other libraries like jQuery and/or Zepto. jQuery strengths lie in DOM manipulation not as a macro architecture. Hence why pure jQuery apps tend to be a mess. Backbone provides to traditional web developers the bare bones MVC structure to better organize an app. </p>\n\n<p>To start of my comparison I'm going to start with defining classes...</p>\n\n<p>For example, this is how you declare a class in Javascript:</p>\n\n<pre><code>function MyClass(){\n    this.myProp1 = 'my value 1';\n    this.myProp2 = 'my value 2';\n    this.myMethod = function(myParam){\n        //do something\n    }\n};\nvar myInstance = new MyClass();\n</code></pre>\n\n<p>In Sencha, you declare a class like this:</p>\n\n<pre><code>Ext.define('MyClass', {});\nExt.create('MyClass', {});\n</code></pre>\n\n<p>Note the heavy reliance on magic strings. However, you could possibly create a make shift enum class with constants that you can use as the class names. Regardless, if you use magic strings for your class names you are going to have a hard time renaming your class 3 or 4 months down the road.</p>\n\n<p>For differences in using HTML...</p>\n\n<p>Traditionally, we declare a form like this:</p>\n\n<pre><code>&lt;form action=\"/myAction.php\"&gt;\n  &lt;label for=\"username\"/&gt;\n  &lt;input type=\"text\" name=\"username\"/&gt;\n  &lt;label for=\"password\"/&gt;\n  &lt;input type=\"password\" name=\"password\"/&gt;\n  &lt;input type=\"submit\"/&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>In Sencha, you declare a form like this:</p>\n\n<pre><code>{\n    title: 'Basic',\n    xtype: 'form',\n    id: 'basicform',\n    scroll: 'vertical',\n    items: [{\n        xtype: 'fieldset',\n        title: 'Personal Info',\n        defaults: {\n            labelWidth: '35%'\n        },\n        items: [{\n            xtype: 'textfield',\n            name: 'name',\n            label: 'Name',\n            placeHolder: 'Enter Name'\n        }, {\n            xtype: 'passwordfield',\n            name: 'password',\n            label: 'Password',\n            placeHolder: 'Enter Password'\n        }\n        }]\n}]\n}\n</code></pre>\n\n<p>When it comes to templating, in Sencha you define a template like this:</p>\n\n<pre><code>var template = new Ext.XTemplate(\n    '&lt;p&gt;Name: {name}'&lt;/p&gt;',\n    '&lt;p&gt;Kids: ',\n    '&lt;tpl for=\"kids\"&gt;',\n        '&lt;tpl if=\"age &amp;gt; 1\".',\n            '&lt;p&gt;{name}&lt;/p&gt;',\n            '&lt;p&gt;Dad: {parent.name}&lt;/p&gt;',\n        '&lt;/tpl&gt;',\n    '&lt;/tpl&gt;&lt;/p&gt;'\n);\ntemplate.overwrite(panel.body, data);\n</code></pre>\n\n<p>With Backbone you have options...</p>\n\n<p>Mustache:</p>\n\n<pre><code>{{items}}\n&lt;div&gt;{{name}}&lt;/div&gt;\n{{/items}}\n</code></pre>\n\n<p>Or if you need more power jQuery:</p>\n\n<pre><code>&lt;script type=\"text/template\" id=\"item-template\"&gt;\n      &lt;div class=\"todo &lt;%= done ? 'done' : '' %&gt;\"&gt;\n        &lt;div class=\"display\"&gt;\n          &lt;input class=\"check\" type=\"checkbox\" &lt;%= done ? 'checked=\"checked\"' : '' %&gt; /&gt;\n          &lt;div class=\"todo-text\"&gt;&lt;/div&gt;\n          &lt;span class=\"todo-destroy\"&gt;&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=\"edit\"&gt;\n          &lt;input class=\"todo-input\" type=\"text\" value=\"\" /&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/script&gt;\n</code></pre>\n\n<p>With Backbone apps you can either define the templates as inline HTML or load them from external files. I would think you could do the same with Sencha, but I haven't seen any official prescribed methods. Just JS generated HTML strings.</p>\n\n<p>These are just some basic differences between the two at the UI level. With Backbone you can better leverage your existing web skills and knowledge. With Sencha you are learning a complete new ecosystem with its own conventions and quirks.</p>\n\n<p>With the heavy reliance on magic strings (see Sencha form example,) your IDE of choice will probably be limited in what it can do in terms of code completion. Which could possibly lead to slower dev time and a harder time finding bugs created by typos. However, Sencha does offer a Ext Builder app that is supposed to help you build the UI.</p>\n\n<p>When it comes to application infrastructure (Models, Controllers, Services...) Backbone and Sencha are on par with each other. Sencha even has an advantage of sorts with its proxy layer that gives you more flexibility in regards to the integration of your server API, (Backbone is REST heavy.)</p>\n\n<p>When it comes to PhoneGap I suggest you check out XUI. It's jQuery-like library built by the PhoneGap team that is optimized for mobile browsers. If your app is small enough it may not require a full blown app framework.</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 16
                }
            ],
            "body": "<p>What are the basic difference Sencha Touch and Backbone.js, actually have built a project in backbone.js but not aware of Sencha Touch. I have to built a PhoneGap application which one is better for that?</p>\n",
            "last_activity_date": 1355117510,
            "question_id": 7254791,
            "score": 12,
            "tags": [
                "javascript",
                "cordova",
                "sencha-touch",
                "backbone.js"
            ],
            "title": "Sencha Touch Vs Backbone.js"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>In Javascript :</p>\n\n<pre><code>document.getElementById('searchField').value = '';\n</code></pre>\n\n<p>In  jQuery :</p>\n\n<pre><code>$('#searchField').val('');\n</code></pre>\n\n<p>That should do it</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>To set value</p>\n\n<pre><code> $('#searchField').val('your_value');\n</code></pre>\n\n<p>to retrieve value</p>\n\n<pre><code>$('#searchField').val();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First, select the element. You can usually use the ID like this:</p>\n\n<pre><code>$(\"#searchField\"); // select element by using \"#someid\"\n</code></pre>\n\n<p>Then, to set the value, use <code>.val(\"something\")</code> as in:</p>\n\n<pre><code>$(\"#searchField\").val(\"something\"); // set the value\n</code></pre>\n\n<p>Note that you should only run this code when the element is <em>available</em>. The usual way to do this is:</p>\n\n<pre><code>$(document).ready(function() { // execute when everything is loaded\n    $(\"#searchField\").val(\"something\"); // set the value\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use it like this:</p>\n\n<pre><code>$(\"#searchField\").focus(function() {\n    $(this).val(\"\");\n});\n</code></pre>\n\n<p>It has to work. Otherwise it probably never gets focused.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>With jQuery, I've found that sometimes using <a href=\"http://api.jquery.com/val/\"><code>val</code></a> to clear the value of a textbox has no effect, in those situations I've found that using <a href=\"http://api.jquery.com/attr/\"><code>attr</code></a> does the job</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>$('#searchField').attr(\"value\", \"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>If I have a input textbox like this:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"searchField\" name=\"searchField\" /&gt;\n</code></pre>\n\n<p>How can I set the value of the textfield using javascript or jQuery?</p>\n\n<p>You would think this was simple but I've tried the following:</p>\n\n<p><strong>Using defaultvalue</strong></p>\n\n<pre><code>var a = document.getElementById(\"searchField\");\na.value = a.defaultValue;\n</code></pre>\n\n<p><strong>Using jQuery</strong></p>\n\n<pre><code>jQuery(\"#searchField\").focus( function()\n{ \n  $(this).val(\"\"); \n} );\n</code></pre>\n\n<p><strong>Using js</strong></p>\n\n<pre><code>document.getElementById(\"searchField\").value = \"\";\n</code></pre>\n\n<p>None of them are doing it... :/</p>\n",
            "last_activity_date": 1372242454,
            "question_id": 7174265,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "Reset textbox value in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'll answer your question of porting what you have to a canvas. I wrote a post <a href=\"http://www.shawnmclean.com/blog/2011/08/convert-image-to-canvas-and-back/\" rel=\"nofollow\">here</a>.</p>\n\n<p>What you do is read the images and their css position, top and left. Then copy it into the canvas.</p>\n\n<p>(code from head, may be error)</p>\n\n<pre><code>//loop images, and call the method for each img\n$('#Created_Design').children(function(){\n    drawImage(this.src, this.style.left, this.style.top); //this syntax is definatly wrong, but u get the idea.\n});\n\nfunction drawImage(src, x, y) {\n  var ctx = document.getElementById('canvas').getContext('2d');\n  var img = new Image();\n  img.src = src;\n  img.onload = function(){\n    ctx.drawImage(img,x,y);\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can draw images from the div on the canvas using method <code>drawImage()</code>, after that you can get resulting base64-encoded image using <code>toDataURL()</code> method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I would use php's <a href=\"http://www.php.net/manual/en/intro.image.php\" rel=\"nofollow\" title=\"GD\">GD</a> library to create the new image. You can use the div's inline style to figure out the positioning needed for the new image. You'll need to spend some time reading the GD documentation I linked to first, it can be a bit confusing if you haven't used GD before but it can provide a lot of flexibility when working with images in php.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a div containing images like so:</p>\n\n<pre><code>&lt;div id=\"Created_Design\"&gt;\n  &lt;img src=\"images/image1.png\" style=\"position: absolute; left: 8px; top: 172px;\"&gt;\n  &lt;img src=\"images/image2.png\" style=\"position: absolute; left: 20px; top: 144px\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I want to export this div to be an image cause im creating something like a design generator. So far what i have done is place the newly created design on new window using window.open like a preview of the design. </p>\n\n<p>So my questions are:</p>\n\n<ol>\n<li>Can I convert this div and save it directly as an image?</li>\n<li>I was thinking of exporting this to a canvas so that I can save it as an image. How can I export this to canvas?</li>\n<li>Is there other way of doing this?</li>\n</ol>\n",
            "last_activity_date": 1314074681,
            "question_id": 6825262,
            "score": 12,
            "tags": [
                "php",
                "javascript",
                "jquery"
            ],
            "title": "best way to convert a div to image? using either php, javascript or jquery"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>undefined is where no notion of the thing exists; it has no type, and it's never been referenced before in that scope; null is where the thing is known to exist, but it has no value.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>I don't really have an answer, but according to N. Zakas, p. 30 of <em>Javascript for Web Developers</em>:</p>\n\n<blockquote>\n  <p>When defining a variable that is meant\n  to later hold an object, it is\n  advisable to initialize the variable\n  to <code>null</code> as opposed to anything else.\n  That way, you can explicitly check for the value <code>null</code> to determine if\n  the variable has been filled with an object reference at a later time</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>You might adopt the convention suggested here, but there really is no good reason to. It is not used consistently enough to be meaningful.</p>\n\n<p>In order to make the convention useful, you first must know that the called function follows the convention. Then you have to explicitly test the returned value and decide what to do. If you get <em>undefined</em>, you can assume that some kind of error occurred <em>that the called function knew about</em>. But if an error happened, and the function knew about it, and it is useful to send that out into the wider environment, why not use an error object? i.e. throw an error?</p>\n\n<p>So at the end of the day, the convention is practically useless in anything other than very small programs in simple environments.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>For example, dom nodes and elements are not undefined, but may be null.</p>\n\n<p>The nextSibling of the last child of an element is null</p>\n\n<p>the previousSibling of the first child is null</p>\n\n<p>A document.getElementById reference is null if the element does not exist in the document tree.</p>\n\n<p>But in none of these cases is the property <strong>undefined</strong>- there just is no node there. </p>\n\n<p>There could be, sometime, or might have been, before...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Null and undefined are essentially two different values that mean the same thing. The only difference is in the <em>conventions</em> of how you use them in <em>your</em> system. As some have mentioned, some people use null for meaning \"no object\" where you might sometimes get an object while undefined means that no object was expected (or that there was an error). </p>\n\n<p>My problem with that is its completely arbitrary, and totally unnecessary. In my code I <em>never</em> use null unless something I don't control returns null (regex matching for example). The beauty of this is it simiplifies things a lot. I never have to check if x === undefined || x === null. And if you're in the habit of using == or simply stuff like if(x) ... . Stop it. <code>!x</code> will evaluate to true for an empty string, 0, null, NaN - ie things you probably don't want. If you want to write javascript that isn't awful, always use triple equals === and never use null (use undefined instead). It'll make your life way easier.</p>\n",
                    "is_accepted": true,
                    "score": 1
                }
            ],
            "body": "<p>I've been writing JavaScript for quite a long time now, and I have never had a reason to use <code>null</code>. It seems that <code>undefined</code> is always preferable and serves the same purpose programmatically. What are some practical reasons to use <code>null</code> instead of <code>undefined</code>?</p>\n",
            "last_activity_date": 1425365901,
            "question_id": 6604749,
            "score": 12,
            "tags": [
                "javascript",
                "null",
                "undefined"
            ],
            "title": "What reason is there to use null instead of undefined in JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yep that's correct.  Alternatively you can use define <code>@myApi = { foo: -&gt; }</code> because <code>this</code> is <code>window</code> in the root context of the file.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>You can simplify the syntax further, for example if you had 2 internal functions</p>\n\n<p><strong>example.coffee</strong></p>\n\n<pre><code>myPrivateFunction = -&gt;\n    \"return 1\"\n\nmyPrivateFunction2 = -&gt;\n    \"return 2\"\n\n@myApi = {\n    myFunction : myPrivateFunction,\n    myFunction2 : myPrivateFunction2\n}\n</code></pre>\n\n<p><strong>example.js</strong></p>\n\n<pre><code>this.myApi = {\n  myFunction: myPrivateFunction,\n  myFunction2: myPrivateFunction2\n};\n</code></pre>\n\n<p>The <code>@</code> will be <code>window</code> within the main scope of the file.</p>\n\n<p>Then call from elsewhere by <code>window.myApi.myFunction()</code></p>\n\n<p>If you wanted to map the external function names to the same internal names, if you don't specify <code>key : value</code> pairs, it will just use the string value as the key by default.</p>\n\n<p><strong>example.coffee</strong></p>\n\n<pre><code>@myApi = {\n    myPrivateFunction,\n    myPrivateFunction2\n}\n</code></pre>\n\n<p><strong>example.js</strong></p>\n\n<pre><code>this.myApi = {\n  myPrivateFunction: myPrivateFunction,\n  myPrivateFunction2: myPrivateFunction2\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I recently started using coffeescript and was curious what is the \"right\" way to expose an object that I create with Coffeescript to other javascript pages.  Because of coffeescripts wrapping functionality, is it acceptable behavior to call <code>window.coffeeObject = externalObject</code>.</p>\n\n<h2>Example</h2>\n\n<p><strong>example.coffee</strong></p>\n\n<pre><code>externalObject = \n   method1: -&gt; 'Return value'\n   method2: -&gt; 'Return method2'\n\nwindow.myApi = externalObject\n</code></pre>\n\n<p><strong>example.js</strong> -- compiled from example.coffee</p>\n\n<pre><code>(function() {\n  var externalObject;\n  externalObject = {\n    method1: function() {\n      return 'Return value';\n    },\n    method2: function() {\n      return 'Return method2';\n    }\n  };\n  window.myApi = externalObject;\n}).call(this);\n</code></pre>\n\n<p><strong>other.js</strong></p>\n\n<pre><code>alert(myApi.method1()) // Should return \"Return value\"\n</code></pre>\n",
            "last_activity_date": 1332505741,
            "question_id": 5995510,
            "score": 12,
            "tags": [
                "javascript",
                "coffeescript"
            ],
            "title": "Expose a javascript api with coffeescript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This is indeed an issue in newer versions of jQuery. If this is an important feature for you, you can try downgrading to 1.4.2 where it is still working properly.</p>\n\n<p>Source: Comments at <a href=\"http://api.jquery.com/css/\" rel=\"nofollow\">http://api.jquery.com/css/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>jQuery always* returns dimensions such as width in units of pixels. Perhaps you can borrow the code from this <a href=\"http://pxtoem.com\" rel=\"nofollow\"><strong>px</strong> to <strong>em</strong> conversion tool</a> to help you get the value you want.</p>\n\n<p>It looks like 1.4.2 is the most recent version that will still return <code>$(this).css('width')</code> in its assigned unit of measure, <em>but seemingly only if the width is assigned in the style attribute of the element's tag</em>. If it's in a separate CSS declaration like your example, it comes back as pixels still.</p>\n\n<p><code>$(this).width()</code> remains to be in pixels.</p>\n\n<p>(*in versions 1.4.3 and later)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is not a complete answer to your question but it may be a working solution to caclulate the em values. I adapted this function from <a href=\"http://dtott.com/thoughts/2008/01/19/convert-pixels-to-ems-a-bookmarklet/\" rel=\"nofollow\">here</a>. And <a href=\"http://jsfiddle.net/yAnFL/23/\" rel=\"nofollow\">here</a> is the updated fiddle.</p>\n\n<pre><code>$.fn.emWidth = function(){\n    var wpx = this.width();\n    var temp = $('&lt;div /&gt;').css({\n        width:'1em', \n        position: 'absolute'\n    });\n    this.append(temp);\n    var oneEm = temp.width();\n    temp.remove();\n    var value = wpx/oneEm;\n    return Math.round(value*100)/100;\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>jQuery now uses a <code>cssHooks</code> feature for certain <code>.css()</code> requests, <code>width</code> and <code>height</code> in particular.</p>\n\n<p>So the <code>width()</code> function and the <code>.css('width')</code> both run through the same code on occasion.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the jQuery manual it is stated:</p>\n\n<blockquote>\n  <p>The difference between .css(width) and\n  .width() is that the latter returns a\n  unit-less pixel value (for example,\n  400) while the former returns a value\n  with units intact (for example,\n  400px).</p>\n</blockquote>\n\n<p>Seems like the behaviour of .css() was changed in version 1.3, or at least it seems like that from the <a href=\"http://bugs.jquery.com/ticket/7283\" rel=\"nofollow\">bug tracker</a>.</p>\n\n<p>I was trying to find a good (not hacky) solution also, but I haven't been able yet.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/744319/get-css-rules-percentage-value-in-jquery\">Also on SO</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>if you define the style inline then you can use document.getElementById(\"myObj\").style.width to retrieve the value as it is defined in the inline style</p>\n\n<p><a href=\"http://jsfiddle.net/yAnFL/14/\" rel=\"nofollow\">http://jsfiddle.net/yAnFL/14/</a></p>\n\n<p>I'm not sure how to grab the value from an external sheet though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As some others have stated, jQuery now uses hooks to intercept evaluation of some css properties.  Here is a general solution that lets you get css and bypass those hooks.</p>\n\n<pre><code>$.fn.hooklessCSS = function(name) {\n    var hooks = $.cssHooks;\n    $.cssHooks = {};\n    var ret = $(this).css(name);\n    $.cssHooks = hooks;\n    return ret;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Alright, I've search the jQuery docs (needs somebody devoted to maintaining), I've searched SO, and I've searched Google.  I can't find the answer to this question.</p>\n\n<hr>\n\n<h2>In Words</h2>\n\n<p>In the past, I remember jQuery working like this:</p>\n\n<p><code>$('#myObj').width()</code> returns the computed width of <code>#myObj</code>.<br>\n<code>$('#myObj').css('width')</code> returns the width as it is entered into the CSS stylesheet.</p>\n\n<p>Now, any jQuery package I use returns the exact same number no matter which method I use.</p>\n\n<p><code>$('#myObj').width()</code> returns the computed width of <code>#myObj</code> as an integer (float?).<br>\n<code>$('#myObj').css('width')</code> returns the computed width of <code>#myObj</code> as a string with <code>px</code> on the end.</p>\n\n<hr>\n\n<h2>In Pseudocode</h2>\n\n<pre><code>#myobject{\n    width: 14em;\n    height: 14em;\n}\n\n&lt;div id=\"myobject\"&gt;Has Text&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $( '#myobject' ).click(function(){\n        alert($(this).css('width') + \"\\n\" + $(this).width());\n    });\n&lt;/script&gt;\n\n//Always alerts \"224px [newline] 224\"\n//Expected to alert \"14em [newline] 224\"\n</code></pre>\n\n<hr>\n\n<p>These pixel-based return values are almost completely useless, as I need to do calculations based on what's actually in the CSS.  For example, I want to do math on the <code>left</code> position of an element, but I can't because it keeps returning pixel values, which are worthless in an <code>em</code>-based design.</p>\n\n<p>Is there any way to get the actual values out of the CSS in jQuery?<br>\nIs this a jQuery bug, or am I missing something?</p>\n\n<p>Here's a jsfiddle: <a href=\"http://jsfiddle.net/yAnFL/1/\" rel=\"nofollow\">http://jsfiddle.net/yAnFL/1/</a>.</p>\n\n<hr>\n\n<h2>Resolution</h2>\n\n<p>Apparently, this is the intended result.<br>\nI have decided to use <a href=\"http://www.filamentgroup.com/lab/update_jquery_plugin_for_retaining_scalable_interfaces_with_pixel_to_em_con/\" rel=\"nofollow\">this plugin</a> to do conversions for me.<br>\nTaking away control of CSS seems like a poor choice in the jQuery design.</p>\n",
            "last_activity_date": 1309057537,
            "question_id": 5475589,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "css"
            ],
            "title": "jQuery .css() function not returning expected values"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>As david van brink mentioned in the comments, the correct solution is to use <code>__dirname</code>. This global variable will return the path of module/application.</p>\n\n<p>For example:</p>\n\n<pre><code>require(__dirname + '/models');\n</code></pre>\n\n<p>Just to save someone from a headache.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>In a Node.js module I'm writing I would like to open a file--i.e, with <code>fs.readFile()</code>--that is contained in the same directory as my module. By which I mean it is in the same directory as the <code>./node_modules/&lt;module_name&gt;/index.js</code> file.</p>\n\n<p>It looks like all relative path operations which are performed by the <code>fs</code> module take place relative to the directory in which Node.js is started. As such, I think I need to know how to get the path of the current Node.js module which is executing.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1360087663,
            "question_id": 5215871,
            "score": 12,
            "tags": [
                "javascript",
                "path",
                "node.js"
            ],
            "title": "In Node.js how can I tell the path of `this` module?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could have a look at this <a href=\"https://github.com/creationix/haml-js\" rel=\"nofollow\">HAML implementation for JS</a> (given that you're open to use HAML that is ;) ). Also the most commonly used JS templates which has been <a href=\"http://ejohn.org/blog/javascript-micro-templating/\" rel=\"nofollow\">originally suggest</a> (not sure if it has a name, actually?) by John Resig shares key elements with ERB. It's also used with <a href=\"http://documentcloud.github.com/underscore/#template\" rel=\"nofollow\">underscore.js</a>'s templating functionality.</p>\n\n<p><em>I haven't tried to achieve what you're after yet, but thought about it a few times and I'd guess that you'll encounter problems with currently existing solutions and implementation of things like e.g. loops. Just my 5 cent.</em></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recommend Liquid templates <a href=\"http://www.liquidmarkup.org/\" rel=\"nofollow\">for Ruby</a> and for <a href=\"https://github.com/darthapo/liquid.js\" rel=\"nofollow\">Javascript</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try <a href=\"http://mustache.github.com/\">Mustache</a>. (Twitter used it in their recent redesign, so they can share templates between server-side Ruby and client-side JavaScript.)</p>\n\n<p>It's also available in Ruby, JavaScript, Python, Erlang, PHP, Perl, Objective-C, Java, .NET, Android, C++, Go, Lua, ooc, ActionScript, ColdFusion, Scala, Clojure, Fantom, CoffeeScript, D, and for node.js.</p>\n\n<p>(Yes, I know you mentioned it in your question, but this answer has links and stuff.)</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Try <a href=\"https://github.com/olivernn/poirot\" rel=\"nofollow\">poirot</a>.  It's a gem that makes it dead simple to reuse <a href=\"http://mustache.github.com/\" rel=\"nofollow\">mustache</a> or <a href=\"http://handlebarsjs.com/\" rel=\"nofollow\">handlebars</a> templates client and server side.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am looking for a template solution that can work on both server side (like ERB) and client side (like EJS) so I don't have to write the views twice for use in, say, both Rails and <a href=\"https://github.com/documentcloud/backbone\">Backbone</a>.<br>\nThe first that comes to mind is <strong>Mustache</strong>. Any others?<br>\nAnyone doing this successfully ?</p>\n\n<p>EDIT  </p>\n\n<p>I keep a compilation <a href=\"https://github.com/clyfe/cywiky/wiki/Server-&amp;-Client-Templates\">Here</a>.</p>\n",
            "last_activity_date": 1337777945,
            "question_id": 4977558,
            "score": 12,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ruby",
                "backbone.js"
            ],
            "title": "Template language that works on both server and client"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Sure, people have been doing it for ages. It's not recommended as it's messy and you may mess with existing properties.</p>\n\n<p>If you are looping code with <code>for..in</code> your code may break because you will now be enumerating through these newly attached properties.</p>\n\n<p>I suggest using something like jQuery's <code>.data</code> which keeps metadata attached to objects. If you don't want to use a library, re-implement <code>jQuery.data</code></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Yes, you can add your own properties to DOM objects, but remember to take care to avoid naming collisions and circular references.</p>\n\n<pre><code>document.getElementById(\"myElement\").myProperty = \"my value\";\n</code></pre>\n\n<p>HTML5 introduced a valid way of attaching data to elements via the markup - using the <code>data-</code> attribute prefix.  You can use this method in HTML 4 documents with no issues too, but they will not validate:</p>\n\n<pre><code>&lt;div id=\"myElement\" data-myproperty=\"my value\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Which you can access via JavaScript using <code>getAttribute()</code>:</p>\n\n<pre><code>document.getElementById(\"myElement\").getAttribute(\"data-myproperty\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Do you want to add properties to the object, or attributes to the element?</p>\n\n<p>You can add attributes using <code>setAttribute</code></p>\n\n<pre><code>var el = document.getElementById('myelement');\nel.setAttribute('custom', 'value');\n</code></pre>\n\n<p>or you can just add properties to the javascript object:</p>\n\n<pre><code>var el = document.getElementById('myelement');\nel.myProperty = 'myValue';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you must, don't use standard HTML attributes. Here's a tutorial on using custom attributes:</p>\n\n<p><a href=\"http://www.javascriptkit.com/dhtmltutors/customattributes.shtml\" rel=\"nofollow\">http://www.javascriptkit.com/dhtmltutors/customattributes.shtml</a></p>\n\n<p>It's HTML5, but it's backward-compatible.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As it has been said, it is possible to add properties to DOM objects. However, you should take <a href=\"http://perfectionkills.com/whats-wrong-with-extending-the-dom/\" rel=\"nofollow\">this article</a> in consideration before using that technique.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can I add arbitrary properties to JavaScript DOM objects, such as <code>&lt;INPUT&gt;</code> or <code>&lt;SELECT&gt;</code> elements?  Or, if I cannot do that, is there a way to associate my own objects with page elements via a reference property?</p>\n",
            "last_activity_date": 1384790085,
            "question_id": 4258466,
            "score": 12,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Can I add arbitrary properties to DOM objects?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You could do it by jQuery, or another JavaScript. It is also possible by <code>&lt;f:ajax&gt;</code>, but it connects to the server, which you don't need here.</p>\n\n<p>By jQuery you can just hide the form, not changing the DOM. As far as I understand, it should be enough.</p>\n\n<p>Post some .xhtml if you want more :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As suggested by amorfis, the idea of using Ajax here is not the best solution, as you will do a call to your server for a client-side manipulation.</p>\n\n<p>The best solution is to use Javascript to hide your component(s). For example, if all your labels and input texts are nested in a <code>&lt;h:panelGrid&gt;</code> component, you can do that:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function hideOrShow(show) {\n        // Get the panel using its ID\n        var obj = document.getElementById(\"myForm:myPanel\");\n        if (show) {\n            obj.style.display = \"block\";\n        } else {\n            obj.style.display = \"none\";\n        }\n    }\n&lt;/script&gt;\n\n&lt;h:form id=\"myForm\"&gt;\n    &lt;h:selectBooleanCheckbox id=\"myCheckbox\" onclick=\"hideOrShow(this.checked);\"/&gt;\n\n    &lt;h:panelGrid id=\"myPanel\" columns=\"2\"&gt;\n        ...\n    &lt;/h:panelGrid&gt;\n&lt;/h:form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Use <code>&lt;f:ajax event=\"click\" render=\"@form\"&gt;</code> in the checkbox and give the component containing the form elements a <code>rendered</code> attribute which depends on the checkbox's state. No need for another JS code clutter.</p>\n\n<pre><code>&lt;h:form&gt;\n    &lt;fieldset&gt;\n        &lt;legend&gt;\n            &lt;h:selectBooleanCheckbox binding=\"#{showUserInfo}\"&gt;\n                &lt;f:ajax event=\"click\" render=\"@form\" /&gt;\n            &lt;/h:selectBooleanCheckbox&gt;\n            &lt;h:outputText value=\"User information\" /&gt;\n        &lt;/legend&gt;\n        &lt;h:panelGroup rendered=\"#{not empty showUserInfo.value and showUserInfo.value}\"&gt;\n            &lt;p&gt;\n                &lt;h:outputLabel for=\"firstName\" value=\"First name:\" /&gt;\n                &lt;h:inputText id=\"firstName\" value=\"#{bean.user.firstName}\" /&gt;\n            &lt;/p&gt;\n        &lt;/h:panelGroup&gt;\n    &lt;/fieldset&gt;\n&lt;/h:form&gt;\n</code></pre>\n\n<p>The above example binds the checkbox to the view, you can of course also bind it to a <code>boolean</code> bean property, you can then remove the <code>not empty</code> check from the <code>rendered</code> attribute.</p>\n\n<pre><code>            &lt;h:selectBooleanCheckbox value=\"#{bean.showUserInfo}\"&gt;\n\n...\n\n        &lt;h:panelGroup rendered=\"#{bean.showUserInfo}\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I am using JSF2 and Java to build a web application. I want to build a form like the one at the picture below:</p>\n\n<p><img src=\"http://i.stack.imgur.com/2GiAN.jpg\" alt=\"alt text\"></p>\n\n<p>When somebody unchecks the checkbox the form should disappear:\n<img src=\"http://i.stack.imgur.com/cgrLB.jpg\" alt=\"alt text\"></p>\n\n<p><a href=\"http://www.sencha.com/examples/pages/forms/forms.html\">Here</a> is an example with gwt.</p>\n\n<hr>\n\n<p>So far,\nI tried some stuff with the <code>&lt;f:ajax&gt;</code> tag and an <code>PropertyActionListener</code> in the managedBean but it didn't work. Can somebody give me an example or at least some hints to accomplish my goal. I would be really thankfull</p>\n",
            "last_activity_date": 1391173228,
            "question_id": 3698579,
            "score": 12,
            "tags": [
                "javascript",
                "jsf",
                "jsf-2"
            ],
            "title": "Show/hide JSF2 form using selectBooleanCheckbox"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var el = document.createElement('div');\nel.innerHTML = 'What you used to document.write()';\ndocument.body.appendChild(el);\n</code></pre>\n\n<p>Note that you'll need to fix the HTML to be valid XHTML, but that should be much less work than converting all the code to use DOM manipulation.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>We've been using Jquery and set timeouts to rewrite code supplied to us by similar organisations to yours. Here's an example from Search Ignite:</p>\n\n<pre><code>&lt;script&gt;\n&lt;!--\n// once all the page has loaded\n$(document).ready(function ()\n    {\n        // wait a bit so everything else that runs when the page has loaded loads, then...\n        setTimeout(function ()\n        {\n            // ...load the tracking stuff\n            var headerTag = document.getElementsByTagName('head')[0];\n            var seo_tag = $.createElement(document.location.protocol + \"//track.searchignite.com/si/CM/Tracking/ClickTracking.aspx?siclientid=123456&amp;jscript=1\", \"script\");\n            headerTag.appendChild(seo_tag);\n\n        }, 20);\n    });\n// --&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>The timeout has the added benefit of making our page responsive to the user before the the external code has been loaded by the users browser, very useful if the external supplier's servers ever go down. Yes we loose some tracking stats but the user experience is not compromised.</p>\n\n<p>Obviously you won't be able to rely on JQuery but you get the general idea.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Perhaps you can create an iframe of type <code>text/html</code>, write the content into that, and then import the nodes back into the main page. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I work for a company that writes software which client sites embed with &lt; script language=\"JavaScript\" src=..... etc. etc. We depend quite a bit on document.write to write elements out to the page. One of our clients for some reason has opted to use the content-type \"application/xhtml+xml\", which makes document.write() unusable in chrome.</p>\n\n<p>I understand why this is, and that DOM-compliant code should create each element, set its attributes, fill it with a text node if needed, attach the text node to its parent and the parent to some page element....</p>\n\n<p>but what's a good workaround that doesn't require all this junk? The write()s therein have so many elements that the resulting code would be hideous if we made nodes and fastened them together like Knex or Legos or what-have-you. </p>\n\n<p>edit: Tried using CDATA, but even this line is condemned similarly by the xhtml parser on the same page as our script embed:</p>\n\n<pre><code>&lt;script language=\"text/javascript\"&gt;&lt;![CDATA[document.write('hi');]]&gt;&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1297989724,
            "question_id": 3614288,
            "score": 12,
            "tags": [
                "javascript",
                "xhtml",
                "google-chrome",
                "document.write"
            ],
            "title": "Replacing document.write()s in an xhtml+xml page"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Write a function with the correct name and the correct arguments. The JS engine will do the parsing for you.</p>\n\n<pre><code>function someFunction(data) {\n    // Now data is an Array, containing a single\n    // Object with 8 properties (title, link, etc)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You don't have to parse the data. It is already a valid JavaScript object. For instance, to print the description property for the first object inside someFunction</p>\n\n<pre><code>function someFunction(result) {\n    alert(result[0].description); // alerts \"Sample Description\"\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I am trying to grab some data via JSONP. Using Firebug, I am able to see the data properly being returned, but I am having a hard time thinking how I have to parse it. The data return is really a nested array correct? <code>someFunction</code> is the name of the callback function. This is how the data looks: </p>\n\n<pre><code>someFunction([  \n{  \n       \"title\":\"Sample Title\",  \n       \"link\":\"http://example.com\",  \n       \"description\":\"Sample Description\",  \n       \"publisher\":\"Sample Publisher\",  \n       \"creator\":\"Sample Author\",  \n       \"date\":\"Thu, 19 Aug 2010 12:41:29 GMT\",  \n       \"num_pages\":10,  \n       \"num_results\":\"10\"  \n},  \n]);\n</code></pre>\n\n<p>Just a little confused about how to properly parse and output. </p>\n",
            "last_activity_date": 1409754494,
            "question_id": 3543513,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "json",
                "jsonp"
            ],
            "title": "How to parse JSONP data returned from remote server"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><em>closure bar will exist until foo returns, and the closure bar will then be garbage collected, since there is no reference to it at all anywhere</em></p>\n\n<p>Yes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A closure is when free variables in some function code are bound to some values by the function \"context\" (closure being a more proper term here than context).</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var i = 1;\n    function foo() { return i; }\n&lt;/script&gt;\n</code></pre>\n\n<p>Here, <code>i</code> is a free variable for the function code of <code>foo</code>. And this free variable is not bound to any particular value by any existing context (closure). So you don't have any closure.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var i = 1;\n    function foo() { return i; }\n    foo(); // returns 1\n    i = 2;\n    foo(); // returns 2\n&lt;/script&gt;\n</code></pre>\n\n<p>Now to create a closure you have to provide a value-bounding context:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    function bar() {\n       var i = 1;\n       function foo() { return i; }\n       return foo;\n    }\n    bar(); // returns function foo() { return i; }\n    bar()(); // returns 1\n    // no way to change the value of the free variable i =&gt; bound =&gt; closure\n&lt;/script&gt;\n</code></pre>\n\n<p>In summary, you can't have a closure unless a function returns another function. In that case, the <em>returned</em> function has all the variable-value bindings that existed in the <em>returning</em> function when it <strong>exited</strong>.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    function bar() {\n       var i = 1;\n       function foo() { return i; }\n       i = 2;\n       return foo;\n    }\n    bar()(); // returns 2\n&lt;/script&gt;\n</code></pre>\n\n<p>Concerning your exemples:</p>\n\n<ol>\n<li>Case 1 is not a closure, it's just a function</li>\n<li>Case 2 is not a closure, it's another function with a free variable</li>\n<li>Case 3 is not a closure, it's yet another function with the special \"variable\" <code>this</code>. When the function is called as member of an object, the object is assigned to the value of <code>this</code>. Otherwise, the value of <code>this</code> is the global object.</li>\n<li>Case 4 is not a closure, it's a function defined inside another function. Should <code>foo</code> return <code>bar</code>, you would create a closure that contains only 'bar' and its value : <code>function bar() {}</code>.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>In none of these examples is a closure created.</p>\n\n<p>The second would create a closure if you actually created a function and did something with it, now you just create a function and then throw it away. Same as adding a line <code>3+8;</code>, you create a number, and then throw it away.</p>\n\n<p>A closure is simply a function which references variables from its creation environment in its body, a canonical example is an adder:</p>\n\n<pre><code>function createAdder(x) { //this is not a closure\n    return function(y) { //this function is the closure however, it closes over the x.\n        return y + x;\n    }\n} //thus createAdder returns a closure, it's closed over the argument we put into createAdder\n\nvar addTwo = createAdder(2);\n\naddTwo(3); //3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If I may offer a model on when and how closures are created (this discussion is theoretical, in reality the interpreter may do anything as long as the end result is the same): a closure is created whenever a function is evaluated during execution. The closure will then point to the environment where the execution happens. When a site load, the Javascript is executed in the order from top to bottom at the global environment. All occurrences of</p>\n\n<pre><code>function f(&lt;vars&gt;) {\n  &lt;body&gt;\n}\n</code></pre>\n\n<p>will be turned into a closure with  and , with a pointer to a global environment. At the same time, a reference <code>f</code> is made at the global environment pointing to this closure.</p>\n\n<p>So what happened when <code>f()</code> is executed at global environment? We can think of it as, first, a lookup in the global environment (where the function is executing) for the name <code>f</code>. We found that it is pointing to a closure. To execute the closure, we create a new environment, whose parent environment is the environment being pointed by the closure <code>f</code>, i.e. the global environment. In this new environment, we associate the arguments of <code>f</code> with its real values. Then the body of the closure <code>f</code> is executed in the new environment! Any variable <code>f</code> needs will be resolved first in the new environment we just created. If such variable does not exist, we recursively find it in the parent environment until we hit the global environment. Any variable <code>f</code> creates will be created in the new environment.</p>\n\n<p>Now, let's look at the more complicated example:</p>\n\n<pre><code>// At global level\nvar i = 10;                  // (1)\nfunction make_counter(start) {\n  return function() {\n    var value = start++;\n    return value;\n  };\n}                            // (2)\nvar count = make_counter(10);    // (3)\ncount();  // return 10       // (4)\ncount();  // return 11       // (5)\ncount = 0;                   // (6)\n</code></pre>\n\n<p>What happens is that:</p>\n\n<p>At point (1): an association from <code>i</code> to <code>10</code> is made at global environment (where <code>var i = 10;</code> is executed.</p>\n\n<p>At point (2): a closure is made with variable <code>(start)</code> and body <code>return ...;</code> that points to the environment where it is being executed (the global). Then an association is made from <code>make_counter</code> to the closure we just created.</p>\n\n<p>At point (3): several interesting things happen. First we find what <code>make_counter</code> is associated with at the global environment. Then we execute that closure. Hence, a new environment, let's name it <code>CE</code> is created which points to the environment pointed by closure <code>make_counter</code> (the global). Then we create an association from <code>start</code> to <code>10</code> in <code>CE</code> and run the body of closure <code>make_counter</code> in <code>CE</code>. Here we encounter another function, which is anonymous. However, what happens is the same as before (recall <code>function f() {}</code> is equivalent to <code>var f = function() {};</code>). A closure, let's name it <code>count</code>, is created with variable <code>()</code> (empty list) and body <code>var ... return value;</code>. Now, this closure will point to the environment where it is executing, i.e. <code>CE</code>. This will be very important later on. Finally, we have <code>count</code> points to the new closure in the global environment (Why global? Because <code>var count ...</code> is executed at the global environment). We note that <code>CE</code> is not garbage-collected because we can reach <code>CE</code> through the closure <code>make_counter</code>, which we can reach from the global environment from the variable <code>make_counter</code>.</p>\n\n<p>At point (4), more interesting thing happens. We first find the closure associated with <code>count</code> which is the closure we just created. Then we create a new environment whose parent is the environment pointed by the closure, which is <code>CE</code>! We execute the body of the closure in this new environment. When <code>var value = start++;</code> is executed, we search for variable <code>start</code> beginning at the current environment and moving up all the way to the global environment sequentially. We found <code>start</code> in environment <code>CE</code>. We increment the value of this <code>start</code>, originally <code>10</code> to <code>11</code>. Now the <code>start</code> in <code>CE</code> points to value <code>11</code>. When we encounter <code>var value</code>, this means don't bother looking for an existing <code>value</code> and simply create a variable at the environment where it is being executed. So an association from <code>value</code> to <code>11</code> is made. In the <code>return value;</code>, we lookup <code>value</code> the same way as we looked for <code>start</code>. Turns out we find it at the current environment, hence we don't need to look through the parent environments. We then return this value. Now the new environment we just created will be garbage collected as we can no longer reach this environment through any path from global.</p>\n\n<p>At point (5), the same thing happens as above. But now, when we look for <code>start</code>, we found that the value is <code>11</code> instead of <code>10</code> (at the environment <code>CE</code>).</p>\n\n<p>At point (6), we re-assign <code>count</code> at the global environment. We found that now we can no longer find a path from global to closure <code>count</code> and in turn we can no longer found a path to environment <code>CE</code>. Hence both of these will be garbage collected.</p>\n\n<p>P.S. For those familiar with LISP or Scheme, the model above is exactly the same as the environment model in LISP/Scheme.</p>\n\n<p>P.P.S. Wow, at first I wanted to write a short answer, but it turns out to be this behemoths. I hope I'm not making glaring mistake.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it true that a closure is created in the following cases for <code>foo</code>, but not for <code>bar</code>?</p>\n\n<p>Case 1:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    function foo() { }\n\n&lt;/script&gt;\n</code></pre>\n\n<p><code>foo</code> is a closure with a scope chain with only the global scope.</p>\n\n<p>Case 2:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    var i = 1;\n    function foo() { return i; }\n\n&lt;/script&gt;\n</code></pre>\n\n<p>same as Case 1.</p>\n\n<p>Case 3:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    function Circle(r) {\n        this.r = r;\n    }\n    Circle.prototype.foo = function() { return 3.1415 * this.r * this.r }\n\n&lt;/script&gt;\n</code></pre>\n\n<p>in this case, <code>Circle.prototype.foo</code> (which returns the circle's area) refers to a closure with only the global scope.  (this closure is created).</p>\n\n<p>Case 4:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    function foo() { \n        function bar() { \n        }\n    }\n\n&lt;/script&gt;\n</code></pre>\n\n<p>here, <code>foo</code> is a closure with only the global scope, but <code>bar</code> is not a closure (yet), because the function <code>foo</code> is not invoked in the code, so no closure <code>bar</code> is ever created.  It will only exist if <code>foo</code> is invoked , and the closure <code>bar</code> will exist until <code>foo</code> returns, and the closure <code>bar</code> will then be garbage collected, since there is no reference to it at all anywhere.</p>\n\n<p>So when the function doesn't exist, can't be invoked, can't be referenced, then the closure doesn't exist yet (never created yet).  Only when the function can be invoked or can be referenced, then the closure is actually created?</p>\n",
            "last_activity_date": 1304511675,
            "question_id": 2780428,
            "score": 12,
            "tags": [
                "javascript",
                "closures"
            ],
            "title": "When actually is a closure created?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I'm not sure what you mean by having more than one instance of a plugin. A plugin would be available to use on any element.</p>\n\n<p>This comment doesn't clarify much for me:</p>\n\n<blockquote>\n  <p>So say that it was a plugin that took\n  a \"color\" parameter and turned the\n  object into that color. Well, in that\n  case you'd need multiple instances, as\n  you're dealing with more than one page\n  element turning more than one color.</p>\n</blockquote>\n\n<p>In this case, you would pass in different colors are arguments as needed:</p>\n\n<pre><code>$('div#foo').makeColor('red');\n$('div#bar').makeColor('blue');\n</code></pre>\n\n<p>Each time you call the plugin, it will use whatever arguments you give it. The plugin isn't a class that needs instances.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To answer your question directly, you can use jQuery.noconflict() to avoid namespace collisions and thus potentially have multiple instantiations on a page.. </p>\n\n<pre><code>var $j = jQuery.noConflict();\n// Use jQuery via $j(...)\n$j(document).ready(function() {\n  // etc\n</code></pre>\n\n<p>check <a href=\"http://docs.jquery.com/Using%5FjQuery%5Fwith%5FOther%5FLibraries\" rel=\"nofollow\">here</a></p>\n\n<p>But I question your design. Why are you writing a plugin that appears to not operate on a jQuery wrapped set ? .. Plugins should be written to assume they are operating on a jQuery array held in 'this'. In which case any state can be stored in each of the items being acted upon... But maybe you are building something different?</p>\n\n<p>Please review <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">this page</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had the same problem : how to use many instances of a plugin on only one form ?\nThe usual way fails because in fact, the instance is not an instance of the plugin : it is an instance of jQuery.\nSo, if more than one element is defined to be managed by a plugin, each definition overrides the previous parameters.</p>\n\n<p>It was necessary to have a look on the problem from another side.</p>\n\n<p>A plugin is usually made to react on a specific event for a specific element. e.g.. onclick on a button, or when the mouse is over the element.\nIn my case, I had to use an autocomplete plugin for a city field, but my form has 5 tabs and in total 4 fields for the cities for 4 different parts of the information to be collected.\nFor each fields, parameters are specifics.</p>\n\n<p>By the way, I've realised iI don't need to have the plugin active everytime : just on the appropriate event on the field is enough.</p>\n\n<p>So I had an idea : an event manager for each element. When the event appends, so I define the plugin action.\nSome code will be more efficient to explain : imagine you have 3 div blocks and your plugin must change the colours, but with specifics colours depending on which div is affected.</p>\n\n<pre><code>\n$(document).ready(function(){\n    // Wich elements are affected by the plugin\n    var ids = ['myDiv1','myDiv2','myDiv3'];\n    // foe each one :\n    for (v in ids) \n    {\n        //define from an event :\n        $('#'+ ids[v]).focus(function()\n        {\n            // depending which id is active :\n            var  aParams, idDiv = $(this).attr('id');\n            // Choosing the right params\n            switch(idDiv)\n            {\n                case 'myDiv1':\n                    aParams = {'color': '#660000', 'background-color': '#0000ff'};\n                    break;\n                case 'myDiv2':\n                    aParams = {'color': '#006600', 'background-color': '#ff00ff'};\n                    break;\n                case 'myDiv3':\n                    aParams = {'color': '#000066', 'background-color': '#ff0000'};\n                    break;\n                default:\n                    aParams = {'color': '#000000', 'background-color': '#ffffff'};\n            };\n            // Defining the plugin on the right element with the right params\n            $(this).myPlugin(\n            {\n                colors: aParams\n            });\n        });\n    }\n});</code></pre>\n\n<p>And this works fine.</p>\n\n<p>Sorry if my English is not perfect - I hope you understand well.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>I have the very same problem but i find a very handy solution i\u00b4ll post it for someone who may have this problem</p>\n\n<p>when you define your variables insinde the plugin you could use the .data() to store all the variables you define</p>\n\n<p>like this</p>\n\n<pre><code>(function($) {\n  $.fn.samplePlugin = function(options) {\n    var base = this;\n    this.foo // define foo\n\n    // do stuff with foo and other variables\n\n    // Add a reverse reference to the DOM object\n    this.data(\"pluginname\", base);\n\n  };})(jQuery);\n</code></pre>\n\n<p>And when you want to use the same foo variable you should retrive the reference with this:</p>\n\n<pre><code>base = this.data(\"pluginname\");\nbase.foo\n</code></pre>\n\n<p>Hope it helps</p>\n\n<p>Logan</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>instead of writing this</p>\n\n<pre><code>$(\"#divid1\").samplePlugin();\n$(\"#divid2\").samplePlugin();\n</code></pre>\n\n<p>you can do this way</p>\n\n<pre><code>$.plugin('samplePlugin1', samplePlugin);\n$(\"#divid1\").samplePlugin1();\n\n$.plugin('samplePlugin2', samplePlugin);\n$(\"#divid2\").samplePlugin2();\n</code></pre>\n\n<p>You can have much details from here \n<a href=\"http://alexsexton.com/?p=51\" rel=\"nofollow\">http://alexsexton.com/?p=51</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This worked a treat for me! I had specific parameters for which pages/places I wanted to run a plugin and was able to achieve success by using a simple if statement. Hope this helps someone!</p>\n\n<pre><code>&lt;!-- Begin JQuery Plugin Foo --&gt;\n&lt;script src=\"js/foo_fun.js\"&gt;&lt;/script&gt;\n\n&lt;?php \nif(substr_count(strtolower($currentUrl),\"member\")&gt;0)\n{\n?&gt;\n    &lt;script&gt;\n    $(document).ready(function(){\n        $('#vscroller').vscroller({newsfeed:'news_employee.xml', speed:1000,stay:2000,cache:false});\n    });\n    &lt;/script&gt;\n&lt;?php\n}\nelse\n{\n?&gt;\n    &lt;script&gt;\n    $(document).ready(function(){\n        $('#vscroller').vscroller({newsfeed:'news_company.xml', speed:1000,stay:2000,cache:false});\n    });\n    &lt;/script&gt;\n&lt;?php\n}\n?&gt;\n&lt;!-- End JQuery Foo--&gt; \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to use <code>this.foo</code> instead of <code>var foo</code>, so that the variable is only related to the current object.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just throwing my solution in here:</p>\n\n<pre><code>(function ($){\n\n    $.fn.plugin = function (options){\n        var settings = $.extend({}, $.fn.plugin.defaults, options);\n        settings.that = $(this);\n        $.fn.plugin.init (settings);\n    };\n\n    $.fn.plugin.defaults = { objval: 'default' };\n\n    $.fn.plugin.init = function (settings){\n        settings.that.val (settings.objval);\n    };\n\n}( jQuery ));\n\n$('#target1').plugin ({objval: 'not default'});\n$('#target2').plugin ();\n</code></pre>\n\n<p><a href=\"http://jsbin.com/AmiPulU/1/edit\" rel=\"nofollow\">DEMO</a></p>\n\n<p>The settings variable is isolated every time you initialize the object.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>html:</p>\n\n<pre><code>&lt;code class=\"resize1\"&gt;resize1&lt;/code&gt;\n&lt;code class=\"resize2\"&gt;resize2&lt;/code&gt;\n\n\n&lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/plugins.js\"&gt;&lt;/script&gt;\n&lt;script src=\"js/main.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n       jQuery(document).ready(function($) {\n           $('.resize1').ratiofix({message:'resize1'});\n           $('.resize2').ratiofix({message:'resize2'});\n       });\n&lt;/script&gt;\n</code></pre>\n\n<p>I have found 2 solutions - the first one is jquery widget factory\n<a href=\"http://jqueryui.com/widget/\" rel=\"nofollow\">http://jqueryui.com/widget/</a>\njs code:</p>\n\n<pre><code>$.widget(\"custom.ratiofix\",{\n    options:{\n        message:\"nothing\"\n    },\n    _create:function (){\n        var self=this;\n        this.setListeners();\n    },\n    setListeners:function (){\n        var self=this;\n        $(window).on('resize',$.proxy(self.printMsg,self));\n    },\n    printMsg:function (){\n         console.log(this.options.message);\n    }\n});\n</code></pre>\n\n<p>And the second (without widget factory):</p>\n\n<pre><code>(function ($){\nvar Ratiofix = {\n  init: function(options, elem) {\n    this.options = $.extend({},this.options,options);\n    this.elem  = elem;\n    this.$elem = $(elem);\n    this.setListeners();\n    return this;\n  },\n  options: {\n    message: \"No message\"\n  },\n  printMsg: function(){\n     console.log(this.options.message);\n  },\n  setListeners:function (){\n    var self=this;\n    this.$elem.on('click',function (){\n         console.log(self.options.message);\n    });\n    $(window).on('resize',$.proxy(self.printMsg, self));\n  }\n};\n\n  $.fn.ratiofix=function (options){\n    this.init= function(options, elem) {\n      this.options = $.extend({},this.options,options);\n      this.elem  = elem;\n      this.$elem = $(elem);\n\n      return this;\n  };\n\n    if ( this.length ) {\n      return this.each(function(){\n        var ratiofix = Object.create(Ratiofix);\n        ratiofix.init(options, this); \n        $.data(this, 'ratiofix', ratiofix);\n      });\n    }\n\n\n  };\n})(jQuery);\n</code></pre>\n\n<p>In both cases plugins work separately and have own settings. In my case - 2 widgets listen to window resize and print to console own options.message</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm writing a simple jQuery plugin, but I'm having trouble being able to use multiple instances on a page.</p>\n\n<p>For instance, here is a sample plugin to illustrate my point:</p>\n\n<pre><code>(function($) {\n  $.fn.samplePlugin = function(options) {\n    if (typeof foo != 'undefined')\n    {\n      alert('Already defined!');\n    } else {\n      var foo = 'bar';\n    }\n  };\n})(jQuery);\n</code></pre>\n\n<p>And then if I do this:</p>\n\n<pre><code>$(document).ready(function(){\n  $('#myDiv').samplePlugin({}); // does nothing\n  $('#myDiv2').samplePlugion({}); // alerts \"Already defined!\"\n});\n</code></pre>\n\n<p>This is obviously an over-simplified example to get across the point. <strong>So my question is, how do I have two separate instances of the plugin?</strong> I'd like to be able to use it across multiple instances on the same page.</p>\n\n<p>I'm guessing that part of the problem might be with defining the variables in a global scope. How can I define them unique to that instance of the plugin then?</p>\n\n<p>Thank you for your guidance!</p>\n",
            "last_activity_date": 1378736322,
            "question_id": 1615894,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "plugins",
                "jquery-plugins"
            ],
            "title": "How to have multiple instances of jQuery plugin on single page?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><em>Some.</em>  Do you have a specific model in mind or just in general?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>depends on the browser</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Which mobile phones?</p>\n\n<p>There's some pretty good information on this site:</p>\n\n<p><a href=\"http://www.quirksmode.org/m/table.html\">http://www.quirksmode.org/m/table.html</a></p>\n",
                    "is_accepted": false,
                    "score": 36
                },
                {
                    "body": "<p>Depends on what mobile phones and to what extent you need support.</p>\n\n<p>Smart phones pretty much all include support for JavaScript. How <strong>well</strong> they support them is another story.</p>\n\n<p>You can see a lot of what mobile devices support here: <a href=\"http://www.quirksmode.org/m/table.html\" rel=\"nofollow\">http://www.quirksmode.org/m/table.html</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In general I would assume that javascript isn't there, as older cellphone models may not support javascript, but, if you use unobtrusive javascript and graceful degradation, then it won't really matter, as your page will function in some known way on any device, as long as it is formatting itself properly.</p>\n\n<p>So, if you want to have it work on all mobile phones, then start with not needing javascript, then add in the javascript as an enhancement.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Bare in mind as well that their are different versions of JavaScript supported by different phones and different browsers, even if JavaScript is available.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.skyfire.com/\" rel=\"nofollow\">http://www.skyfire.com/</a> if you can get that browser on it then you can get javascript! Awesome browser and quite portable...</p>\n\n<p>Works on Symbian (Nokia Phones use it) and Windows Mobile.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think javascript is totally browser dependent. Symbian mobile surely can run javascript. <a href=\"http://cellsindex.com/mobile-blackberry-m17\" rel=\"nofollow\">Smart phones are much smarter</a> to handle javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Does javascript work on mobile phones?</p>\n",
            "last_activity_date": 1348386274,
            "question_id": 1538004,
            "score": 12,
            "tags": [
                "javascript",
                "mobile-phones"
            ],
            "title": "Does javascript work on mobile phones?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>$(\".bullets li a\").click(function(){\n\n   var myIndex = $(this).parent().prevAll().length;\n   showPic(myIndex);\n\n});\n</code></pre>\n\n<p><hr /></p>\n\n<p>Note: <strong><code>prevAll().length</code></strong> will give you a zero-based index; the first item will be 0 (zero).</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>$(\".bullets li a\").click(function(){\n   var me = $(this);\n   var myIndex = $.each($(\"li\", $(this).parent().parent()), function(i, item){\n      if(item == me){\n      showPic(i);\n   });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(\".bullets li a\").click(function(){\n\tvar myIndex = $(\".bullets li a\").index(this);\n\tshowPic(myIndex);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How I'd do it</p>\n\n<pre><code>$(\".bullets li a\").click(function()\n    {\n  var $li = $(this).parent();\n  var myIndex = $li.parent().children().index( $li );\n  alert( myIndex );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>$(this).parent().index();</code></p>\n\n<p>short and sweet</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Here is a solution I created using tables. you can see how I used the selectors. Im sure it could be cleaner, but here you are:</p>\n\n<pre><code>    $('.showColumn').live('click',function() {\n        var theEl = {{id of the element}};\n        var setEl = $('th#' + theEl + '');\n        var index = setEl.index(setEl.parentNode);\n        $('table tr').each(function() { \n            $('th:eq(' + index + ')',this).show(); \n            $('td:eq(' + index + ')',this).show();\n        });\n    });\n</code></pre>\n\n<p>cheers.bo</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>&lt;ul class=\"bullets\"&gt;\n  &lt;li&gt;&lt;a href=\"#\"&gt;item 1&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#\"&gt;item 2&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#\"&gt;item 3&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#\"&gt;item 4&lt;/a&gt;&lt;/li&gt;\n  &lt;li&gt;&lt;a href=\"#\"&gt;item 5&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>\n\n<p>When I click on the <code>&lt;a&gt;</code> element, i'd like to get it's parent <code>&lt;li&gt;</code>'s index number.</p>\n\n<p>I'm trying to create a carrousel type function that doesn't need item-n classes on the list items.</p>\n\n<pre><code>$(\".bullets li a\").click(function(){\n\n   var myIndex = $(this).parent().index(this);\n   showPic(myIndex);\n\n});\n</code></pre>\n\n<p>Thanks for any help.</p>\n\n<p>TD.</p>\n",
            "last_activity_date": 1326315315,
            "question_id": 1306503,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "xhtml"
            ],
            "title": "Get parent index with jQuery"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>I don't think there's anything \"built\" into the JavaScript language for doing this. Here's a simple function that does this:</p>\n\n<pre><code>function FormatNumberLength(num, length) {\n    var r = \"\" + num;\n    while (r.length &lt; length) {\n        r = \"0\" + r;\n    }\n    return r;\n}\n\n\nFormatNumberLength(10000, 5) outputs '10000'\nFormatNumberLength(1000, 5)  outputs '01000'\nFormatNumberLength(100, 5)   outputs '00100'\nFormatNumberLength(10, 5)    outputs '00010'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>This might help : </p>\n\n<pre><code>String.prototype.padLeft = function (length, character) { \n     return new Array(length - this.length + 1).join(character || '0') + this; \n}\n\nvar num = '12';\n\nalert(num.padLeft(4, '0'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You could go crazy with methods like these:</p>\n\n<pre><code>function PadDigits(input, totalDigits) \n{ \n    var result = input;\n    if (totalDigits &gt; input.length) \n    { \n        for (i=0; i &lt; (totalDigits - input.length); i++) \n        { \n            result = '0' + result; \n        } \n    } \n    return result;\n}\n</code></pre>\n\n<p>But it won't make life easier. C# has a method like PadLeft and PadRight in the String class, unfortunately Javascript doesn't have this functionality build-in</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How about something like this:</p>\n\n<pre><code>function prefixZeros(number, maxDigits) \n{  \n    var length = maxDigits - number.toString().length;\n    if(length &lt;= 0)\n    \treturn number;\n\n    var leadingZeros = new Array(length + 1);\n    return leadingZeros.join('0') + number.toString();\n}\n//Call it like prefixZeros(100, 5); //Alerts 00100\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A funny (but interesting) way to prefix numbers with zeros:</p>\n\n<pre><code>function FormatInteger(num, length) {\n\n    return (num / Math.pow(10, length)).toFixed(length).substr(2);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>A \"while\" loop should make this easy enough.  </p>\n\n<pre><code>function formatLength(a) {\n    var num = document.getElementById(a)\n    while (num.value.length &lt; 4) {\n        num.value = '0' + num.value\n    }\n}\n</code></pre>\n\n<p>That would loop through until the length of the num value reached 4 digits (assuming you have passed in the id of the number element as an argument)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I ran into much the same problem and I found a compact way to solve it.  If I had to use it multiple times in my code or if I was doing it for any more than four digits, I'd use one of the other suggested solutions, but this way lets me put it all in an expression:</p>\n\n<pre><code>((x&lt;10)?\"000\": (x&lt;100)?\"00\": (x&lt;1000)?\"0\": \"\") + x\n</code></pre>\n\n<p>It's actually the same as your code, but using the ternary operator instead of \"if-else\" statements (and moving the \"+ x\", which will always be part of the expression, outside of the conditional code).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a number in Javascript, that I know is less than 10000.  I want to display it as a four-digit number, with leading zeroes.  Is there anything more elegant than the following?</p>\n\n<pre><code>if(num&lt;10) num=\"000\"+num;\nelse if(num&lt;100) num=\"00\"+num;\nelse if(num&lt;1000) num=\"0\"+num;\n</code></pre>\n\n<p>I want something that is built into Javascript, but I can't seem to find anything.</p>\n",
            "last_activity_date": 1406684541,
            "question_id": 1127905,
            "score": 12,
            "tags": [
                "javascript",
                "formatting"
            ],
            "title": "How can I format an integer to a specific length in javascript?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>That inline C# has to be processed by the server in order to make sense. Naturally, it won't work with a just-plain-JavaScript file.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>when you have C# code in a separate file and include it in your View the Server does not process the code, the script file will be called by the browser and the inline script would be treated as plain string </p>\n\n<p>alternatively you can try script runat=server when including you script file but I am not sure about the effects of this</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>.aspx files are the view files of MVC framework. The framework only renders the views and partial views. I do not think there would exist a way to use server-side code inside javascript files.</p>\n\n<p>You can include your message in a hidden field</p>\n\n<pre><code>&lt;%-- This goes into a view in an .aspx --%&gt;\n&lt;%= Html.Hidden(\"MyMessage\", ViewData[\"Message\"]) %&gt;\n</code></pre>\n\n<p>and use that inside your javascript file:</p>\n\n<pre><code>// This is the js file\n$(document).ready(function() {\n    alert($(\"#MyMessage\").attr(\"value\"));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As others have said, the C# is not being processed by the server.</p>\n\n<p>A possible solution would be to have a separate view that uses the same model and outputs the JavaScript, then reference that view in your <code>&lt;script type=\"text/javascript\" src=\"yourJSview.aspx\"&gt;&lt;/script&gt;</code>.</p>\n\n<p>Added as per <a href=\"http://stackoverflow.com/questions/1045451/using-inline-c-inside-javascript-file-in-mvc-framework/1045499#1045499\">SLaks' answer</a>:</p>\n\n<p>Set the content-type to <code>text/javascript</code>, and put your JavaScript source <strong>directly</strong> below the <code>&lt;%@ Page</code> directive (without a <code>&lt;script&gt;</code> tag).</p>\n\n<p>Beware that you won't get any IntelliSense for it in VS.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Your web server does not process .js files, it only serves them to the client.  This is in contrast to .aspx or other ASP.NET file types.  These files are interpreted by your server before they are served up to the client.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could make an ASPX view that renders JavaScript.</p>\n\n<p>Set the content-type to <code>text/javascript</code>, and put your JavaScript source <b>directly</b> below the <code>&lt;%@ Page</code> directive (without a <code>&lt;script&gt;</code> tag).</p>\n\n<p>Beware that you won't get any IntelliSense for it in VS.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I agree with Serhat.  It's best to render an HTML Hidden field, or, as Al mentioned, go to a URL for it.  This can be done through a Web Service or even an IHttpHandler implementation.  Then you could use a url such as \"messages.axd?id=17\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To add to Grant <a href=\"http://stackoverflow.com/questions/1045451/using-inline-c-inside-javascript-file-in-mvc-framework/1045499#1045493\">Wagner's answer</a> and <a href=\"http://stackoverflow.com/questions/1045451/using-inline-c-inside-javascript-file-in-mvc-framework/1045499#1045499\">SLaks's answer</a>, you can actually fool Visual Studio into giving you IntelliSense in his solution like so:</p>\n\n<pre><code>&lt;%if (false) {%&gt;&lt;script type=\"text/javascript\"&gt;&lt;%} %&gt;\n// your javascript here\n&lt;%if (false) {%&gt;&lt;/script&gt;&lt;%} %&gt;\n</code></pre>\n\n<p>In his solution it is required that when it renders to the page that there be no <code>&lt;script&gt;</code> tags, but that has a side effect that turns off JavaScript IntelliSense in Visual Studio.  With the above, Visual Studio will give you IntelliSense, and at the same time not render the <code>&lt;script&gt;</code> tags when executed.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is an old question, but for those who stumble upon in through google in the future, the best solution is to use data-* attributes to pass in the variables. A hidden element could be used, but you might as well use the <code>&lt;script&gt;</code> tag itself, and give it a unique ID.</p>\n\n<p>A full example is answered here: <a href=\"http://stackoverflow.com/a/18993844/1445356\">http://stackoverflow.com/a/18993844/1445356</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to get inline C# to work in my JavaScript files using the MVC Framework. I made this little test code up. </p>\n\n<pre><code>$(document).ready(function() {\n    alert(&lt;%= ViewData[\"Message\"] %&gt;);\n});\n</code></pre>\n\n<p>When this code is used inside of the view it works perfectly. When I get outside of my aspx view and try this in a JavaScript file I get illegal XML character. I figure this is by design in the MVC Framework but I haven't been able to find any material on this on the web.</p>\n\n<p>Has anyone gotten inline C# to work in JavaScript files using the MVC Framework? </p>\n",
            "last_activity_date": 1401815907,
            "question_id": 1045451,
            "score": 12,
            "tags": [
                "javascript",
                "asp.net-mvc"
            ],
            "title": "Using Inline C# inside Javascript File in MVC Framework"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use:</p>\n\n<pre><code>var divs = document.getElementsByTagName(\"div\");\nfor(var i = 0; i &lt; divs.length; i++){\n   //do something to each div like\n   divs[i].innerHTML = \"something new...\";\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>To find a property in one or more of all divs on a page:</p>\n\n<pre><code>var divs = document.getElementsByTagName(\"div\"), i=divs.length;\nwhile (i--) {\n   if (divs[i].getAttribute([yourProperty]) === 'yourValue'){\n      //do something\n   } \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You might also be able to use a selector engine such as <a href=\"http://sizzlejs.com/\" rel=\"nofollow\">Sizzle</a>.</p>\n\n<p>Steve</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to go through all the  elements on a page using Javascript and see if they have a property set. Is there an easy way to do this, or do I have to use a recursive solution?</p>\n",
            "last_activity_date": 1422807965,
            "question_id": 844869,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "recursion",
                "iteration"
            ],
            "title": "Iterating through all the &lt;div&gt; tags on a page"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It looks like IE is caching the response.  If you either change your calls to POST methods, or send the appropriate headers to tell IE not to cache the response, it should work.</p>\n\n<p>The headers I send to be sure it doesn't cache are:</p>\n\n<pre><code>Pragma: no-cache\nCache-Control: no-cache\nExpires: Fri, 30 Oct 1998 14:19:41 GMT\n</code></pre>\n\n<p>Note the expiration date can be any time in the past.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This happens because Internet Explorer ignores the no-cache directive, and caches the results of ajax calls.  Then, if the next request is identical, it will just serve up the cached version.  There's an easy workaround, and that is to just append random string on the end of your query.</p>\n\n<pre><code> xmlHttp.open(\"GET\",\"blurb.php?\"+Math.random();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>The problem is that IE does wacky things when the response handler is set before <code>open</code> is called.  You aren't doing that for the first xhr request, but since you reuse the xhr object, when the second open is called, the response handler is already set.  That may be confusing, but the solution is simple.  Create a new xhr object for each request:</p>\n\n<p>move the: </p>\n\n<pre><code>var xmlHttp = new XMLHttpRequest();\n</code></pre>\n\n<p>inside the select function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>xmlHttp.open(\"GET\",\"blurb.php?\"+Math.random();</p>\n</blockquote>\n\n<p>I agree with this one.. it works perfectly as a solution to this problem.\nthe problem is that IE7's caching of urls were terrible, ignoring the no-cache header and save the resource to its cache using its url as key index, so the best solution is to add a random parameter to the GET url.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Read No Problems section in [link text][1]  [1]: <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\" rel=\"nofollow\">http://en.wikipedia.org/wiki/XMLHttpRequest</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The response header that has worked best for me in the IE AJAX case is <code>Expires: -1</code>, which is probably not per spec but mentioned in a Microsoft Support Article (<a href=\"http://support.microsoft.com/kb/234067\" rel=\"nofollow\">How to prevent caching in Internet Explorer</a>).  This is used in conjunction with <code>Cache-Control: no-cache</code> and <code>Pragma: no-cache</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In jQuery.ajax, you can set the \"cache\" setting to false:</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">http://api.jquery.com/jQuery.ajax/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using Dojo, this can be done using <code>dojo.date.stamp</code>, just adding the following to the url: </p>\n\n<pre><code>\"...&amp;amp;ts=\" + dojo.date.stamp.toISOString(new Date())\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm writing an application and I'm trying to tie simple AJAX functionality in. It works well in Mozilla Firefox, but there's an interesting bug in Internet Explorer: Each of the links can only be clicked once. The browser must be completely restarted, simply reloading the page won't work. I've written a <a href=\"http://static.stillinbeta.com/page/\">very simple example application</a> that demonstrates this.</p>\n\n<p>Javascript reproduced below:</p>\n\n<pre><code>var xmlHttp = new XMLHttpRequest();\n\n/*\nitem: the object clicked on\ntype: the type of action to perform (one of 'image','text' or 'blurb'\n*/\nfunction select(item,type)\n{\n\n\t//Deselect the previously selected 'selected' object\n\tif(document.getElementById('selected')!=null)\n\t{\n\t\tdocument.getElementById('selected').id = '';\n\t}\n\t//reselect the new selcted object\n\titem.id = 'selected';\n\n\t//get the appropriate page\n\tif(type=='image')\n\t\txmlHttp.open(\"GET\",\"image.php\");\n\telse if (type=='text')\n\t\txmlHttp.open(\"GET\",\"textbox.php\");\n\telse if(type=='blurb')\n\t\txmlHttp.open(\"GET\",\"blurb.php\");\n\n\txmlHttp.send(null);\n\txmlHttp.onreadystatechange = catchResponse;\n\n\treturn false;\n\n}\nfunction catchResponse()\n{\n\tif(xmlHttp.readyState == 4)\n\t{\n\t\tdocument.getElementById(\"page\").innerHTML=xmlHttp.responseText;\n\t}\n\n\treturn false;\n}\n</code></pre>\n\n<p>Any help would be appreciated.</p>\n",
            "last_activity_date": 1351981428,
            "question_id": 244918,
            "score": 12,
            "tags": [
                "javascript",
                "ajax",
                "internet-explorer"
            ],
            "title": "Internet Explorer 7 Ajax links only load once"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Well, all I can see there is that you have two JSON objects, seperated by a comma. If both of them were inside an array (<code>[...]</code>) it would make more sense.</p>\n\n<p>And, if they ARE inside of an array, then you would just be using the standard \"for var i = 0...\" type of loop. As it is, I think it's going to try to retrieve the \"id\" property of the string \"1\", then \"id\" of \"hi\", and so on.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Your JSON should look like this:</p>\n\n<pre><code>var json = [{\n    \"id\" : \"1\", \n    \"msg\"   : \"hi\",\n    \"tid\" : \"2013-05-05 23:35\",\n    \"fromWho\": \"hello1@email.se\"\n},\n{\n    \"id\" : \"2\", \n    \"msg\"   : \"there\",\n    \"tid\" : \"2013-05-05 23:45\",\n    \"fromWho\": \"hello2@email.se\"\n}];\n</code></pre>\n\n<p>You can loop over the Array   like this:</p>\n\n<pre><code>for(var i = 0; i &lt; json.length; i++) {\n    var obj = json[i];\n\n    console.log(obj.id);\n}\n</code></pre>\n\n<p>Or like this (suggested from Eric) be careful with IE support</p>\n\n<pre><code>json.forEach(function(obj) { console.log(obj.id); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p>Your <code>for</code> doesn't seem to be well formatted. and try putting your objects into an array.</p>\n\n<p>I prefer jquery loop syntax:</p>\n\n<pre><code>$(data).each(function(){\n    console.log($(this).id);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Since i already started looking into it:</p>\n\n<pre><code>var data = [{\n    \"id\": \"1\",\n    \"msg\": \"hi\",\n    \"tid\": \"2013-05-05 23:35\",\n    \"fromWho\": \"hello1@email.se\"\n}, {\n    \"id\": \"2\",\n    \"msg\": \"there\",\n    \"tid\": \"2013-05-05 23:45\",\n    \"fromWho\": \"hello2@email.se\"\n}]\n</code></pre>\n\n<p>And this function </p>\n\n<pre><code>var iterateData =function(data){   for (var key in data) {\n       if (data.hasOwnProperty(key)) {\n          console.log(data[key].id);\n       }\n    }};\n</code></pre>\n\n<p>You can call it like this</p>\n\n<pre><code>iterateData(data); // write 1 and 2 to the console\n</code></pre>\n\n<h2>Update after Erics comment</h2>\n\n<p>As <a href=\"http://stackoverflow.com/users/102441/eric\">eric</a> pointed out <a href=\"http://stackoverflow.com/questions/500504/why-is-using-for-in-with-array-iteration-such-a-bad-idea\">a <code>for in</code> loop for an array can have unexpected results</a>. The referenced question has a lengthy discussion about pros and cons. </p>\n\n<h2>Test with for(var i ...</h2>\n\n<p>But it seems that the follwing is quite save:</p>\n\n<pre><code>for(var i = 0; i &lt; array.length; i += 1)\n</code></pre>\n\n<p>Although a test in chrome had the following result</p>\n\n<pre><code>var ar = [];\nar[0] = \"a\"; \nar[1] = \"b\";\nar[4] = \"c\";\n\nfunction forInArray(ar){ \n     for(var i = 0; i &lt; ar.length; i += 1) \n        console.log(ar[i]);\n}\n\n// calling the function\n// returns a,b, undefined, undefined, c, undefined\nforInArray(ar); \n</code></pre>\n\n<h3>Test with <code>.forEach()</code></h3>\n\n<p>At least in chrome 30 this works as expected</p>\n\n<pre><code>var logAr = function(element, index, array) {\n    console.log(\"a[\" + index + \"] = \" + element);\n}\nar.forEach(logAr); // returns a[0] = a, a[1] = b, a[4] = c\n</code></pre>\n\n<h3>Links</h3>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in\" rel=\"nofollow\">see <code>for in</code> at the mdn</a></li>\n<li>the new <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach\" rel=\"nofollow\">forEach</a> method</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Talk%3aJavaScript/Reference/Statements/for...in#note_on_use_with_arrays\" rel=\"nofollow\">a comment that states that array comprehension makes <code>for in</code> less bad</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/1.7#Array_comprehensions_%28Merge_into_Array_comprehensions%29\" rel=\"nofollow\">Array comprehension</a> introduced with javascript 1.7 in firefox 2 (yes 2)</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It must be an array if you want to iterate over it. You're very likely missing <code>[</code> and <code>]</code>.</p>\n\n<pre><code>var x = [{\n    \"id\": \"1\",\n        \"msg\": \"hi\",\n        \"tid\": \"2013-05-05 23:35\",\n        \"fromWho\": \"hello1@email.se\"\n}, {\n    \"id\": \"2\",\n        \"msg\": \"there\",\n        \"tid\": \"2013-05-05 23:45\",\n        \"fromWho\": \"hello2@email.se\"\n}];\n\nvar $output = $('#output');\nfor(var i = 0; i &lt; x.length; i++) {\n    console.log(x[i].id);\n}\n</code></pre>\n\n<p>Check out this jsfiddle: <a href=\"http://jsfiddle.net/lpiepiora/kN7yZ/\" rel=\"nofollow\">http://jsfiddle.net/lpiepiora/kN7yZ/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Its working. I just added square brackets to JSON data. The data is:</p>\n\n<pre><code>var data = [{ \"id\": \"1\",\n\"msg\": \"hi\", \n\"tid\": \"2013-05-05 23:35\", \n\"fromWho\":     \"hello1@email.se\" \n}, \n{ \"id\": \"2\", \n\"msg\": \"there\", \n\"tid\": \"2013-05-05 23:45\", \n\"fromWho\": \"hello2@email.se\"\n}]\n</code></pre>\n\n<p>And loop is:</p>\n\n<pre><code>for (var ke in data) {\n       if (data.hasOwnProperty(ke)) {\n             alert(data[ke].id);\n       }\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's a few problems in your code, first your json must look like :</p>\n\n<pre><code>var json = [{\n\"id\" : \"1\", \n\"msg\"   : \"hi\",\n\"tid\" : \"2013-05-05 23:35\",\n\"fromWho\": \"hello1@email.se\"\n},\n{\n\"id\" : \"2\", \n\"msg\"   : \"there\",\n\"tid\" : \"2013-05-05 23:45\",\n\"fromWho\": \"hello2@email.se\"\n}];\n</code></pre>\n\n<p>Next, you can iterate like this :</p>\n\n<pre><code>for (var key in json) {\nif (json.hasOwnProperty(key)) {\n  alert(json[key].id);\n  alert(json[key].msg);\n}\n}\n</code></pre>\n\n<p>And it gives perfect result.</p>\n\n<p>See the fiddle here : <a href=\"http://jsfiddle.net/zrSmp/\">http://jsfiddle.net/zrSmp/</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>A bit late but i hope i may help others :D</p>\n\n<p>your json has to look like something like Niklas already said. And then here you go:</p>\n\n<pre><code>for(var key in currentObject){\n        if(currentObject.hasOwnProperty(key)) {\n          console.info(key + ': ' + currentObject[key]);\n        }\n   }\n</code></pre>\n\n<p>if you have an Multidimensional array, this is your code: </p>\n\n<pre><code>for (var i = 0; i &lt; multiDimensionalArray.length; i++) {\n    var currentObject = multiDimensionalArray[i]\n    for(var key in currentObject){\n            if(currentObject.hasOwnProperty(key)) {\n              console.info(key + ': ' + currentObject[key]);\n            }\n       }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to loop through the following json array:</p>\n\n<pre><code>{\n    \"id\" : \"1\", \n    \"msg\"   : \"hi\",\n    \"tid\" : \"2013-05-05 23:35\",\n    \"fromWho\": \"hello1@email.se\"},\n    {\n    \"id\" : \"2\", \n    \"msg\"   : \"there\",\n    \"tid\" : \"2013-05-05 23:45\",\n    \"fromWho\": \"hello2@email.se\"}\n</code></pre>\n\n<p>And have tried the following</p>\n\n<pre><code>    for (var key in data) {\n       if (data.hasOwnProperty(key)) {\n          console.log(data[key].id);\n       }\n    }\n</code></pre>\n\n<p>But for some reason i am only getting the first part, id 1 values.</p>\n\n<p>Any ideas?</p>\n",
            "last_activity_date": 1423825329,
            "question_id": 18238173,
            "score": 11,
            "tags": [
                "javascript",
                "json"
            ],
            "title": "JavaScript loop through json array?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://gf3.github.io/sandbox/\" rel=\"nofollow\">http://gf3.github.io/sandbox/</a> - it uses <code>require('child_process')</code> instead of <code>require('vm')</code>.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Under Node.js you may create a sandboxed child process, but you also need to append the code with <code>\"use strict\";</code>, otherwise it is possible to break the sandbox with <code>arguments.callee.caller</code>.</p>\n\n<p>Not sure why you need to send it to the server, because the code may also be executed in a sandboxed web-worker.</p>\n\n<p>Also take a look at my <a href=\"https://github.com/asvd/jailed\" rel=\"nofollow\">Jailed</a> library which simplifies everything just mentioned for both Node.js and web-browser, and additionally provides an opportunity to export a set of functions into the sandbox.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use sandbox support in nodejs with vm.runInContext('js code', context), sample in api documentation:</p>\n\n<p><a href=\"http://nodejs.org/api/vm.html#vm_vm_runincontext_code_context_filename\" rel=\"nofollow\">http://nodejs.org/api/vm.html#vm_vm_runincontext_code_context_filename</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I would like to have the ability to let users submit arbitrary JavaScript code, which is then sent to a Node.JS server and safely executed before the output is sent back to multiple clients (as JSON). The <code>eval</code> function comes to mind, but I know this has multiple security concerns (the user submitted code would be able to access Node's File API, etc). I have seen some projects like Microsoft Web Sandbox and Google Caja which allow execution of sanitized markup and script (for embedding third-party ads on websites), but it seems that these are client-side tools and I'm not sure if they can be safely used within Node.</p>\n\n<p>Is there a standard way to sandbox and execute non-trusted JavaScript in Node, getting the output. Is it a mistake to try and do this server-side?</p>\n\n<p><strong>EDIT:</strong> It's not important that the user be able to leverage the full capabilities of JavaScript, in fact it would be preferable to be able to pick and choose which APIs would be provided to the user code.</p>\n\n<p><strong>EDIT:</strong> I am going to go ahead and update with what I found. This Sandcastle module (<a href=\"https://github.com/bcoe/sandcastle\"><strong><code>bcoe/sandcastle</code></strong></a>) seems to aim to do what I have in mind. Not sure how secure it is, but since I this is not for anything too important I think I'll if try it. I'll add my own answer if I'm able to successfully do this.</p>\n",
            "last_activity_date": 1421175986,
            "question_id": 17513212,
            "score": 11,
            "tags": [
                "javascript",
                "node.js",
                "eval",
                "sandbox",
                "sanitize"
            ],
            "title": "Safely sandbox and execute user submitted JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You should use constant for that, because it's the only thing you can inject in the config phase other than providers.</p>\n\n<pre><code>angular.module(\"yourModule\").constant(\"paths\", {\n  base: function(){ ... }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In <code>.config</code> you can only use providers (e.g. <code>$routeProvider</code>). in <code>.run</code> you can only use instances of services (e.g. <code>$route</code>). You have a factory, not a provider. <a href=\"https://gist.github.com/Mithrandir0x/3639232\">See this snippet with the three ways of creating this:  Service, Factory and Provider</a>\nThey also mention this in the angular docs <a href=\"https://docs.angularjs.org/guide/services\">https://docs.angularjs.org/guide/services</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<ol>\n<li>angular.config only accepts Providers</li>\n<li>every service, factory etc are instances of Provider</li>\n</ol>\n\n<p>So to inject a service in config you just need to call the Provider of the service by adding 'Provider' to it's name.</p>\n\n<pre><code>angular.module('myApp')\n  .service('FooService', function(){\n    //...etc\n  })\n  .config(function(FooServiceProvider){\n    //...etc\n  });\n</code></pre>\n\n<p>According to the angularjs Provider <a href=\"https://docs.angularjs.org/guide/providers\" rel=\"nofollow\">documentation</a></p>\n\n<blockquote>\n  <p>... if you define a Factory recipe, an empty Provider type with the $get method set to your factory function is automatically created under the hood.</p>\n</blockquote>\n\n<p>So if you have a factory (or service) such as:</p>\n\n<pre><code>.factory('myConfig', function(){\n  return {\n    hello: function(msg){\n      console.log('hello ' + msg)\n    }\n  }\n})\n</code></pre>\n\n<p>You first need to invoke your factory using the $get method before accessing the returned object:</p>\n\n<pre><code>  .config(function(myConfigProvider){\n     myConfigProvider\n       .$get()\n       .hello('world');\n  });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This <a href=\"https://groups.google.com/forum/#!topic/angular/DZS_YoeCcds\" rel=\"nofollow\">discussion</a> helped me when I was trying to figure out the same thing, basically</p>\n\n<pre><code>$routeProvider.when('/', {\n                templateUrl:'views/main.html',\n                controller:'MainController',\n                resolve: {\n                    recentPosts: ['$q', 'backendService', function($q, backendService){\n                        var deferred = $q.defer();\n                        backendService.getRecentPosts().then(\n                            function(data) {\n                                var result = data.result;\n                                deferred.resolve(result);\n                            },\n                            function(error) {\n                                deferred.reject(error);\n                            }\n                        );\n                        return deferred.promise;\n                    }]\n                }\n            })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Currently in app.js i have the following routes:</p>\n\n<pre><code>var gm = angular.module('gm', ['gm.services','gm.directives','gm.filters','gm.controllers','ngSanitize']);\n\ngm.config(['$routeProvider', 'Path', function($routeProvider, Path) {\n\n    $routeProvider.when('/login', { \n        templateUrl: Path.view('application/authentication/login.html'), \n        controller: 'authController' \n    });\n\n    $routeProvider.when('/dashboard', { \n        templateUrl: Path.view('application/dashboard/index.html'), \n        controller: 'dashboardController' \n    }); \n\n    $routeProvider.otherwise({ \n        redirectTo: '/login'\n    });\n\n}]);\n</code></pre>\n\n<p>Im trying to in in ject the Path dependency as you can see. Although i get an error saying it cant find this provider. I think this is because config module provicers are execued first before anything else. below is my Path provider definition in services.js</p>\n\n<pre><code>gm.factory(\"Path\", function() {\n  return {\n    view: function(path) {\n      return 'app/views/' + path; \n    },\n    css: function(path) {\n      return 'app/views/' + path; \n    },\n    font: function(path) {\n      return 'app/views/' + path; \n    },\n    img: function(path) {\n      return 'app/views/' + path; \n    },\n    js: function(path) {\n      return 'app/views/' + path; \n    },\n    vendor: function(path) {\n      return 'app/views/' + path; \n    },\n    base: function(path) {\n      return '/' + path; \n    }\n  }\n}); \n</code></pre>\n\n<p>how can i inject this provider into a config module?</p>\n",
            "last_activity_date": 1424356333,
            "question_id": 17485900,
            "score": 11,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Injecting Dependencies in config() modules - AngularJS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>It's better to Check it local.<br>\nCheck out the comments and try this: <a href=\"http://jsfiddle.net/BlackSRC/PByjN/5/\" rel=\"nofollow\"><strong>LIVE DEMO</strong></a></p>\n\n<pre><code>var linkClick=false; \ndocument.onclick = function(e)\n{\n    linkClick = true;\n    var elemntTagName = e.target.tagName;\n    if(elemntTagName=='A')\n    {\n        e.target.getAttribute(\"href\");\n        if(!confirm('Are your sure you want to leave?'))\n        {\n           window.location.href = \"http://google.com\";\n           console.log(\"http://google.com\");\n        }\n        else\n        {\n            window.location.href = e.target.getAttribute(\"href\");\n            console.log(e.target.getAttribute(\"href\"));\n        }\n        return false;\n    }\n}\nfunction OnBeforeUnLoad () \n{\n    return \"Are you sure?\";\n    linkClick=false; \n    window.location.href = \"http://google.com\";\n    console.log(\"http://google.com\");\n}\n</code></pre>\n\n<p>And change your html code to this:</p>\n\n<pre><code>&lt;body onbeforeunload=\"if(linkClick == false) {return OnBeforeUnLoad()}\"&gt;\n    &lt;a href=\"http://yahoo.com\"&gt;try it&lt;/a&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This solution works in all cases, using back browser button, setting new url in address bar or use links. \nWhat i have found is that triggering onbeforeunload handler doesn't show the dialog attached to onbeforeunload handler.\nIn this case (when triggering is needed), use a confirm box to show the user message. This workaround is tested in chrome/firefox and IE (7 to 10)</p>\n\n<p><a href=\"http://jsfiddle.net/W3vUB/4/show\" rel=\"nofollow\">http://jsfiddle.net/W3vUB/4/show</a></p>\n\n<p><a href=\"http://jsfiddle.net/W3vUB/4/\" rel=\"nofollow\">http://jsfiddle.net/W3vUB/4/</a></p>\n\n<pre><code>var a, b = false,\n    c = \"http://google.com\";\n\nfunction triggerEvent(el, type) {\n    if ((el[type] || false) &amp;&amp; typeof el[type] == 'function') {\n        el[type](el);\n    }\n}\n\n$(function () {\n    $('a:not([href^=#])').on('click', function (e) {\n        e.preventDefault();\n        if (confirm(\"Do you really want to leave now?\")) c = this.href;\n\n        else c = \"http://google.com\";\n\n        triggerEvent(window, 'onbeforeunload');\n\n    });\n});\n\nwindow.onbeforeunload = function (e) {\n    if (b) return;\n    a = setTimeout(function () {\n        b = true;\n        window.location.href = c;\n        c = \"http://google.com\";\n        console.log(c);\n    }, 500);\n    return \"Do you really want to leave now?\";\n}\nwindow.onunload = function () {\n    clearTimeout(a);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>After playing a while with this problem I did the following. It seems to work but it's not very reliable. The biggest issue is that the timed out function needs to bridge a large enough timespan for the browser to make a connection to the url in the link's href attribute.</p>\n\n<p><a href=\"http://jsfiddle.net/nHhXs/1/\" rel=\"nofollow\">jsfiddle to demonstrate</a>. <em>I used bing.com instead of google.com because of <code>X-Frame-Options: SAMEORIGIN</code></em></p>\n\n<pre><code>var F = function(){}; // empty function\nvar offerUrl = 'http://bing.com';\nvar url;\n\n\nvar handler = function(e) {\n    timeout = setTimeout(function () {\n        console.log('location.assign');\n        location.assign(offerUrl);\n\n    /*\n     * This value makes or breaks it.\n     * You need enough time so the browser can make the connection to\n     * the clicked links href else it will still redirect to the offer url.\n     */\n    }, 1400);\n\n    // important!\n    window.onbeforeunload = F;\n\n    console.info('handler');\n    return 'Do you wan\\'t to leave now?';\n};\n\nwindow.onbeforeunload = handler;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think you're confused about the progress of events, on before unload the page is still interacting, the return method is like a shortcut for return \"confirm()\", the return of the confirm however cannot be handled at all, so you can not really investigate the response of the user and decide upon it which way to go, the response is going to be immediately carried out as \"yes\" leave page, or \"no\" don't leave page...</p>\n\n<p>Notice that you have already changed the source of the url to Google before you prompt user, this action, cannot be undone... unless maybe, you can setimeout to something like 5 seconds (but then if the user isn't quick enough it won't pick up his answer)</p>\n\n<p>Edit: I've just made it a 5000 time lapse and it always goes to Yahoo! Never picks up the google change at all.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Try the <a href=\"http://jsfiddle.net/pb7th/41/\" rel=\"nofollow\">following</a>, (adds a global function that checks the state all the time though).</p>\n\n<pre><code>var redirected=false;\n$(window).bind('beforeunload', function(e){\n    if(redirected)\n        return;\n    var orgLoc=window.location.href;\n    $(window).bind('focus.unloadev',function(e){\n        if(redirected==true)\n            return;\n        $(window).unbind('focus.unloadev');\n        window.setTimeout(function(){\n            if(window.location.href!=orgLoc)\n                return;\n            console.log('redirect...');\n            window.location.replace('http://google.com');\n        },6000);\n        redirected=true;\n    });\n    console.log('before2'); \n    return \"okdoky2\";\n});\n\n$(window).unload(function(e){console.log('unloading...');redirected=true;});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Rewriting the question - </p>\n\n<p>I am trying to make a page on which if user leave the page (either to other link/website or closing window/tab) I want to show the <code>onbeforeunload</code> handeler saying <code>we have a great offer for you?</code> and if user choose to <code>leave the page</code> it should do the normal propogation but if he choose to <code>stay on the page</code> I need him to redirect it to offer page <code>redirection is important, no compromise</code>. For testing lets redirect to <code>google.com</code></p>\n\n<p>I made a program as follows - </p>\n\n<pre><code>var stayonthis = true;\n  var a;\n  function load() {\n   window.onbeforeunload = function(e) {\n        if(stayonthis){\n         a = setTimeout('window.location.href=\"http://google.com\";',100);\n         stayonthis = false;    \n         return \"Do you really want to leave now?\";\n        }\n        else {\n            clearTimeout(a);\n        }\n\n    };\n    window.onunload = function(e) {\n         clearTimeout(a);\n    };\n  }\n  window.onload = load;\n</code></pre>\n\n<p>but the problem is that if he click on the link to <code>yahoo.com</code> and choose to <code>leave the page</code> he is not going to yahoo but to google instead :(</p>\n\n<p>Help Me !! Thanks in Advance</p>\n\n<p><a href=\"http://jsfiddle.net/pb7th/\"><strong>here is the fiddle code</strong></a> </p>\n\n<p><a href=\"http://fiddle.jshell.net/pb7th/show/\"><strong>here how you can test because onbeforeunload does not work on iframe well</strong></a> </p>\n",
            "last_activity_date": 1370448540,
            "question_id": 16695886,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "using onbeforeunload event, url change on selecting stay on this page"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Using just jQuery and common Javascript:</p>\n\n<p><a href=\"http://odoepner.wordpress.com/2012/04/09/export-to-html-table-as-csv-file-using-jquery/\">export-to-html-table-as-csv-file-using-jquery</a></p>\n\n<p>Put this code into a script section into a common HTML head include file:</p>\n\n<pre><code> $(document).ready(function () {\n    $('table').each(function () {\n        var $table = $(this);\n\n        var $button = $(\"&lt;button type='button'&gt;\");\n        $button.text(\"Export to spreadsheet\");\n        $button.insertAfter($table);\n\n        $button.click(function () {\n            var csv = $table.table2CSV({\n                delivery: 'value'\n            });\n            window.location.href = 'data:text/csv;charset=UTF-8,' \n            + encodeURIComponent(csv);\n        });\n    });\n})\n</code></pre>\n\n<p>Note:</p>\n\n<p>Requires <code>JQuery</code> and <code>table2CSV</code> (i.e. put script references before the script above) \u201ctable\u201d selector is a JQuery selector and can be adjusted to suit your needs </p>\n\n<p>Only works in browsers with full \u201cData URI\u201d support <code>(Firefox, Chrome, Opera)</code> but not in IE (which only supports Date URIs for embedding binary image data into a page).</p>\n\n<p>For full browser compatibility you would have to use a slightly different approach that requires a server side script (e.g. a Java Servlet) to \u201cecho\u201d the CSV. Maybe I will blog about that in another post.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You don't need PHP script on server side. Do that in the client side only, in browsers that accept <a href=\"http://en.wikipedia.org/wiki/Data_URI\" rel=\"nofollow\">Data URIs</a>:</p>\n\n<pre><code>data:application/csv;charset=utf-8,content_encoded_as_url\n</code></pre>\n\n<p>The Data URI will be something like:</p>\n\n<pre><code>data:application/csv;charset=utf-8,Col1%2CCol2%2CCol3%0AVal1%2CVal2%2CVal3%0AVal11%2CVal22%2CVal33%0AVal111%2CVal222%2CVal333\n</code></pre>\n\n<p>You can call this URI by:</p>\n\n<ul>\n<li>using <code>window.open</code> </li>\n<li>or setting the <code>window.location</code></li>\n<li>or by the href of an anchor</li>\n<li>by adding the download attribute it will work in chrome, still have to test in IE. </li>\n</ul>\n\n<p>To test, simply copy the URIs above and paste in your browser address bar. Or test the anchor below in a HTML page:</p>\n\n<pre><code>&lt;a download=\"somedata.csv\" href=\"data:application/csv;charset=utf-8,Col1%2CCol2%2CCol3%0AVal1%2CVal2%2CVal3%0AVal11%2CVal22%2CVal33%0AVal111%2CVal222%2CVal333\"&gt;Example&lt;/a&gt;\n</code></pre>\n\n<p>To create the content, getting the values from the table, you can use <a href=\"http://www.kunalbabre.com/projects/table2CSV.php\" rel=\"nofollow\">table2CSV</a> mentioned by <a href=\"http://stackoverflow.com/a/15554192/439171\">MelanciaUK</a> and do:</p>\n\n<pre><code>var csv = $table.table2CSV({delivery:'value'});\nwindow.location.href = 'data:application/csv;charset=UTF-8,' + encodeURIComponent(csv);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is a very easy free and open source solution at <a href=\"http://jordiburgos.com/post/2014/excellentexport-javascript-export-to-excel-csv.html\" rel=\"nofollow\">http://jordiburgos.com/post/2014/excellentexport-javascript-export-to-excel-csv.html</a></p>\n\n<p>First download the javascript file and sample files from <a href=\"https://github.com/jmaister/excellentexport/releases/tag/v1.4\" rel=\"nofollow\">https://github.com/jmaister/excellentexport/releases/tag/v1.4</a></p>\n\n<p>The html page looks like below. </p>\n\n<p>Make sure the the javascript file is in the same folder or change the path of the script in the html file accordingly.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Export to excel test&lt;/title&gt;\n    &lt;script src=\"excellentexport.js\"&gt;&lt;/script&gt;\n    &lt;style&gt;\n        table, tr, td {\n            border: 1px black solid;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;ExcellentExport.js&lt;/h1&gt;\n\n    Check on &lt;a href=\"http://jordiburgos.com\"&gt;jordiburgos.com&lt;/a&gt; and  &lt;a href=\"https://github.com/jmaister/excellentexport\"&gt;GitHub&lt;/a&gt;.\n\n    &lt;h3&gt;Test page&lt;/h3&gt;\n\n    &lt;br/&gt;\n\n    &lt;a download=\"somedata.xls\" href=\"#\" onclick=\"return ExcellentExport.excel(this, 'datatable', 'Sheet Name Here');\"&gt;Export to Excel&lt;/a&gt;\n    &lt;br/&gt;\n\n    &lt;a download=\"somedata.csv\" href=\"#\" onclick=\"return ExcellentExport.csv(this, 'datatable');\"&gt;Export to CSV&lt;/a&gt;\n    &lt;br/&gt;\n\n    &lt;table id=\"datatable\"&gt;\n        &lt;tr&gt;\n            &lt;th&gt;Column 1&lt;/th&gt;\n            &lt;th&gt;Column \"cool\" 2&lt;/th&gt;\n            &lt;th&gt;Column 3&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;100,111&lt;/td&gt;\n            &lt;td&gt;200&lt;/td&gt;\n            &lt;td&gt;300&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;400&lt;/td&gt;\n            &lt;td&gt;500&lt;/td&gt;\n            &lt;td&gt;600&lt;/td&gt;\n        &lt;/tr&gt;\n        &lt;tr&gt;\n            &lt;td&gt;Text&lt;/td&gt;\n            &lt;td&gt;More text&lt;/td&gt;\n            &lt;td&gt;Text with\n                new line&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n\n<p>It is very easy to use this as I have tried most of the other methods.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to add a feature of csv download option in my website. It should convert the html table present in the website in to csv content and make it downloadable. Ive been searching through internet for a good plugin and found some usefule ones like <a href=\"http://www.dev-skills.com/export-html-table-to-csv-file/\">http://www.dev-skills.com/export-html-table-to-csv-file/</a>  But it uses php script to do the download part. I was wondering if there is a pure javascript library available to do this feature using server side softwares like node.js without the use of php??</p>\n",
            "last_activity_date": 1422540020,
            "question_id": 15547198,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "node.js",
                "html-table",
                "export-to-csv"
            ],
            "title": "export html table to csv"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is a great question - but I think your solution may need to be a bit more complex than you are thinking.</p>\n\n<p>In general, the way in which you want to authenticate this kind of scenario is in a 2-stage handshake. The first step is for your application to provide the server a private key (generated by the server, unique to the client application) to authenticate that it is, in fact, a valid client. This is what provides authoritative evidence to your server that the request is coming from software it knows and can trust.</p>\n\n<p>The second step, then, is that when a user goes to log in to your client application, they provide a username / password combination. This information, along with your application key, should all be sent up to the server via SSL.</p>\n\n<p>SSL encrypts the data so that a third-party with a packet-sniffer can't read the data in-transit, and the server does the following:</p>\n\n<ol>\n<li>Checks that the application key is valid.</li>\n<li>Validates that the username exists, and is associated with the application.</li>\n<li>Encrypts the password and tests the encrypted version against the encrypted version in the database, associated with the username.</li>\n<li><strong>IF ALL</strong> of the above-listed checks pass, the server returns a session ID, which can be put into a client-side cookie - and used to re-authenticate the user on each subsequent request. <strong>IF ANY</strong> of the tests fail - the server returns a <code>401: Unauthorized</code> response, or other similar error.</li>\n</ol>\n\n<p>At this point, the client can utilize the returned session ID without having to continue to re-submit the application key.</p>\n\n<p><strong>Your Application</strong></p>\n\n<p>Now, in your case, you may be actually hosting the client/server in the same application and on the same server. In this case - you can generally skip all of the pieces revolving around the private application key - and simply disallow cross-site script requests instead.</p>\n\n<p><em>Why?</em> - because the thing you're really protecting against is the following:</p>\n\n<p>Server A hosts your RESTful API.\nClient's B, C and D host clients which will rely upon Server A's API. What you don't want is for Client E (not your application - and malicious) to be able to access Server A either by bypassing or stealing the credentials of one of the other Clients.</p>\n\n<p>If, however, both client and server are hosted in the same place, and therefore have the same URL - i.e. the RESTful API resides at <code>www.yourdomain.com/api</code> and the client resides at <code>www.yourdomain.com/</code> - you can generally just not allow any AJAX type requests which originate outside of <code>yourdomain.com</code> - and that is your layer of security.</p>\n\n<p>In this case, the following is all you should need to do to have a reasonable level of security:</p>\n\n<ol>\n<li>Enable SSL for your server.</li>\n<li>Only allow requests to <code>/auth/login</code> (or whatever your login <code>POST</code> method is) to come via SSL (in C# this can be done by using the <code>[RequireHttps]</code> attribute on the method or controller).</li>\n<li>Reject any AJAX requests which originate outside your own domain.</li>\n<li>Use a layer of encryption in your cookie.</li>\n</ol>\n\n<p><em>What should your cookie contain?</em></p>\n\n<p>Ideally, the cookie should contain 2-way encrypted data that ONLY your server can decrypt. In other words - you might put something like the user's <code>username</code> or <code>user_id</code> inside the cookie - but 2-way encrypt it using Rijndael or another cryptography system - using an encryption password that only your server has access to (I suggest a random string of characters).</p>\n\n<p>Then - when you receive subsequent requests with the cookie attached, you can simply do the following:</p>\n\n<ol>\n<li>If the cookie exists, attempt to decrypt it using your private password.</li>\n<li>If the resulting decrypted data is garbage - throw a <code>401: Unauthorized</code> response (this is an altered or fake cookie)</li>\n<li>If the resulting decrypted data is a username which matches your database - you now know who is making the request - and can filter / serve them data accordingly.</li>\n</ol>\n\n<p>I hope this helps. :) If not - feel free to post any comments and ask questions, and I'll try to clarify.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Is this not as simple as MACing the request to the web service?</p>\n\n<p>So, you're providing the JavaScript that calls the web service, within this JavaScript you put a nonce. Unlike most nonce implementations, you have this live for the duration of the user session.</p>\n\n<p>When calling the web service, the JavaScript in GetWidgets() uses the nonce as the key to hash some 'random' data, I'd probably use the time formatted as a string and the data, the user's id (12345) as the salt. The JavaScript then sends the hashed data and the unhashed time string as part of the web service call, but not the nonce. I'd then ensure the time that was sent was recent (i.e. last 20 seconds, limiting replay attacks) and that when the server hashes the time with the user id as salt with the nonce (that it knows because it set it) that it gets the same result.</p>\n\n<p>So, we've used a shared key set by the server and sent to the client to act as the key for producing a hashed message authorization code (MAC or HMAC) but also prevented replay attacks (the MAC will be different for each request and has a very short replay window) and preventing session hijacking by not transferring any session information in cookies.</p>\n\n<hr>\n\n<p>I've not come across your specific scenario before, but it does seem like a specific case of a generic problem of authenticating messages without wanting to send credentials with every message. MACing is reliably how I've seen this done.</p>\n\n<p>See: <a href=\"http://en.wikipedia.org/wiki/Message_authentication_code\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Message_authentication_code</a>, this gives a good overview on MACing and even includes a nice diagram to help explain. It's a fairly well trodden solution, the only deviation I'd recommend (because I've fallen foul of it) is to include the time in the message to prevent replays.</p>\n\n<p>It's the basis of the approach used by Last.fm to help authorize access to their API, see part 8 on this page (Signing Calls): <a href=\"http://www.last.fm/api/authspec#8\" rel=\"nofollow\">http://www.last.fm/api/authspec#8</a>. The Hash they're using is MD5, the querystring is being included in the body text to be hashed and the secret being used a session key obtained from an initial authenticate call.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I don't know much about security, but i think it all depends on how much time/cost you are willing to spend (keeping in mind that everything is hackable).</p>\n\n<p>As concerned of security as you are, you probably protected your session variables, the easiest thing you can do is an ajax call to a server action in which you check for the session and compare it with user request. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am currently creating a website which users can view and modify their widgets. All interation with the widget data stored on my server will be done through RESTful web services. For example, if a user wants to see a list of their widgets the flow of execution would be something like:</p>\n\n<ol>\n<li>User 12345 accesses <code>https://www.example.com/Login.htm</code> and authenticates with the server (in my case through an OpenID provider)</li>\n<li>User 12345 then accesses the page <code>https://www.example.com/Widgets.htm</code></li>\n<li>Server responds with an HTML page and javascript that will be used to access my web services.</li>\n<li>When the HTML page has loaded the javascript function <code>getWidgets()</code> will be called. <code>getWidgets()</code> will call my web service <code>https://www.example.com/Services/Widget/12345</code></li>\n<li>The service responds with a list of the users widgets which another javascript function <code>renderWidgets(widgets)</code> will update the html page</li>\n</ol>\n\n<p>I don't want anyone else but user 12345 accessing their own widgets so I guess <code>getWidgets()</code> will have to provide some authentication to my web service. I'm not sure what the best way would be to achieve this.</p>\n\n<p>I was thinking that the client and server could have a shared secret that <code>getWidgets()</code> will send to the web service. The server could generate this secret as random string (number, GUID or whatever) and include it in the response header when the client requests the initial HTML page. The client would use this secret key when sending requests to the server. </p>\n\n<p>Does this sound like a sensible idea?</p>\n\n<p>This is a common requirement so is there a standard way of achieving the same thing? As far as I am aware this is outside of the scope of OpenID and OAuth would not be suitable.</p>\n\n<p>Thanks in advance.</p>\n",
            "last_activity_date": 1354457394,
            "question_id": 13186455,
            "score": 11,
            "tags": [
                "javascript",
                "web-services",
                "authentication"
            ],
            "title": "Authentication in RESTful web services"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There doesn't seem to be any yet. See below for something that might help.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/9038231/can-i-read-pdf-or-word-docs-with-node-js\">Can I read PDF or Word Docs with Node.js?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>While there don't seem to be anything you can get with NPM that will do Word directly, you might be able to use a REST API to request it via another cloud service. For example <a href=\"http://saaspose.com/\" rel=\"nofollow\">Saaspose</a> (they of the famous Aspose tools) have public API for <a href=\"http://saaspose.com/api/words\" rel=\"nofollow\">Word</a>, <a href=\"http://saaspose.com/api/cells\" rel=\"nofollow\">Excel</a>, <a href=\"http://saaspose.com/api/pdf\" rel=\"nofollow\">PDF</a>, and others. They list node.js, javascript, and Heroku support on their page.</p>\n\n<p>EDIT: </p>\n\n<p>I see that Saaspose is now called <a href=\"http://www.aspose.com/cloud/total-api.aspx\" rel=\"nofollow\">Aspose for Cloud</a></p>\n\n<p>Another API that claims something similar is <a href=\"http://www.doxument.com/\" rel=\"nofollow\">Doxument</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://github.com/dkiyatkin/node-office\" rel=\"nofollow\">Office</a> package: <code>npm install office</code> seems to provide at least part of the answer. I use it to read Excel files, so far have not tried any Word docs.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm working on a web application where users can upload Microsoft Office Document files. Right now, our server is running Node.JS with Express.js and we're hosted on Heroku. Because of this, I don't think that I can install programs such as abiword or catdoc. I can handle the file uploads, but can't parse the contents of the document. </p>\n\n<p>How can I read the contents of the doc file? The information will then be put into a database. It'd be nice to preserve basic formatting (bold, italic, underline), but not essential.</p>\n",
            "last_activity_date": 1375254799,
            "question_id": 12902792,
            "score": 11,
            "tags": [
                "javascript",
                "node.js",
                "heroku",
                "express",
                "doc"
            ],
            "title": "Parse Microsoft Office files in Node.JS"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><em>No, you cannot be sure. It is asynchronously.</em></p>\n\n<p>But in fact it probably will be true, because of realization of the mechanism in browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, the output will always be <code>\"one two\"</code>.</p>\n\n<p>Because the first <code>setTimeout</code> always runs before the second <code>setTimeout</code>, if they have same delay time, then the callback function of first will always be executed before the callback function of the second.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, because javascript code is executed in one single thread, all asynchronous events, like <code>click</code>, <code>mousemove</code>, are queued to execute. When you call <code>setTimeout</code>, the engine insert a timer into its queue to execute in future, at least after <code>delay</code> time. So the two <code>setTimeout</code> generate two timers, one after another.</p>\n\n<p>You can have a look at <a href=\"http://ejohn.org/blog/how-javascript-timers-work/\" rel=\"nofollow\">How Javascript Timers Work</a> by John Resig.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Play around with this in your fiddle</p>\n\n<pre><code>$(document).ready(function() {\n    setTimeout(function() {\n        $(\"#output\").append(\" one \");\n    }, 1000);\n});\n$(document).ready(function() {\n    setTimeout(function() {\n        $(\"#output\").append(\" two \");\n    }, 999);\n});\u200b\n</code></pre>\n\n<p>And you will see that both </p>\n\n<pre><code>output: one two\noutput: two one\n</code></pre>\n\n<p>are possible. So Speransky is right that you cannot rely on your timeouts executing in the same order always.</p>\n\n<p>Note that I have change one time with 1ms to show that the timeout 1000ms can execute before the 999ms timeout.</p>\n\n<p>EDIT: The below code can delay execution without any chance of <code>two</code> to be printed before <code>one</code></p>\n\n<pre><code>function(){\n    setTimeout(function() {\n        $(\"#output\").append(\" one \");\n       setTimeout(function() {\n           $(\"#output\").append(\" two \");\n       }, 100);\n    }, 1000);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong>Update</strong><br>\nI've updated your fiddle with this method. <a href=\"http://jsfiddle.net/EbzHF/1/\" rel=\"nofollow\">Check it out here</a>  </p>\n\n<p>How about this method -- Get a list of things to do from your server -- </p>\n\n<pre><code>//Example - append one, append two\nvar appendList = ['one', 'two']\n\n//then do this\nappendList.forEach(function(item, index){\n    setTimeout(function(){ \n        $('#output').append(item)\n    }, index * 50 + 1000);\n});\n</code></pre>\n\n<p>This way, you decide the sequence.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If events are synchronous, there is the <code>Continuum</code> function to run functions in sequence:</p>\n\n<pre><code>function keyedSequence(key, fn) {\n  fn = fn || this;\n  key.push({fn:fn});\n\n  return function() {\n    for(var i=0, n, full=1; i&lt;key.length; i++) {\n      n = key[i];\n      if(n.fn == fn) {\n        if(!n.called) n.called = 1, n.args = key.slice.call(arguments);\n        if(!full) break\n      }\n      if(!n.called) full = 0\n    }\n\n    if(full) for(i=0; i&lt;key.length; i++)\n      n = key[i], key[i] = {fn:n.fn}, n.fn.apply(n, n.args);\n  }\n}\nFunction.prototype.seq = keyedSequence;\n</code></pre>\n\n<p>You provide an empty array as the key. Functions keyed with the same key will be grouped together.</p>\n\n<pre><code>window.onload = function() {\n  var key = [];\n  document.getElementById(\"test1\").addEventListener('click', function1.seq(key), false);\n  document.getElementById(\"test2\").addEventListener('click', function2.seq(key), false);\n}\n</code></pre>\n\n<p>Click <code>test2</code>, then click <code>test1</code> and order of execution is still <code>function1</code> then <code>function2</code>.</p>\n\n<p>Another way of calling it is:</p>\n\n<pre><code>window.onload = function() {\n  var key = [];\n  document.getElementById(\"test1\").addEventListener('click', keyedSequence(key, function1), false);\n  document.getElementById(\"test2\").addEventListener('click', keyedSequence(key, function2), false);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The Spec is <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout\">here</a>.</p>\n\n<p>My interpretation of <code>setTimeout</code> step 8 in section 7.3 is that the execution order <em>is</em> supposed to be guaranteed.</p>\n\n<p>However, I investigated this issue because when the window is minimized and then maximised in Chrome, I was finding that timeouts set in events coming from external sources (like websockets or webworkers) were being executed in the wrong order.  I assume this is a browser bug and will hopefully be fixed soon.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>Consider the following Javascript code:</p>\n\n<pre><code>function(){\n    setTimeout(function() {\n        $(\"#output\").append(\" one \");\n    }, 1000);\n    setTimeout(function() {\n        $(\"#output\").append(\" two \");\n    }, 1000);\n}\n</code></pre>\n\n<p>You can also see this example on <a href=\"http://jsfiddle.net/EbzHF/\" rel=\"nofollow\">jsfiddle</a>. </p>\n\n<p>Can I be sure that the value of <code>#output</code> is always <code>\"one two\"</code>, in that order? Usually, I would handle this problem like this:</p>\n\n<pre><code>function(){\n    setTimeout(function() {\n        $(\"#output\").append(\" one \");\n        $(\"#output\").append(\" two \");\n    }, 1000));\n}\n</code></pre>\n\n<p>But I can not do it that way because I get messages from a server which tells me which function to execute (in this example append <code>\"one\"</code> or append <code>\"two\"</code>), which I have to execute with a small delay.</p>\n\n<p>I already tested this code in Internet Explorer 9, Firefox 14, Chrome 20 and Opera 12, and the output was always <code>\"one two\"</code>, but can I be sure that this will always be the case?</p>\n",
            "last_activity_date": 1375940146,
            "question_id": 11771558,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "Execution order of multiple setTimeout() functions with same interval"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can call \"<strong>stop</strong>\" over <strong>MediaStream</strong> object <em>which is going to be obsolete</em>; new proposal is to release media tracks by calling \"<strong>stop</strong>\" over each media track:</p>\n\n<pre><code>mediaStream.stop();\n\n// or\nmediaStream.getAudioTracks()[0].stop();\nmediaStream.getVideoTracks()[0].stop();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>navigator.getUserMedia</code> provides you with a stream in the success callback, you can call <code>.stop()</code> on that stream to stop the recording (at least in Chrome, seems FF doesn't like it)</p>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>Starting Webcam Video with different browsers</p>\n\n<p>For Opera 12</p>\n\n<pre><code>window.navigator.getUserMedia(param, function(stream) {\n                            video.src =window.URL.createObjectURL(stream);\n                        }, videoError );\n</code></pre>\n\n<p>For Firefox Nightly 18.0</p>\n\n<pre><code>window.navigator.mozGetUserMedia(param, function(stream) {\n                            video.mozSrcObject = stream;\n                        }, videoError );\n</code></pre>\n\n<p>For Chrome 22</p>\n\n<pre><code>window.navigator.webkitGetUserMedia(param, function(stream) {\n                            video.src =window.webkitURL.createObjectURL(stream);\n                        },  videoError );\n</code></pre>\n\n<p>Stopping Webcam Video with different browsers</p>\n\n<p>For Opera 12</p>\n\n<pre><code>video.pause();\nvideo.src=null;\n</code></pre>\n\n<p>For Firefox Nightly 18.0</p>\n\n<pre><code>video.pause();\nvideo.mozSrcObject=null;\n</code></pre>\n\n<p>For Chrome 22</p>\n\n<pre><code>video.pause();\nvideo.src=\"\";\n</code></pre>\n\n<p>With this the Webcam light go down everytime...</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can end the stream directly using the stream object returned in the success handler to getUserMedia. e.g. </p>\n\n<pre><code>localMediaStream.stop()\n</code></pre>\n\n<p><code>video.src=\"\"</code> or <code>null</code> would just remove the source from video tag. It wont release the hardware.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Using .stop() on the stream works on chrome when connected via http. It does not work when using ssl (https).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I opened a webcam by using the following JavaScript code: <code>navigator.getUserMedia</code> </p>\n\n<p>Is there any JavaScript code to stop or close the webcam? Thanks everyone.</p>\n",
            "last_activity_date": 1415524756,
            "question_id": 11642926,
            "score": 11,
            "tags": [
                "javascript",
                "html5",
                "html5-video",
                "webrtc"
            ],
            "title": "Stop/Close webcam which is opened by navigator.getUserMedia"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't see how:</p>\n\n<pre><code>var a = {};\na.__proto__ = A; // A is object because no constructor is needed\n</code></pre>\n\n<p>Is simpler than:</p>\n\n<pre><code>var a = new A(); // A is Constructor function\n</code></pre>\n\n<p>Now setting up A in the latter case can be more verbose if you don't need a constructor function, but\nin that case you could automate it to be just as simple:</p>\n\n<pre><code>var A = Constructor({\n    method: function(){}\n}); // A is function, meant to be used with new\n</code></pre>\n\n<p>Compared to:</p>\n\n<pre><code>var A = {\n    method: function(){}\n}; //A is object, meant to be set as __proto__\n</code></pre>\n\n<p>And if you need some initialization logic, it will probably end up being easier just to use\nthe normal way where the constructor function needs to be declared anyway</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think the actual point Mozilla wanted to make is that it's nonstandard, so the implementors would be perfectly within their rights removing it.</p>\n\n<p>The cleaner way to do prototype chains is <code>Object.create</code>. The equivalent of your code, to create an object <code>a</code> with the prototype <code>{'a': 'test'}</code>, is:</p>\n\n<pre><code>a = Object.create({'a':'test'})\n</code></pre>\n\n<p>There are also shims to mimic this function in browsers that don't support it, if you ever need to work with one, which is another advantage over directly messing around with <code>__proto__</code>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>Note:</strong> It's considered a bad practice to change the value of <code>__proto__</code>. Doing so is strongly discouraged by Brendan Eich, the creator of JavaScript, amongst others. In fact the <code>__proto__</code> property has been removed entirely from a few JavaScript engines like Rhino. If you wish to know why then read the <a href=\"http://brendaneich.com/2011/01/harmony-of-my-dreams/#div-comment-6121\">following comment</a> by Brendan Eich.</p>\n\n<p>Browsers are not going to remove the <code>__proto__</code> property. Even when the <a href=\"http://wiki.ecmascript.org/doku.php\">ECMAScript Harmony</a> standard is widely implemented browsers will still support <code>__proto__</code> property in current versions for backward compatibility.</p>\n\n<p>When a certain feature is decprecated it means that it's not recommended to use that feature anymore as it's no longer being developed or supported. However you may still use it if you wish to. Later versions of the software may not support it at all, but backward compatibility will be maintained for current versions.</p>\n\n<p>For JavaScript this means that you may safely use the <code>__proto__</code> property. When a new version of JavaScript releases (JavaScript 2.0) which doesn't support the <code>__proto__</code> property it won't break existing code since you'll have to explicitly mention that your code is JavaScript 2.0 code. Consider:</p>\n\n<pre><code>&lt;script&gt;\n    // JavaScript code which supports __proto__\n&lt;/script&gt;\n\n&lt;script type=\"application/javascript;version=2.0\"&gt;\n    // JavaScript code won't execute in browsers which don't support version 2.0\n    // __proto__ property not supported\n&lt;/script&gt;\n</code></pre>\n\n<p>So as you can see you don't need to worry about your existing code not working one day. Just remember - when you switch to a new version of JavaScript test if your program still works.</p>\n\n<p>Now, for the question at hand. We want to do something similar to this in a standards compliant way:</p>\n\n<pre><code>var a = {\n    b: \"ok\"\n};\n\na.__proto__ = {\n    a: \"test\"\n};\n\nalert(a.a); // alerts test\nalert(a.b); // alerts ok\n</code></pre>\n\n<p>Obviously you can't use <code>Object.create</code> to achieve this end since we are not creating a new object. We are just trying to change the internal <code>[[proto]]</code> property of the given object. The problem is that it's not possible to change the internal <code>[[proto]]</code> property of an object once it's created (except via using <code>__proto__</code> which we are trying to avoid).</p>\n\n<p>So to solve this problem I wrote a simple function (note that it works for all objects except for functions):</p>\n\n<pre><code>function setPrototypeOf(obj, proto) {\n    var type = typeof proto;\n    if (typeof obj == \"object\" &amp;&amp; (type == \"object\" || type == \"function\")) {\n        var constructor = function (obj) {\n            var ownPropertyNames = Object.getOwnPropertyNames(obj);\n            var length = ownPropertyNames.length;\n            for (var i = 0; i &lt; length; i++) {\n                var ownPropertyName = ownPropertyNames[i];\n                this[ownPropertyName] = obj[ownPropertyName];\n            }\n        };\n        constructor.prototype = proto;\n        return new constructor(obj);\n    } else throw new TypeError(\"Expected both the arguments to be objects.\");\n}\n</code></pre>\n\n<p>So we can now change the prototype of any object after it's created as follows (note that we are not actually changing the internal <code>[[proto]]</code> property of the object but instead creating a new object with the same properties as the given object and which inherits from the given prototype):</p>\n\n<pre><code>var a = {\n    b: \"ok\"\n};\n\na = setPrototypeOf(a, {\n    a: \"test\"\n});\n\nalert(a.a); // alerts test\nalert(a.b); // alerts ok\n</code></pre>\n\n<p>Simple and efficient (and we didn't use the <code>__proto__</code> property). I made a <a href=\"http://stackoverflow.com/q/9238737/783743\" title=\"Support for changing the prototype of an object using 'Object.setPrototypeOf'\">proposal</a> to the ECMAScript community to implement a method called <code>setPrototypeOf</code> on <code>Object</code> to ease working with prototypes in JavaScript. You may support this proposal if you wish.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>Mozilla claimed it would remove __proto__ a while back (~2008) and it is still in the browser. Is it still going to be deprecated? It works in Opera, (Safari I think) and Chrome as well. I don't need to worry about IE so I would love to keep using it. </p>\n\n<p>However, I don't want my code to stop working one day, so on to my question:</p>\n\n<p>__proto__ allows for dead simple inheritance:</p>\n\n<pre><code>a.__proto__ = {'a':'test'}\n</code></pre>\n\n<p>Is there anyway I can replicate this in a standards compliant way? I know there is functional inheritance, that's ugly, and it over-complicates the fact that I just want to create a prototype chain. Just wondering if any wizards have solved this. </p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1364740788,
            "question_id": 10476560,
            "score": 11,
            "tags": [
                "javascript",
                "prototype-programming"
            ],
            "title": "__proto__, when will it be gone? Alternatives?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't think it's bad. If you have a look at Ruby on Rails, very many native objects are extended with custom functionality and it's a very good framework.</p>\n\n<p>What would be bad is if you <strong>change existing methods</strong> on native objects. this could cause unforseen consequences.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I would stay clear of extending/modifying behavior of native objects.</p>\n\n<p>It at least makes sense when developing in a team environment.</p>\n\n<p>Simply because, months later, another developer writing another independent piece of code isn't immediately going to recognize the changed behavior unless documented somewhere and made aware of it prior to starting his task.</p>\n\n<p>Instead, I suggest encapsulating/\"namespace\"-ing all such functionality such that somebody may chose to or not to use the modified functions.</p>\n\n<p>Also, native objects and their methods are thoroughly tested for wide-ranging cases. So you you'd have to be completely sure of what you're doing before modifying native functionality.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There's a great discussion about this in this video from JSConf 2011 by Andrew Dupont. <a href=\"http://blip.tv/jsconf/jsconf2011-andrew-dupont-everything-is-permitted-extending-built-ins-5211542\" rel=\"nofollow\">http://blip.tv/jsconf/jsconf2011-andrew-dupont-everything-is-permitted-extending-built-ins-5211542</a></p>\n\n<p>Basically the points are:</p>\n\n<ul>\n<li>Don't extend <code>Object.prototype</code></li>\n<li>Some people might like to extend things, some people don't</li>\n<li>You need to know what you're doing</li>\n<li>Don't use two libraries that extend things, because it can be bad</li>\n<li>Extending prototypes to add standard functionality is almost always ok.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I read somewhere that using <code>prototype</code> to extend native objects (<code>String</code>, <code>Number</code>, <code>Array</code>, etc.) was a bad idea. Is this true? Why or why not?</p>\n",
            "last_activity_date": 1370594636,
            "question_id": 10197174,
            "score": 11,
            "tags": [
                "javascript",
                "prototype"
            ],
            "title": "Is using Prototype to extend native objects bad?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>html5shiv basically allows IE to recognize and style HTML5 elements, while Modernizr provides the same plus feature detection supported by a broswer.</p>\n\n<p>So to answer your question HTML5 shiv should be sufficient to recognize HTML5 tags in IE. (note I say IE here since that is what the html5shiv targets, not sure what you mean when you say older browsers)</p>\n\n<p>For the second part, even if you don't want to style the HTML5 tags, I would advice to use the shiv since the browser may either display them incorrectly, or not at all, so it is better to be safe.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>HTML5 Shiv is smaller, and unless you need some of Modernizr's detection functionality, go for the shiv.</p>\n\n<p>The size of the file is very important, since it is always in the head of the html document and blocks the download of additional resources until fully executed. </p>\n\n<p>Since it is only needed for older browsers, I use the following code:</p>\n\n<pre><code>&lt;!--[if lt IE 9]&gt;\n&lt;script src=\"http://html5shiv.googlecode.com/svn/trunk/html5.js\"&gt;&lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>You can remove the html tags you don't use, but then you will be unable the use the file hosted at Google.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can alternatively use Modernizr to load a particular file if browser supports that particular CSS or HTML5 features.    </p>\n\n<p>Let say if the browser doesn't support 'canvas' as HTML5 element and 'fontface' as CSS3 property </p>\n\n<pre><code>Modernizr.load({\ntest: Modernizr.fontface &amp;&amp; Modernizr.canvas, // Test if the browser supports it or not\nyep : '/path-to/html5-css3-attributes.css',  // If browser supports it, load this file\nnope: '/path-to/old-css-attributes.css' // If NOT, load this instead\n});\n</code></pre>\n\n<p>You can use .js also in your file path condition.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>If I ONLY need older browsers to recognize HTML5 tags, which should I use, <a href=\"http://www.modernizr.com/\">Modernizr</a> or the popular <a href=\"http://code.google.com/p/html5shiv/\">HTML5 shiv</a>?\nAnd also, if I don't need to style this HTML5 tags, do I need the browsers to recognize them anyways? Or is it only necessary when adding CSS to these tags?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1378524719,
            "question_id": 8275580,
            "score": 11,
            "tags": [
                "javascript",
                "internet-explorer",
                "html5",
                "browser"
            ],
            "title": "Modernizr vs HTML shiv"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>document.getElementById(\"placehere\").appendChild(elem);\n</code></pre>\n\n<p>not</p>\n\n<pre><code>document.getElementById(\"placehere\").appendChild(\"elem\");\n</code></pre>\n\n<p>and use the below to set the source</p>\n\n<pre><code>elem.src = 'images/hydrangeas.jpg';\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>It should be:</p>\n\n<pre><code>document.getElementById(\"placehere\").appendChild(elem);\n</code></pre>\n\n<p>And place your div before your javascript, because if you don't, the javascript executes before the div exists. Or wait for it to load. So your code looks like this:</p>\n\n<pre><code>&lt;html&gt;\n\n&lt;body&gt;\n&lt;script type=\"text/javascript\"&gt;\nwindow.onload=function(){\nvar elem = document.createElement(\"img\");\nelem.setAttribute(\"src\", \"http://img.zohostatic.com/discussions/v1/images/defaultPhoto.png\");\nelem.setAttribute(\"height\", \"768\");\nelem.setAttribute(\"width\", \"1024\");\nelem.setAttribute(\"alt\", \"Flower\");\ndocument.getElementById(\"placehere\").appendChild(elem);\n}\n&lt;/script&gt;\n&lt;div id=\"placehere\"&gt;\n\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>To prove my point, see this <a href=\"http://jsfiddle.net/LrEEb/\" rel=\"nofollow\">with the onload</a> and this <a href=\"http://jsfiddle.net/4wFsy/\" rel=\"nofollow\">without the onload</a>. Fire up the console and you'll find an error stating that the div doesn't exist or cannot find appendChild method of null.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function image()\n{\n    //dynamically add an image and set its attribute\n    var img=document.createElement(\"img\");\n    img.src=\"p1.jpg\"\n    img.id=\"picture\"\n    var foo = document.getElementById(\"fooBar\");\n    foo.appendChild(img);\n}\n\n&lt;span id=\"fooBar\"&gt;&amp;nbsp;&lt;/span&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to add an img to the <code>placehere</code> div using JavaScript, however I am having no luck. Can anyone give me a hand with my code?</p>\n\n<pre><code>&lt;html&gt;\n&lt;script type=\"text/javascript\"&gt;\nvar elem = document.createElement(\"img\");\nelem.setAttribute(\"src\", \"images/hydrangeas.jpg\");\nelem.setAttribute(\"height\", \"768\");\nelem.setAttribute(\"width\", \"1024\");\nelem.setAttribute(\"alt\", \"Flower\");\ndocument.getElementById(\"placehere\").appendChild(\"elem\");\n&lt;/script&gt;\n&lt;body&gt;\n\n&lt;div id=\"placehere\"&gt;\n\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1363592798,
            "question_id": 7802744,
            "score": 11,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Adding an img element to a div with javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I don't think you need a library for this. I'd start by trying:</p>\n\n<pre><code>var contextMenu = google.maps.event.addListener(\n        map,\n        \"rightclick\",\n        function( event ) {\n            // use JS Dom methods to create the menu\n            // use event.pixel.x and event.pixel.y \n            // to position menu at mouse position\n            console.log( event );\n        }\n    );\n</code></pre>\n\n<p>This assumes your map was created with:</p>\n\n<pre><code>var map = new google.maps.map( { [map options] } );\n</code></pre>\n\n<p>The <code>event</code> object inside the callback has 4 properties</p>\n\n<ol>\n<li><code>latLng</code></li>\n<li><code>ma</code></li>\n<li><code>pixel</code></li>\n</ol>\n\n<p>where <code>pixel.x</code> and <code>pixel.y</code> are the offset where your click event triggered - counted from the upper left corner of the canvas holding the map object.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I found following URL very useful:</p>\n\n<p><a href=\"http://googleapitips.blogspot.com/2010/06/how-to-add-context-menu-to-google-maps.html\" rel=\"nofollow\">How to add context menu to Google maps</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have created a working JS Fiddle for showing context menu as well as the ability to have clickable items on this context menu.</p>\n\n<p>It shows a clickable Context Menu when a marker is right clicked on Google map.\nBasically it makes use of an OverlayView on map. BTW its just a demo.</p>\n\n<pre><code>var loc, map, marker, contextMenu;\n\nContextMenu.prototype = new google.maps.OverlayView();\n\n/**\n  * onAdd is called when the map's panes are ready and the overlay has been\n  * added to the map.\n  */\nContextMenu.prototype.onAdd = function() {\n\n    $(\"&lt;div id='cMenu' class='context-menu-marker'&gt;&lt;/div&gt;\").appendTo(document.body);\n    var divOuter = $(\"#cMenu\").get(0);\n\n    for(var i=0;i &lt; this.menuItems.length;i++) {\n        var mItem = this.menuItems[i];\n        $('&lt;div id=\"' + mItem.id + '\" class=\"options-marker\"&gt;' +\n          mItem.label + '&lt;/div&gt;').appendTo(divOuter);\n    }\n\n    this.div_ = divOuter;\n\n    // Add the element to the \"overlayLayer\" pane.\n    var panes = this.getPanes();\n    //panes.overlayLayer.appendChild();\n    panes.overlayMouseTarget.appendChild(this.div_);\n\n    var me = this;\n\n    for(var i=0;i &lt; this.menuItems.length;i++) {\n        var mItem = this.menuItems[i];\n\n        var func = function() {\n           me.clickedItem = this.id;\n           google.maps.event.trigger(me, 'click');\n        };\n\n        google.maps.event.addDomListener($(\"#\" + mItem.id).get(0), 'click', $.proxy(func, mItem));\n    }\n\n\n    google.maps.event.addListener(me, 'click', function() {\n       alert(me.clickedItem); \n    });\n\n};\n\nContextMenu.prototype.draw = function() {\n    var div = this.div_;\n    div.style.left = '0px';\n    div.style.top = '0px';\n    div.style.width = '100px';\n    div.style.height = '50px';\n};\n\n// The onRemove() method will be called automatically from the API if\n// we ever set the overlay's map property to 'null'.\nContextMenu.prototype.onRemove = function() {\n    this.div_.parentNode.removeChild(this.div_);\n    this.div_ = null;\n};\n\n// Set the visibility to 'hidden' or 'visible'.\nContextMenu.prototype.hide = function() {\n  if (this.div_) {\n    // The visibility property must be a string enclosed in quotes.\n    this.div_.style.visibility = 'hidden';\n  }\n};\n\nContextMenu.prototype.show = function(cpx) {\n  if (this.div_) {\n    var div = this.div_;\n    div.style.left = cpx.x + 'px';\n    div.style.top = cpx.y + 'px';\n\n    this.div_.style.visibility = 'visible';\n  }\n};\n\nfunction ContextMenu(map,options) {\n    options = options || {}; //in case no options are passed to the constructor\n    this.setMap(map); //tells the overlay which map it needs to draw on\n    this.mapDiv = map.getDiv(); //Div container that the map exists in\n    this.menuItems = options.menuItems || {}; //specific to context menus\n    this.isVisible = false; //used to hide or show the context menu\n}\n\nfunction initialize() {\n\n    loc = new google.maps.LatLng(62.323907, -150.109291);\n\n    var options = {};\n    var menuItems=[];\n\n    menuItems.push({id:\"zoomIn\", className:'context_menu_item', eventName:'zoom_in_click', label:'Zoom in'});\n    menuItems.push({id:\"zoomOut\", className:'context_menu_item', eventName:'zoom_out_click', label:'Zoom out'});\n\n\n    options.menuItems = menuItems;\n    //=========================================\n\n    map = new google.maps.Map(document.getElementById(\"map\"), {\n        zoom: 12,\n        center: loc,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n    });\n\n    marker = new google.maps.Marker({\n        map: map,\n        position: loc,\n        visible: true\n    });\n\n    contextMenu = new ContextMenu(map, options);\n\n    google.maps.event.addListener(marker, 'rightclick', function(mouseEvent){\n        contextMenu.hide();\n        this.clickedMarker_ = this;\n        var overlayProjection = contextMenu.getProjection();\n        var cpx = overlayProjection.fromLatLngToContainerPixel(mouseEvent.latLng);\n        contextMenu.show(cpx);\n\n        map.setOptions({ draggableCursor: 'pointer' });\n    });\n\n    // Hide context menu on several events\n    google.maps.event.addListener(map,'click', function(){\n        map.setOptions({ draggableCursor: 'grab' });\n        contextMenu.hide();\n    });\n\n}\n\ngoogle.maps.event.addDomListener(window, 'load', initialize);\n</code></pre>\n\n<p>Fiddle link:</p>\n\n<p><a href=\"http://jsfiddle.net/jEhJ3/3409/\" rel=\"nofollow\">http://jsfiddle.net/jEhJ3/3409/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am looking for a Google Map V3 context menu library. I have found some code examples here</p>\n\n<ol>\n<li><a href=\"http://justgizzmo.com/wordpress/wp-content/uploads/2010/12/Context-Menu-Demo.html\">Gizzmo's blog</a></li>\n<li><a href=\"http://googleapitips.blogspot.com/p/google-maps-api-v3-context-menu-example.html\">Google API tips</a></li>\n<li><a href=\"http://gmap3.net/examples/context-menu.html\">GMap3</a></li>\n<li><a href=\"http://www.ebenroux.co.za/post/2010/02/09/How-I-got-a-context-menu-onto-my-Google-Maps-API-V3.aspx\">How I got ..</a></li>\n</ol>\n\n<p>Stack overflow question <a href=\"http://stackoverflow.com/questions/1162244/google-maps-v3-contextual-menu-available\">Google maps v3 - Contextual menu available?</a> of April also just came up with the above examples. So did <a href=\"http://stackoverflow.com/questions/6810614/gmap3-adding-a-simple-context-menu\">Gmap3 adding a simple context menu</a> .</p>\n\n<p>But maybe somebody has encapsulated the examples in a reusable library or found something in the meantime. Obviously there was <a href=\"http://gmaps-utility-library-dev.googlecode.com/svn/tags/contextmenucontrol/1.0/docs/examples.html\">something</a> for V2.</p>\n\n<p>-- Updated 2012-05-31 --</p>\n\n<p>I have found another one <a href=\"http://googlemapsmania.blogspot.de/2012/04/create-google-maps-context-menu.html\">http://googlemapsmania.blogspot.de/2012/04/create-google-maps-context-menu.html</a> , but did not have the time to test it yet.</p>\n",
            "last_activity_date": 1412004596,
            "question_id": 7168394,
            "score": 11,
            "tags": [
                "javascript",
                "google-maps-api-3",
                "contextmenu"
            ],
            "title": "Google Map V3 context menu"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Hope this helps.</p>\n\n<p><a href=\"https://developers.facebook.com/docs/reference/javascript/FB.init/\" rel=\"nofollow\">https://developers.facebook.com/docs/reference/javascript/FB.init/</a></p>\n\n<p>From the doc:</p>\n\n<blockquote>\n  <p>This is an option that can help address three specific known issues. First, when auto playing audio/video is involved, the user may hear two streams of audio because the page has been loaded a second time in the background for cross domain communication. Second, if you have frame busting code, then you would see a blank page. Third, this will prevent inclusion of extra hits in your server-side logs. In these scenarios, you may provide the optional channelUrl parameter:</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The channel file is to provide a way to do cross domain communication between FB's servers and your own.  The reason for this is their tight control over access tokens.  You must authenticate a redirect url and app id to retrieve this access token.  In order for them to pass you the token, they hit your URL with the access token in the hash.  With the Channel URL, they get to pass this token to themselves (their JavaScript running on your domain).  </p>\n\n<p>This channel file can then communicate the access token to your active page.</p>\n\n<p>For them to keep all of these things available to only their domain, they need something that works in every browser.  Currently, that is a hack of creating popups that are not accessible by javascript running on your server.</p>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I really don't understand why do we need to create channel.html file, as mentioned by <a href=\"http://developers.facebook.com/docs/reference/javascript/FB.init/\">FB docs</a>. I also want to understand how it is used. In my logs I don't see this file being ever requested.</p>\n",
            "last_activity_date": 1340914649,
            "question_id": 7052734,
            "score": 11,
            "tags": [
                "javascript",
                "facebook",
                "facebook-javascript-sdk"
            ],
            "title": "Why do we need to create a channel.html on our server to use Facebook JS SDK?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try calling the constructor with new?</p>\n\n<p>new FastButton(el, function() {});</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I'm trying to implement Google's Fast button for the mobile touch events, and I seem to be stuck.  I'm trying to set it up so that I can make links into fastbuttons, but I can't seem to get my library structure right.  What ends up happening is the fastbutton re-inits itself when I try to run a for loop on the links.  </p>\n\n<p>I'm sure it's just the way i'm setting up the library.  can someone please check it out?  Thanks!</p>\n\n<p><a href=\"http://code.google.com/mobile/articles/fast_buttons.html\">http://code.google.com/mobile/articles/fast_buttons.html</a></p>\n\n<pre><code>    ;(function() {\n/*Construct the FastButton with a reference to the element and click handler.*/\nthis.FastButton = function(element, handler) {\n    console.log('fastbutton init');\n    this.element = element;\n    this.handler = handler;\n    console.log(this);\n    element.addEventListener('touchstart', this, false);\n    element.addEventListener('click', this, false);\n};\n\n/*acts as an event dispatcher*/\nthis.FastButton.prototype.handleEvent = function(event) {\n    console.log(event);\n    switch (event.type) {\n        case 'touchstart': this.onTouchStart(event); break;\n        case 'touchmove': this.onTouchMove(event); break;\n        case 'touchend': this.onClick(event); break;\n        case 'click': this.onClick(event); break;\n    }\n};\n\n/*Save a reference to the touchstart coordinate and start listening to touchmove and\n touchend events. Calling stopPropagation guarantees that other behaviors don\u2019t get a\n chance to handle the same click event. This is executed at the beginning of touch.*/\nthis.FastButton.prototype.onTouchStart = function(event) {\n    event.stopPropagation();\n    this.element.addEventListener('touchend', this, false);\n    document.body.addEventListener('touchmove', this, false);\n    this.startX = event.touches[0].clientX;\n    this.startY = event.touches[0].clientY;\n};\n\n/*When /if touchmove event is invoked, check if the user has dragged past the threshold of 10px.*/\nthis.FastButton.prototype.onTouchMove = function(event) {\n    if (Math.abs(event.touches[0].clientX - this.startX) &gt; 10 ||\n            Math.abs(event.touches[0].clientY - this.startY) &gt; 10) {\n        this.reset(); //if he did, then cancel the touch event\n    }\n};\n\n/*Invoke the actual click handler and prevent ghost clicks if this was a touchend event.*/\nthis.FastButton.prototype.onClick = function(event) {\n    event.stopPropagation();\n    this.reset();\n    this.handler(event);\n    if (event.type == 'touchend') {\n        console.log('touchend');\n        //clickbuster.preventGhostClick(this.startX, this.startY);\n    }\n};\n\nthis.FastButton.prototype.reset = function() {\n    this.element.removeEventListener('touchend', this, false);\n    document.body.removeEventListener('touchmove', this, false);\n};\n\nthis.clickbuster = function() {\n    console.log('init clickbuster');\n}\n/*Call preventGhostClick to bust all click events that happen within 25px of\n the provided x, y coordinates in the next 2.5s.*/\nthis.clickbuster.preventGhostClick = function(x, y) {\nclickbuster.coordinates.push(x, y);\nwindow.setTimeout(this.clickbuster.pop, 2500);\n};\n\nthis.clickbuster.pop = function() {\nthis.clickbuster.coordinates.splice(0, 2);\n};\n/*If we catch a click event inside the given radius and time threshold then we call\n stopPropagation and preventDefault. Calling preventDefault will stop links\n from being activated.*/\nthis.clickbuster.onClick = function(event) {\nfor (var i = 0; i &lt; clickbuster.coordinates.length; i += 2) {\n console.log(this);\n    var x = clickbuster.coordinates[i];\n    var y = clickbuster.coordinates[i + 1];\n    if (Math.abs(event.clientX - x) &lt; 25 &amp;&amp; Math.abs(event.clientY - y) &lt; 25) {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n}\n};\n\n})(this);\n\n\n\ndocument.addEventListener('click', clickbuster.onClick, true);\nclickbuster.coordinates = [];\n</code></pre>\n",
            "last_activity_date": 1317326272,
            "question_id": 6300136,
            "score": 11,
            "tags": [
                "javascript",
                "javascript-events",
                "mobile-website"
            ],
            "title": "Trying to implement Google&#39;s Fast Button"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I like autocomplete selects when there are many options to choose from.  I found a jQuery example <a href=\"http://jqueryui.com/demos/autocomplete/combobox.html\" rel=\"nofollow\">here</a>. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>jQuery UI has an <a href=\"http://jqueryui.com/demos/autocomplete/\" rel=\"nofollow\">AutoComplete</a> control.  You can tie this together with a callback function as the data source and use Ajax to pull in large data sets.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<ol>\n<li>The solution that I like to use is provide the user a select list with all the options (should they want to look through it), but provide an autocomplete feature which searches through the list as they type into it. Sort of a hybrid of your first and second options.</li>\n<li>As for plug-ins, there are a number out there (as well as documentation which will lead you to more) that can help you here:\n<ul>\n<li><a href=\"http://plugins.jquery.com/project/jquery-select-autocomplete\">http://plugins.jquery.com/project/jquery-select-autocomplete</a></li>\n<li><a href=\"http://docs.jquery.com/Plugins/Autocomplete/autocomplete\">http://docs.jquery.com/Plugins/Autocomplete/autocomplete</a></li>\n<li><a href=\"http://jquery-ui.googlecode.com/svn/branches/labs/selectmenu/\">http://jquery-ui.googlecode.com/svn/branches/labs/selectmenu/</a></li>\n</ul></li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>There is an <a href=\"http://docs.jquery.com/Plugins/Autocomplete\" rel=\"nofollow\">Autocomplete plugin</a> for jQuery and there is <a href=\"http://jqueryui.com/demos/autocomplete/\" rel=\"nofollow\">Autocomplete</a> in jQuery UI.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could try <a href=\"http://code.google.com/p/ufd/\" rel=\"nofollow\">Unobtrusive Fast-filter Dropdown (UFD)</a> jquery plugin. This is by far my favorite and performs very well across different browsers even ie6. It can easily be styled and is definitely fast. It can managed thousands of items and is faster than jQuery UI's combobox autocomplete</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>A possible solution that I've seen a few good textual implementations of is a <a href=\"http://www.cs.umd.edu/hcil/fisheyemenu/\" rel=\"nofollow\">fish eye selector</a> used on vertical lists. There are lots of <a href=\"http://javascript.internet.com/css/fisheye.html\" rel=\"nofollow\">javascript/CSS</a>, Flash and Java examples online.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If the options naturally form groups, you could consider using <a href=\"http://www.quackit.com/html/tags/html_optgroup_tag.cfm\" rel=\"nofollow\">HTML optgroups</a> instead of a javascript-based solution. It makes a large set of options much more organized and manageable, while still keeping all options visible.</p>\n\n<p>I don't know what server-side language/framework you're using to generate your HTML, but for example in Ruby on Rails you can use grouped_options_for_select to generate optgroups automatically.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have tried the following as suggested in above answers:\n    plugins.jquery.com/project/jquery-select-autocomplete\n    docs.jquery.com/Plugins/Autocomplete/autocomplete\n    jquery-ui.googlecode.com/svn/branches/labs/selectmenu/\n    Unobtrusive Fast-filter Dropdown (UFD)</p>\n\n<p>I found UFD to be the one I liked best as it behaved most like a drop down and had a lot of versatility built into it, also the others were a bit buggy.</p>\n\n<p>BUT it still didn't give me consistency across browsers.  I want it to work the same way in all browsers.  For example:\n  In a normal select element, if I type the first letter, it will take me to the first option beginning with that letter and if I then hit Enter, it will select it, BUT here is where it differs from browser to browser.  Some browsers fire the onchange event when Enter is hit and some don't until the dropdown loses focus.</p>\n\n<p>UFD didn't have the \"onchange\" consistency I was looking for</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You should take a look at Choosen <a href=\"http://harvesthq.github.io/chosen\" rel=\"nofollow\">http://harvesthq.github.io/chosen</a>\nThat's a jQuery plugin that generate a nicer select with a text field to search into.\nThis solution let the user see all options and search for one in particular without having to scroll.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><strong>A <code>&lt;select&gt;</code> might be good for choosing between 3-15 simple items, but how do you deal with 15-100+?</strong></p>\n\n<p><strong>The simplest option</strong> would be to just have a plain <code>&lt;select&gt;</code> with a lot of <code>&lt;option&gt;</code>s, but it's not very user friendly. There's a lot of scrolling and it might be hard to find the option you are looking for. The benefit is that you can (maybe with scrolling) see all the options you have.</p>\n\n<p><strong>A more advanced option</strong> would be to have a text field with autocomplete. A user types in a letter or two, and search results come back which you choose from. It makes it easier to find the option you are looking for - if you know what you <em>are</em> looking for. The drawback is that the user can't see all the options.</p>\n\n<p><strong>An even more advanced option</strong> would be to build a \"search, list and choose\" widget which defaults to show X items, but allows you to search. An advantage of this approach is that I can allow search on multiple attributes and not just the name of the item which is to be selected.</p>\n\n<ol>\n<li><strong>What solutions have you deployed in\nthese situations?</strong></li>\n<li><strong>Is there a jQuery plugin I should know about?</strong></li>\n</ol>\n",
            "last_activity_date": 1376044035,
            "question_id": 5266250,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "user-interface"
            ],
            "title": "GUI alternative to &lt;select&gt; when you have a lot of options"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Found out how, using the contextmenu API <a href=\"http://developer.chrome.com/extensions/contextMenus.html\">http://developer.chrome.com/extensions/contextMenus.html</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>How would I append functions to the right click menu in the browser? E.g <code>something</code> appended to the right click menu which does function <code>dosomething()</code> which is located in my extension.</p>\n",
            "last_activity_date": 1362842594,
            "question_id": 5193350,
            "score": 11,
            "tags": [
                "javascript",
                "google-chrome-extension"
            ],
            "title": "Chrome-extension: Append functions to right click menu"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use an AsyncPostBackTrigger with the UpdatePanel to do this.  Because you need something that can fire an event, using a button is fairly simple and when hidden works nicely.</p>\n\n<p>If this is your markup:</p>\n\n<pre><code>&lt;asp:UpdatePanel ID=\"UpdatePanel1\" runat=\"server\" OnLoad=\"UpdatePanel1_Load\"&gt;\n    &lt;ContentTemplate&gt;\n        &lt;!-- Contents... --&gt;\n    &lt;/ContentTemplate&gt;\n    &lt;Triggers&gt;\n        &lt;asp:AsyncPostBackTrigger ControlID=\"ReloadThePanel\" EventName=\"Click\" /&gt;\n    &lt;/Triggers&gt;\n&lt;/asp:UpdatePanel&gt;\n&lt;asp:Button ID=\"ReloadThePanel\" runat=\"server\" style=\"display:none;\" /&gt;\n</code></pre>\n\n<p>When you want the panel to be updated, you just need to call:</p>\n\n<pre><code>__doPostBack('&lt;%=ReloadThePanel.ClientID %&gt;', null);\n</code></pre>\n\n<p>This will make ASP.NET think that ReloadThePanel was clicked and the JavaScript auto-generated due to the trigger will handle the rest.</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>You can do a pure JavaScript update of the UpdatePanel without any triggers or hidden buttons.  You just need to invoke <code>__doPostBack</code> with the client-side ID as the first argument.</p>\n\n<pre><code>__doPostBack('&lt;%=UpdatePanel1.ClientID %&gt;', null);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p><a href=\"http://encosia.com/index.php/2007/07/13/easily-refresh-an-updatepanel-using-javascript/\" rel=\"nofollow\">Easily Refresh an Updatepanel Using Javascript</a></p>\n\n<p>Seems to explain it clearly here.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I couldn't find something similar in SO.  </p>\n\n<p>In ASP.NET, is there any way that on cue I can cause a partial postback with Javascript in an UpdatePanel?<br>\nI tried <code>__doPostBack()</code> but it does a full postback.<br>\nI can trick it with a dummy button and fire <code>click()</code> then handle the partial postback that way, but I want a more graceful way than trickery.  </p>\n\n<p>Thanks.</p>\n\n<p>Edit:  I found this <a href=\"http://disturbedbuddha.wordpress.com/2007/11/26/\">disturbedbuddha.wordpress.com/2007/11/26/</a>\u2026 but I can't get it to work =(<br>\nI would love for this method to work; it's perfect for me!\nSo far what I can do using this last method is gain reference to the timer.  With the timer initially disabled, starting the timer doesn't seem to cause a postback.  However, without Ajax, if I simply have the timer enabled initially, it posts back at intervals just fine; why can't the Ajax call cause it?</p>\n",
            "last_activity_date": 1288378499,
            "question_id": 3965367,
            "score": 11,
            "tags": [
                "javascript",
                "asp.net",
                "ajax",
                "postback"
            ],
            "title": "Partial postback with Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It looks like you have strings and not numbers, you need <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\" rel=\"nofollow\"><code>parseInt()</code></a> or <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseFloat\" rel=\"nofollow\"><code>pareFloat()</code></a> (if they may be decimals) here, like this:</p>\n\n<pre><code>var a = \"1\";\nvar b = \"2\";\nvar c = parseInt(a, 10) + parseInt(b, 10);\n//or: var c = parseFloat(a) + parseFloat(b);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/nick_craver/uxTWU/\" rel=\"nofollow\">You can test the difference here</a>, it's worth noting these are not jQuery but base JavaScript functions, so this isn't dependent on the jQuery library in any way.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Try this -</p>\n\n<pre><code>var c = parseInt(a, 10) + parseInt(b, 10);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Just try this:</p>\n\n<pre><code>var a = 1;\nvar b = 2;\nvar c = (+a) + (+b);\nalert(c); //or whatever you want\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>var a = 1;\nvar b = 2;\nvar c = a+b;\n</code></pre>\n\n<p>c will show as <code>12</code>; but I need <code>3</code></p>\n\n<p>How do I do it using jQuery?</p>\n",
            "last_activity_date": 1425997704,
            "question_id": 3811678,
            "score": 11,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Add two variables using jquery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>JavaScript allows this, you can pass any arbitrary number of arguments to a function.</p>\n\n<p>They are accessible in the <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Functions_and_function_scope/Arguments\"><code>arguments</code></a> object which is an array-like object that has numeric properties containing the values of the arguments that were used when the function was invoked, a <code>length</code> property that tells you how many arguments have been used on the invocation also, and a <code>callee</code> property which is a reference to the function itself, for example you could write:</p>\n\n<pre><code>function sum(/*arg1, arg2, ... , argN  */) { // no arguments defined\n  var i, result = 0;\n  for (i = 0; i &lt; arguments.length; i++) {\n    result += arguments[i];\n  }\n  return result;\n}\nsum(1, 2, 3, 4); // 10\n</code></pre>\n\n<p>The <code>arguments</code> object may look like an array, but it is a plain object, that inherits from <code>Object.prototype</code>, but if you want to use Array methods on it, you can invoke them directly from the <code>Array.prototype</code>, for example, a common pattern to get a <em>real array</em> is to use the Array <code>slice</code> method:</p>\n\n<pre><code>function test () {\n  var args = Array.prototype.slice.call(arguments);\n  return args.join(\" \");\n}\ntest(\"hello\", \"world\"); // \"hello world\"\n</code></pre>\n\n<p>Also, you can know how many arguments a function <em>expects</em>, using the <code>length</code> property of the function object:</p>\n\n<pre><code>function test (one, two, three) {\n  // ...\n}\ntest.length; // 3\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Yes do it - its good practice and is a powerful JavaScript feature </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a function</p>\n\n<pre><code>function callback(obj){...}\n</code></pre>\n\n<p>Is it okay to pass in more objects than were declared in the function signature? Eg, call it like this:</p>\n\n<pre><code>callback(theObject, extraParam);\n</code></pre>\n\n<p>I tried it out on firefox and it didn't seem to have a problem, but is it bad to do this?</p>\n",
            "last_activity_date": 1269626951,
            "question_id": 2525568,
            "score": 11,
            "tags": [
                "javascript"
            ],
            "title": "Javascript - is it bad to pass more arguments than the function declares?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>I use bitwise shift of zero in JS to perform quick integer truncation:</p>\n\n<pre><code>var i=3.141532;\nvar iTrunc=i&gt;&gt;0; //3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When would you want to use them?  You would want to use them when you want to do bitwise operations.  Just like you'd use boolean operators to do boolean operations, and mathematical operators to do mathematical operations.</p>\n\n<p>If you are comfortable with bitwise operators it is very natural to use them for some applications.  They can be used for many purposes other than an over-optimized boolean array.  Of course, these circumstances don't come up very often in Javascript programming, but that's no reason why the operators shouldn't be available.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I'd think it's up to the implementer to make an operator efficient or inefficient. For example, there's nothing that prevents a JavaScript implementer from making a JITting VM, which turns a bitwise op into 1 machine instruction. So there's nothing <strong>inherently</strong> slow about \"the bitwise operators in JavaScript\".</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When speed is paramount, you can use them for bit-masking: <a href=\"http://snook.ca/archives/javascript/storing%5Fvalues/\" rel=\"nofollow\">http://snook.ca/archives/javascript/storing_values/</a></p>\n\n<p>Also, if you need to support Netscape 4, you'd use them to deal with Document.captureEvents(). Not that any respectable company would have you write JS for NS4...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am doubtful that bitwise operation are particularly slow in javascript.  Since such operations can map directly to CPU operations, which are themselves quite efficient, <strong>there doesn't appear to be any inherent characteristic of bitwise operations that would force them to be irremediably slow in javascript</strong>.<br>\nFurthermore, and as pointed out in several responses, there exist various applications of javascript which rely on bitwise operation (ex: crytography and graphics) and which are not particularly slow...  (see silky and Snarfblam on this page)</p>\n\n<p>Let's never the less entertain the possibility that some particular reasons caused the various implementers of javascript hosts to implement bitwise ops in a fashion that makes these slow, and <strong>see if this even matters</strong>...</p>\n\n<p>Although javascript has been used for other purposes, <strong>the most common use of this language in in providing user interface type of services</strong>. <br>\nBTW, I do not mean this in any pejorative way at all; performing these smart UI functions, and considering various constraints imposed on the language and also the loose adherence to standards, has required -and keeps requiring- talented javascript hackers.<br>\nThe point is that in the context of UI-type requirements, the need for any <em>quantity</em> of bitwise operations susceptible of exposing the alleged slowness of javascript in handling such operations is uncommon at best.  Consequently, for typical uses, <strong>programmers should use bitwise operations where and if this approach seems to flow well with overall program/data and they should do so with little concern for performance issues.</strong>  In the unlikely case of performance bottleneck arising from bitwise use, one can always refactor things, but one is better off staying clear from  early optimization.</p>\n\n<p>The notable exception to the above is with the introduction of <strong>canvas</strong>, on modern browsers, we can expect that more primitive graphic functions will be required of javascript hosts, and such operations can require in some cases heavy doses of bitwise operations (as well as healthy does of math functions).  It is likely that these services will eventually be supported by way of javascript libraries (and even end-up as languages additions).  For such libraries the common smarts of the industry will have been put to use to figure out the most efficient approaches.  Furthermore and <em>if</em> indeed there is a weakness in javascript performance with bitwise ops, we'll get some help, for I predict that the javascript implementations on various hosts (browsers) will be modified to improve this particular area.   (This would follow the typical pattern of evolution of javascript, that we've seen over the years.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>People do interesting things in JavaScript.</p>\n\n<p>For example there are a lot of cryptography algorithms implemented in it (for various reasons); so of course bitwise operators are used.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is an <a href=\"http://benfirshman.com/projects/jsnes/\" rel=\"nofollow\">NES emulator</a> written in JavaScript - it seems to make plenty of use of bitwise operations.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I found some good info @ \n<a href=\"http://dreaminginjavascript.wordpress.com/2009/02/09/bitwise-byte-foolish/\" rel=\"nofollow\">http://dreaminginjavascript.wordpress.com/2009/02/09/bitwise-byte-foolish/</a></p>\n\n<p>Apparently they perform very well these days. Why would you use them? Same reason you would anywhere else.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Nobody uses hex anymore?</p>\n\n<pre><code>function hextoRgb(c) {\n    c = '0x' + c.substring(1);\n    return [(c &gt;&gt; 16) &amp; 255, (c &gt;&gt; 8) &amp; 255, c &amp; 255]; \n}\n\nvar c1 = hextoRgb('#191970');\nalert('rgb(' + c1.join(',') + ')');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Using JavaScript in its Windows Scripting Host JScript incarnation, you might have cause to use bitwise operators to pick out flags in values returned from WMI or Active Directory calls. For example, the User Access value of a user's record in AD contains several flags packed into one long integer.</p>\n\n<pre><code>ADS_UF_ACCOUNTDISABLE = 0x00000002;\n\nif (uac &amp; ADS_UF_ACCOUNTDISABLE == ADS_UF_ACCOUNTDISABLE) {\n  // user account has been disabled\n}\n</code></pre>\n\n<p>Or someone's arbitrary table structure may contain such a field, accessible through ADO with JScript.</p>\n\n<p>Or you may want to convert some retrieved data into a binary representation on any platform, just because:</p>\n\n<pre><code>BinaryData = \"L\";\nBinaryString = BinToStr(BinaryData, \".\", \"x\");\n\n// BinaryString =&gt; '.x..xx..'\n</code></pre>\n\n<p>So there are numerous reasons why one might want to do bit manipulation in JavaScript. As for performance, the only way to know is to write it and test it. I suspect in most cases it would be perfectly acceptable, not significantly worse than any other of the multitude of inefficiencies these systems contain. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A lot of bitwise operations are being benchmarked here: <a href=\"http://jsperf.com/rounding-numbers-down/3\" rel=\"nofollow\">http://jsperf.com/rounding-numbers-down/3</a></p>\n\n<p>However, feel free to create your own performance testcase on jsPerf!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is quite an old question, but no one seemed to answer the updated version.</p>\n\n<p>The performance hit that you get with JavaScript that doesn't exist in C/C++ is the cast from <a href=\"http://en.wikipedia.org/wiki/Floating_point\" rel=\"nofollow\">floating point</a> representation (how JavaScript strores all of its numbers) to a 32 bit integer to perform the bit manipulation and back.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>One of the main ideas behind using bitwise operators in languages like C++/java/C# is that they're extremely fast. But I've heard that in javascript they're very slow (admittedly a few milliseconds probably doesn't matter much today). Why is this so?</p>\n\n<p>(<a href=\"http://stackoverflow.com/questions/654057/where-would-i-use-a-bitwise-operator-in-javascript\">this question</a> discusses when bitwise operators are used, so I'm changing the focus of this question to performance.)</p>\n",
            "last_activity_date": 1416973602,
            "question_id": 1523061,
            "score": 11,
            "tags": [
                "javascript",
                "bitwise-operators"
            ],
            "title": "Performance of bitwise operators in javascript"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>It looks like creating this file will give you the functions that you need to disable javascript for your test.  You will call the \"doDisableJavascript\" function before you begin the test and the \"doEnableJavascript\" function when you want to enable it again.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The steps to use the script referenced above aren't to bad:</p>\n\n<ol>\n<li>Create the selenium \"user-extensions.js\" file as mentioned in the article you link.</li>\n<li>Select your \"user-extensions.js\" file in the Selenium preferences in Options->Options.</li>\n<li>Use the script by selecting the command \"DisableJavascript\" or \"EnableJavascript\" from the command list (or just type it manually).</li>\n</ol>\n\n<p>For screen shot examples of steps 2 and 3 see: <a href=\"http://i32.tinypic.com/161mgcm.jpg\" rel=\"nofollow\">http://i32.tinypic.com/161mgcm.jpg</a></p>\n\n<p>Update: For information about using user-extensions.js with Selenium RC try the following URL: <a href=\"http://seleniumhq.org/docs/08%5Fuser%5Fextensions.html\" rel=\"nofollow\">http://seleniumhq.org/docs/08%5Fuser%5Fextensions.html</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Other possibilities would be:</p>\n\n<ul>\n<li>Write your application to support disabling JavaScript (yes, the <strong>web</strong> application).<br>Sounds crazy? Isn't. In our development process we're doing exactly this, implementing features without JS until all are there, then spice up with JS. We usually provide a hook within all templates which can control from a single point to basically which JS off/on from the web application itself. And, yes, the application is hardly recognizable without JS enabled, but it's the best way to ensure things work properly. We even write Selenium tests for it, for both versions; NOJS and JS. The NOJS are so quickly implemented that they don't matter compared to what it takes to write sophisticated JS tests ...</li>\n<li>Modify the appropriate browser profile to have JS disabled. I.e. for FF you can tell Selenium which profile to use; you can load this profile normally, disable JS in about:config and feed this profile as default profile to Selenium RC.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Get the Web Developer toolbar for Firefox from <a href=\"http://chrispederick.com/work/web-developer/\" rel=\"nofollow\">http://chrispederick.com/work/web-developer/</a>\nDisable->Disable Javascript</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>I was trying to solve this problem and found this blog but the first post has a link that is no longer valid. But I finally found the code to place inside the user-extensions.js that works. Here it is:</p>\n\n<pre><code>Selenium.prototype.doDisableJavascript = function() {\n    setJavascriptPref(false);\n};\n\nSelenium.prototype.doEnableJavascript = function() {\n    setJavascriptPref(true);\n};\n\nfunction setJavascriptPref(bool) {\n   prefs = Components.classes[\"@mozilla.org/preferences-service;1\"]\n           .getService(Components.interfaces.nsIPrefBranch);\n   prefs.setBoolPref(\"javascript.enabled\", bool);\n}\n</code></pre>\n\n<p>Hope this save the time it took me to find it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is a way to do it if you use WebDriver with FireFox:</p>\n\n<pre><code>FirefoxProfile p = new FirefoxProfile();\np.SetPreference(\"javascript.enabled\", false);\ndriver = new FirefoxDriver(p);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You don't need to disable JavaScript.  If you fill out your form you can use JavaScript to submit your form e.g. use <code>runScript</code> and <code>window.document.forms[0].submit()</code>.</p>\n\n<p>Whenever you call <code>submit()</code> directly on a form, the form is submitted directly to the server, there is no <strong>onsubmit</strong> event fired, and therefore, no client-side validation.  (Unless your form action is something like <code>javascript:validateForm()</code>, in which case your system doesn't work when JavaScript is disabled).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is the simple answer, for python at least.</p>\n\n<pre><code>from selenium import webdriver\n\nprofile = webdriver.FirefoxProfile()\nprofile.set_preference(\"javascript.enabled\", False);\ndriver = webdriver.Firefox(profile)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am wondering how do I disable javascript when using selenium so I can test server side validation.</p>\n\n<p>I found this article but I don't know what to really do. Like I make this javascript file then what?</p>\n\n<p><a href=\"http://thom.org.uk/2006/03/12/disabling-javascript-from-selenium/\">http://thom.org.uk/2006/03/12/disabling-javascript-from-selenium/</a></p>\n",
            "last_activity_date": 1417372393,
            "question_id": 1285917,
            "score": 11,
            "tags": [
                "javascript",
                "selenium"
            ],
            "title": "How to disable Javascript when using Selenium?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can't directly be notified of the window closing, but you can work out when the child window has been closed by inspecting the <a href=\"https://developer.mozilla.org/En/DOM/Window.closed\"><code>closed</code></a> property on the window object reference returned by <a href=\"https://developer.mozilla.org/En/DOM/Window.open\"><code>window.open()</code></a>.</p>\n\n<p>Here's an example that will display an alert within 5 seconds of the child window being closed by polling the <code>closed</code> property:</p>\n\n<pre><code>var win = open('http://www.google.com');\nvar intervalId = setInterval(function() {\n        if (win.closed) {\n            clearInterval(intervalId);\n            alert('Window closed! Hoorah!');\n        }\n    }, 5000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>A better solution with two pieces of code\n1/ in the popup : </p>\n\n<pre><code>$(window).bind('unload',\n  function(){\n    window.opener.PopupUnload(window)\n  })\n</code></pre>\n\n<p>2/ in the parent (main window) : </p>\n\n<pre><code>function PopupUnload(wnd){\n setTimeout(function(){ // setTimeout is for IE\n   if(wnd.closed)\n     alert('You just killed me...')\n  },10)\n}\n</code></pre>\n\n<p>with this code, no function called forever (with setInterval()) and you make the difference between close and refresh popup (post/get)</p>\n\n<p>(tested in IE8 and FF3)</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Can the parent window be notified when a child window closes? (on a different domain?)</p>\n\n<p>Trying to get around the window.opener not working when on different domains.</p>\n\n<p>Can I at least be notified somehow when the child window closes?</p>\n",
            "last_activity_date": 1241022567,
            "question_id": 781770,
            "score": 11,
            "tags": [
                "javascript",
                "events",
                "browser"
            ],
            "title": "Can the parent window be notified when a child window closes? (on a diff domain)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>As you know, the issue is that different browsers choose to call event handlers in different orders. One solution is to give the other events a chance to fire by setting a timer for <code>0</code> milliseconds, and then checking the fields to see which (if any) is focused.</p>\n\n<pre><code>a.onfocus = function() {show(b);};\n\na.onblur = function() {\n    setTimeout(function() {\n        //if neither filed is focused\n        if(document.activeElement !== b &amp;&amp; document.activeElement !== a){\n            hide(b);\n        }\n            }, 0);\n};\n\n//same action as for a\nb.onblur = a.onblur;\n</code></pre>\n\n<p>Tested in Chrome, Firefox, Internet Explorer, and Safari. See full working example (edited version of your fiddle) at <a href=\"http://jsfiddle.net/7gXfC/13/\">JSFiddle.net</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use an extravarible to check whether b is focused before hiding b. It worked in IE, Chrome &amp; Firefox. I don;t have any other browser. You can check it.        </p>\n\n<pre><code>var focusedB = false;\n$(\"#a\").focus(function(){\n     $(\"#b\").show();   \n });\n //if b is focused by pressing tab bar.\n $(\"#a\").keydown(function(e){\n     if(e.which === 9){\n          focusedB = true;  \n      }\n   });\n   $(\"#b\").blur(function(){\n        $(\"#b\").hide();\n   });\n   $(\"#a\").blur(function(){\n       if(focusedB){\n            focusedB = false;\n        }else{\n            $(\"#b\").hide();\n        }\n    });\n    $( \"#b\" ).mousedown(function() {\n       focusedB = true;\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>So, according to <a href=\"http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-September/245075.html\" rel=\"nofollow\">this</a>:</p>\n\n<blockquote>\n  <p>An element is <em>focusable</em> if the user agent's default behavior allows\n  it to be focusable or if the element is specially focusable, but only\n  if the element is either being rendered or is a descendant of a canvas\n  element that represents embedded content.</p>\n</blockquote>\n\n<p>It seems that all browsers also don't make <code>visibility:hidden</code> and <code>display:none</code> input elements focusable. <a href=\"http://jsfiddle.net/xpnoqwpL/\" rel=\"nofollow\">The following JavaScript</a> tests in which cases is an element focusable.</p>\n\n<pre><code>function isFocusable(type) {\n    var element = document.getElementById(type);\n    result += type + ' is';\n    try {\n        element.focus();\n        if (element != document.activeElement)\n            result += ' not';\n    } catch (e) {\n      result += ' not (error thrown)';\n    }\n    result += ' focusable&lt;br&gt;';\n}\n</code></pre>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"true\">\r\n<div class=\"snippet-code snippet-currently-hidden\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>var result = '';\r\n\r\nfunction isFocusable(type) {\r\n  var element = document.getElementById(type);\r\n  result += type + ' is';\r\n  try {\r\n    element.focus();\r\n    if (element != document.activeElement)\r\n      result += ' not';\r\n  } catch (e) {\r\n    result += ' not (error thrown)';\r\n  }\r\n  result += ' focusable&lt;br&gt;';\r\n}\r\n\r\nisFocusable('text');\r\nisFocusable('hidden');\r\nisFocusable('disabled');\r\nisFocusable('readonly');\r\nisFocusable('visiblity-hidden');\r\nisFocusable('display-none');\r\nisFocusable('div-hidden');\r\n\r\ndocument.getElementById('browser-version').innerHTML = navigator.userAgent;\r\ndocument.getElementById('logger').innerHTML += result;</code></pre>\r\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>&lt;input id=text type=\"\"&gt;&lt;/input&gt;\r\n&lt;input id=hidden type=\"hidden\"&gt;&lt;/input&gt;\r\n&lt;input id=disabled disabled&gt;&lt;/input&gt;\r\n&lt;input id=readonly readonly&gt;&lt;/input&gt;\r\n&lt;input id=visiblity-hidden style=\"visibility:hidden\"&gt;&lt;/input&gt;\r\n&lt;input id=display-none style=\"display:none\"&gt;&lt;/input&gt;\r\n&lt;div id=div-hidden sytle=\"visibility:hidden\" tabindex=1&gt;\r\n  &lt;/input&gt;\r\n\r\n  &lt;div id=browser-version&gt;&lt;/div&gt;\r\n\r\n  &lt;div id=logger&gt;&lt;/div&gt;</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>Here's the output in Firefox 34.0.5 and Chrome 39.0.2</p>\n\n<pre><code>Gecko/20100101 Firefox/34.0\ntext is focusable\nhidden is not focusable\ndisabled is not focusable\nreadonly is focusable\nvisiblity-hidden is not focusable\ndisplay-none is not focusable\ndiv-hidden is focusable\n\nAppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\ntext is focusable\nhidden is not focusable\ndisabled is not focusable\nreadonly is focusable\nvisiblity-hidden is not focusable\ndisplay-none is not focusable\ndiv-hidden is focusable\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><a href=\"http://jsfiddle.net/7gXfC/8/\">Consider this example</a> where I have 2 input fields:</p>\n\n<pre><code>&lt;input id=\"a\" /&gt;\n&lt;input id=\"b\" style=\"display: none\" /&gt;\n</code></pre>\n\n<p>And consider the following JavaScript, which is an attempt to do this: </p>\n\n<p><em>Show <code>#b</code> only when <code>#a</code> has focus and hide <code>#b</code> whenever <code>#a</code> loses focus, except when <code>#a</code> loses its focus to <code>#b</code>.</em></p>\n\n<pre><code>$(\"#a\").focus(function(){\n    $(\"#b\").show();   \n});\n\n$(\"#a, #b\").blur(function(){\n    $(\"#b\").hide();\n});\n\n$(\"#b\").focus(function(){\n    $(\"#b\").show();   \n});\n</code></pre>\n\n<p>The above code is incorrect as <code>$(\"#b\").focus()</code> would never be triggered because as soon as <code>#a</code> loses focus, <code>#b</code> is hidden. This expected behavior is observed in Firefox (Version 24.6.0).</p>\n\n<p>But in Chrome (Version 35.0), the code seems to run incorrectly <sup>(or correctly!?)</sup>. </p>\n\n<p>Clearly, the <code>b.focus</code> <a href=\"http://jsfiddle.net/4dApN/\">event is still being registered in Chrome</a>.\nWhy does this event register in Chrome, but not in Firefox? </p>\n\n<hr>\n\n<p><strong>Update</strong></p>\n\n<p>As pointed out by raina77ow:</p>\n\n<ul>\n<li><strong>In Chrome</strong>, after we place the cursor on <code>b</code>, blur on <code>a</code> is fired first, then focus on <code>b</code>, and <code>b</code> stays visible.</li>\n<li><strong>In Firefox</strong>, focus on <code>b</code> is not fired, so <code>b</code> becomes invisible.</li>\n<li><strong>In IE10</strong>, however, somehow focus on <code>b</code> IS fired, but <code>b</code> becomes invisible immediately, as blur is fired on <code>b</code> right after.</li>\n</ul>\n\n<p><a href=\"http://jsfiddle.net/7gXfC/11/\">Here's a fiddle without using jQuery</a>, producing the same behavior.</p>\n",
            "last_activity_date": 1418937277,
            "question_id": 24635536,
            "score": 10,
            "tags": [
                "javascript",
                "javascript-events",
                "cross-browser",
                "focus",
                "blur"
            ],
            "title": "Different behavior of blur event in different browsers"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The message stating that module/angular is not defined means that your angular-mocks.js file is not being loaded, despite the fact you have it listed in your karma.conf.js file.</p>\n\n<p>The problem you're experiencing is gulp-karma ignoring your karma.conf.js files array. This happens when you pass a string or glob into gulp.src in the gulpfile.</p>\n\n<p>To work around this, pass gulp.src a string for a bogus file, \"./foobar\" for instance, and this will cause the files array in the karma.conf.js file to be used instead.</p>\n\n<pre><code>gulp.task('test', function () {\n  gulp.src('./foobar')\n    .pipe(karma({\n      configFile: 'karma.conf.js',\n      action: 'run'\n    }));\n});\n</code></pre>\n\n<p>Hope this helps!</p>\n\n<p>Reference:\n<a href=\"https://github.com/lazd/gulp-karma/issues/9\">https://github.com/lazd/gulp-karma/issues/9</a></p>\n",
                    "is_accepted": true,
                    "score": 25
                }
            ],
            "body": "<p>I know this question has been asked many times, and I know that in most cases people are missing the <code>angular-mocks.js</code> file.</p>\n\n<p>I'm running into the same issue, attempting to test a factory on a module. Unfortunately, I keep running into issues with the tests (why, Angular, oh why must you assume a <code>window</code> and <code>document</code> object?), which state that module is not defined. I'm at a loss. I've also tried using angular.mocks.module, but then I get a message saying Angular isn't defined. What am I doing wrong?</p>\n\n<p>Of note, I'm using gulp as a task runner. My gulpfile (not yet perfect, tasks aren't linked):</p>\n\n<pre><code>var gulp = require('gulp'),\n\n    uglify = require('gulp-uglify'),\n    jshint = require('gulp-jshint'),\n    jasmine = require('gulp-jasmine'), \n    karma = require('gulp-karma'),\n\n    paths = {\n        scripts: \"scripts/*.js\",\n        spec: \"spec/*.js\",\n        dist: \"dist\"\n    };\n\ngulp.task('prepare', function () {\n    return gulp.src(paths.scripts)\n        .pipe(jshint())\n        .pipe(jshint.reporter('default'))\n        .pipe(uglify())\n        .pipe(gulp.dest(paths.dist))\n});\n\ngulp.task('test', function () {\n    gulp.src([paths.scripts, paths.spec])\n        .pipe(karma({\n            configFile: 'karma.conf.js',\n            action: 'run'\n        }));\n});\n\ngulp.task('default', ['prepare', 'test']);\n</code></pre>\n\n<p>My karma.conf.js, generated by karma init:</p>\n\n<pre><code>// Karma configuration\n// Generated on Fri Mar 14 2014 14:24:30 GMT-0400 (EDT)\n\nmodule.exports = function(config) {\n  config.set({\n\n    // base path that will be used to resolve all patterns (eg. files, exclude)\n    basePath: '',\n\n\n    // frameworks to use\n    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n    frameworks: ['jasmine'],\n\n\n    // list of files / patterns to load in the browser\n    files: [\n      './lib/angular/angular.min.js',\n      './lib/angular-mocks/angular-mocks.js',\n      './src/*.js',\n      './spec/*.js'\n    ],\n\n\n    // list of files to exclude\n    exclude: [\n\n    ],\n\n\n    // preprocess matching files before serving them to the browser\n    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n    preprocessors: {\n\n    },\n\n\n    // test results reporter to use\n    // possible values: 'dots', 'progress'\n    // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n    reporters: ['progress'],\n\n\n    // web server port\n    port: 9876,\n\n\n    // enable / disable colors in the output (reporters and logs)\n    colors: true,\n\n\n    // level of logging\n    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n    logLevel: config.LOG_INFO,\n\n\n    // enable / disable watching file and executing tests whenever any file changes\n    autoWatch: false,\n\n\n    // start these browsers\n    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n    browsers: ['Chrome'],\n\n\n    // Continuous Integration mode\n    // if true, Karma captures browsers, runs the tests and exits\n    singleRun: false\n  });\n};\n</code></pre>\n\n<p>And finally, my test suite (nothing's set up yet, if I can pass this hurdle, we'll be good):</p>\n\n<pre><code>/* Tests for memento.js. */\n\ndescribe('memento core test suite', function () {\n    var memento;\n\n    beforeEach(module('Memento'));\n\n    beforeEach(function() {\n        inject(function(_memento_) {\n            memento = _memento_;\n        });\n    });\n\n    // Check functions.\n      // check to see if it has the expected function\n    it('should match expected interface', function () { \n        expect(angular.isFunction(memento.canUndo)).toBe(true);\n        expect(angular.isFunction(memento.canRedo)).toBe(true);\n        expect(angular.isFunction(memento.undo)).toBe(true);\n        expect(angular.isFunction(memento.redo)).toBe(true);\n        expect(angular.isFunction(memento.push)).toBe(true);\n    });\n\n    it('should initialize', function () {\n        this.fail(Error('Test not implemented'));\n    });\n\n    it('should push() a changed object', function () {\n        this.fail(Error('Test not implemented'));\n    });\n\n    it('should not push() an unchanged object', function () {\n        this.fail(Error('Test not implemented'));\n    });\n\n    it('should return original object on undo()', function () {\n        this.fail(Error('Test not implemented'));\n    });\n\n    it('should return modified object on redo()', function () {\n        this.fail(Error('Test not implemented'));\n    });\n\n    it('should not undo() if at beginning of stack', function () {\n        this.fail(Error('Test not implemented'));\n    });\n\n    it('should not redo() if at end of stack', function () {\n        this.fail(Error('Test not implemented'));\n    });\n\n    // TODO: Implement revert to original, clearing history.\n    // \n    // it('should return seed object on revert()', function () {\n    //  this.fail(Error('Test not implemented'));\n    // });\n\n    // it('should clear the stack on clear()', function () {\n    //  this.fail(Error('Test not implemented'));\n    // });\n});\n</code></pre>\n\n<p>Does anyone see anything awry? I'm not sure if there's something really obvious I'm missing - I could use an extra set of eyes, or many. I originally thought I'd be able to run this as a simple Jasmine test suite without Karma, but due to Angular, that has problems. If I can't get this to work, I might just use npm's Angular package and alter my Angular module so that it supports CommonJS...</p>\n\n<p>Thanks, everyone! Hope I'm not crazy.</p>\n\n<p>Edit: I've included my devdependencies.</p>\n\n<pre><code>  \"devDependencies\": {\n    \"gulp\": \"~3.5.6\",\n    \"gulp-uglify\": \"~0.2.1\",\n    \"gulp-jshint\": \"~1.5.0\",\n    \"gulp-jasmine\": \"~0.2.0\",\n    \"angular\": \"~1.2.10\",\n    \"karma\": \"~0.12.0\",\n    \"gulp-karma\": \"0.0.4\",\n    \"karma-jasmine\": \"~0.2.2\",\n    \"karma-chrome-launcher\": \"~0.1.2\"\n  }\n</code></pre>\n",
            "last_activity_date": 1396198259,
            "question_id": 22413767,
            "score": 10,
            "tags": [
                "javascript",
                "node.js",
                "angularjs",
                "karma-runner",
                "gulp"
            ],
            "title": "Angular testing with Karma: &quot;module is not defined&quot;"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Apart from some scoping issues (there might be more tables on the page...) there is nothing inherently wrong with this approach - the <code>style</code> elements are there in the DOM to be edited as you see fit, the browsers are following standards by respecting it. In your test case, there's not really a valid other approach since indeed <code>colgroup</code> has extremely messy support - there are 78 duplicate bugs on the subject in Bugzilla, and Mozilla has been refusing to implement it properly since <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=915\" rel=\"nofollow\">the first related bug report in 1998</a>.</p>\n\n<p>The reason it's faster is simply one of overhead - once the complete DOM is assembled a relatively minor stylesheet can be applied in native C++ much faster than a Javascript interpreter can ever loop over all rows and cells. This is because historically CSS rules are applied in reverse, and the browser keeps a dictionary inside quickly allowing it to find all <code>td</code> elements. Native C++ will always beat more complex interpreter-based code.</p>\n\n<p>In the future, the scoping issue can also be resolved with <a href=\"http://caniuse.com/style-scoped\" rel=\"nofollow\">scoped styles</a> (currently only in FF, rather typical), you'd be coding like this:</p>\n\n<pre><code>&lt;table&gt;\n  &lt;style id=\"myTableStyle\" scoped&gt;\n    td:nth-child(1) { display:none }\n  &lt;/style&gt;\n  &lt;tbody&gt;\n     ...\n  &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>The <code>scoped</code> attribute makes the contained styles only valid for its <em>containing element</em>, the <code>table</code> in this case, and of course all its contained elements. And since you can access it by ID the contents are easily replaced/reconstructed.</p>\n\n<p>While this would be preferable to your approach, as long as there's no universal browser support for this creating <code>style</code> elements in the <code>head</code> is the best workaround.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><strong>Dynamically generating CSS is bad</strong>. Don't do it.</p>\n\n<p>A solution that works by generating dynamic CSS can converted to a solution that doesn't require dynamic CSS.</p>\n\n<p>If you need an example, see my answer here: <a href=\"http://stackoverflow.com/questions/20985504/jquery-to-update-actual-css/20985778\">jQuery to update actual CSS</a></p>\n\n<hr>\n\n<p>To respond directly about the case you linked:</p>\n\n<p>This seems like a very strange use-case to me. A page that has a table with 1000 rows is already a bad starting position. You can't reasonably fit 1000 rows on your screen and expect any kind of useful interaction. CSS is not the problem here. If the table were smaller the performance concerns disappear.</p>\n\n<p>There are possibly other approaches than the on OP suggests. You don't need to (dynamically) add a class to each cell, you can put the class there on generation time, like:</p>\n\n<pre><code>&lt;table class=\"no-filter\"&gt;\n...\n  &lt;td class=\"filter1 filter2\"&gt;&lt;/td&gt;\n...\n&lt;/table&gt;\n</code></pre>\n\n<p>Then have something like:</p>\n\n<pre><code>table.filter1 td.filter2 { display: none; }\ntable.filter2 td.filter1 { display: none; }\n</code></pre>\n\n<p>You only change the class on the table to say which filter applies.</p>\n\n<p>CSS is more than just a hammer, it's a whole tool-set of very refined and very powerful tools. Make sure you use the right ones.</p>\n\n<hr>\n\n<p>The advantages of having static CSS should be self-apparent:</p>\n\n<ul>\n<li>Much easier to understand, test, debug and maintain.</li>\n<li>The CSS is actually in CSS (not in JavaScript).</li>\n<li>You can do templating, maybe add some visual regression tests.</li>\n</ul>\n\n<p>There are also some performance concerns. I can see browser vendors optimizing AGAINST dynamic CSS. By this I mean if there is an optimization for static CSS that reduces performance of dynamic CSS you just might make this tradeoff.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There's a library called less.js which lets you manipulate css with variables in in your.css file.It's a very good library and you might want to take a look into that.\n<a href=\"http://www.lesscss.org/\" rel=\"nofollow\">http://www.lesscss.org/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>In JavaScript we can create <code>&lt;style&gt;</code> element dynamically and append to <code>&lt;head&gt;</code> section in order to apply CSS rule for huge number of elements. </p>\n\n<ol>\n<li><p>What is advantages or disadvantages of this approach? </p></li>\n<li><p>If it is really gives performance gain comparing to javascript iteration over elements. What goes behind the scene (inside of browser)?</p></li>\n<li><p>Which one is faster or slower? Javascript iteration over elements or adding css dynamically in browser?</p></li>\n<li><p>What about processing time? processing load? </p></li>\n</ol>\n\n<p>For better understanding the issue where I used this approach see following example:</p>\n\n<p><strong>Example:</strong> If I have table with 20 or more columns and 1000 rows or more as following html:</p>\n\n<pre><code>&lt;table border=\"1\" class='no-filter'&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th data-title='id'&gt;Id&lt;/th&gt;\n            &lt;th data-title='name'&gt;Name&lt;/th&gt;\n            &lt;th data-title='family_name'&gt;Family Name&lt;/th&gt;\n            &lt;th data-title='ssn'&gt;SSN&lt;/th&gt;\n            //Other table data\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr data-id='1' data-name='nick' data-famil_name='jackson' data-ssn='123456'&gt;\n            &lt;td class=\"column column1\"&gt;1&lt;/td&gt;\n            &lt;td class=\"column column2\"&gt;Nick&lt;/td&gt;\n            &lt;td class=\"column column3\"&gt;Jackson&lt;/td&gt;\n            &lt;td class=\"column column4\"&gt;123456&lt;/td&gt;\n            //Other table data\n        &lt;/tr&gt;\n        //Other rows\n        &lt;tr data-id='809' data-name='helga' data-famil_name='jhonson' data-ssn='125648'&gt;\n            &lt;td class=\"column column1\"&gt;809&lt;/td&gt;\n            &lt;td class=\"column column2\"&gt;Helga&lt;/td&gt;\n            &lt;td class=\"column column3\"&gt;Jhonson&lt;/td&gt;\n            &lt;td class=\"column column4\"&gt;125648&lt;/td&gt;\n            //Other table data\n        &lt;/tr&gt;\n        //Other rows\n        &lt;tr data-id='1001' data-name='nick' data-famil_name='jhonson' data-ssn='216458'&gt;\n            &lt;td class=\"column column1\"&gt;1001&lt;/td&gt;\n            &lt;td class=\"column column2\"&gt;Nick&lt;/td&gt;\n            &lt;td class=\"column column3\"&gt;Jhonson&lt;/td&gt;\n            &lt;td class=\"column column4\"&gt;216458&lt;/td&gt;\n            //Other table data\n        &lt;/tr&gt;\n        //Other rows\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</code></pre>\n\n<p>If somebody needs jsFiddle example I can create one later. </p>\n\n<p><strong>Case 1:</strong> If i want to dynamically hide only table column which contain SSN data. I can apply several approach to do this. This approach can be divided into two major category. In  <strong>first category solutions</strong> I can iterate over <code>td</code> elements and dynamically change the style for the column. In <strong>second approach</strong> I can apply CSS by dynamically creating oneor use predefined CSS rules as given <a href=\"http://stackoverflow.com/questions/20984618/how-to-hide-columns-in-very-long-html-table/20986014#20986014\">here</a> by <a href=\"http://stackoverflow.com/users/722762/frits-van-campen\">@Frits van Campen</a>. (<strong>Note:</strong> <a href=\"http://stackoverflow.com/users/722762/frits-van-campen\">@Frits van Campen</a> is good solution for given case. But I want to discuss further more then manipulating table row showing and hiding.)   </p>\n\n<p>I can create dynamic CSS rule as following:</p>\n\n<pre><code>td:nth-child(3)\n{\n  display:none;\n}\n</code></pre>\n\n<p>Or apply predefined CSS rule:</p>\n\n<pre><code>table.no-filter td.column3\n{\n   display:block;\n}\ntable.filter3 td.column3 \n{ \n   display: none; \n}\n</code></pre>\n\n<p>Here are jsFiddly examples:</p>\n\n<ol>\n<li><a href=\"http://jsfiddle.net/Antindexer/7n2wg/9/\">Iteration</a> </li>\n<li><a href=\"http://jsfiddle.net/Antindexer/7n2wg/8/\">CSS on fly</a></li>\n</ol>\n\n<p>Here is time comparison using console.time method which I found <a href=\"http://stackoverflow.com/questions/16759647/browser-console-and-calculating-multiple-javascript-execution-time-differences\">here</a>. \n<img src=\"http://i.stack.imgur.com/GzKAH.png\" alt=\"enter image description here\"></p>\n\n<p>Left is dynamic css and right is iteration approach.</p>\n\n<p>Perhaps, it is not appropriate one because it calculates appending style element vs iterating over elements. All iteration over element in dynamic CSS will be done by browsers internals. However if we think our script response time dynamic css is faster. <strong>Note</strong>: iteration approach will be faster in pure JavaScript comparing to jQuery. But how much faster i do not have results. So you can more in your answers.</p>\n\n<p><strong>Case 2:</strong> Now, I want to highlight table row <code>&lt;tr&gt;</code> which contains user with name 'Nick'. Here you can note that table row has data attributes like name, family_name, id and etc. So, here again I can iterate over elements using javascript or any other library tools or can apply some dynamic rule (I do not know whether it is possible or not apply predefined filters as in case 1.)  </p>\n\n<p>CSS rule:</p>\n\n<pre><code>tr[data-name ~='nick']\n{\n    background-color:red;\n}\n</code></pre>\n\n<p>In this case I can do a lot of fun filtering by applying CSS rule dynamically.</p>\n\n<p>Update: Example given here is for simple overview of the problem. And some optimized iterations can perform equally fast in javascript. However I consider only table which does not have dipper child elements comparatively nested ul elements where traversing in order to select element can be difficult.   </p>\n\n<p><strong>Important:</strong> I only give tabel example here to make clarification with what kind of issue I faced if it is irrelevant feel free to edit the question and delete this part. Also please state your answers clearly in scope of question. Here I am not asking about 'Did I implemented in good way or not?' I am asking what is of advantages or disadvantages of dynamically creating style elements has in terms of browser internal mechanisms. </p>\n\n<p><strong>P.S. and example:</strong> Why I came with this idea? I answer recently for '<a href=\"http://stackoverflow.com/questions/20984618/how-to-hide-columns-in-very-long-html-table\">How to hide columns in very long html table</a>' question. In this question OP asks about applying CSS rule for certain table columns in long table. I suggest to create style element with rules on fly and it works fine. I think this is because style applied by browsers internal mechanisms and gives better performance than iterating through elements and applying style to each item. </p>\n",
            "last_activity_date": 1390591663,
            "question_id": 20985465,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "browser",
                "dynamic-css"
            ],
            "title": "JavaScript: Advantages and disadvantages of dynamically (on fly) creating style element"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://en.wikipedia.org/wiki/HTML5\">HTML5</a> introduced the principles of pushState, replaceState and the onpopstate occasion. These enable programatic modification of the browsers past.</p>\n\n<ul>\n<li><strong>State</strong> argument (object). This JavaScript object is used when the onpopstate event is fired (explained below).</li>\n<li><strong>Title</strong> argument (string). This string is currently used as an internal reference to the title of the page being loaded. Browsers\nhaven't implemented the document title change based on this\nparameter, although you can do it manually if required\n(document.title = \u201cyour title\u201d).</li>\n<li><p><strong>Url</strong> argument (string). This string is the new url to be \u201cloaded\u201d into the address bar. The url must be relative, or at least have the\nsame origin as the current url. As mentioned above, the browser won\u2018t\ntry to get the new url and it doesn\u2019t matter if it doesn't exist on\nthe server.</p>\n\n<pre><code>var state = {\n  \"thisIsOnPopState\": true\n};\nhistory.pushState(state, \"New Title\", \"/new-page\");\nexpect(history.state).toEqual(state);\n</code></pre></li>\n</ul>\n\n<p>You can check a working example <a href=\"https://umaar.com/demos/history/\">here</a></p>\n\n<p>pushState adds an entry to the history object. Trying adding a few entries and then using your browsers back button.</p>\n\n<pre><code>history.pushState(null, \"A new title!\", \"url\")\n</code></pre>\n\n<p>replaceState replaces the current entry on the history stack</p>\n\n<pre><code>history.replaceState(null, \"A new title!\", \"replaced\")\n</code></pre>\n\n<p><strong>List of examples that will help you</strong></p>\n\n<ul>\n<li><a href=\"http://html5.gingerhost.com\">http://html5.gingerhost.com</a></li>\n<li><a href=\"http://html5demos.com/history\">http://html5demos.com/history</a></li>\n<li><a href=\"http://blog.teamtreehouse.com/getting-started-with-the-history-api\">http://blog.teamtreehouse.com/getting-started-with-the-history-api</a></li>\n</ul>\n\n<p><strong>You can read more about manipulating browser history</strong></p>\n\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history?redirectlocale=en-US&amp;redirectslug=Web%2FGuide%2FDOM%2FManipulating_the_browser_history\">https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history?redirectlocale=en-US&amp;redirectslug=Web%2FGuide%2FDOM%2FManipulating_the_browser_history</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>You can use a plugin named \"pjax\".</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Everytime user selects/deselects, construct your URL and do an HTML5 <code>replaceState</code>:</p>\n\n<p><code>window.history.replaceState(null, \"Search Results\", \"/search-result/Aston--Martin--Bentley--BMW--Audi/Convertible--Pickup\")</code></p>\n\n<p>This will instantly change the URL <i>without</i> redirecting. Better, your URL will be <b>bookmarkable</b> on user's browser.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I am developing a website using Ajax search Like <a href=\"http://www.jabong.com/men/clothing/mens-shirts\">http://www.jabong.com/men/clothing/mens-shirts</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/L7iN7.jpg\" alt=\"enter image description here\"></p>\n\n<p>I want to show my URL looks like</p>\n\n<p><img src=\"http://i.stack.imgur.com/seplS.jpg\" alt=\"enter image description here\"></p>\n\n<p>After than when i click on <code>Audi</code> Brand the one text will add in brand parameter like</p>\n\n<pre><code>www.example.com/search-result/Aston--Martin--Bentley--BMW--Audi/Convertible--Pickup\n</code></pre>\n\n<p>Please help me. How can i change the URL without page refresh?</p>\n\n<p><strong>Edit -</strong> The Brand and Body Style is dynamic coming from database table</p>\n",
            "last_activity_date": 1385030910,
            "question_id": 20041302,
            "score": 10,
            "tags": [
                "javascript",
                "php",
                "jquery",
                "ajax",
                "html5"
            ],
            "title": "How to change URL without page refresh?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>An alternative approach:\nwrite a web page scraper pointing to this URL:</p>\n\n<p>chrome://memory-internals/</p>\n\n<p>the page has a nice Text box, with JSON summary of the Chrome memory usage.</p>\n\n<p>unfortunately, the Text box is not parsed, until the user clicks the Update button.\nAlso, the JavaScript on that page uses some internal variable 'chrome' that is not normally available.</p>\n\n<p>however - maybe there is some way to script Chrome as a user (say in AutoIT or Python?) that loads this URL in Chrome, and then presses the Update button, and then parses the JSON to get the memory usage for whatever tabs you are interested in.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The chrome dev channel has a process api, chrome.process. You can query it for a tab's process information, which includes all kinds of memory information. <a href=\"http://developer.chrome.com/extensions/processes.html\" rel=\"nofollow\">http://developer.chrome.com/extensions/processes.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How can I programatically get memory usage (JS and total) of my website in Google Chrome?</p>\n\n<p>I looked at doing it from a Chrome extension using the undocumented HeapProfiler (see <a href=\"http://stackoverflow.com/questions/17517681/chrome-debugging-protocol-heapprofiler-getheapsnapshot-ignores-callback\">here</a>), but I can't find a way to get data from that.</p>\n\n<p>I want to measure the memory consumption it at every release, so this needs to be programmatic.</p>\n\n<p>EDIT: I figured out how to get the HeapProfiler method to work. Each <code>addHeapSnapshotChunk</code> event has a chunk of a JSON object.</p>\n\n<pre><code>chrome.browserAction.onClicked.addListener(function(tab) {\n  var heapData,\n    debugId = {tabId:tab.id};\n  chrome.debugger.attach(debugId, '1.0', function() {    \n    chrome.debugger.sendCommand(debugId, 'Debugger.enable', {}, function() {\n      function headerListener(source, name, data) {\n        if(source.tabId == tab.id &amp;&amp; name == 'HeapProfiler.addProfileHeader') {\n          function chunkListener(source, name, data) {\n            if(name == 'HeapProfiler.addHeapSnapshotChunk') {\n              heapData += data.chunk;\n            } else if(name == 'HeapProfiler.finishHeapSnapshot') {\n              chrome.debugger.onEvent.removeListener(chunkListener);\n              chrome.debugger.detach(debugId);\n              //do something with data\n              console.log('Collected ' + heapData.length + ' bytes of JSON data');\n            }\n          }\n          chrome.debugger.onEvent.addListener(chunkListener);\n          chrome.debugger.sendCommand(debugId, 'HeapProfiler.getHeapSnapshot', {uid:data.header.uid, type:data.header.typeId});\n        }\n        chrome.debugger.onEvent.removeListener(headerListener);\n      }\n      chrome.debugger.onEvent.addListener(headerListener);\n      chrome.debugger.sendCommand(debugId, 'HeapProfiler.takeHeapSnapshot');\n    });\n  });\n});\n</code></pre>\n\n<p>When parsed, the JSON has nodes, edges, and descriptive metadata about the node and edge types and fields.</p>\n\n<p>Alternatively, I could use <a href=\"https://developers.google.com/chrome-developer-tools/docs/protocol/1.0/timeline\">Timeline</a> events if I just want totals.</p>\n\n<p>That said, are there any better ways than what I've found out here?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1389814933,
            "question_id": 18455644,
            "score": 10,
            "tags": [
                "javascript",
                "performance",
                "google-chrome",
                "google-chrome-devtools",
                "memory-profiling"
            ],
            "title": "Programatically get memory usage in Chrome"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><strong>Update:</strong> If you upgrade to Phonegap 3.3 you shouldn't need to do this anymore. Details on updating Phonegap: <strong><a href=\"http://phonegap.com/blog/2013/12/13/phonegap-release/\" rel=\"nofollow\">http://phonegap.com/blog/2013/12/13/phonegap-release/</a></strong></p>\n\n<p><strong>Note:</strong> Make sure in eclipse you import <strong>Existing Android Code into Workspace</strong> NOT 'Existing Projects into Workspace</p>\n\n<p>I had the exact same problem and found a solution that works:</p>\n\n<ol>\n<li>Download the source ZIP for Cordova:\n<strong><a href=\"http://cordova.apache.org/#download\" rel=\"nofollow\">http://cordova.apache.org/#download</a></strong> </li>\n<li>Extract the 'cordova-android'\nZIP anywhere. Inside will be a 'framework' folder. </li>\n<li>In eclipse open the newly unzipped 'cordova-android/framework'\nfolder as an existing project. </li>\n<li>In eclipse right click on this new 'Cordova'\n<strong>project -> Properties -> Android</strong> . Make sure 'Is Library' is checked.</li>\n<li>Right click on your app's <strong>project -> Properties -> Android</strong>. In\nthe Library section choose 'Add'. Select your Cordova project.</li>\n</ol>\n\n<p>All done, import should now resolve!</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I'm installing the new phone gap 3.0 with the all-mighty command line. </p>\n\n<pre><code>cordova create hello com.example.hello HelloWorld\ncordova platform add android\n</code></pre>\n\n<p>When I open the android project in eclipse I get this error on <code>HelloWorld.java</code>:</p>\n\n<pre><code>The import org.apache.cordova cannot be resolved\n</code></pre>\n\n<p>I guess I have a missing library but how to I solve this if the only way to install 3.0 is thought the command line.</p>\n",
            "last_activity_date": 1408432373,
            "question_id": 18097370,
            "score": 10,
            "tags": [
                "java",
                "javascript",
                "android",
                "eclipse",
                "cordova"
            ],
            "title": "New PhoneGap 3.0 The import org.apache.cordova cannot be resolved"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It sounds like the populate method is what your looking for. First make small change to your post schema:</p>\n\n<pre><code>var postSchema = new Schema({\n    name: String,\n    postedBy: {type: mongoose.Schema.Types.ObjectId, ref: 'User'},\n    dateCreated: Date,\n    comments: [{body:\"string\", by: mongoose.Schema.Types.ObjectId}],\n});\n</code></pre>\n\n<p>Then make your model:</p>\n\n<pre><code>var Post = mongoose.model('Post', postSchema);\n</code></pre>\n\n<p>Then, when you make your query, you can populate references like this:</p>\n\n<pre><code>Post.findOne({_id: 123})\n.populate('postedBy')\n.exec(function(err, post) {\n    // do stuff with post\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Addendum: No one mentioned \"Populate\" --- it is very much worth your time and money looking at Mongooses Populate Method : Also explains cross documents referencing</p>\n\n<p><a href=\"http://mongoosejs.com/docs/populate.html\" rel=\"nofollow\">http://mongoosejs.com/docs/populate.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>if I have two schemas like: </p>\n\n<pre><code>var userSchema = new Schema({\n    twittername: String,\n    twitterID: Number,\n    displayName: String,\n    profilePic: String,\n});\n\nvar  User = mongoose.model('User') \n\nvar postSchema = new Schema({\n    name: String,\n    postedBy: **User**,\n    dateCreated: Date,\n    comments: [{body:\"string\", by: mongoose.Schema.Types.ObjectId}],\n});\n</code></pre>\n\n<p>I tried to connect them together like the example above but I couldnt figure out how to do it.. Eventually if I can do something like this it would make my life very easy</p>\n\n<pre><code>var profilePic = Post.postedBy.profilePicture\n</code></pre>\n",
            "last_activity_date": 1392180771,
            "question_id": 18001478,
            "score": 10,
            "tags": [
                "javascript",
                "mongodb",
                "mongoose"
            ],
            "title": "Referencing another schema in Mongoose"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Chrome packaged apps can have cross domain permissions. When you install Postman it promts you that this app will access any domain.</p>\n\n<p>By placing <code>*/*</code> in <code>permissions</code> section of your manifest file, you can do this.</p>\n\n<p>Read more here:\n<a href=\"https://developer.chrome.com/extensions/xhr.html\">https://developer.chrome.com/extensions/xhr.html</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Sounds like the site that hosts the poll (the \"vote.php\" script) needs to have an \"Access-Control-Allow-Origin\" header set to allow posting from a list of sites (or all sites).</p>\n\n<p>A value of * for the header will allow posting from any website:</p>\n\n<pre><code>Access-Control-Allow-Origin: *\n</code></pre>\n\n<p>i.e. You could put the following at the top of vote.php</p>\n\n<pre><code>header('Access-Control-Allow-Origin: *');\n</code></pre>\n\n<p>Chrome extensions and apps are not subject to the same security limitations placed on normal webpages.</p>\n\n<p><strong>Additional debugging tips:</strong></p>\n\n<p>If you're trying to access remote services from web pages you have open on your local file system in your browser, you might find your browser applies different security rules to them than it does to files served from a web service.</p>\n\n<p>e.g. If you open local files from a locational like <code>C:\\MyDocuments\\weboot\\index.htm</code> (Windows) or <code>\\Users\\joe\\Sites\\index.html</code> (Mac) in your browser your AJAX request might not work, even with the header specified in most browsers.</p>\n\n<p>Apple's Safari applies almost no cross domain restrictions to files opened locally but Firefox is much more strict about what it permits, with Chrome somewhere in the middle. Running a web server locally (e.g. on <code>http://localhost/</code>) is a good idea to avoid unexpected behaviour.</p>\n\n<p>Additionally, other libraries that provide functions to handle Ajax requests (such as AngularJS) may require other headers to be set on the server by default. You can usually see the reason for failure in a browser debug console.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have found this very useful chrome extension called postman, this is a very useful extension especially when you are into programming RESTful applications.</p>\n\n<p>One thing I am confused on is that how this plugin/extension able to send POST request successfully on different domains?</p>\n\n<p>I tried voting in a poll using Postman like this.\n<img src=\"http://i.stack.imgur.com/YEyj0.png\" alt=\"Voting using Postman\"></p>\n\n<p>After submitting that, the vote was actually counted in, but when I tried doing that using ajax and javascript, it fails, because of different origin policy of browsers.</p>\n\n<p>How is that even possible?</p>\n\n<p>Here is my code using jquery. I used that in my computer though, localhost.</p>\n\n<pre><code>init: function() {\n    $.ajax({\n        url: 'http://domain.com/vote.php',\n        type:'POST',\n        dataType: 'html',\n        data: {\n            id: '1'\n        },\n        success: function(data) {\n        if ( data == 'voted' ) {\n            $('.set-result').html( 'you already voted. try again after 24 hours' );\n        } else {\n            $('.set-result').html( 'successfully voted' );\n        }\n    }\n    });\n},\n</code></pre>\n",
            "last_activity_date": 1417907667,
            "question_id": 16021442,
            "score": 10,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "ajax",
                "dns"
            ],
            "title": "how Postman send requests? ajax, same origin policy"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>For completeness sake I am adding a possible workaround here:</p>\n\n<p>As I have already written (and commenters suggested), this can be worked around (not fixed) by falling back to <code>setTimeout</code>. This is not trivial, since some id book-keeping needs to be done. Here is my suggested fix, that you can <a href=\"http://jsfiddle.net/yGuy/mDCB6/\">test and fork from this fiddle</a>:</p>\n\n<pre><code>var registerSetIntervalFix = function(){\n    var _setTimeout = window.setTimeout;\n    var _clearTimeout = window.clearTimeout;\n    window.setInterval = function(fn, interval){\n        var recurse = function(){\n            var newId = _setTimeout(recurse, interval);\n            window.setInterval.mapping[returnValue] = newId;\n            fn();\n        }\n        var id = _setTimeout(recurse, interval);\n        var returnValue = id;\n        while (window.setInterval.mapping[returnValue]){\n            returnValue++;\n        }\n        window.setInterval.mapping[returnValue] = id;\n        return returnValue;\n    }\n    window.setInterval.mapping = {};\n    window.clearInterval = function(id){\n        var realId = window.setInterval.mapping[id];\n        _clearTimeout(realId);\n        delete window.setInterval.mapping[id];\n    }\n}\n</code></pre>\n\n<p>The idea is to recursively call <code>setTimeout</code> to simulate recurring <code>setInterval</code> calls. There is a little overhead in this implementation since it has to perform the bookkeeping for the changing <code>id</code>s, so I wouldn't recommend applying this fix unless it is required. </p>\n\n<p>Unfortunately I am not able to come up with a \"feature\" detection algorithm (more like a \"bug\"-detection algorithm), so I guess you have to revert to good old browser detection. Also my implementation cannot deal with strings as the first argument and does not pass additional arguments to the inner function. Lastly it is not safe to call this method twice, so use it at your own risk (and feel free to improve it)!</p>\n\n<p>(Note: For our library we will stop using <code>setInterval</code> from now and instead rewrite the few parts in the code that rely on it to use <code>setTimeout</code> directly.)</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>During testing of our Javascript library I think we found a severe memory leak in IE10's (v10.0.9200.16519 - Windows 8 64 bit) Javascript implementation of <code>setInterval</code>.</p>\n\n<p>A simple test case showed that if a variable is captured in the closure of the function being passed as the argument for later execution it does not seem to ever become eligible for garbage collection, i.e. the browser still seems to hold a reference to the function or at least the closure variables. </p>\n\n<p>Our testcase executes the <code>setInterval</code> function only once and then clears the interval timer, i.e. after a while no code is running anymore and no variables are accessible anymore (as far as I can see no globals are introduced in this code, except for the method to run in <code>onload</code>), nevertheless the process takes up half a gigabyte of memory (depending on the number of iterations). </p>\n\n<p>Interestingly this does not happen if we use the <code>setTimeout</code> method instead (and also the problem does <em>not</em> seem to exist in IE9, and current versions of Chrome, FF).</p>\n\n<p>The problem can be seen with <a href=\"http://jsfiddle.net/jbpwp/\" rel=\"nofollow\">this fiddle</a>.</p>\n\n<p>Run it in a fresh instance of IE10 on Windows 8 and open the task manager to watch the memory usage. It will grow quickly to 350 Megabytes and will stay there after the script was executed.</p>\n\n<p>This is the important part of the problematic code piece:</p>\n\n<pre><code>// the function that when called multiple times will cause the leak in IE10\nvar eatMemory = function() {\n    var a = null; // the captured closure variable\n    var intervalId = setInterval(function() {\n       a = createBigArray(); // call a method that allocates a lot of memory\n       clearInterval(intervalId); // stop the interval timer\n    }, 100);\n}\n</code></pre>\n\n<p>(I know that it is easy to fix <em>this specific</em> piece of code. But that's not the point - this is just the tiniest piece of code we came up with that reproduces the problem. The real code actually captures <code>this</code> in the closure and that object is never garbage collected.)</p>\n\n<p>Is there a bug in our code or is there a way to use <code>setInterval</code> where a closure variable holds a reference to a large object without triggering the memory leak and without reverting to \"recursive\" <code>setTimeout</code> calls?</p>\n\n<p>(I also <a href=\"http://social.msdn.microsoft.com/Forums/en-US/iewebdevelopment/thread/c44421e8-26ff-4d8e-900e-dcae639f6999\" rel=\"nofollow\">posted the question on MSDN</a>)</p>\n\n<p><strong>Update:</strong> This issue also exists in IE10 on Windows 7, but does not exist if you switch to IE9-standards mode. I submitted this to MS Connect and will report progress.</p>\n\n<p><strong>Update:</strong> Microsoft <a href=\"https://connect.microsoft.com/IE/feedback/details/783448/major-memory-leak-in-ie10s-javascript-setinterval-implementation\" rel=\"nofollow\">accepted the issue</a> and reported it to be fixed in IE11 (preview version) - I haven't confirmed this myself, yet (anybody?)</p>\n\n<p><strong>Update:</strong> IE 11 has been officially released and I cannot reproduce the problem on that version with my system (Win 8.1 Pro 64bit) anymore.</p>\n",
            "last_activity_date": 1382539517,
            "question_id": 15905652,
            "score": 10,
            "tags": [
                "javascript",
                "internet-explorer",
                "memory-leaks"
            ],
            "title": "Workaround for IE10 setInterval Memory Leak"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>phantomjs-node isn't an official supported npm package for phantomjs. Instead, it implements a \"nauseously clever bridge\" between node and phantom by creating a web server that uses websockets to serve as an IPC channel between node and phantom. <a href=\"https://github.com/sgentle/phantomjs-node#no-really-how-does-it-work\">I'm not making this up</a>:</p>\n\n<blockquote>\n  <p>So we communicate with PhantomJS by spinning up an instance of ExpressJS, opening Phantom in a subprocess, and pointing it at a special webpage that turns socket.io messages into alert() calls. Those alert() calls are picked up by Phantom and there you go!</p>\n</blockquote>\n\n<p>So I wouldn't be surprised if phantomjs-node works, doesn't work, fails silently, or fails spectacularly. Nor would I expect anyone other than the author of phantomjs-node to be able to troubleshoot phantomjs-node.</p>\n\n<p>The answer to your original question is the answer from the phantomjs faq: No. Phantom and node have irreconcilable differences. Both expect to have complete control over fundamental low-level functionality like the event loop, the network stack, and JS execution so they can't cooperate within the same process.</p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>I experienced the same problems as you do, and apparently, there is a <a href=\"https://github.com/sgentle/phantomjs-node/issues/77\" rel=\"nofollow\">known issue</a> with <code>phantomjs-node</code> and newer versions of nodejs. Seems like it stopped working somewhere around node 0.9.3, according to the comments in the issue. So until that has been resolved, you either have to downgrade nodejs, or try a different module, like <a href=\"https://github.com/alexscheelmeyer/node-phantom\" rel=\"nofollow\">node-phantom</a>, or just use <code>exec/spawn</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>change your code to this, and it will be working:</p>\n\n<pre><code> var phantom = require('phantom');\n phantom.create(function(ph) {\n   ph.createPage(function(page) {\n     page.open(\"http://www.google.com\", function(status) {\n       console.log(\"opened google? \", status);\n       page.evaluate((function() {\n         return document.title;\n       }), function(result) {\n         console.log('Page title is ' + result);\n         ph.exit();\n       });\n     });\n   });\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could also give <a href=\"https://github.com/peerigon/phridge\">phridge</a> a try. Your example would've been written like this:</p>\n\n<pre><code>var phantom;\n\n// spawn a new PhantomJS process\nphridge.spawn()\n    .then(function (ph) {\n        phantom = ph;\n        return phantom.openPage(\"http://www.google.com\");\n    })\n    .then(function (page) {\n        return page.run(function () {\n            // this function runs inside PhantomJS with this bound to a webpage instance\n            return this.title;\n        });\n    })\n    .then(function (title) {\n        console.log('Page title is ' + title);\n        // terminates the process cleanly\n        phantom.dispose();\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I would like to use phantomjs in my node.js script. there is a <a href=\"https://github.com/sgentle/phantomjs-node\">phantomjs-node</a> library.. but unfortunately the author used this weird coffee script code to explain what he's doing:</p>\n\n<pre><code>phantom = require 'phantom'\n\nphantom.create (ph) -&gt;\n  ph.createPage (page) -&gt;\n    page.open \"http://www.google.com\", (status) -&gt;\n      console.log \"opened google? \", status\n      page.evaluate (-&gt; document.title), (result) -&gt;\n        console.log 'Page title is ' + result\n        ph.exit()\n</code></pre>\n\n<p>now if I were to use phantomjs directly with javascript, it would look something like <a href=\"https://github.com/ariya/phantomjs/wiki/Quick-Start\">this</a>:</p>\n\n<pre><code>var page = require('webpage').create();\npage.open(url, function (status) {\n    var title = page.evaluate(function () {\n        return document.title;\n    });\n    console.log('Page title is ' + title);\n});\n</code></pre>\n\n<p>so basically I'm trying to write up the equivalent of the first snippet of code above in normal javascript (by reading the coffee script <a href=\"http://coffeescript.org/#literals\">documentation</a>.. this is what I did:</p>\n\n<pre><code>// file name: phantomTest.js\n\nvar phantom = require('phantom');\n\nphantom.create(function(ph) {\n    ph.createPage(function(page) {\n        page.open('http://www.google.com', function(status) {\n            console.log('opened google?', status);\n            var title = page.evaluate(function() {\n                return document.title;\n            });\n            console.log('page title is ' + title);              \n        });\n    });\n    ph.exit();\n});\n</code></pre>\n\n<p>unfortunately it's not working! If I run</p>\n\n<pre><code>node phantomTest.js\n</code></pre>\n\n<p>on the shell, nothing happens.. nothing returns and the process doesn't stop.. any ideas?</p>\n\n<p><strong>update:</strong></p>\n\n<p>I just read this in the phantomjs <a href=\"http://phantomjs.org/faq.html\">faq</a>: </p>\n\n<blockquote>\n  <p>Q: Why is PhantomJS not written as Node.js module?</p>\n  \n  <p>A: The short answer: \"No one can serve two masters.\"</p>\n  \n  <p>A longer explanation is as follows.</p>\n  \n  <p>As of now, it is technically very challenging to do so.</p>\n  \n  <p>Every Node.js module is essentially \"a slave\" to the core of Node.js,\n  i.e. \"the master\". In its current state, PhantomJS (and its included\n  WebKit) needs to have the full control (in a synchronous matter) over\n  everything: event loop, network stack, and JavaScript execution.</p>\n  \n  <p>If the intention is just about using PhantomJS right from a script\n  running within Node.js, such a \"loose binding\" can be achieved by\n  launching a PhantomJS process and interact with it.</p>\n</blockquote>\n\n<p>mmm.. could this have something to do with it? but then that whole library wouldn't make sense!</p>\n\n<p><strong>update 2:</strong></p>\n\n<p>I found this code in the <a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/web-scraping-with-node-js/\">web</a> that does the same thing:</p>\n\n<pre><code>var phantom = require('phantom');\nphantom.create(function(ph) {\n  return ph.createPage(function(page) {\n    return page.open(\"http://www.google.com\", function(status) {\n      console.log(\"opened google? \", status);\n      return page.evaluate((function() {\n        return document.title;\n      }), function(result) {\n        console.log('Page title is ' + result);\n        return ph.exit();\n      });\n    });\n  });\n});\n</code></pre>\n\n<p>unfortunately that's not working either.. same result!</p>\n",
            "last_activity_date": 1401114889,
            "question_id": 15745394,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "node.js",
                "coffeescript",
                "phantomjs"
            ],
            "title": "can phantomjs work with node.js?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You should take a look at the output that your razor page is resulting. Actually, you need to know what is executed by <code>server-side</code> and <code>client-side</code>. Try this:</p>\n\n<pre><code>@{\n    int proID = 123; \n    int nonProID = 456;\n}\n\n&lt;script&gt;\n\n    var nonID = @nonProID;\n    var proID = @proID;\n    window.nonID = @nonProID;\n    window.proID = @proID;\n\n&lt;/script&gt;\n</code></pre>\n\n<p>The output should be like this:</p>\n\n<p><img src=\"http://i.stack.imgur.com/rlb7M.png\" alt=\"enter image description here\"></p>\n\n<p>Depending what version of Visual Studio you are using, it point some highlights in the design-time for views with razor.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Since razor syntax errors can become problematic while you're working on the view, I totally get why you'd want to avoid them.  Here's a couple other options.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    // @Model.Count is an int\n    var count = '@Model.Count';\n    var countInt = parseInt('@Model.ActiveLocsCount');\n&lt;/script&gt;\n</code></pre>\n\n<p>The quotes act as delimiters, so the razor parser is happy. But of course your C# int becomes a JS string in the first statement.  For purists, the second option might be better.</p>\n\n<p>If somebody has a better way of doing this without the razor syntax errors, in particular maintaining the type of the var, I'd love to see it!</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Not so much an answer as a cautionary tale: this was bugging me as well - and I thought I had a solution by pre-pending a zero and using the <code>@(...)</code> syntax. i.e your code would have been:</p>\n\n<pre><code>var nonID = 0@(nonProID);\nvar proID = 0@(proID);\n</code></pre>\n\n<p>Getting output like:</p>\n\n<pre><code>var nonId = 0123;\n</code></pre>\n\n<p>What I didn't realise was that this is how JavaScript (version 3) represents octal/base-8 numbers and is actually altering the value. Additionally, if you are using the <code>\"use strict\";</code> command then it will break your code entirely as octal numbers have been removed.</p>\n\n<p>I'm still looking for a proper solution to this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is how I solved the problem:</p>\n\n<pre><code>@{int proID = 123; int nonProID = 456;}\n\n&lt;script type=\"text/javascript\"&gt;\nvar nonID = Number(@nonProID);\nvar proID = Number(@proID);\n&lt;/script&gt;\n</code></pre>\n\n<p>It is self-documenting and it doesn't involve conversion to and from text.</p>\n\n<p>Care must be taken though, as the numbers are now objects not primitives and the exactly equals operator may behave in a non-obvious way:</p>\n\n<pre><code>var y = Number(123)\nalert(y === 123); // displays false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>It works if you do something like this:</p>\n\n<pre><code>var proID = @proID + 0;\n</code></pre>\n\n<p>Which produces code that is something like:</p>\n\n<pre><code>var proID = 4 + 0;\n</code></pre>\n\n<p>A bit odd for sure, but no more fake syntax errors at least.\nSadly the errors are still reported in VS2013, so this hasn't been properly addressed (yet).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've been looking into this approach:</p>\n\n<pre><code>function getServerObject(serverObject) {\n  if (typeof serverObject === \"undefined\") {\n    return null;\n  }\n  return serverObject;\n}\n\nvar itCameFromDotNet = getServerObject(@dotNetObject);\n</code></pre>\n\n<p>To me this seems to make it safer on the JS side... worst case you end up with a null variable.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've seen several approaches to working around the bug, and I ran some timing tests to see what works for speed (<a href=\"http://jsfiddle.net/5dwwy/\" rel=\"nofollow\">http://jsfiddle.net/5dwwy/</a>)</p>\n\n<h2>Approaches:</h2>\n\n<ol>\n<li>Direct assignment\n<p></p>\n<p>In this approach, the razor syntax is directly assigned to the variable.  This is what throws the error.  As a baseline, the JavaScript speed test simply does a straight assignment of a number to a variable.</p>\n</li>\n<li>Pass through `Number` constructor\n<p></p>\n<p>In this approach, we wrap the razor syntax in a call to the `Number` constructor, as in `Number(@ViewBag.Value)`.</p>\n</li>\n<li>ParseInt\n<p></p>\n<p>In this approach, the razor syntax is put inside quotes and passed to the `parseInt` function.</p>\n</li>\n<li>Value-returning function\n<p></p>\n<p>In this approach, a function is created that simply takes the razor syntax as a parameter and returns it.</p>\n</li>\n<li>Type-checking function\n<p></p>\n<p>In this approach, the function performs some basic type checking (looking for null, basically) and returns the value if it isn't null.</p>\n</li>\n</ol>\n\n<h2>Procedure:</h2>\n\n<p>Using each approach mentioned above, a <code>for-loop</code> repeats each function call 10M times, getting the total time for the entire loop.  Then, that for-loop is repeated 30 times to obtain an average time per 10M actions.  These times were then compared to each other to determine which actions were faster than others.</p>\n\n<p>Note that since it is JavaScript running, the actual numbers other people receive will differ, but the importance is not in the actual number, but how the numbers compare to the other numbers.</p>\n\n<h2>Results:</h2>\n\n<p>Using the Direct assignment approach, the average time to process 10M assignments was 98.033ms.  Using the <code>Number</code> constructor yielded 1554.93ms per 10M.  Similarly, the <code>parseInt</code> method took 1404.27ms.  The two function calls took 97.5ms for the simple function and 101.4ms for the more complex function.</p>\n\n<h2>Conclusions:</h2>\n\n<p>The cleanest code to understand is the Direct assignment.  However, because of the bug in Visual Studio, this reports an error and could cause issues with Intellisense and give a vague sense of being wrong.  </p>\n\n<p>The fastest code was the simple function call, but only by a slim margin.  Since I didn't do further analysis, I do not know if this difference has a statistical significance.  The type-checking function was also very fast, only slightly slower than a direct assignment, and includes the possibility that the variable may be null.  It's not really practical, though, because even the basic function will return undefined if the parameter is undefined (null in razor syntax).</p>\n\n<p>Parsing the razor value as an int and running it through the constructor were extremely slow, on the order of 15x slower than a direct assignment.  Most likely the <code>Number</code> constructor is actually internally calling <code>parseInt</code>, which would explain why it takes longer than a simple <code>parseInt</code>.  However, they do have the advantage of being more meaningful, without requiring an externally-defined (ie somewhere else in the file or application) function to execute, with the <code>Number</code> constructor actually minimizing the visible casting of an integer to a string.</p>\n\n<p>Bottom line, these numbers were generated running through 10M iterations.  On a single item, the speed is incalculably small.  For most, simply running it through the <code>Number</code> constructor might be the most readable code, despite being the slowest.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>@{\nint proID = 123; \nint nonProID = 456;\n}\n\n&lt;script&gt;\n\nvar nonID = '@nonProID';\nvar proID = '@proID';\nwindow.nonID = '@nonProID';\nwindow.proID = '@proID';\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Can someone format the code below so that I can set srcript variables with c# code using razor?</p>\n\n<p>The below does not work, i've got it that way to make is easy for someone to help.</p>\n\n<pre><code>@{int proID = 123; int nonProID = 456;}\n\n&lt;script type=\"text/javascript\"&gt;\n    @{\n\n     &lt;text&gt;  \n\n    var nonID =@nonProID;\n    var proID= @proID;\n    window.nonID = @nonProID;\n    window.proID=@proID;\n\n    &lt;/text&gt;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>I am getting a design time error</p>\n\n<p><img src=\"http://i.stack.imgur.com/ptrsT.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1415392791,
            "question_id": 14866539,
            "score": 10,
            "tags": [
                "c#",
                "javascript",
                "asp.net-mvc",
                "razor"
            ],
            "title": "How to set javascript variables using MVC4 with Razor"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Have you tried something like this:</p>\n\n<pre><code>$(function () {\n    e = $.Event('keypress');\n    e.which = 65; //A\n    $('#test').val(String.fromCharCode(e.which));\n});\u200b\n</code></pre>\n\n<p>Also here is a working example: <a href=\"http://jsfiddle.net/WsrWk/\" rel=\"nofollow\">http://jsfiddle.net/WsrWk/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can send key events, and anything listening for them will get them, <strong>but they will not change the input</strong>, so you will not see the letter <code>A</code> appear, for example.  This is mostly a security thing; see <a href=\"http://www.howtocreate.co.uk/tutorials/javascript/domevents#domevld1\">\"Manually firing events\"</a> for a discussion about that.</p>\n\n<p>So, if you want the letter to appear, you must alter the input's value as you send the key event.  There is a jQuery plugin for that, see <a href=\"http://bililite.com/blog/2011/01/23/improved-sendkeys/\">\"The <code>$.fn.sendkeys</code> Plugin\"</a>.</p>\n\n<p>You can see how an <code>&lt;input&gt;</code> reacts with user-applied keys, key events, and that plugin at <a href=\"http://jsfiddle.net/DxER9/\"><strong>this jsFiddle</strong></a>.</p>\n\n<p>For reference, this is the key piece of code from that jsFiddle:</p>\n\n<pre><code>$(\"button\").click ( function (zEvent) {\n    if (zEvent.target.id == \"simA_plain\") {\n        console.log (\"Send Plain key event\");\n        var keyVal = 65;\n        $(\"#eventTarg\").trigger ( {\n            type: 'keypress', keyCode: keyVal, which: keyVal, charCode: keyVal\n        } );\n    }\n    else {\n        console.log (\"Use the Plugin to simulate a keystroke\");\n        $(\"#eventTarg\").sendkeys (\"B\") ;\n    }\n} );\n</code></pre>\n\n<hr>\n\n<hr>\n\n<p>That plugin should be sufficient if you are just trying to \"simulate typing on an <code>&lt;input&gt;</code>\".  However, depending on what you are <em>really</em> trying to do, you may need to do one or more of the following:</p>\n\n<ol>\n<li>Just set the text to what you want it to be.</li>\n<li>Send a <code>keydown</code> event, if the page's javascript triggers off of that.</li>\n<li>Likewise, send a <code>change</code> event, etc., if the page's javascript triggers off of that.</li>\n<li>Just find and call the page's javascript directly.  Use <em>script injection</em>, the <em>location hack</em>, <code>unsafeWindow</code>, and/or <code>@grant none</code> mode to do that.</li>\n<li>Something else?  State your true objective and link to the target page.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>What I want is to simulate typing in <code>&lt;input&gt;</code> field using javascript.</p>\n\n<p>I have the following code:</p>\n\n<pre><code>var press = jQuery.Event(\"keydown\");\npress.ctrlKey = false;\npress.which = 65;\n$(\"#test\").trigger(press);\n</code></pre>\n\n<p>But when I load the page, the <code>#test</code> input field has no typed characters,  the keycode of '65' represents 'A', but there is no 'A' input.</p>\n\n<p>Basically what I want is to automatically typing in the website using Greasemonkey. </p>\n\n<p>Please give me some ideas or some library with which I can use to do this.<br>\nThanks a lot!</p>\n",
            "last_activity_date": 1355897901,
            "question_id": 13944835,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "greasemonkey",
                "keyboard-events",
                "textinput"
            ],
            "title": "How to simulate typing in input field using jQuery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>foo.bar !== undefined</code> checks just those 2 values to see if they match.</p>\n\n<p>While <code>'bar' in foo</code> will have to use some mechanism to loop through the properties of <code>foo</code> to see if <code>bar</code> is in it.</p>\n\n<p>Here is an interesting Read from  Ecma-script</p>\n\n<blockquote>\n  <h1>The in operator</h1>\n  \n  <p>The production RelationalExpression : RelationalExpression in ShiftExpression is evaluated as follows:<br>\n  1. Evaluate RelationalExpression.<br>\n  2. Call GetValue(Result(1)).<br>\n  3. Evaluate ShiftExpression.<br>\n  4. Call GetValue(Result(3)).<br>\n  5. If Result(4) is not an object, throw a TypeError exception.<br>\n  6. Call ToString(Result(2)).<br>\n  7. Call the [[HasProperty]] method of Result(4) with parameter Result(6).<br>\n  8. Return Result(7).<br></p>\n  \n  <h1>The Strict Does-not-equal Operator ( !== ) <br></h1>\n  \n  <p>The production EqualityExpression : EqualityExpression !== RelationalExpression is evaluated as follows:<br>\n  1. Evaluate EqualityExpression.<br>\n  2. Call GetValue(Result(1)).<br>\n  3. Evaluate RelationalExpression.<br>\n  4. Call GetValue(Result(3)).<br>\n  5. Perform the comparison Result(4) === Result(2). (See below.)<br>\n  6. If Result(5) is true, return false. Otherwise, return true.<br></p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You're right. It makes no sense for <code>\"bar\" in foo</code> to be slower than <code>foo.bar</code>.</p>\n\n<p>The only reason <code>in</code> isn't just as fast is that it hasn't received as much attention from JIT engineers as the much more common <code>foo.bar</code> syntax.</p>\n\n<p>Especially in the case in your jsperf test, where the property <em>does</em> exist as a direct property on <code>foo</code> itself (not a prototype), it stands to reason that <code>'bar' in foo</code> shouldn't be any slower than <code>foo.bar !== undefined</code>. If anything, it should be faster. The main difference between the two is that <code>in</code> can be answered without even checking the value of the property!</p>\n\n<p>In the <code>foo.bar</code> case, I expect both the V8 engine and the SpiderMonkey engine will detect that the code isn't doing anything useful (that is, it has no observable effects) and optimize it away entirely. The benchmark isn't measuring any actual work.</p>\n\n<p>Apparently engines are not yet smart enough to optimize away <code>\"bar\" in foo</code>, but it's only a matter of time. And priorities.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>See <a href=\"http://jsperf.com/in-vs-member-object-access\">http://jsperf.com/in-vs-member-object-access</a></p>\n\n<p>Essentially, why is checking <code>if ('bar' in foo) {}</code> significantly slower than <code>if (foo.bar !== undefined) {}</code>?</p>\n",
            "last_activity_date": 1407528781,
            "question_id": 13866442,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Why is Javascript&#39;s &quot;in&quot; operator consistently slower than strict member comparison to undefined?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The <code>.</code> after the digits represents the decimal point of the number, you'll have to use another one to access a property or method.</p>\n\n<pre><code>3..times(function() { console.log(\"hi\"); });\n</code></pre>\n\n<p>This is only necessary for decimal literals. For octal and hexadecimal literals you'd use only one <code>.</code>.</p>\n\n<pre><code>03.times(function() { console.log(\"hi\"); });//octal\n0x3.times(function() { console.log(\"hi\"); });//hexadecimal\n</code></pre>\n\n<p>Also exponential</p>\n\n<pre><code>3e0.times(function() { console.log(\"hi\"); });\n</code></pre>\n\n<p>You can also use a space since a space in a number is invalid and then there is no ambiguity.  </p>\n\n<pre><code>3 .times(function() { console.log(\"hi\"); });\n</code></pre>\n\n<p>Although as stated by <code>wxactly</code> in the comments a minifier would remove the space causing the above syntax error.</p>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>In Ruby, you can do this:</p>\n\n<pre><code>3.times { print \"Ho! \" } # =&gt; Ho! Ho! Ho!\n</code></pre>\n\n<p>I tried to do it in JavaScript:</p>\n\n<pre><code>Number.prototype.times = function(fn) {\n    for (var i = 0; i &lt; this; i++) {\n        fn();\n    }\n}\n</code></pre>\n\n<p>This works:</p>\n\n<pre><code>(3).times(function() { console.log(\"hi\"); });\n</code></pre>\n\n<p>This doesn't</p>\n\n<pre><code>3.times(function() { console.log(\"hi\"); });\n</code></pre>\n\n<p>Chrome gives me a syntax error: \"Unexpected token ILLEGAL\". Why?</p>\n",
            "last_activity_date": 1388353033,
            "question_id": 12272581,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Why doesn&#39;t JavaScript let you call methods on numbers directly?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If data[0] contains the name of the field and data[1] contains the value then you can do the following:</p>\n\n<p>You can do something like this for text boxes:</p>\n\n<pre><code>$(\"[name=\"+data[0]+\"]\").val(data[1]);\n</code></pre>\n\n<p>Then something like this for selects:</p>\n\n<pre><code>$(\"[name=\"+data[0]+\"]\").val(data[1]);\n</code></pre>\n\n<p>Please note that check boxes and radio buttons are only serialized if they are checked. </p>\n\n<p>So something like this for check boxes (before jQuery 1.6+):</p>\n\n<pre><code>$(\"[name=\"+data[0]+\"]\").attr('checked','checked');\n</code></pre>\n\n<p>The radio button might need some additional work depending on how you're differentiating between the different ones. (I.E. Id, value, etc..)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'd say the easiest way would be something along these lines:</p>\n\n<pre><code>// reset form values from json object\n$.each(data, function(name, val){\n    var $el = $('[name=\"'+name+'\"]'),\n        type = $el.attr('type');\n\n    switch(type){\n        case 'checkbox':\n            $el.attr('checked', 'checked');\n            break;\n        case 'radio':\n            $el.filter('[value=\"'+val+'\"]').attr('checked', 'checked');\n            break;\n        default:\n            $el.val(val);\n    }\n});\n</code></pre>\n\n<p>Basically, the only ones that are odd are the checkboxes and radios because they need to have their checked property, well, <em>checked</em>. The radios are a little more complex than the checkboxes because not only do we need to check them, we need to find the right ONE to check (using the value). Everything else (inputs, textareas, selectboxes, etc.) should just have its value set to the one that's returned in the JSON object.</p>\n\n<p>jsfiddle: <a href=\"http://jsfiddle.net/2xdkt/\">http://jsfiddle.net/2xdkt/</a></p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>I suggest you change the way you are making an ajax request. Use .post()</p>\n\n<pre><code>$.post(\"my_save_script.php\", {\n         data: myData,\n    }, function(data) {\n        $.each(data, function(i, item){\n            $(\"#\"+item.field).val(item.value);\n        });      \n    }, \n\"json\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an HTML form, that I save to the database via ajax.  To get the query string of key/value pairs, I have used the very convenient <code>serialize</code> function, like this:</p>\n\n<pre><code>var myData = $(\"form#form_id\").serialize();\n$.ajax({\n    url: \"my_save_script.php\",\n    type: \"post\",\n    data: myData,\n    success: function(msg){\n        alert(msg);\n    }\n});\n</code></pre>\n\n<p>Now I want to load a blank form, and re-populate it with the data from the database, which is delivered from an ajax call as a JSON string.  I have been able to get a Javascript object with the correct key/value pairs like this:</p>\n\n<pre><code>data = $.parseJSON(data);\ndata = data[0];\n</code></pre>\n\n<p>What is the simplest, most elegant way to re-populate the form?  </p>\n\n<p>keep in mind the input elements of the form are text, select, checkbox, and radio.  The names of the input elements are the same as the names of the database columns, and are the keys of the key/value pairs in the above <code>data</code> object.  This is why the <code>serialize</code> function works so well for me</p>\n",
            "last_activity_date": 1334611755,
            "question_id": 9807426,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "forms",
                "populate"
            ],
            "title": "Use jquery to re-populate form with JSON data"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Yes it is.</p>\n\n<p>Create your own ApplicationServlet extending class like this:</p>\n\n<pre><code>public class MyApplicationServlet extends ApplicationServlet {\n\n    @Override\n    protected void writeAjaxPageHtmlVaadinScripts(Window window,\n            String themeName, Application application, BufferedWriter page,\n            String appUrl, String themeUri, String appId,\n            HttpServletRequest request) throws ServletException, IOException {\n\n        page.write(\"&lt;script type=\\\"text/javascript\\\"&gt;\\n\");\n        page.write(\"//&lt;![CDATA[\\n\");\n        page.write(\"document.write(\\\"&lt;script language='javascript' src='./jquery/jquery-1.4.4.min.js'&gt;&lt;\\\\/script&gt;\\\");\\n\");\n        page.write(\"//]]&gt;\\n&lt;/script&gt;\\n\");\n\n        super.writeAjaxPageHtmlVaadinScripts(window, themeName, application,\n            page, appUrl, themeUri, appId, request);\n    }\n}\n</code></pre>\n\n<p>Then replace the Vaadin servlet in your web.xml (the default is <code>com.vaadin.terminal.gwt.server.ApplicationServlet</code>):</p>\n\n<pre><code>&lt;servlet-class&gt;com.example.MyApplicationServlet&lt;/servlet-class&gt;\n</code></pre>\n\n<p>You can then make jQuery calls in your code by calling:</p>\n\n<pre><code>MyApplication.getMainWindow().executeJavascript(jQueryString);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>One more customizing for ApplicationServlet:</p>\n\n<pre><code>public class VaadinApplicationServlet extends ApplicationServlet {\n\n    @Override\n    protected void writeAjaxPageHtmlHeader(BufferedWriter page, String title, String themeUri, HttpServletRequest request) throws IOException {\n        page.write(\"&lt;script language='javascript' src='http://code.jquery.com/jquery-1.8.0.min.js'&gt;&lt;/script&gt;\");\n        super.writeAjaxPageHtmlHeader(page, title, themeUri, request);\n    }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use the @JavaScript and @StyleSheet annotations</p>\n\n<pre><code>@StyleSheet({\n                /*\n                 * JQuery UI\n                 */\n                \"vaadin://jquery/jquery-ui-1.9.2.custom/css/ui-darkness/jquery-ui-1.9.2.custom.min.css\",\n})\n\n@JavaScript({   \n                /*\n                 * JQuery\n                 */\n                \"vaadin://jquery/jquery-1.11.1.min.js\",\n\n                /*\n                 * JQuery UI \n                 */\n                \"vaadin://jquery/jquery-ui-1.9.2.custom/js/jquery-ui-1.9.2.custom.min.js\",\n})\n\npublic class MyUI extends UI {\n ...\n}\n</code></pre>\n\n<p>For execution:</p>\n\n<pre><code>JavaScript.getCurrent().execute(\"...javascript code here...\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>As Vaadin is a Java web application framework, so is it possible to insert the jquery javascript snippet in the Vaadin java code?</p>\n",
            "last_activity_date": 1419857419,
            "question_id": 9303534,
            "score": 10,
            "tags": [
                "java",
                "javascript",
                "jquery",
                "vaadin"
            ],
            "title": "Is is possible to use jQuery inside of Vaadin framework?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>Router.navigate('about', true);\n</code></pre>\n\n<p>That  way you can trigger a route manually.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Assuming you want to do this for more than just the About page, use:</p>\n\n<pre><code>route = Backbone.history.fragment;\nyourRouter.navigate(route, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Using Backbone 0.9.2 you pass in an options object and set 'trigger' to 'true'.</p>\n\n<pre><code>router.navigate('some/route', { trigger : true });\n</code></pre>\n\n<p>Reference: <a href=\"http://documentcloud.github.com/backbone/#Router-navigate\" rel=\"nofollow\">http://documentcloud.github.com/backbone/#Router-navigate</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>Backbone.history.loadUrl(Backbone.history.fragment);\n</code></pre>\n\n<p>The solution for your specific problem isn't really documented and it seems the suggested best practice is to just call the function that is declared in the route you want to fire :/</p>\n\n<p>Ref: <a href=\"https://github.com/documentcloud/backbone/issues/1214\">https://github.com/documentcloud/backbone/issues/1214</a></p>\n\n<p>So far the other answers are correct, but they forgot to mention that if the hash navigated to is the same as the current hash, nothing will fire. </p>\n",
                    "is_accepted": false,
                    "score": 39
                },
                {
                    "body": "<p>Since the Backbone router looks for changes in the URL fragment you want to load, what worked for me is to navigate to '/' first without trigger, and then subsequently to the URL (fragment) you want to hit with the trigger.  You could probably build this into the default router behavior pretty easily if you wanted.</p>\n\n<p>e.g. </p>\n\n<pre><code>App.Routers.appRouter.navigate '/', {trigger: false}\nApp.Routers.appRouter.navigate myPath, {trigger: true}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Thanks for the suggestion @eddywashere, truly awesome. I added a little edit to mine that checks if you're on the last (most currentl) url, and if so, loads that history. Pretty simple, thought it might help someone with the same issue.</p>\n\n<pre><code>$(\"[data-href]\").on \"click\", (e) =&gt;\n  e.preventDefault()\n  href = $(e.currentTarget).data(\"href\")\n  # if we're on the same route, reload it anyways\n  if (_.last (@history)) is href\n    Backbone.history.loadUrl(_.last @history)\n  else\n    @router.navigate href, true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another option : you can add a parameter with a random value, so hash will be different for each call, even if you call the same page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to trigger same location route in backbone.js, for example when location is <code>/My/App/#/About</code> and user clicks again on anchor with the same route in order to refresh the page content.</p>\n",
            "last_activity_date": 1390983227,
            "question_id": 8550841,
            "score": 10,
            "tags": [
                "javascript",
                "routes",
                "backbone.js"
            ],
            "title": "Trigger same location route"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here's an example of overriding webview loading to stay within your webview or to leave:</p>\n\n<pre><code>import android.app.Activity;\nimport android.os.Bundle;\nimport android.webkit.WebView;\nimport android.webkit.WebViewClient;\n\npublic class TestWebViewActivity extends Activity {\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n\n        WebView webView = (WebView) findViewById(R.id.webview);\n        webView.setWebViewClient(new MyWebViewClient());\n    }\n}\n\n\nclass MyWebViewClient extends WebViewClient {\n    @Override\n    public boolean shouldOverrideUrlLoading(WebView view, String url) {\n        if(url.contains(\"somePartOfYourUniqueUrl\")){ // Could be cleverer and use a regex\n            return super.shouldOverrideUrlLoading(view, url); // Leave webview and use browser\n        } else {\n            view.loadUrl(url); // Stay within this webview and load url\n            return true;\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>So what I have is basicly a simple webview wich loads a page. This page has a few links that opens within the webview. That's what it supposed to do, so it's working all fine.</p>\n\n<p>But there is one single link from that page wich should load as a popup, so I want it to open in the normal browser when people click it. But as I stated, all links are opening in the webview, so that link does it also.</p>\n\n<p>My question is, how can I make this link open in the normal browser as a kind of a popup? Is it even possible? The link is variable so it's changing always, it cannot be hardcoded within the application to open in a new browser browser.</p>\n\n<p>Can someone tell me if it's possible and how to do it? Thank you very much! </p>\n",
            "last_activity_date": 1324080560,
            "question_id": 8540343,
            "score": 10,
            "tags": [
                "java",
                "javascript",
                "android",
                "webview"
            ],
            "title": "Open link from Android Webview in normal browser as popup"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You need to use <a href=\"http://expressjs.com/guide.html#req.flash%28%29\">flash notifications</a>, and it is built into express.</p>\n\n<p>You'll add a message like so: <code>req.flash(\"error\", \"Invalid form...\");</code></p>\n\n<p>You'll need a dynamic handler to add the messages to your rendered template, or you can check out the ones TJ has made for express. (<a href=\"https://github.com/visionmedia/express-messages\">express-messages</a>)</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You could simply have it redirect as <code>res.redirect('..?error=1')</code></p>\n\n<p>the ? tag tells the browser that it is a set of optional parameters and the .. is just a pathname relative recall (like calling cd .. on terminal to move back one directory)\nand you're browser will direct to the appropriate page with that tag at the end: <code>http://.....?error=1</code></p>\n\n<p>then you can simply pull the error on the appropriate page  by doing a:</p>\n\n<p><code>if (req.param(\"error\" == 1)) { \n// do stuff bassed off that error match\n};</code></p>\n\n<p>you can hardcode in several different error values and have it respond appropriately depending on what error occurred</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In my Node.js application, I have a function (routed by Express) which presents a form to the user:</p>\n\n<pre><code>app.get('/register', function (req, res) {\n  res.render('form');\n});\n</code></pre>\n\n<p>I have another function, routed to the same URL, but which handles POST requests, which receives the data submitted by the previous form. If the form does not validate, it redirects the user back to the form; otherwise, it does what should be done:</p>\n\n<pre><code>app.post('/register', function (req, res) {\n  if (validate(req.registerForm)) return res.redirect('back');\n  persistStuff(req.registerForm, function (err, data) {\n    // Do error verification etc.\n    res.redirect('back')\n  });\n});\n</code></pre>\n\n<p>What I want to do is to send a error message to be presented, in the line:</p>\n\n<pre><code>if (validate(req.registerForm)) return res.redirect('back');\n</code></pre>\n\n<p>To write something like</p>\n\n<pre><code>if (validate(req.registerForm)) return res.render('form', {msg:'invalid'});\n</code></pre>\n\n<p>is unacceptable because I want to follow the POST-REDIRECT-GET pattern. I could do something like</p>\n\n<pre><code>if (validate(req.registerForm)) return res.redirect('/register?msg=invalid');\n</code></pre>\n\n<p>but it would hardcode an URL in my code and I'd prefer to avoid it.  Is there another way to do it?</p>\n",
            "last_activity_date": 1384422675,
            "question_id": 7079048,
            "score": 10,
            "tags": [
                "javascript",
                "redirect",
                "node.js",
                "express"
            ],
            "title": "Passing error message to template through redirect in Express/Node.js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var myDate = new Date('2011-06-02T09:34:29+02:00');\nalert(myDate);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>If your string is an ISO8601 string, you can just pass it into the Date constructor and get a Date object back out:</p>\n\n<pre><code>var date = new Date('2011-06-02T09:34:29+02:00');\n</code></pre>\n\n<p>According to <a href=\"http://dev.enekoalonso.com/2010/09/21/date-from-iso-8601-string/\" rel=\"nofollow\">http://dev.enekoalonso.com/2010/09/21/date-from-iso-8601-string/</a> though, this might have issues in IE and other platforms. It recommends you do something like this for compatibility:</p>\n\n<pre><code>function dateFromISO8601(isostr) {\n    var parts = isostr.match(/\\d+/g);\n    return new Date(parts[0], parts[1] \u2013 1, parts[2], parts[3], parts[4], parts[5]);\n}\n\nvar myDate = dateFromISO8601(\"2011-06-02T09:34:29+02:00\");\nconsole.log(myDate);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>IE 8 and below, and older versions of the other browsers do not implement the ISO Date format. A problem is that some of the browsers do return a date, instead of NaN, just not the correct one.</p>\n\n<p>You can write your own method,  if you want to support them. The time zone is the tricky bit.</p>\n\n<p>This example will run once and set a Date.fromISO method- if the native method is supported it will use it.</p>\n\n<pre><code>(function(){\nvar D= new Date('2011-06-02T09:34:29+02:00');\nif(isNaN(D) || D.getUTCMonth()!== 5 || D.getUTCDate()!== 2 ||\nD.getUTCHours()!== 7 || D.getUTCMinutes()!== 34){\n    Date.fromISO= function(s){\n        var day, tz,\n        rx=/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):(\\d\\d))?$/,\n        p= rx.exec(s) || [];\n        if(p[1]){\n            day= p[1].split(/\\D/);\n            for(var i= 0, L= day.length; i&lt;L; i++){\n                day[i]= parseInt(day[i], 10) || 0;\n            }\n            day[1]-= 1;\n            day= new Date(Date.UTC.apply(Date, day));\n            if(!day.getDate()) return NaN;\n            if(p[5]){\n                tz= (parseInt(p[5], 10)*60);\n                if(p[6]) tz+= parseInt(p[6], 10);\n                if(p[4]== '+') tz*= -1;\n                if(tz) day.setUTCMinutes(day.getUTCMinutes()+ tz);\n            }\n            return day;\n        }\n        return NaN;\n    }\n    // remove test:\n    alert('ISO Date Not correctly implemented');\n}\nelse{\n    Date.fromISO= function(s){\n        return new Date(s);\n    }\n    // remove test:\n    alert('ISO Date implemented');\n}\n})()\n\n\n// remove test\nvar D=Date.fromISO('2011-06-02T09:34:29+02:00');\nalert(D.toUTCString())\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>What is the best way to get a Javascript Date object from a string like the following one:</p>\n\n<pre><code>2011-06-02T09:34:29+02:00 ?\n</code></pre>\n\n<p>I have trouble with the time zone part (obviously).</p>\n",
            "last_activity_date": 1384457568,
            "question_id": 6228302,
            "score": 10,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "javascript Date ISO8601"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Triggering HTML controls with JS is a very gray area, partly because of security reasons, and partly due to lack of support. Even using frameworks like jQuery, you cannot simply <code>click()</code> a link to follow it in the same way as <code>click()</code> on a button - you need to trigger a native click event at the browser level (I believe the latest version of Selenium does this, but that's a testing framework so unsuitable for this problem).  Congrats on being able to achieve a partial result in Chrome! However, you will not find a universal solution that uses real select inputs.</p>\n\n<p>I would suggest using a different type of control - either a vertical stack of buttons if you want to press one to activate a feature, or a stack of radio buttons backed by labels (with a little CSS) if you want a multi-choice format.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Have you tried the <a href=\"http://api.jquery.com/change/\" rel=\"nofollow\"><code>change()</code></a> method?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The select element needs to be visible.\nIf you use JQuery you can do it as follows:</p>\n\n<p>$('mySelectElementSelector').focus();</p>\n\n<p>On mobile it will show the default select control. On desktop just focus to the select control.</p>\n\n<p>I hope it is helpful.\nCheers,\nDoruk</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have a working solution for this that works on recent versions of iOS and Android. I haven't yet tested on older versions. There are no two ways about it: this solution is a hack. But it works if implemented carefully.</p>\n\n<p>In my situation I had iOS7 like toggle switch element. I wanted the the picker view for the <code>select</code>  to be presented when the switch was turned on. In my case we did not need or want the user to see the <code>select</code> field itself. We merely wanted to use iOS' nice scrolly-picker interface.</p>\n\n<p>I used CSS to position and stretch the <code>select</code> completely over the switch. I then set the <code>opacity</code> in CSS to something like <code>opacity: .001;</code> which makes it invisible for all intents and purposes. It may still work with opacity 0 but I felt leaving a little opacity there may be safer and you really can't see it all anyway. Now when the user taps the area of the screen that is displaying the switch the tap events are actually going to the <code>select</code> which causes the picker view to display.</p>\n\n<p>On the <code>onchange</code> event of the <code>select</code> I set <code>display: none;</code> to completely hide the select. This means that when the user touches the switch to turn it off they are interacting with the switch itself. When the switch is toggled off I then set <code>display: block</code> to return the select to its active state.</p>\n\n<p>My use case is narrow but the position/opacity technique should be adaptable to many use cases though you may have to have 2 <code>select</code> elements in cases where you want the field to be visible.</p>\n\n<p>Here is a screenshot demoing the technique. The <code>opacity</code> is set to 0.25 in this screenshot for demo purposes. When you set it to 0.001 you can't see the <code>select</code></p>\n\n<p><img src=\"http://i.stack.imgur.com/U7GBd.png\" alt=\"Screenshot of technique with opacity set higher for demo purposes\"></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm not hopeful, but I'll ask just in case.</p>\n\n<p>I would like to be able to use JavaScript to open a select element in mobile Safari for iPhone/iPad.</p>\n\n<p>An extensive Google / Stack Overflow search shows that a lot of people would like to be able to do this in browsers in general, but it is not supported (why not, I wonder?). Various hacks have been suggested, from calling <code>focus()</code> on the select element and changing its <code>size</code> property to make more <code>option</code> elements visible, or constructing an entirely mock select element with <code>&lt;div&gt;</code> and <code>&lt;ul&gt;</code> elements. I would, however, like to use the native browser select controls in iPad and iPhone.</p>\n\n<p>I wondered, just maybe, someone might know of a proprietary Apple WebKit method to do this. It would be something like:</p>\n\n<pre><code>var myselect = document.getElementsByTagName(\"select\")[0];\nmyselect.open(); // this method doesn't exist\n</code></pre>\n\n<p>As a bonus, it'd also be handy to know of a boolean property that says whether the select element is currently open/active, or not (i.e. not just whether the element has focus). I know I can work this out by tracking click and change events, but a simple property would be useful.</p>\n\n<p>Wishful thinking?</p>\n\n<hr>\n\n<p><strong>UPDATE:</strong><br>\nI don't yet have the answer, but I've found that simulating a <code>mousedown</code> successfully opens a select element in Google Chrome, but not iPad or Firefox and so on:</p>\n\n<pre><code>function simulateMouseEvent(eventName, element) {\n  var evt = document.createEvent(\"MouseEvents\");\n  evt.initMouseEvent(eventName, true, true, window,\n    0, 0, 0, 0, 0, false, false, false, false, 0, null);\n  element.dispatchEvent(evt);\n}\n\nsimulateMouseEvent(\"mousedown\", select);\n</code></pre>\n\n<p><strong>UPDATE:</strong><br>\nI've asked a related, but different (and similarly unanswered!) question on select boxes here: <a href=\"http://stackoverflow.com/questions/6207929/is-there-a-dom-event-that-fires-when-an-html-select-element-is-closed\">Is there a DOM event that fires when an HTML select element is closed?</a></p>\n",
            "last_activity_date": 1398290082,
            "question_id": 6097240,
            "score": 10,
            "tags": [
                "javascript",
                "iphone",
                "html",
                "ios",
                "ipad"
            ],
            "title": "JavaScript on iOS: opening an HTML select element"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes. The following will do it in all major browsers, with an option to select the inserted content afterwards as requested in the comments (although this part is not implemented for IE &lt;= 8):</p>\n\n<p>Live demo: <a href=\"http://jsfiddle.net/bXsWQ/147/\">http://jsfiddle.net/bXsWQ/147/</a></p>\n\n<p>Code:</p>\n\n<pre><code>function replaceSelection(html, selectInserted) {\n    var sel, range, fragment;\n\n    if (typeof window.getSelection != \"undefined\") {\n        // IE 9 and other non-IE browsers\n        sel = window.getSelection();\n\n        // Test that the Selection object contains at least one Range\n        if (sel.getRangeAt &amp;&amp; sel.rangeCount) {\n            // Get the first Range (only Firefox supports more than one)\n            range = window.getSelection().getRangeAt(0);\n            range.deleteContents();\n\n            // Create a DocumentFragment to insert and populate it with HTML\n            // Need to test for the existence of range.createContextualFragment\n            // because it's non-standard and IE 9 does not support it\n            if (range.createContextualFragment) {\n                fragment = range.createContextualFragment(html);\n            } else {\n                // In IE 9 we need to use innerHTML of a temporary element\n                var div = document.createElement(\"div\"), child;\n                div.innerHTML = html;\n                fragment = document.createDocumentFragment();\n                while ( (child = div.firstChild) ) {\n                    fragment.appendChild(child);\n                }\n            }\n            var firstInsertedNode = fragment.firstChild;\n            var lastInsertedNode = fragment.lastChild;\n            range.insertNode(fragment);\n            if (selectInserted) {\n                if (firstInsertedNode) {\n                    range.setStartBefore(firstInsertedNode);\n                    range.setEndAfter(lastInsertedNode);\n                }\n                sel.removeAllRanges();\n                sel.addRange(range);\n            }\n        }\n    } else if (document.selection &amp;&amp; document.selection.type != \"Control\") {\n        // IE 8 and below\n        range = document.selection.createRange();\n        range.pasteHTML(html);\n    }\n}\n</code></pre>\n\n<p>Example:</p>\n\n<pre><code>replaceSelection('&lt;span&gt;&lt;font color=\"red\"&gt;hoho&lt;/font&gt;&lt;/span&gt;', true);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>You can use the Rangy library\n<a href=\"http://code.google.com/p/rangy/\">http://code.google.com/p/rangy/</a></p>\n\n<p>You can then do</p>\n\n<pre><code>var sel = rangy.getSelection();\nvar range = sel.getRangeAt(0);\n\nrange.deleteContents();\nvar node = range.createContextualFragment('&lt;span&gt;&lt;font color=\"red\"&gt;hoho&lt;/font&gt;&lt;/span&gt;');\nrange.insertNode(node);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Is there a simple js function I can use to replace the current document's selection with some html of mine?</p>\n\n<p>For instance say the document contains a <code>&lt;p&gt;AHAHAHA&lt;/p&gt;</code> somewhere and user selects the 1st \"ha\" text chunk.</p>\n\n<p>Now I want to replace this with something like: <code>&lt;span&gt;&lt;font color=\"red\"&gt;hoho&lt;/font&gt;&lt;/span&gt;</code></p>\n\n<p>When I google for *<em>javascript replace selection *</em> I can't get a simple straightforward answer!</p>\n",
            "last_activity_date": 1399244822,
            "question_id": 5393922,
            "score": 10,
            "tags": [
                "javascript",
                "selection"
            ],
            "title": "javascript replace selection all browsers"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I guess it's just because the onblur event is called <em>as a result</em> of the input losing focus, there isn't a <em>blur</em> action associated with an input, like there is a <em>click</em> action associated with a button</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This:</p>\n\n<pre><code>document.getElementById('myField').onblur();\n</code></pre>\n\n<p>works because your element (the <code>&lt;input&gt;</code>) has an attribute called \"onblur\" whose value is a function. Thus, you can call it.  You're <strong>not</strong> telling the browser to simulate the actual \"blur\" event, however; there's no event object created, for example.</p>\n\n<p>Elements do not have a \"blur\" attribute (or \"method\" or whatever), so that's why the first thing doesn't work.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Contrary to what pointy says, the <code>blur()</code> method does exist and is a part of the <a href=\"http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-6043025\">w3c standard</a>. The following exaple will work in every modern browser (including IE):</p>\n\n<pre><code>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Javascript test&lt;/title&gt;\n        &lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n            window.onload = function()\n            {\n                var field = document.getElementById(\"field\");\n                var link = document.getElementById(\"link\");\n                var output = document.getElementById(\"output\");\n\n                field.onfocus = function() { output.innerHTML += \"&lt;br/&gt;field.onfocus()\"; };\n                field.onblur = function() { output.innerHTML += \"&lt;br/&gt;field.onblur()\"; };\n                link.onmouseover = function() { field.blur(); };\n            };\n        &lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;form name=\"MyForm\"&gt;\n            &lt;input type=\"text\" name=\"field\" id=\"field\" /&gt;\n            &lt;a href=\"javascript:void(0);\" id=\"link\"&gt;Blur field on hover&lt;/a&gt;\n            &lt;div id=\"output\"&gt;&lt;/div&gt;\n        &lt;/form&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Note that I used <code>link.onmouseover</code> instead of <code>link.onclick</code>, because otherwise the click itself would have removed the focus. </p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I have a input tag with an oblur event listener:</p>\n\n<pre><code>&lt;input id=\"myField\" type=\"input\" onblur=\"doSomething(this)\" /&gt;\n</code></pre>\n\n<p>Via javascript, I want to trigger the blur event on this input so that it, in turn, calls the doSomething function.</p>\n\n<p>My initial thought is to call blur:</p>\n\n<pre><code>document.getElementById('myField').blur()\n</code></pre>\n\n<p>But that doesn't work (though no error).</p>\n\n<p>This does:</p>\n\n<pre><code>document.getElementById('myField').onblur()\n</code></pre>\n\n<p>Why is that? .click() will call the click event attached to an element via the onclick listener. Why does blur() not work the same way?</p>\n",
            "last_activity_date": 1314693259,
            "question_id": 5212651,
            "score": 10,
            "tags": [
                "javascript",
                "blur"
            ],
            "title": "blur() vs. onblur()"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try out following</p>\n\n<pre><code>var obj = {\n   fn1: function() {\n   } \n}\n\nobj.fn2 = function() {} // this will add another member to existing object\n</code></pre>\n\n<p>Hope this will help.</p>\n\n<p>Thanks!</p>\n\n<p>Hussain.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>you can use prototype for that...</p>\n\n<pre><code>obj.prototype.fn2 = function() {\n ....\n}\n</code></pre>\n\n<p>or just simply</p>\n\n<pre><code>obj.fn2 = function() {\n ....\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>It's quite simple actually:</p>\n\n<pre><code>obj.fn2 = function() { }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As others have pointed out:</p>\n\n<pre><code>obj.fn2 = function(){ ... };\n</code></pre>\n\n<p>Note that if \"fn2\" is not a valid identifier, you must instead use the 'array' notation for the object:</p>\n\n<pre><code>obj[\"fn2\"] = function(){ ... };\nobj[\"!! crazy-names#allowed?!\"] = function(){ ... };\n</code></pre>\n\n<p>This is also how you would do it if you had the name of the property stored in a variable:</p>\n\n<pre><code>var propName = \"fn2\";\nobj[propName] = function(){ ... };\n</code></pre>\n\n<p>If you want to test if a property exists for an object, you can use the <code>in</code> operator:</p>\n\n<pre><code>if (\"fn2\" in obj){ ... }\n</code></pre>\n\n<p>If you want to remove a property from an object, use the <code>delete</code> keyword:</p>\n\n<pre><code>var o = { a:42 };\nconsole.log( \"a\" in o ); // true\ndelete o.a;              // Or delete o[\"a\"]\nconsole.log( \"a\" in o ); // false\n</code></pre>\n\n<p>To iterate over all properties in an object, use the <code>in</code> operator in a for loop. Be sure to <code>var</code> the variable so that it isn't global:</p>\n\n<pre><code>var o = { a:42, b:17 };\nvar allPropertyNames  = [];\nvar allPropertyValues = [];\nfor (var propName in o){\n  // If you don't do this test, propName might be a property inherited\n  // by this object, and not a property on the object itself.\n  if (o.hasOwnProperty(propName)){\n    allPropertyNames.push(propName);\n    allPropertyValues.push(o[propName]);\n  }\n}\nconsole.log( allPropertyNames );  // [ \"a\", \"z\" ]\nconsole.log( allPropertyValues ); // [ 42, 17 ]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                }
            ],
            "body": "<p>Suppose we have the following object:</p>\n\n<pre><code>var obj = {\n    fn1: function() {\n    }\n}\n</code></pre>\n\n<p>how can I dynamically add another member to it, say</p>\n\n<pre><code>fn2: function() {}\n</code></pre>\n",
            "last_activity_date": 1294205131,
            "question_id": 4601008,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Adding members to an existing object"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I don't see why you can't put it above \"function includeGA()\" in the include.js. Actually, I don't see why you can't copy the whole google script literally into the include.js (without the $ workaround). This should be inlined by the script-include tag, right?</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This appears to be a similar question to this one: <a href=\"http://stackoverflow.com/questions/3263818/using-google-analytics-asynchnonous-code-from-external-js-file\">http://stackoverflow.com/questions/3263818/using-google-analytics-asynchnonous-code-from-external-js-file</a></p>\n\n<p>It seems pushing the code into an external file removes the benefit of the new asynchronus code.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Then again: <strong>don't</strong> put your Google Async snippet in an <strong>external file</strong> because it will <strong>block</strong> other contents from downloading. The main point of having an <strong>asynchronous</strong> tracking code is to make it <strong>parallel</strong>.</p>\n\n<p>If you use the asynchronous GA just put it in the <strong>top</strong> of you document in an <strong>inline script tag</strong>. This is the <strong>recommendation</strong> on <a href=\"http://code.google.com/apis/analytics/docs/tracking/asyncTracking.html\">Google Analytics website</a> as well:</p>\n\n<blockquote>\n  <p>Insert the asynchronous snippet at the\n  <strong>bottom of the <code>&lt;head&gt;</code> section</strong> of your\n  pages, after any other scripts your\n  page or template might use.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You shouldn't put GA code in function for two reasons:</p>\n\n<ol>\n<li>The variables of GA become local. They need to be used globally.</li>\n<li>You're calling the function only when the whole of page (document, technically) is loaded. This makes the download process serial (defeating the parallelism of asyn analytics).</li>\n</ol>\n\n<p>People criticizing the use of external JS for GA code, are bit wrong here. With introduction of <em>async</em> attribute in js embed, it makes sense. I keep this GA code in external js and embed it async right in the head of document. Two benefits:</p>\n\n<ol>\n<li>Keeps the code neat (no inline GA)</li>\n<li>Caches the js- saves bandwidth &amp; loads faster</li>\n</ol>\n\n<p>So the HTML would become:</p>\n\n<pre><code>&lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"static/scripts.js\" async&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n\n<p>and <code>scripts.js</code> will have:</p>\n\n<pre><code>var _gaq=_gaq||[];\n_gaq.push(['_setAccount','UA-XXXXXXXX-1']);\n_gaq.push(['_setDomainName','.domain.net']);\n_gaq.push(['_trackPageview']);\n(function(){\n    var ga=document.createElement('script');\n    ga.type='text/javascript';\n    ga.async=true;\n    ga.src=('https:'==document.location.protocol?'https://ssl':'http://www')+'.google-analytics.com/ga.js';\n    var s=document.getElementsByTagName('script')[0];s.parentNode.insertBefore(ga,s)\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>New Google Analytics code looks like one below:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n var _gaq = _gaq || [];\n _gaq.push(['_setAccount', 'UA-0000000-00']);\n _gaq.push(['_trackPageview']);\n\n (function() {\n  var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n  ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n })();\n\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>How to move the whole new Google Analytics Asynchronous Tracking Code into an external JavaScript file?</strong> </p>\n\n<p>I'm asking especially about \"var _gaq = _gaq || []; [...]\" part because I know it's possible to move the rest e.g.</p>\n\n<p><em>index.html</em></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n var _gaq = _gaq || [];\n _gaq.push(['_setAccount', 'UA-0000000-00']);\n _gaq.push(['_trackPageview']);\n\n&lt;/script&gt;\n&lt;script src=\"include.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p><em>include.js</em></p>\n\n<pre><code>function includeGA()\n{\n var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n}\n\n$(document).ready(function()\n{\n includeGA();\n});\n</code></pre>\n\n<p>I've already tried to place the \"var _gaq = _gaq || []; [...]\" code into various locations but nothing worked.</p>\n",
            "last_activity_date": 1351520573,
            "question_id": 3870345,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "google-analytics"
            ],
            "title": "New Google Analytics code into external file"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can get the data by row id. So you can do following:</p>\n\n<pre><code>var index = 2; // zero-based index of row so it means the 3rd row\nvar rowId = jQuery('#list tr:eq('+index+')').attr('id');\n</code></pre>\n\n<p>(here I suppose that the <code>&lt;table&gt;</code> element of your jqGrid has id=\"list\"). After you know the id of the row you can get the row data with respect of <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki:methods\" rel=\"nofollow\">getRowData</a> method or the data from one cell only with respect of <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki:methods\" rel=\"nofollow\">getCell</a> method:</p>\n\n<pre><code>var dataFromTheRow = jQuery('#list').jqGrid ('getRowData', rowId);\nvar dataFromCellByColumnIndex = jQuery('#list').jqGrid ('getCell', rowId, 7);\nvar dataFromCellByColumnName = jQuery('#list').jqGrid ('getCell', rowId, 'Tax');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Please, be carefull with methods <strong>getCell</strong> and <strong>getRowData</strong> if case you are editing the row or cell.\n\"This will return the cell content and not the actuall value of the input element.\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How I can retrieve data from jqgrid row, if I have only the number of the row?</p>\n\n<p>For example, what do I have to do if I want the id column of the 3rd row?</p>\n",
            "last_activity_date": 1417563732,
            "question_id": 3758915,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid"
            ],
            "title": "JQuery and JqGrid retrieve data from row"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>.trim(), .ajax() etc are static methods, meaning they are bound to the jQuery constructor and not it's prototype. </p>\n\n<pre><code>jQuery.noConflict();\n$ = function(selector,context){ return new jQuery.fn.init(selector,context||example.doc); };\n$.fn = $.prototype = jQuery.fn;\njQuery.extend($, jQuery); // copy's trim, extend etc to $\n</code></pre>\n\n<p>However a perhaps nice way is to leave jQuery intact and do the following:</p>\n\n<pre><code>var fromDoc = $(document);\n// and if you want to find stuff:\nfromDoc.find('div').doSomething();\nfromDoc.find('.someClass').doSomethingElse();\n</code></pre>\n\n<p>This is also an optimisation since the context doesnt have to be manually set anymore with each query.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Another way of doing it is overriding the constructor:</p>\n\n<pre><code>var initjQuery = jQuery.fn.init;\n$.fn.init = function(s,c,r) {\n    c = c || window.document;\n    return new initjQuery(s,c,r);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var jQueryInit = $.fn.init;\n\n$.fn.init = function(arg1, arg2, rootjQuery){\n    arg2 = arg2 || window.document;\n    return new jQueryInit(arg1, arg2, rootjQuery);\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to use jQuery inside a Firefox extension, and actually want to use jQuery to manipulate the DOM of the current page, as opposed to the context of the XUL file. Thus, I load jQuery in my XUL file, and pass it to some of my scripts in a sandbox (using the Greasemonkey extension compiler <a href=\"http://arantius.com/misc/greasemonkey/script-compiler\">http://arantius.com/misc/greasemonkey/script-compiler</a>). Since jQuery was not loaded with the page DOM, I want to set its selector context to the page DOM instead of always passing it into jQuery calls.</p>\n\n<p>I followed the solution at <a href=\"http://stackoverflow.com/questions/491490/how-to-use-jquery-in-firefox-extension\">http://stackoverflow.com/questions/491490/how-to-use-jquery-in-firefox-extension</a> and it almost achieves what I want.</p>\n\n<pre><code>jQuery.noConflict();\n$ = function(selector,context){ return new jQuery.fn.init(selector,context||example.doc); };\n$.fn = $.prototype = jQuery.fn;\n</code></pre>\n\n<p>I'm able to make calls to the jQuery() function, and the page DOM will be used as the context. However, I can't use functions like jQuery.trim as those are not defined.</p>\n\n<p>I thought this line from the solution</p>\n\n<pre><code>$.fn = $.prototype = jQuery.fn;\n</code></pre>\n\n<p>will let my own jQuery object inherit all of the jQuery prototype properties, but it apparently doesn't.</p>\n\n<p>Give a vanilla jQuery object, how do I redefine it to use a certain element as the selector context, while preserving all jQuery functions?</p>\n",
            "last_activity_date": 1339648748,
            "question_id": 3690447,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "firefox-addon",
                "greasemonkey"
            ],
            "title": "Override default jQuery selector context"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Your php page is cached. Has nothing to do with the interval. Set the right caching headers on the page.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try disabling the cache with <code>ajaxSetup</code></p>\n\n<pre><code>$.ajaxSetup ({\n    // Disable caching of AJAX responses */\n    cache: false\n});\n\nfunction updateComm() {  \n var url=\"commandSys.php\";  \n jQuery(\"#theElement\").load(url);  \n}\n\nsetInterval(updateComm, 1000);\n</code></pre>\n\n<p>Alternatively, you can manually just append a <code>+new Date</code>  to <code>url</code> so it appends a query string to prevent caching.</p>\n\n<p>Alternatively, disable caching on the server-side.</p>\n",
                    "is_accepted": true,
                    "score": 16
                }
            ],
            "body": "<p>I'm using JavaScript/Jquery to make a page auto-update with a value from a database, although it doesn't seem to update in Internet Explorer. It works fine in FireFox &amp; Chrome. Can anyone explain what's wrong? It looks like IE is just displaying a cached version of the page. How can I prevent this happening? Thanks.</p>\n\n<pre><code>function updateComm() {  \n var url=\"commandSys.php\";  \n jQuery(\"#theElement\").load(url);  \n}\n\nsetInterval(\"updateComm()\", 1000);\n</code></pre>\n",
            "last_activity_date": 1400924227,
            "question_id": 3426510,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer",
                "refresh",
                "setinterval"
            ],
            "title": "Problem with IE and setInterval() not refreshing/updating"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Might have to do with the fact that it enforces you to escape <code>/</code> characters, perhaps he wanted a more unique character to use as the notation. </p>\n\n<p><code>/test//</code> is invalid, while <code>/test\\//</code> is a valid regex.</p>\n\n<p>Whereas in some languages you can actually specify the denotion character in a string, eg:</p>\n\n<pre><code>$regex = '#test/#';\n</code></pre>\n\n<p>Where <code>#</code> symbols do the denotion.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>He really isn't very clear on what he means by semicolon insertion being a mistake.  Perhaps he means semicolons as statement delimiters.  If that's the case, I disagree.  Without semicolons code obfuscators/minifiers don't run on your code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I could imagine that the regex literal notation is a hindrance for evolving the regex engine decoupled from the language specification.</p>\n\n<p>If all regexes were strings, they were always valid at the language level, and the regex engine could interpret them more freely.</p>\n\n<p>But that's just a guess. I have no idea what Crockford meant with his statement. </p>\n\n<p>Personally I find regex literals rather helpful. The are a lot less verbose than the <code>new RegExp(pattern, flags)</code> alternative with its need to adhere to both regex escaping <em>and</em> string escaping rules (<code>\"Path\\\\\\\\with\\\\\\\\backslashes\"</code>, anyone?). I can't see the huge benefit for <em>this</em> notation, other than for dealing with dynamic regexes.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Possibly messed up with slashes used for comments and division per <a href=\"https://www.youtube.com/watch?v=v2ifWcnQs6M#t=5551\" rel=\"nofollow\">this</a> or because \"they should be one line with no white space or commentary inserted to it\" per <a href=\"https://www.youtube.com/watch?v=RO1Wnu-xKoY#t=4053\" rel=\"nofollow\">this</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I was reading Douglas Crockford's web page, <a href=\"http://www.crockford.com/javascript/javascript.html\"><em>JavaScript: The World's Most Misunderstood Programming Language</em></a>, and I couldn't help but notice that, under Design Errors, he mentions \"the notation for literal regular expressions.\" What exactly is he talking about? What's wrong with JavaScript's notation for regular expressions, and why?</p>\n",
            "last_activity_date": 1420640657,
            "question_id": 3078418,
            "score": 10,
            "tags": [
                "javascript",
                "regex",
                "syntax",
                "literals"
            ],
            "title": "What&#39;s wrong with JavaScript&#39;s regular expression notation?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The canvas element has a global alpha attribute that lets you apply partial transparency to anything you draw.  See: <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-globalalpha\">whatwg</a>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>It's possible if you iterate thru the canvas' image-data and set the alpha value manually, then export the transparent image with the canvas.toDataURL method and insert it into another canvas. Read more about this concept right here:\n<a href=\"http://letmein.at/js/how-to-create-transparency-in-images-with-html5canvas/\" rel=\"nofollow\">How to create transparency in images with canvas</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can do this using the globalAlpha property, like this:</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;canvas height=\"100\" width=\"100\" id=\"myCanvas\"&gt;&lt;/canvas&gt;\n        &lt;script&gt;\n            var canvas = document.getElementById(\"myCanvas\");\n            var context = canvas.getContext(\"2d\");\n            context.globalAlpha = 0.5;\n            var myImage = new Image();\n            myImage.src = \"someImage.jpg\";\n            myImage.onload = function()\n            {\n                context.drawImage(myImage, 0, 0, 100, 100);\n            };\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>And yes, it does work with images.  Verified with IE 9, FF 5, Safari 5, and Chrome 12 on Win 7.</p>\n",
                    "is_accepted": false,
                    "score": 14
                }
            ],
            "body": "<p>I am targeting google chrome.  Is it possible to draw transparent images on a canvas?  By transparent I mean the drawing the entire image at something like 50% opacity. </p>\n",
            "last_activity_date": 1340106698,
            "question_id": 2916938,
            "score": 10,
            "tags": [
                "javascript",
                "html5",
                "canvas",
                "transparency"
            ],
            "title": "How to draw transparent image with html5 canvas element"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can save off a variable in the scope of the constructor to hold a reference to <code>this</code>.</p>\n\n<p><strong>Please Note:</strong> In your example, you left out <code>var</code> before <code>privateMethod = function()</code> making that <code>privateMethod</code> global.  I have updated the solution here:</p>\n\n<pre><code>function Class()\n{\n  // store this for later.\n  var self = this;\n  this.publicMethod = function()\n  {\n    alert(\"hello\");\n  }\n\n  var privateMethod = function()\n  {\n    // call the method on the version we saved in the constructor\n    self.publicMethod();\n  }\n\n  this.test = function()\n  {\n    privateMethod();\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The accepted answer has the possibly undesirable side effect that separate copies of <code>publicMethod</code>, <code>test</code>, and <code>privateMethod</code> will be created in each instance. The idiom for avoiding this is:</p>\n\n<pre><code>function Class()\n{}\n\nClass.prototype=(function()\n{\n    var privateMethod = function(self)\n    {\n        self.publicMethod();\n    }\n\n\n    return \n    {\n        publicMethod: function()\n        {\n            alert(\"hello\");\n        },\n        test: function()\n        {\n            privateMethod(this);\n        }\n    };\n}());\n</code></pre>\n\n<p>In other words, you need to pass the <code>this</code> to the private function as an argument. In return, you get a <strong>true</strong> prototype without having to pollute each instance with its own versions of the private and public functions.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>torazaburo's answer is the best one, as it avoids creation of multiple copies of the private members. I'm surprised that Crockford doesn't mention it at all. Alternately, depending on the syntax you prefer for declaring public member functions, you could do this:</p>\n\n<pre><code>function Class()\n{}\n\n(function() {\n    var privateMethod = function(self) {\n        self.publicMethod();\n    };\n\n    Class.prototype.publicMethod = function() {\n        alert('hello');\n    };\n\n    Class.prototype.test = function() {\n        privateMethod(this);\n    };\n}());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Is this approach not a advisable one? I am not sure though</p>\n\n<pre><code>var klass = function(){\n  var privateMethod = function(){\n    this.publicMethod1();\n  }.bind(this);\n\n  this.publicMethod1 = function(){\n    console.log(\"public method called through private method\");\n  }\n\n  this.publicMethod2 = function(){\n    privateMethod();\n  }\n}\n\nvar klassObj = new klass();\nklassObj.publicMethod2();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way to call \"public\" javascript functions from \"private\" ones within a class?</p>\n\n<p>Check out the class below:</p>\n\n<pre><code>function Class()\n{\n    this.publicMethod = function()\n    {\n        alert(\"hello\");\n    }\n\n    privateMethod = function()\n    {\n        publicMethod();\n    }\n\n    this.test = function()\n    {\n        privateMethod();\n    }\n}\n</code></pre>\n\n<p>Here is the code I run:</p>\n\n<pre><code>var class = new Class();\nclass.test();\n</code></pre>\n\n<p>Firebug gives this error:</p>\n\n<p><strong>publicMethod is not defined: [Break on this error] publicMethod();</strong></p>\n\n<p>Is there some other way to call publicMethod() within privateMethod() without accessing the global class variable [i.e. class.publicMethod()]?</p>\n",
            "last_activity_date": 1396423531,
            "question_id": 2703582,
            "score": 10,
            "tags": [
                "javascript",
                "oop",
                "private",
                "public"
            ],
            "title": "Accessing &quot;Public&quot; methods from &quot;Private&quot; methods in javascript class"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This should do the trick:</p>\n\n<pre><code>$(\"form\").submit(function() {\n   $(\":submit\", this).attr(\"disabled\", \"disabled\");\n});\n</code></pre>\n\n<p><strong>No JQuery?</strong></p>\n\n<p>Alternatively, you can make a check from db to check if a record already exist and if so, don't insert new one.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>How about disabling the button on submit?  That's what I do. It works fine.</p>\n\n<pre><code>$('form').submit(function(){\n    $('input[type=submit]', this).attr('disabled', 'disabled');\n});\n</code></pre>\n\n<p>Disclaimer:<br>\nThis only works when javascript is enabled on the user's browser. If the data that's being submitted is critical (like a credit card purchase), then consider my solution as only the first line of defense.  For many use cases though, disabling the submit button will provide enough prevention.</p>\n\n<p>I would implement this javascript-only solution first. Then track how many duplicate records are still getting created.  If it's zero (or low enough to not care), then you're done.  If it's too high for you, then implement a back-end database check for an existing record.  </p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Here is bit of jQuery that I use to avoid the double click problem.  It will only allow one click of the submit button.</p>\n\n<pre><code>$(document).ready(function() {\n  $(\"#submit\").one('click', function() {\n  });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Preventing the double posting is not so simple as disabling the submit buttont. There are other elements that may submit it:</p>\n\n<ul>\n<li>button elements</li>\n<li>img elements</li>\n<li>javascripts</li>\n<li>pressing 'enter' while on some text field</li>\n</ul>\n\n<p>Using jQuery data container would be my choice. Here's an example:</p>\n\n<pre><code>$('#someForm').submit(function(){\n    $this = $(this);\n\n    /** prevent double posting */\n    if ($this.data().isSubmitted) {\n        return false;\n    }\n\n    /** do some processing */\n\n    /** mark the form as processed, so we will not process it again */\n    $this.data().isSubmitted = true;\n\n    return true;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>One technique I've seen used is to assign a unique ID to every form that's opened, and only accept one submission per form based on the ID.</p>\n\n<p>It also means you can check how many times people aren't bothering to submit at all, and you can check if the submission genuinely came from your form by checking if it's got an ID that your server created.</p>\n\n<p>I know you asked for a javascript solution, but personally I'd do both if I needed the robustness.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The problem with the method described <a href=\"http://stackoverflow.com/a/2635675/74324\">here</a> is that if you're using a javascript validation framework and the validation fails, you won't be able to correct and re-submit the form without refreshing the page.</p>\n\n<p>To solve this, you need to plug into the success event of your validation framework and only then, set the submit control to disabled.  With <a href=\"http://parsleyjs.org/\" rel=\"nofollow\">Parsley</a>, you can plug into the form validated event with the following code: </p>\n\n<pre><code>$.listen('parsley:form:validated', function(e){\n    if (e.validationResult) {\n        /* Validation has passed, prevent double form submissions */\n        $('button[type=submit]').attr('disabled', 'disabled');\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I keep getting duplicate entries in my database because of impatient users clicking the submit button multiple times.</p>\n\n<p>I googled and googled and found a few scripts, but none of them seem to be sufficient.</p>\n\n<p>How can I prevent these duplicate entries from occurring using javascript or preferably jQuery?</p>\n\n<p>Thanx in advance!</p>\n",
            "last_activity_date": 1396016784,
            "question_id": 2635652,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "forms"
            ],
            "title": "How can I prevent a double submit with jQuery or Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I think the unary plus operator applied to anything would cause it to be converted into a number.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>It converts the <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Objects/Date\" rel=\"nofollow\"><code>Date()</code></a> into an integer, giving you the current number of milliseconds since January 1, 1970. </p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Nicol\u00e1s and Brian are right, but if you're curious about how it works, <code>+new Date();</code> is equivalent to <code>(new Date()).valueOf();</code>, because the <a href=\"http://bclary.com/2004/11/07/#a-11.4.6\">unary <code>+</code> operator</a> gets the <em>value of</em> its operand expression, and then converts it <a href=\"http://bclary.com/2004/11/07/#a-9.3\"><code>ToNumber</code></a>.</p>\n\n<p>You could add a <code>valueOf</code> method on any object and use the unary + operator to return a <em>numeric representation</em> of your object, e.g.:</p>\n\n<pre><code>var productX = {\n  valueOf : function () {\n    return 500; // some \"meaningful\" number\n  }\n};\n\nvar cost = +productX; // 500\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                }
            ],
            "body": "<p>Looking through the jQuery source in the function <code>now()</code> I see the following:</p>\n\n<pre><code>function now(){\n    return +new Date;\n}\n</code></pre>\n\n<p>I've never seen the plus operator prepended to the new operator like this.  What does it do?</p>\n",
            "last_activity_date": 1262216383,
            "question_id": 1983040,
            "score": 10,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What does the &#39;+new&#39; mean in JavaScript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en/DOM/window.onmouseout\" rel=\"nofollow\"><code>onmouseout</code></a> event on a window instead</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Using only javascript, no prototype or jquery etc.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n  var mouseX = 0;\n  var mouseY = 0;\n  var counter = 0;\nvar mouseIsIn = true;\nfunction wireEvent() {\nwindow.addEventListener(\"mouseout\",\n    function(e){\n        mouseX = e.pageX;\n        mouseY = e.pageY;\n    \tif ((mouseY &gt;= 0 &amp;&amp; mouseY &lt;= window.innerHeight)\n    \t&amp;&amp; (mouseX &gt;= 0 &amp;&amp; mouseX &lt;= window.innerWidth))\n    \t\treturn;\n        //do something for mouse out\n    \tcounter++;\n    \tmouseIsIn = false;\n    \tdocument.getElementById('in_out').innerHTML='out' + counter;\n    },\n    false);\nwindow.addEventListener(\"mouseover\",\n    function(e){\n    \tif(mouseIsIn)\n    \t\treturn;\n        //do something for mouse over\n    \tcounter++;\n    \tmouseIsIn = true;\n    \tdocument.getElementById('in_out').innerHTML='in' + counter;\n    },\n    false);\n}\n&lt;/script&gt; \n&lt;/head&gt;\n&lt;body onload=\"wireEvent();\"&gt;\n&lt;div id=\"in_out\"&gt;&amp;nbsp;&lt;/div&gt;\n&lt;div style=\"width:300px; height: 200px; background: red;\"&gt;Dummy element&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>UPDATE:</strong><br />\nAdded check for mouse position on <code>mouseout</code> triggered when moving in/out elements within the body. If it's within the window, <code>mouseout</code> event is not triggered.<br />\nAlso introduced a flag for current status of mouse 'in' or 'out' using <code>mouseIsIn</code>. If it is <code>true</code>, <code>mouseover</code> will not trigger too.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Perhaps you can set a listener for mouseover and mouseout <code>document</code>, <code>body</code> or some other element that wraps the entire document, and use that (by saving that it happened) as a trigger to determine whether it is a valid mouseout on window?</p>\n\n<p>Failing that, your first idea (regarding position check) should work pretty good. Any event passes along the X/Y the event occured. If it is anything farther than height/width of the window, you left the actual window. If it is negative anything, you left the window. And, possibly, if it is exactly the height/width or exactly top: 0 or left: 0, then you left the window.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your problem comes from mouseout events being generated for elements <em>inside</em> the window, which then bubble up as described in the <a href=\"http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-flow\" rel=\"nofollow\">W3C events spec</a>. You can check which element the event was actually fired on:</p>\n\n<pre><code>function mouseoutFunction(event) {\n  event = event || window.event;\n  var sender = event.srcElement || event.target;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>SUMMARY:</strong> This can be done cleanly by checking the relatedTarget property during the mouseout event. If relatedTarget is not a child of document, then the mouse just left the window. It's easy to do yourself, but if you don't want to, some libraries (Mootools, future Prototype..) have baked-in functionality, and others (current Prototype) have extensions available. On IE, you could instead use mouseleave, which is a non-bubbling version of mouseout.</p>\n\n<p>Details:</p>\n\n<p>IE has events called mouseenter and mouseleave that are non-bubbling versions of mouseover and mouseout. Other browsers do not, but if they did, setting a mouseleave listener on window or document would do the trick.</p>\n\n<p>A gentleman named Ken Snyder comes to the rescue:</p>\n\n<blockquote>\n  <p>On a mouseover, the relatedTarget\n  property references the node from\n  which the pointer came. On a mouseout,\n  the relatedTarget property references\n  the node to which the pointer went.On\n  any event, the scope is the node to\n  which the event is attached.When the\n  relatedTarget is a not child of the\n  currentTarget, a mouseover event is\n  equivalent to a mouseenter event and a\n  mouseout event is equivalent to a\n  mouseleave event.</p>\n</blockquote>\n\n<p>-- <a href=\"http://kendsnyder.com/archives/6-MouseEnter-and-MouseLeave.html\">http://kendsnyder.com/archives/6-MouseEnter-and-MouseLeave.html</a></p>\n\n<p>This makes it possible to implement mouseenter and mouseleave in other browsers. In fact, Ken provides same Prototype code to do so: <a href=\"http://kendsnyder.com/sandbox/enterleave/MouseEnterLeave.js\">http://kendsnyder.com/sandbox/enterleave/MouseEnterLeave.js</a></p>\n\n<p>Duroth pointed out in comments that MooTools already includes something similar. (Thanks Duroth.) It sounds like the upcoming Prototype release (1.6.2) may include this functionality, but I can't find anything definite.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Here is my solution based on a timer. The timer here is basically used to give a chance for other event handlers (specifically, onmouseover) to execute before deciding that the mosue is out of the window. The timeout of 1ms (actually around 33ms, there is a minimum timer resolution) gives a little time for the mouseover to occur if it already hasn't. </p>\n\n<pre><code>var inWin=0;\nwindow.onmouseout = function(e)\n{\n   inWin--;\n   setTimeout(checkIfOut, 1);\n}\nwindow.onmouseover = function(e)\n{\n   inWin++;\n}\n\nfunction checkIfOut()\n{\n   if(!inWin)\n   {\n     //Yay! Mouse is out of the window (probably)\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>When the mouse leaves any element, including the window, the window object will fire a <code>mouseout</code> event and pass the <code>event</code> object along with it. </p>\n\n<p>One of the items in the event object is called <code>toElement</code>, which is a pointer to the element the mouse just entered when it left the old one. But when the mouse leaves the window, there is no such <code>toElement</code> so this item becomes <code>null</code>.</p>\n\n<p>By testing whether or not this item is <code>null</code> on a <code>mouseout</code> event, you can tell if the mouse left the window. Here is the code:</p>\n\n<pre><code>window.onmouseout=function(event){ \n  if(event.toElement===null) console.log('the mouse left the window'); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'd like some Javascript code to run when the mouse leaves the browser window. I only need to support Safari (WebKit.)</p>\n\n<p>I tried putting a mouseout handler on window. That handler is reliably called when the mouse leaves the browser window. But because of bubbling it is also called when the mouse moves between elements in the document. I can't figure out how to determine when the mouse has actually left the window and when it has only moved between elements.</p>\n\n<p>When the mouse leaves the window, exactly one event is generated, and the target element appears to be the element the mouse was actually over. So checking to see if the target element is window or document doesn't work. And wrapping the whole page in an invisible containing div doesn't work either: if the div is invisible, then the mouse will never be over it, so nothing changes. </p>\n\n<p>(The same thing happens if I put the handler on document or document.body, except that surprisingly document.body does not get mouseover/mouseout events when the mouse enters or leaves an empty part of the window, such as the empty vertical space created by absolutely positioning an element with bottom:0. For that space, document and window will get mouseover/mouseout events with the target being &lt;html&gt;, but document.body will not.)</p>\n\n<p>Some ideas I had:</p>\n\n<ul>\n<li>On each mouseout event, get the actual position of the mouse and see if it is in fact over the window. But I don't know if this is actually possible and it sounds like it would be tricky to eliminate all of the race conditions.</li>\n<li>Also register a mouseover handler and detect cases where mouseout is not proceeded by (or followed shortly by a) a mouseover. But that would require a timer.</li>\n</ul>\n\n<p>We use prototype.js so ideally I'd like to express the solution in terms of prototype's Event.observe, but I can figure that part out.</p>\n\n<p>Thanks for any suggestions!</p>\n",
            "last_activity_date": 1399688859,
            "question_id": 1672142,
            "score": 10,
            "tags": [
                "javascript",
                "ajax",
                "safari",
                "prototypejs",
                "mouseout"
            ],
            "title": "Javascript event when mouse leaves browser window"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try using rawurlencode instead - urlencode does some things differently for \"historical\" reasons.</p>\n\n<p>See <a href=\"http://us.php.net/manual/en/function.urlencode.php\">http://us.php.net/manual/en/function.urlencode.php</a> for more information.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<pre><code>PHP rawUrlEncode() == JavaScript encodeURIComponent()\n</code></pre>\n\n<p>and vice versa</p>\n\n<pre><code>PHP rawUrlDecode() == JavaScript decodeURIComponent()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>Try this: </p>\n\n<pre><code>return decodeURIComponent((str + '').replace(/\\+/g, '%20'));\n</code></pre>\n\n<p>Source: <a href=\"http://phpjs.org/functions/urldecode:572\" rel=\"nofollow\">http://phpjs.org/functions/urldecode:572</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Parenthesis are exceptions to all of what is said in this post.</p>\n\n<p>geek mode on :</p>\n\n<p><strong>false</strong></p>\n\n<pre><code>PHP rawUrlEncode() !== JavaScript encodeURIComponent()\n</code></pre>\n\n<p><strong>but true</strong></p>\n\n<pre><code>PHP rawUrlEncode() == JavaScript encodeURIComponent()\n</code></pre>\n\n<p>In other words, there are many special characters that aren't treated as safe in rawurlencode when they are in encodeURIComponent.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a html text. I had encoded it in php using urlencode function.\nI want to decode that text in the javascript. \nwhen i use unescape function in javascript it replaces all the special characters back but sapce is replaced by '+'. how can i do it correctly so that  space is replaced as space itself???</p>\n",
            "last_activity_date": 1385367831,
            "question_id": 1105434,
            "score": 10,
            "tags": [
                "php",
                "javascript",
                "urlencode"
            ],
            "title": "php javascript url encoding"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use the <a href=\"http://www.w3schools.com/jsref/jsref_replace.asp\"><code>replace</code></a> method:</p>\n\n<pre><code>'Hey! The #123 sure is fun!'.replace(/[^A-Za-z]+/g, '');\n&gt;&gt;&gt; \"HeyThesureisfun\"\n</code></pre>\n\n<p>If you wanted to keep spaces:</p>\n\n<pre><code>'Hey! The #123 sure is fun!'.replace(/[^A-Za-z\\s]+/g, '');\n&gt;&gt;&gt; \"Hey The sure is fun\"\n</code></pre>\n\n<p>The regex <code>/[^a-z\\s]/gi</code> is basically saying to match anything not the letter a-z or a space (\\s), while doing this globally (the <code>g</code> flag) and ignoring the case of the string (the <code>i</code> flag).</p>\n",
                    "is_accepted": false,
                    "score": 56
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp\">RegEx</a> instance properties used <code>g</code> , <code>i</code></p>\n\n<blockquote>\n  <p>global : Whether to test the regular expression against all possible matches in a string, or only against the first.</p>\n  \n  <p>ignoreCase :\n      Whether to ignore case while attempting a match in a string.</p>\n</blockquote>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp\">RegEx</a> special characters used <code>[a-z]</code> , <code>+</code></p>\n\n<blockquote>\n  <p>[^xyz] : A negated or complemented character set. That is, it matches anything that is not enclosed in the brackets. You can specify a range of characters by using a hyphen.</p>\n  \n  <p>For example, <code>[abcd]</code> is the same as <code>[a-d]</code>. They match the 'b' in\n  \"brisket\" and the 'c' in \"chop\". </p>\n  \n  <p>+ : Matches the preceding item 1 or more times. Equivalent to {1,}.</p>\n</blockquote>\n\n<p>JavaScript <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String\">string replace</a> method syntax</p>\n\n<blockquote>\n  <p>str.replace(regexp|substr, newSubStr|function[, Non-standard flags]);</p>\n</blockquote>\n\n<p>The non-standard flags <code>g</code> &amp; <code>i</code> can be passed in the replace syntax or built into the regex.\nexamples:</p>\n\n<pre><code>var re = /[^a-z]+/gi;   var str = \"this is a string\";   var newstr = str.replace(re, \"\");   print(newstr);\n\nvar str = \"this is a string\";   var newstr = str.replace(/[^a-z]+/, \"\", \"gi\");   print(newstr);\n</code></pre>\n\n<p>To match whitespace characters as well \\s would be added to the regex <code>[^a-z\\s]+</code>.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference\">JavaScript Reference</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Regular Expressions in <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\" rel=\"nofollow\">ECMAScript</a> implementations are IMHO best explained at the <a href=\"https://developer.mozilla.org/\" rel=\"nofollow\">Mozilla Developer Network (formerly, Mozilla Developer Center)</a> in the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/RegExp\" rel=\"nofollow\"><code>RegExp</code> article</a> of the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/\" rel=\"nofollow\">JavaScript Language Reference</a> pp.</p>\n\n<p>However, as noted, the previous answers do not take <em>non-English</em> letters into account, such as umlauts and accented letters.  In order not to remove those letters from the string, you have to exclude them from the character range like so:</p>\n\n<pre><code>var s = \"Victor 1 jagt 2 zw\u00f6lf 3 Boxk\u00e4mpfer 4 quer 5 \u00fcber 6 den 7 Sylter 8 Deich\";\n\ns = s.replace(/[^a-z\u00e4\u00f6\u00fc\u00df]+/gi, \"\");\n</code></pre>\n\n<p>This approach quickly becomes tedious and hard to maintain, especially if <em>several</em> natural languages need to be considered (and even in proper English there are foreign words like \"<em>d\u00e9j\u00e0 vu</em>\" and \"<em>fianc\u00e9</em>\"). </p>\n\n<p>Therefore, among other <a href=\"http://www.pcre.org/\" rel=\"nofollow\">PCRE</a> features, <a href=\"http://pointedears.de/websvn/filedetails.php?repname=JSX&amp;path=%2Ftrunk%2Fregexp.js\" rel=\"nofollow\">JSX:regexp.js</a>  lets you use Regular Expressions that can use Unicode property classes, through the <a href=\"http://unicode.org/ucd/\" rel=\"nofollow\">Unicode Character Database (UCD)</a>.</p>\n\n<p>You would then write\u00b9</p>\n\n<pre><code>var s = \"Victor 1 jagt 2 zw\u00f6lf 3 Boxk\u00e4mpfer 4 quer 5 \u00fcber 6 den 7 Sylter 8 Deich\";\n\nvar rxNotLetter = new jsx.regexp.RegExp(\"\\\\P{Ll}+\", \"gi\");\n\ns = s.replace(rxNotLetter, \"\");\n</code></pre>\n\n<p>or</p>\n\n<pre><code>var s = \"El 1 veloz 2 murci\u00e9lago 3 hind\u00fa 4 com\u00eda 5 feliz 6 cardillo 7 y 8 kiwi. La cig\u00fce\u00f1a tocaba el saxof\u00f3n detr\u00e1s del palenque de paja\"\n      + \" \u2013 \u0421\u044a\u0435\u0448\u044c 1 \u0436\u0435 2 \u0435\u0449\u0451 3 \u044d\u0442\u0438\u0445 4 \u043c\u044f\u0433\u043a\u0438\u0445 5 \u0444\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0438\u0445 6 \u0431\u0443\u043b\u043e\u043a, \u0434\u0430 7 \u0432\u044b\u043f\u0435\u0439 8 \u0447\u0430\u044e.\";\n\nvar rxNotLetterOrWhitespace = new jsx.regexp.RegExp(\"[^\\\\p{Ll}\\\\p{Lu}\\\\s]+\", \"g\");\n\ns = s.replace(rxNotLetterOrWhitespace, \"\");\n</code></pre>\n\n<p>to reduce dependency on the uppercase/lowercase quirks of implementations (and be more extensible), for a <code>RegExp</code> that excludes all non-letter Unicode characters (and white-space in the second example).</p>\n\n<p><a href=\"http://PointedEars.de/scripts/test/regexp\" rel=\"nofollow\">Testcase</a></p>\n\n<p>Be sure to provide a version of the Unicode Character Database as well, because it is large, in flux, and therefore not built into regexp.js (JSX contains a verbose text and compacted script version of the UCD; both can be used, and the latter is preferred, by regexp.js). Note that <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-2\" rel=\"nofollow\">a conforming ECMAScript implementation does not need to support characters beyond the Basic Multilingual Plane (U+0000 to U+FFFF)</a>, so <code>jsx.regexp.RegExp</code> currently cannot support those even though they are in the UCD.  See the documentation in the source code for details.</p>\n\n<p>\u00b9 <a href=\"http://en.wikipedia.org/wiki/Pangram\" rel=\"nofollow\">Pangrams</a> from <a href=\"http://wikipedia.org/\" rel=\"nofollow\">Wikipedia</a>, the free encyclopedia.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>How can I remove all characters from a string that are not letters using a JavaScript RegEx?</p>\n",
            "last_activity_date": 1345760797,
            "question_id": 1015844,
            "score": 10,
            "tags": [
                "javascript",
                "regex",
                "string"
            ],
            "title": "How to remove all characters from a string"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need the <code>javascript:</code> \"protocol\" when you want to put JavaScript in the <code>href</code> attribute of a link.</p>\n\n<pre><code>&lt;!-- does not work --&gt;\n&lt;a href=\"alert('some text');\"&gt;link&lt;/a&gt;\n\n&lt;!-- does work --&gt;\n&lt;a href=\"javascript:alert('some text');\"&gt;link&lt;/a&gt;\n\n&lt;!-- also works --&gt;\n&lt;a href=\"#\" onclick=\"alert('some text');\"&gt;link&lt;/a&gt;\n</code></pre>\n\n<p>As far as I know (and please, if I'm wrong, someone correct me) there is no difference in scope, but there is a very important difference about <code>this</code>.</p>\n\n<pre><code>&lt;!-- does not work --&gt;\n&lt;a href=\"alert(this.href);\"&gt;link&lt;/a&gt;\n\n&lt;!-- alerts \"undefined\" --&gt;\n&lt;a href=\"javascript:alert(this.href);\"&gt;link&lt;/a&gt;\n\n&lt;!-- works as expected, alerts \"&lt;url&gt;#\" --&gt;\n&lt;a href=\"#\" onclick=\"alert(this.href);\"&gt;link&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>One thing to consider, our testers would always ding us if we did something like</p>\n\n<pre><code>\n&lt;a href='javascript:openwindowmethod(\"url\");'&gt; stuff &lt;/a&gt;\n</code></pre>\n\n<p>Rather than</p>\n\n<pre><code>\n&lt;a href='url' onclick='return openwindowmethod(this.href);'&gt; stuff &lt;/a&gt;\n</code></pre>\n\n<p>The first method would only work if you click on it but not if you shift or alt clicked on it, or right clicked and went to open in a new window. </p>\n\n<p>The second method would support all of that, as well as the ability to function the way it intended if the user just plain clicked the link.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Outside of the <code>href</code> attribute (where it is a protocol specifier), <em>name</em>: just creates <a href=\"https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Statements/Label\" rel=\"nofollow\">a label</a> (such as one might use with a <code>continue</code> or <code>break</code>).</p>\n\n<h3>See: <a href=\"http://stackoverflow.com/questions/372159/do-you-ever-need-to-specify-javascript-in-an-onclick\">Do you ever need to specify javascript: in an onclick?</a></h3>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>I know that you can use a javascript: pseudo protocol for URLs in an <code>&lt;a&gt;</code> tag.  However, I've noticed that Firefox and IE will both allow '<code>javascript:</code>' to precede javascript code within a <code>&lt;script&gt;</code> tag.  Is this valid syntax?  Does it change the scoping rules?</p>\n\n<p>Examples:\nI've seen this many times:</p>\n\n<pre><code>&lt;a onclick=\"javascript:alert('hello world!');\"&gt;Hello World!&lt;/a&gt;\n</code></pre>\n\n<p>But is this legal/valid syntax and does it do anything special:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\njavascript:alert('hello world!');\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1250719574,
            "question_id": 561550,
            "score": 10,
            "tags": [
                "javascript",
                "syntax"
            ],
            "title": "When is the &#39;javascript:&#39; prefix valid syntax?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try <a href=\"http://plugins.jquery.com/project/dimensions\">the dimensions jQuery plugin</a>.  See <a href=\"http://brandonaaron.net/docs/dimensions/#sample-4\">this demo</a>.</p>\n\n<pre><code>$('#myelement.').offset();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could subtract the div's offsetTop from the document.body.scrollTop</p>\n\n<p>This seems to work on IE7 and FF3, but on a very simple page. I haven't checked with nested DIVs.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do it in both - get the position relative to the document, then subtract the scroll position.</p>\n\n<pre><code>var e = document.getElementById('xxx');\nvar offset = {x:0,y:0};\nwhile (e)\n{\n    offset.x += e.offsetLeft;\n    offset.y += e.offsetTop;\n    e = e.offsetParent;\n}\n\nif (document.documentElement &amp;&amp; (document.documentElement.scrollTop || document.documentElement.scrollLeft))\n{\n    offset.x -= document.documentElement.scrollLeft;\n    offset.y -= document.documentElement.scrollTop;\n}\nelse if (document.body &amp;&amp; (document.body.scrollTop || document.body.scrollLeft))\n{\n    offset.x -= document.body.scrollLeft;\n    offset.y -= document.body.scrollTop;\n}\nelse if (window.pageXOffset || window.pageYOffset)\n{\n    offset.x -= window.pageXOffset;\n    offset.y -= window.pageYOffset;\n}\n\nalert(offset.x + '\\n' + offset.y);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>Using Prototype it would be:</p>\n\n<pre><code>$('divname').viewportOffset.top\n$('divname').viewportOffset.left\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In IE and Firefox 3, you can use <a href=\"http://ejohn.org/blog/getboundingclientrect-is-awesome\" rel=\"nofollow\">getBoundingClientRect</a> for this; no framework necessary.</p>\n\n<p>But, yes, you should use a framework if you need to support other browsers as well.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is this doable in either IE7 or Firefox?</p>\n",
            "last_activity_date": 1316080782,
            "question_id": 211703,
            "score": 10,
            "tags": [
                "javascript",
                "html",
                "css"
            ],
            "title": "Is it possible to get the position of div within the browser viewport? Not within the document. Within the window"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>According to Wikipedia, HTTP Streaming comet is supposed to be possible in every browser.  \"Page Layout with Frames that Aren't\", Ajax: The Definitive Guide. O'Reilly Media, pp. 320. ISBN 0596528388, is the reference that is quoted for this information, so maybe this book has a suggestion on how to do this.</p>\n\n<p>Also <a href=\"http://meteorserver.org/\" rel=\"nofollow\">http://meteorserver.org/</a> has a demo which I just confirmed works in Chrome, of a client side library + a server which pushes data to the client.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's definitely possible: GMail does it. If you watch the Resources section of the developer tools in the latest Webkit, you can watch it in action. They have a request called \"bind\" that stays open more or less indefinitely. My understanding is that when new mail arrives, it comes across that connection.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yes.</p>\n\n<p>You need to <a href=\"http://cometdaily.com/2007/12/11/the-future-of-comet-part-1-comet-today/\" rel=\"nofollow\">include a large amount</a> (at least 256 bytes) of junk at the front of the response in order to get Safari to behave.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Although this is a old post, I did do some search and find the following articles really helpfull\n<a href=\"http://www.shanison.com/2010/05/10/stop-the-browser-%E2%80%9Cthrobber-of-doom%E2%80%9D-while-loading-comet-forever-iframe/\" rel=\"nofollow\">http://www.shanison.com/2010/05/10/stop-the-browser-%E2%80%9Cthrobber-of-doom%E2%80%9D-while-loading-comet-forever-iframe/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>By HTTP Streaming Comet, I mean the \"forever iframe\" / \"forever xhr\" variations that don't close the connection after data has been pushed from the server, as opposed to standard polling and long polling which close and resend a new request for every server push event.</p>\n\n<p>I looked at the dojo.io.cometd package and it seems they only have polling implementations. I also found <a href=\"http://www.zeitoun.net/articles/comet_and_php/start\">this example</a>, but it doesn't seem to work in webkit even after a fair bit of tinkering (I got it to work everywhere else). <a href=\"http://simonwillison.net/2007/Nov/16/\">This announcement from the safari blog</a> seems to suggest that it's possible with xhr, but I couldn't find any code or documentation, nor I could get it to work.</p>\n\n<p>Does anyone know of a technique, script, library or demo that accomplishes HTTP streaming comet in Webkit browsers (Safari and Chrome)? </p>\n\n<p><strong>Update</strong></p>\n\n<p>After a bit more tinkering, I found that there are two things that need to be done in order to get http streaming working in Safari via XHR:</p>\n\n<ul>\n<li>The response needs to have a Content-Type: multipart/x-mixed-replace</li>\n<li>The response needs to send a few \"noise\" characters before the browser begins to display updates consistently. I'm assuming this has something to do with filling some internal buffer.</li>\n</ul>\n\n<p><strong>Update 2</strong></p>\n\n<p>I finally got it to work in all browsers using an iframe technique. The caveat to the solution is that only WebKit-based browsers should receive the multipart/x-mixed-replace header.</p>\n",
            "last_activity_date": 1325756790,
            "question_id": 169258,
            "score": 10,
            "tags": [
                "javascript",
                "safari",
                "comet"
            ],
            "title": "Is Http Streaming Comet possible in Safari?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I've implemented a solution here:</p>\n\n<p><a href=\"http://jsfiddle.net/Fresh/4nnnG/\" rel=\"nofollow\">http://jsfiddle.net/Fresh/4nnnG/</a></p>\n\n<p>As you have a local datasource  you need to create individual datasets to enable you to match on multiple data properties. It doesn't look like the most elegant of solutions but it works e.g.</p>\n\n<pre><code>$('#search-input').typeahead({\n    highlight: true\n}, {\n    name: 'titles',\n    displayKey: 'title',\n    source: titles.ttAdapter()\n}, {\n    name: 'descs',\n    displayKey: 'desc',\n    source: descs.ttAdapter()\n}, {\n    name: 'cats',\n    displayKey: 'name',\n    source: cats.ttAdapter()\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>return Bloodhound.tokenizers.whitespace(data.title)</code> returns an array of strings.</p>\n\n<p>So, instead of returning that value: save it (and your other desired values), then concatenate them and return that value...</p>\n\n<pre><code>x = Bloodhound.tokenizers.whitespace(data.title);\ny = Bloodhound.tokenizers.whitespace(data.desc);\nz = Bloodhound.tokenizers.whitespace(data.category[i].name);\nreturn x.concat(y).concat(z);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"https://github.com/twitter/typeahead.js/blob/master/CHANGELOG.md#0103-july-10-2014\">Typeahead 0.10.3 added \"support to object tokenizers for multiple property tokenization.\"</a></p>\n\n<p>So, your example becomes</p>\n\n<pre><code>var posts = new Bloodhound({\n    datumTokenizer: Bloodhound.tokenizers.obj.whitespace('title', 'desc'),\n    queryTokenizer: Bloodhound.tokenizers.whitespace,\n    local: data\n});\n</code></pre>\n\n<p>However, I don't think this will work for properties nested inside, that is, the <code>data.category</code> object in your case.</p>\n\n<p>As a side note, if you are using prefetched data, be sure to clear the local storage first, otherwise the new tokenizer won't take effect (Because <code>datumTokenizer</code> is used when adding to the search index, and if data is already present in <code>localStorage</code>, then the search index will not be updated). I was stuck on this for a while!</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Please see example below. </p>\n\n<p>JSFiddle: <a href=\"http://jsfiddle.net/R7UvH/2/\">http://jsfiddle.net/R7UvH/2/</a></p>\n\n<p>How do I make <a href=\"https://github.com/twitter/typeahead.js\">typeahead.js</a> (0.10.1) search for matches in more than one property value? Ideally, within whole <code>data</code> (<code>data.title</code>, <code>data.desc</code> and in all <code>data.category[i].name</code>)</p>\n\n<pre><code> datumTokenizer: function(data) {\n     // **search in other property values; e.g. data.title &amp; data.desc etc..**\n     return Bloodhound.tokenizers.whitespace(data.title);\n },\n</code></pre>\n\n<p>Whole example:</p>\n\n<pre><code>var data = [{\n    title: \"some title here\",\n    desc: \"some option here\",\n    category: [{\n        name: \"category 1\",\n    }, {\n        name: \"categoy 2\",\n    }]\n},\n{\n    title: \"some title here\",\n    desc: \"some option here\",\n    category: [{\n        name: \"category 1\",\n    }, {\n        name: \"categoy 2\",\n    }]\n}];\n\nvar posts = new Bloodhound({\n    datumTokenizer: function(data) {\n        // **search in other property values; e.g. data.title &amp; data.desc etc..**\n        return Bloodhound.tokenizers.whitespace(data.title);\n    },\n    queryTokenizer: Bloodhound.tokenizers.whitespace,\n    local: data\n});\nposts.initialize();\n\n$('#search-input').typeahead({\n    highlight: true\n}, {\n    name: 'Pages',\n    displayKey: 'title',\n    source: posts.ttAdapter(),\n    templates: {\n        header: '&lt;h3&gt;Pages&lt;/h3&gt;'\n    }\n});\n</code></pre>\n",
            "last_activity_date": 1411980023,
            "question_id": 21850707,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "typeahead",
                "typeahead.js",
                "bloodhound"
            ],
            "title": "Typeahead.js - Search in multiple property values"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>My opinions and how we structure our test...</p>\n\n<ul>\n<li><p>One general page model that holds some methods we expect most pages to use like <code>go()</code> or we have methods for interacting with some common custom elements.</p></li>\n<li><p>Many page-specific models that inherit from this general page. Most of the methods on these models are related to getting various elements on the page or interacting with that page's ui. There are no assertion methods on these models.</p></li>\n<li><p>UI models for interacting with certain more complicated widgets. Similar to page models but these aren't tied to a page. They are tied to a UI/widget. There are no assertion methods on these models.</p></li>\n<li><p>For common &amp; reusable assertions, we have assertion models that utilize various page models' and UI models' interaction methods. They are organized by page or UI. For assertions that are uncommon and not really reusable, we just put them into the spec itself.</p></li>\n<li><p>Specs are usually organized by page though we do have specs for certain UI/widgets.</p></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is link to a tutorial I set up for training some of my co-workers on create good Protractor test suites.</p>\n\n<p>It's all live, with a demo site that you can visit, explore, etc.</p>\n\n<p><a href=\"https://github.com/Droogans/ProtractorPageObjects\">https://github.com/Droogans/ProtractorPageObjects</a></p>\n\n<p>This will set you up with installation, outlines, organizational techniques, and more.</p>\n\n<p>Feel free to leave an issue if you have any trouble.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Given i'm building my angularjs protractor e2e tesing suite leveraging the page objects pattern.</p>\n\n<p>And i separate page object code in different files as much as reasonable.</p>\n\n<ol>\n<li><p>What would be a good approach to enable page objects inheritance? javascript classic inheritance? Object.create() based inheritance? Other?</p></li>\n<li><p>Should i keep expectations within the page object? Or favor Martin Fowler <a href=\"http://martinfowler.com/bliki/PageObject.html\">optinion by moving them to an assertion library</a>? in which case how exactly would that look like in this javascript-nodejs technology stack?</p></li>\n</ol>\n\n<p>I've prepared a <a href=\"https://c9.io/elgalu/pageobjects\">live jsfiddle playground here</a> so you can try your improvements on.</p>\n\n<p>Or simply paste code within the answer, i'll paste the jsfiddle content below for clarity:</p>\n\n<h2>loginPage.js</h2>\n\n<pre><code>\"use strict\";\n\n// A Page Object is a Singleton, so no need to constructors or classic js inheritance,\n// please tell me if I'm wrong or what's the utility of creating a (new LoginPage())\n// every time a spec need to use this login page.\nvar loginPage = {\n    // Page Object Elements\n    userElm: $('.user.loginPage'),\n\n    // Page Object Assertions\n    // Martin Fowler [doesn't favor](http://martinfowler.com/bliki/PageObject.html)\n    // assertions in page objects, I'm open to suggestions on how to move \n    // the assertions away from the Page Object and see how an assertion library \n    // could like like in protractor.\n    assertInputsDisplayed: function() {\n        return ('Assertion: this.userElm: '+this.userElm);\n    },\n\n    // Page Object Actions\n    get: function () {\n        return ('navigating to LoginPage with userElm: '+this.userElm);\n    }\n};\n\nmodule.exports.loginPage = loginPage;\n</code></pre>\n\n<h2>loginDialog.js</h2>\n\n<pre><code>\"use strict\";\n\nvar loginPage = require('./loginPage.js').loginPage;\nvar helpers = require('./helpers.js');\n\n// Inherit properties from another Page Object\nvar loginDialog = helpers.extend({}, Object.create(loginPage), {\n    // Page Object Elements\n    userElm: $('.user.loginDialog'),\n\n    // Page Object Actions\n    get: function () {\n        return ('navigating to LoginDialog with userElm: '+this.userElm);\n    },\n\n    logout: function () {\n        return ('logging out of Dialog. user was: '+this.userElm);\n    }\n});\n\nmodule.exports.loginDialog = loginDialog;\n</code></pre>\n\n<h2>helpers.js</h2>\n\n<pre><code>\"use strict\";\n\n// some helper to avoid adding an external dependency for now\nvar extend = function(target) {\n    var sources = [].slice.call(arguments, 1);\n    sources.forEach(function (source) {\n        for (var prop in source) {\n            target[prop] = source[prop];\n        }\n    });\n    return target;\n};\n</code></pre>\n\n<h2>usage.js</h2>\n\n<pre><code>\"use strict\";\n\n// Mock $() for easy unit testing this on nodejs REPL\nglobal.$ = function(args) { return ('$BUILT '+args); };\n\nvar loginPage   = require('./loginPage.js').loginPage;\nvar loginDialog = require('./loginDialog.js').loginDialog;\n\nconsole.log(loginPage.userElm);    //=&gt; '$BUILT .user.loginPage'\nconsole.log(loginDialog.userElm);  //=&gt; '$BUILT .user.loginDialog'\nconsole.log(loginPage.get());      //=&gt; 'navigating to LoginPage with userElm: $BUILT .user.loginPage'\nconsole.log(loginDialog.get());    //=&gt; 'navigating to LoginPage with userElm: $BUILT .user.loginDialog'\nconsole.log(loginPage.assertInputsDisplayed());   //=&gt; 'LoginPage assertion: this.userElm: $BUILT .user.loginPage'\nconsole.log(loginDialog.assertInputsDisplayed()); //=&gt; 'LoginPage assertion: this.userElm: $BUILT .user.loginDialog'\n\n//loginPage.logout();   //=&gt; TypeError: Object #&lt;Object&gt; has no method 'logout'\nconsole.log(loginDialog.logout()); //=&gt; 'logging out of Dialog. user was: $BUILT .user.loginDialog'\n</code></pre>\n",
            "last_activity_date": 1391118752,
            "question_id": 21466505,
            "score": 9,
            "tags": [
                "javascript",
                "node.js",
                "angularjs",
                "protractor",
                "angularjs-e2e"
            ],
            "title": "Protractor Page Objects Inheritance"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>As @jlarson updated with information that Mac was the biggest culprit we might get some further. Office for Mac has, at least 2011 and back, rather poor support for reading Unicode formats when importing files.</p>\n\n<p>Support for UTF-8 seems to be close to non-existent, have read a tiny few comments about it working, whilst the majority say it does not. Unfortunately I do not have any Mac to test on. So again: The files themselves should be OK as UTF-8, but the import halts the process.</p>\n\n<p>Wrote up a quick test in Javascript for exporting percent escaped UTF-16 little and big endian, with- / without BOM etc.</p>\n\n<p>Code should probably be refactored but should be OK for testing. It might work better then UTF-8. Of course this also usually means bigger data transfers as any glyph is two or four bytes.</p>\n\n<p>You can find a fiddle here:</p>\n\n<blockquote>\n  <p><kbd><strong><em><a href=\"http://jsfiddle.net/kimiliini/HM4rW/show/light/\">Unicode export sample Fiddle</a></em></strong></kbd></p>\n</blockquote>\n\n<p>Note that it does <em>not</em> handle CSV in any particular way. It is mainly meant for pure conversion to <em>data URL</em> having UTF-8, UTF-16 big/little endian and +/- BOM. There is one option in the <em>fiddle</em> to replace commas with tabs, \u2013 but believe that would be rather hackish and fragile solution if it works.</p>\n\n<hr>\n\n<p><em>Typically use like:</em></p>\n\n<pre><code>// Initiate\nencoder = new DataEnc({\n    mime   : 'text/csv',\n    charset: 'UTF-16BE',\n    bom    : true\n});\n\n// Convert data to percent escaped text\nencoder.enc(data);\n\n// Get result\nvar result = encoder.pay();\n</code></pre>\n\n<p><em>There is two result properties of the object:</em></p>\n\n<p><em><strong>1.) <code>encoder.lead</code></em></strong></p>\n\n<p>This is the mime-type, charset etc. for data URL. Built from options passed to initializer, or one can also say <code>.config({ ... new conf ...}).intro()</code> to re-build.</p>\n\n<pre><code>data:[&lt;MIME-type&gt;][;charset=&lt;encoding&gt;][;base64]\n</code></pre>\n\n<p>You can specify <em>base64</em>, but there is no <em>base64</em> conversion (at least not this far).</p>\n\n<p><em><strong>2.) <code>encoder.buf</code></em></strong></p>\n\n<p>This is a string with the percent escaped data.\n<br/><br/></p>\n\n<p>The <em><code>.pay()</code></em> function simply return 1.) and 2.) as one.</p>\n\n<hr>\n\n<h3>Main code:</h3>\n\n<hr>\n\n<pre><code>function DataEnc(a) {\n    this.config(a);\n    this.intro();\n}\n/*\n* http://www.iana.org/assignments/character-sets/character-sets.xhtml\n* */\nDataEnc._enctype = {\n        u8    : ['u8', 'utf8'],\n        // RFC-2781, Big endian should be presumed if none given\n        u16be : ['u16', 'u16be', 'utf16', 'utf16be', 'ucs2', 'ucs2be'],\n        u16le : ['u16le', 'utf16le', 'ucs2le']\n};\nDataEnc._BOM = {\n        'none'     : '',\n        'UTF-8'    : '%ef%bb%bf', // Discouraged\n        'UTF-16BE' : '%fe%ff',\n        'UTF-16LE' : '%ff%fe'\n};\nDataEnc.prototype = {\n    // Basic setup\n    config : function(a) {\n        var opt = {\n            charset: 'u8',\n            mime   : 'text/csv',\n            base64 : 0,\n            bom    : 0\n        };\n        a = a || {};\n        this.charset = typeof a.charset !== 'undefined' ?\n                        a.charset : opt.charset;\n        this.base64 = typeof a.base64 !== 'undefined' ? a.base64 : opt.base64;\n        this.mime = typeof a.mime !== 'undefined' ? a.mime : opt.mime;\n        this.bom = typeof a.bom !== 'undefined' ? a.bom : opt.bom;\n\n        this.enc = this.utf8;\n        this.buf = '';\n        this.lead = '';\n        return this;\n    },\n    // Create lead based on config\n    // data:[&lt;MIME-type&gt;][;charset=&lt;encoding&gt;][;base64],&lt;data&gt;\n    intro : function() {\n        var\n            g = [],\n            c = this.charset || '',\n            b = 'none'\n        ;\n        if (this.mime &amp;&amp; this.mime !== '')\n            g.push(this.mime);\n        if (c !== '') {\n            c = c.replace(/[-\\s]/g, '').toLowerCase();\n            if (DataEnc._enctype.u8.indexOf(c) &gt; -1) {\n                c = 'UTF-8';\n                if (this.bom)\n                    b = c;\n                this.enc = this.utf8;\n            } else if (DataEnc._enctype.u16be.indexOf(c) &gt; -1) {\n                c = 'UTF-16BE';\n                if (this.bom)\n                    b = c;\n                this.enc = this.utf16be;\n            } else if (DataEnc._enctype.u16le.indexOf(c) &gt; -1) {\n                c = 'UTF-16LE';\n                if (this.bom)\n                    b = c;\n                this.enc = this.utf16le;\n            } else {\n                if (c === 'copy')\n                    c = '';\n                this.enc = this.copy;\n            }\n        }\n        if (c !== '')\n            g.push('charset=' + c);\n        if (this.base64)\n            g.push('base64');\n        this.lead = 'data:' + g.join(';') + ',' + DataEnc._BOM[b];\n        return this;\n    },\n    // Deliver\n    pay : function() {\n        return this.lead + this.buf;\n    },\n    // UTF-16BE\n    utf16be : function(t) { // U+0500 =&gt; %05%00\n        var i, c, buf = [];\n        for (i = 0; i &lt; t.length; ++i) {\n            if ((c = t.charCodeAt(i)) &gt; 0xff) {\n                buf.push(('00' + (c &gt;&gt; 0x08).toString(16)).substr(-2));\n                buf.push(('00' + (c  &amp; 0xff).toString(16)).substr(-2));\n            } else {\n                buf.push('00');\n                buf.push(('00' + (c  &amp; 0xff).toString(16)).substr(-2));\n            }\n        }\n        this.buf += '%' + buf.join('%');\n        // Note the hex array is returned, not string with '%'\n        // Might be useful if one want to loop over the data.\n        return buf;\n    },\n    // UTF-16LE\n    utf16le : function(t) { // U+0500 =&gt; %00%05\n        var i, c, buf = [];\n        for (i = 0; i &lt; t.length; ++i) {\n            if ((c = t.charCodeAt(i)) &gt; 0xff) {\n                buf.push(('00' + (c  &amp; 0xff).toString(16)).substr(-2));\n                buf.push(('00' + (c &gt;&gt; 0x08).toString(16)).substr(-2));\n            } else {\n                buf.push(('00' + (c  &amp; 0xff).toString(16)).substr(-2));\n                buf.push('00');\n            }\n        }\n        this.buf += '%' + buf.join('%');\n        // Note the hex array is returned, not string with '%'\n        // Might be useful if one want to loop over the data.\n        return buf;\n    },\n    // UTF-8\n    utf8 : function(t) {\n        this.buf += encodeURIComponent(t);\n        return this;\n    },\n    // Direct copy\n    copy : function(t) {\n        this.buf += t;\n        return this;\n    }\n};\n</code></pre>\n\n<hr>\n\n<h3>Previous answer:</h3>\n\n<hr>\n\n<p>I do not have any setup to replicate yours, but if your case is the same as @jlarson then the resulting file should be correct.</p>\n\n<p>This answer became somewhat long, <em>(fun topic you say?)</em>, but discuss various aspects around the question, what is (likely) happening, and how to actually check what is going on in various ways.</p>\n\n<h3>TL;DR:</h3>\n\n<p>The text is likely imported as ISO-8859-1, Windows-1252, or the like, and not as UTF-8. Force application to read file as UTF-8 by using import or other means.</p>\n\n<hr>\n\n<p>PS: <em><a href=\"http://www.isthisthingon.org/unicode/\">The UniSearcher</a> is a nice tool to have available on this journey.</em></p>\n\n<h1>The long way around</h1>\n\n<p>The <em>\"easiest\"</em> way to be 100% sure what we are looking at is to use a hex-editor on the result. Alternatively use <code>hexdump</code>, <code>xxd</code> or the like from command line to view the file. In this case the byte sequence should be that of UTF-8 as delivered from the script.</p>\n\n<p>As an example if we take the script of <em>jlarson</em> it takes the <code>data</code> <em>Array</em>:</p>\n\n<pre><code>data = ['name', 'city', 'state'],\n       ['\\u0500\\u05E1\\u0E01\\u1054', 'seattle', 'washington']\n</code></pre>\n\n<p>This one is merged into the string:</p>\n\n<pre><code> name,city,state&lt;newline&gt;\n \\u0500\\u05E1\\u0E01\\u1054,seattle,washington&lt;newline&gt;\n</code></pre>\n\n<p>which translates by Unicode to:</p>\n\n<pre><code> name,city,state&lt;newline&gt;\n \u0500\u05e1\u0e01\u1054,seattle,washington&lt;newline&gt;\n</code></pre>\n\n<p>As UTF-8 uses ASCII as base (bytes with highest bit <em>not</em> set are the same as in ASCII) the only special sequence in the test data is \"\u0500\u05e1\u0e01\u1054\" which in turn, is:</p>\n\n<pre><code>Code-point  Glyph      UTF-8\n----------------------------\n    U+0500    \u0500        d4 80\n    U+05E1    \u05e1        d7 a1\n    U+0E01    \u0e01     e0 b8 81\n    U+1054    \u1054     e1 81 94\n</code></pre>\n\n<p>Looking at the hex-dump of the downloaded file:</p>\n\n<pre><code>0000000: 6e61 6d65 2c63 6974 792c 7374 6174 650a  name,city,state.\n0000010: d480 d7a1 e0b8 81e1 8194 2c73 6561 7474  ..........,seatt\n0000020: 6c65 2c77 6173 6869 6e67 746f 6e0a       le,washington.\n</code></pre>\n\n<p>On second line we find <code>d480 d7a1 e0b8 81e1 8194</code> which match up with the above:</p>\n\n<pre><code>0000010: d480  d7a1  e0b8 81  e1 8194 2c73 6561 7474  ..........,seatt\n         |   | |   | |     |  |     |  | |  | |  | |\n         +-+-+ +-+-+ +--+--+  +--+--+  | |  | |  | |\n           |     |      |        |     | |  | |  | |\n           \u0500     \u05e1      \u0e01        \u1054     , s  e a  t t\n</code></pre>\n\n<p>None of the other characters is mangled either.</p>\n\n<p>Do similar tests if you want. The result should be the similar.</p>\n\n<hr>\n\n<h1>By sample provided <code>\u00e2\u20ac\u201d, \u00e2\u20ac, \u00e2\u20ac\u0153</code></h1>\n\n<p>We can also have a look at the sample provided in the question. It is likely to assume that the text is represented in Excel / TextEdit by code-page 1252.</p>\n\n<p>To quote Wikipedia on Windows-1252:</p>\n\n<blockquote>\n  <p><em>Windows-1252 or CP-1252 is a character encoding of the Latin alphabet, used by \n  default in the legacy components of Microsoft Windows in English and some other \n  Western languages. It is one version within the group of Windows code pages. \n  In LaTeX packages, it is referred to as \"ansinew\".</em></p>\n</blockquote>\n\n<h2>Retrieving the original bytes</h2>\n\n<p>To translate it back into it's original form we can look at the <a href=\"http://en.wikipedia.org/wiki/Windows-1252#Code_page_layout\">code page layout</a>, from which we get:</p>\n\n<pre><code>Character:   &lt;\u00e2&gt;  &lt;\u20ac&gt;  &lt;\u201d&gt;  &lt;,&gt;  &lt; &gt;  &lt;\u00e2&gt;  &lt;\u20ac&gt;  &lt; &gt;  &lt;,&gt;  &lt; &gt;  &lt;\u00e2&gt;  &lt;\u20ac&gt;  &lt;\u0153&gt;\nU.Hex    :    e2 20ac 201d   2c   20   e2 20ac   9d   2c   20   e2 20ac  153\nT.Hex    :    e2   80   94   2c   20   e2   80   9d*  2c   20   e2   80   9c\n</code></pre>\n\n<ul>\n<li><code>U</code> is short for <em>Unicode</em></li>\n<li><code>T</code> is short for <em>Translated</em></li>\n</ul>\n\n<p>For example:</p>\n\n<pre><code>\u00e2 =&gt; Unicode 0xe2   =&gt; CP-1252 0xe2\n\u201d =&gt; Unicode 0x201d =&gt; CP-1252 0x94\n\u20ac =&gt; Unicode 0x20ac =&gt; CP-1252 0x80\n</code></pre>\n\n<p>Special cases like <code>9d</code> does not have a corresponding code-point in CP-1252, these we simply copy directly.</p>\n\n<p>Note: If one look at mangled string by copying the text to a file and doing a hex-dump, save the file with for example UTF-16 encoding to get the Unicode values as represented in the table. E.g. in Vim:</p>\n\n<pre><code>set fenc=utf-16\n# Or\nset fenc=ucs-2\n</code></pre>\n\n<h2>Bytes to UTF-8</h2>\n\n<p>We then combine the result, the <code>T.Hex</code> line, into UTF-8. In UTF-8 sequences the bytes are represented by a <a href=\"http://en.wikipedia.org/wiki/UTF-8#Description\">leading byte telling us how many subsequent bytes make the glyph</a>. For example if a byte has the binary value <code>110x xxxx</code> we know that this byte and the next represent one code-point. A total of two. <code>1110 xxxx</code> tells us it is three and so on. ASCII values does not have the high bit set, as such any byte matching <code>0xxx xxxx</code> is a standalone. A total of one byte.</p>\n\n<pre>0xe2 = 1110 0010<sub>bin</sub> => 3 bytes => 0xe28094 (em-dash)  \u2014\n0x2c = 0010 1100<sub>bin</sub> => 1 byte  => 0x2c     (comma)    ,\n0x2c = 0010 0000<sub>bin</sub> => 1 byte  => 0x20     (space)   \n0xe2 = 1110 0010<sub>bin</sub> => 3 bytes => 0xe2809d (right-dq) \u201d\n0x2c = 0010 1100<sub>bin</sub> => 1 byte  => 0x2c     (comma)    ,\n0x2c = 0010 0000<sub>bin</sub> => 1 byte  => 0x20     (space)   \n0xe2 = 1110 0010<sub>bin</sub> => 3 bytes => 0xe2809c (left-dq)  \u201c\n</pre>\n\n<p>Conclusion; <strong><em>The original UTF-8 string was:</em></strong></p>\n\n<pre><code>\u2014, \u201d, \u201c\n</code></pre>\n\n<h2>Mangling it back</h2>\n\n<p>We can also do the reverse. The original string as bytes:</p>\n\n<pre><code>UTF-8: e2 80 94 2c 20 e2 80 9d 2c 20 e2 80 9c\n</code></pre>\n\n<p>Corresponding values in <a href=\"http://en.wikipedia.org/wiki/Windows-1252#Code_page_layout\">cp-1252</a>:</p>\n\n<pre><code>e2 =&gt; \u00e2\n80 =&gt; \u20ac\n94 =&gt; \u201d\n2c =&gt; ,\n20 =&gt; &lt;space&gt;\n...\n</code></pre>\n\n<p>and so on, result:</p>\n\n<pre><code>\u00e2\u20ac\u201d, \u00e2\u20ac, \u00e2\u20ac\u0153\n</code></pre>\n\n<hr>\n\n<h1>Importing to MS Excel</h1>\n\n<p>In other words: The issue at hand could be how to import UTF-8 text files into MS Excel, and some other applications. In Excel this can be done in various ways.</p>\n\n<ul>\n<li><em><strong>Method one:</em></strong></li>\n</ul>\n\n<p>Do not save the file with an extension recognized by the application, like <code>.csv</code>, or <code>.txt</code>, but omit it completely or make something up.</p>\n\n<p>As an example save the file as <code>\"testfile\"</code>, with no extension. Then in Excel open the file, confirm that we actually want to open this file, and <em>voil\u00e0</em> we get served with the encoding option. Select UTF-8, and file should be correctly read.</p>\n\n<ul>\n<li><em><strong>Method two:</em></strong></li>\n</ul>\n\n<p>Use import data instead of open file. Something like:</p>\n\n<pre><code>Data -&gt; Import External Data -&gt; Import Data\n</code></pre>\n\n<p>Select encoding and proceed.</p>\n\n<h3>Check that Excel and selected font actually supports the glyph</h3>\n\n<p>We can also test the font support for the Unicode characters by using the, sometimes, friendlier clipboard. For example, copy text from this page into Excel:</p>\n\n<ul>\n<li><a href=\"http://www.utf8-chartable.de/unicode-utf8-table.pl\">page with code points U+0E00 to U+0EFF</a></li>\n</ul>\n\n<p>If support for the code points exist, the text should render fine.</p>\n\n<hr>\n\n<h2>Linux</h2>\n\n<p>On Linux, which is primarily UTF-8 in userland this should not be an issue. Using Libre Office Calc, Vim, etc. show the files correctly rendered.</p>\n\n<hr>\n\n<h1>Why it works (or should)</h1>\n\n<p><a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3.3\">encodeURI</a> from the spec states, (also read <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\">sec-15.1.3</a>):</p>\n\n<blockquote>\n  <p>The encodeURI function computes a new version of a URI in which each instance of certain characters is replaced by one, two, three, or four escape sequences representing the UTF-8 encoding of the character.</p>\n</blockquote>\n\n<p>We can simply test this in our console by, for example saying:</p>\n\n<pre><code>&gt;&gt; encodeURI('\u0500\u05e1\u0e01\u1054,seattle,washington')\n&lt;&lt; \"%D4%80%D7%A1%E0%B8%81%E1%81%94,seattle,washington\"\n</code></pre>\n\n<p>As we register the escape sequences are equal to the ones in the hex dump above:</p>\n\n<pre><code>%D4%80%D7%A1%E0%B8%81%E1%81%94 (encodeURI in log)\n d4 80 d7 a1 e0 b8 81 e1 81 94 (hex-dump of file)\n</code></pre>\n\n<p>or, testing a 4-byte code:</p>\n\n<pre><code>&gt;&gt; encodeURI('\udb84\udc01')\n&lt;&lt; \"%F3%B1%80%81\"\n</code></pre>\n\n<hr>\n\n<h1>If this is does not comply</h1>\n\n<p>If nothing of this apply it could help if you added </p>\n\n<ol>\n<li>Sample of expected input vs mangled output, (copy paste).</li>\n<li>Sample hex-dump of original data vs result file.</li>\n</ol>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>It could be a problem in your server encoding.</p>\n\n<p>You could try (assuming locale english US) if you are running Linux:</p>\n\n<pre><code>sudo locale-gen en_US en_US.UTF-8\ndpkg-reconfigure locales\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Excel likes Unicode in <strong>UTF-16 LE with BOM</strong> encoding. Output the correct <a href=\"http://en.wikipedia.org/wiki/Byte_order_mark\" rel=\"nofollow\">BOM</a> (<code>FF FE</code>), then convert all your data from UTF-8 to UTF-16 LE.</p>\n\n<p>Windows uses UTF-16 LE internally, so some applications work better with UTF-16 than with UTF-8.</p>\n\n<p>I haven't tried to do that in JS, but there're various scripts on the web to convert UTF-8 to UTF-16. Conversion between UTF variations is pretty easy and takes just a dozen of lines.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I ran into exactly this yesterday. I was developing a button that exports the contents of an HTML table as a CSV download. The functionality of the button itself is almost identical to yours\u00a0\u2013\u00a0on click I read the text from the table and create a data URI with the CSV content.</p>\n\n<p>When I tried to open the resulting file in Excel it was clear that the <em>\"\u00a3\"</em> symbol was getting read incorrectly. The 2 byte UTF-8 representation was being processed as ASCII resulting in an unwanted garbage character. Some Googling indicated this was a known issue with Excel.</p>\n\n<p>I tried adding the byte order mark at the start of the string \u2013\u00a0Excel just interpreted it as ASCII data. I then tried various things to convert the UTF-8 string to ASCII (such as <code>csvData.replace('\\u00a3', '\\xa3')</code>) but I found that any time the data is coerced to a JavaScript string it will become UTF-8 again. The trick is to convert it to binary and then Base64 encode it without converting back to a string along the way.</p>\n\n<p>I already had <a href=\"https://code.google.com/p/crypto-js/\" rel=\"nofollow\">CryptoJS</a> in my app (used for HMAC authentication against a REST API) and I was able to use that to create an ASCII encoded byte sequence from the original string then Base64 encode it and create a data URI. This worked and the resulting file when opened in Excel does not display any unwanted characters.</p>\n\n<p>The essential bit of code that does the conversion is:</p>\n\n<pre><code>var csvHeader = 'data:text/csv;charset=iso-8859-1;base64,'\nvar encodedCsv =  CryptoJS.enc.Latin1.parse(csvData).toString(CryptoJS.enc.Base64)\nvar dataURI = csvHeader + encodedCsv\n</code></pre>\n\n<p>Where <code>csvData</code> is your CSV string.</p>\n\n<p>There are probably ways to do the same thing without CryptoJS if you don't want to bring in that library but this at least shows it is possible.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I recently added a CSV-download button that takes data from database (Postgres) an array from server (Ruby on Rails), and turns it into a CSV file on the client side (Javascript, HTML5). I'm currently testing the CSV file and I am coming across some encoding issues. </p>\n\n<p>When I view the CSV file via 'less', the file appears fine. But when I open the file in Excel OR TextEdit, I start seeing weird characters like </p>\n\n<blockquote>\n  <p>\u00e2\u20ac\u201d, \u00e2\u20ac,  \u00e2\u20ac\u0153</p>\n</blockquote>\n\n<p>appear in the text. Basically, I see the characters that are described here: <a href=\"http://digwp.com/2011/07/clean-up-weird-characters-in-database/\">http://digwp.com/2011/07/clean-up-weird-characters-in-database/</a></p>\n\n<p>I read that this sort of issue can arise when the Database encoding setting is set to the wrong one. BUT, the database that I am using is set to use UTF8 encoding. And when I debug through the JS codes that create the CSV file, the text appear normal. (This could be a Chrome ability, and less capability) </p>\n\n<p>I'm feeling frustrated because the only thing I am learning from my online search is that there could be many reasons why encoding is not working, I'm not sure which part is at fault (so excuse me as I initially tag numerous things), and nothing I tried has shed new light on my problem.</p>\n\n<p>For reference, here's the JavaScript snippet that creates the CSV file! </p>\n\n<pre><code>$(document).ready(function() {\nvar csvData = &lt;%= raw to_csv(@view_scope, clicks_post).as_json %&gt;;\nvar csvContent = \"data:text/csv;charset=utf-8,\";\ncsvData.forEach(function(infoArray, index){\n  var dataString = infoArray.join(\",\");\n  csvContent += dataString+ \"\\n\";\n}); \nvar encodedUri = encodeURI(csvContent);\nvar button = $('&lt;a&gt;');\nbutton.text('Download CSV');\nbutton.addClass(\"button right\");\nbutton.attr('href', encodedUri);\nbutton.attr('target','_blank');\nbutton.attr('download','&lt;%=title%&gt;_25_posts.csv');\n$(\"#&lt;%=title%&gt;_download_action\").append(button);\n});\n</code></pre>\n",
            "last_activity_date": 1395394584,
            "question_id": 21342492,
            "score": 9,
            "tags": [
                "javascript",
                "excel",
                "csv",
                "encoding",
                "utf-8"
            ],
            "title": "Encoding issues for UTF8 CSV file when opening Excel and TextEdit"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I am going to assume you have installed Phantomjs and have created an alias in your .bashrc or have updated your system path to call the Phantomjs binaries. If not, you need to peruse a few beginner tutorials: <a href=\"http://net.tutsplus.com/tutorials/javascript-ajax/testing-javascript-with-phantomjs/\">http://net.tutsplus.com/tutorials/javascript-ajax/testing-javascript-with-phantomjs/</a></p>\n\n<p>Once you have that set up, you will need to write a simple javascript file that you will call in the terminal (or shell, if you are using Windows). I will provide a simple, example script below.</p>\n\n<pre><code>var WebPage = require('webpage');\npage = WebPage.create();\npage.open('http://google.com');\npage.onLoadFinished = function() {\n   page.render('googleScreenShot' + '.png');\n   phantom.exit();}\n</code></pre>\n\n<p>Then, save your js file. Open up your terminal or shell and run the following</p>\n\n<pre><code>phantomjs yourFile.js\n</code></pre>\n\n<p>That's it. Check the directory where you called the js file and you should have a png file with a screen shot of your web page.</p>\n\n<p>This is very simple and there are a lot of caveats to f-ing with phantomjs, but this is about as basic as I can make it. If you need other recipes for phantomjs, try looking at these example scripts: <a href=\"https://github.com/ariya/phantomjs/wiki/Examples\">https://github.com/ariya/phantomjs/wiki/Examples</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>The above answer is fine for basic usage but PhantomJS doesn't know if all AJAX requests have been loaded or not. I made <a href=\"https://github.com/kimmobrunfeldt/url-to-image\" rel=\"nofollow\">url-to-image</a> to help with this problem.</p>\n\n<ol>\n<li><code>npm install url-to-image</code></li>\n<li><p>Write screenshot.js</p>\n\n<pre><code>var screenshot = require('url-to-image');\nscreenshot('http://google.com', 'google.png').done(function() {\n    console.log('http://google.com screenshot saved to google.png');\n});\n</code></pre></li>\n<li>Run script <code>node screenshot.js</code></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm very new to PhantomJS and need to get my code working asap, so need your help. My requirement is simple, I have a URL (for e.g.<a href=\"http://rads.stackoverflow.com/amzn/click/B00A21KPEI\" rel=\"nofollow\">http://www.amazon.com/OtterBox-77-24444-Commuter-Series-Optimus/dp/B00A21KPEI/ref=pd_sim_cps_4</a>) and want to take a screenshot of it and preview it on my web page. Meaning, the user clicks on the preview button and PhantomJS needs to preview the web page as PNG/JPEG</p>\n\n<p>Can you all please help me with it? I'm ok with using any other open source too. Your help is highly appreciated.</p>\n",
            "last_activity_date": 1425574376,
            "question_id": 17189745,
            "score": 9,
            "tags": [
                "javascript",
                "jquery",
                "phantomjs",
                "frontend"
            ],
            "title": "Phantomjs - take screenshot of a web page"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>These frameworks are designed to make your code easier to maintain and to improve the user experience by creating single page applications, in this kind of apps the navigation is more fluid because everything is loaded via AJAX if you want to learn more about it you can start with <a href=\"http://en.wikipedia.org/wiki/Single-page_application\">http://en.wikipedia.org/wiki/Single-page_application</a>. </p>\n\n<p>Another advantage of this sort of applications is that you are going to need an HTTP API to be the access point to your data access layer (DAL) from the front end. When you have a HTTP API your DAL is 100% independent of the data presentation layer this means that in the future you will be able to re-use it to create other apps like for example mobile apps, you can even use tools like phone gap to auto generate the mobile apps for you if you follow this approach.</p>\n\n<p>You can also save a really big amount of time auto-generating your HTTP API by using tools like <a href=\"http://deployd.com/\">http://deployd.com/</a>. So we can say that following this approach provides a better user experience, is faster to develop and easier to maintain and test that's why it is so popular. Big companies like Google (angular.js) and twitter (<a href=\"https://github.com/twitter/flight\">https://github.com/twitter/flight</a>) are using it but they just created their own one.</p>\n\n<p>If you find complicated to decide what framework to use take a look to <a href=\"http://todomvc.com/\">http://todomvc.com/</a> they provide with the same example (a TODO application) in each of the available frameworks so you can pick the one that you like more. </p>\n\n<p>Hope it helps :)</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I work for some bigger company as javascript developer. We have about 30 web projects. But we <strong>don't</strong> use any MV* for javascript. </p>\n\n<p>1) I think that it doesn't worth till you have only few javascript developers. It is better to  have set of widgets and reuse widgets from this set. Each widget is an object in our case. Javascript is mainly view so why to separate it into more parts? </p>\n\n<p>2) The main downside is that you are trying to use too big hammer, so it extends development time. Filtering, searching, sorting, ajax and other stuff are very common and simple problems. You don't need MV* patterns for these. </p>\n\n<p>3) Supranational organizations can afford it. Also you can find it in some webGL projects (games) and similar things. Others don't need it. </p>\n\n<p>Also don't forget that \"premature optimization is the root of all evil\". Good frameworks and clear code can help you in the future, but it can also stop you in the present! </p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have a e-commerce website, and it is a little JavaScript intensive (conditional filtering for price, brands, etc. AJAX calls, etc.).\nI have a lot of cluttered JavaScript/jQuery code on my website (views not separate, no reusability, etc.), and we're planning to rewrite the code.</p>\n\n<p>To solve the problem, I came across <code>KnockoutJS</code>, and on further research, <code>Backbone.js</code>, <code>AngularJS</code>, <code>Ember.js</code>, etc.</p>\n\n<p>I looked at most of the popular websites, like SO, GitHub, Amazon, Ebay, etc. and it seems none of these websites use any of these frameworks.</p>\n\n<p>What I cannot seem to figure out is the use case for using these frameworks. The wikipedia pages suggest these are designed for single page apps.</p>\n\n<ol>\n<li>Is it worth the effort to implement the above for a traditional e-commerce website?</li>\n<li>Are there any downsides to using any of the above frameworks ?</li>\n<li>Is there a reason why a lot of popular websites are not using them ?</li>\n</ol>\n",
            "last_activity_date": 1368531603,
            "question_id": 16520532,
            "score": 9,
            "tags": [
                "javascript",
                "backbone.js",
                "knockout.js"
            ],
            "title": "Reason for using a JavaScript MV* framework?"
        }
    ]
}
