{
    "items": [
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>It declares the <code>columnize</code> function as a jQuery plugin allowing you to use it on elements like this <code>$('.someSelector').columnize()</code>. You could read more about <a href=\"http://docs.jquery.com/Plugins/Authoring\" rel=\"nofollow\">plugin authoring here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I just found this... is it a Proxy Pattern ?</p>\n\n<p>Proxy Pattern</p>\n\n<p>Combining the above knowledge gives you as a JavaScript developer quite a lot of power. One way to combine that is to implement a proxy pattern in JavaScript, enabling the basics of aspect-oriented programming (AOP):</p>\n\n<pre><code>(function() {\n  // log all calls to setArray\n  var proxied = jQuery.fn.setArray;\n  jQuery.fn.setArray = function() {\n    console.log(this, arguments);\n    return proxied.apply(this, arguments);\n  };\n})();\n</code></pre>\n\n<p>The above wraps its code in a function to hide the \"proxied\"-variable. It saves jQuery's setArray-method in a closure and overwrites it. The proxy then logs all calls to the method and delegates the call to the original. Using apply(this, arguments) guarantees that the caller won't be able to notice the difference between the original and the proxied method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's probably a jQuery extension, which basically pass (jQuery) at the end like</p>\n\n<pre><code>(function($){\n    //$ is jQuery here\n\n    //added columnize function to existing jQuery object\n    $.fn.columnize = function(options) {\n\n    }\n\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This convention is used when writing plugins to ensure there is no confilict with other Javascript libraries using the $ notation, whilst ensuring the plugin author can still use this notataion:</p>\n\n<pre><code>(function($){\n    ...\n})(jQuery); \n</code></pre>\n\n<p>The author is declaring an anonymous function with a single parameter ($), then immediately calling it and passing the jQuery object to it. This ensures the function is called and that everything in it is defined.</p>\n\n<p>A longer notation might be:</p>\n\n<pre><code>function MyDefs($){\n    ...\n}\nMyDefs(jQuery);\n</code></pre>\n\n<p>Although that would create a variable <code>MyDefs</code> in the global namespace. The anonymous function pattern leaves the global namespace empty, avoiding conflicts.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Don't get confused by the <code>$</code>. Actually, <code>$</code>is a valid variable name in JavaScript (as are all variables containing <code>$</code>, <a href=\"http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf\" rel=\"nofollow\">source (PDF)</a>).</p>\n\n<p>So, the first line could be rephrased as</p>\n\n<pre><code>(function (someVariable) {\n</code></pre>\n\n<p>which might look more common. For the rest, yes it is a proxy pattern, and James Wiseman's answer is explaining, what's going on.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>function($) {...}</code> defines an anonymous function with a formal parameter named <code>$</code>. <code>$.fn</code> refers to the property named <code>fn</code> of the object referred to by the variable <code>$</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What does the following syntax mean?</p>\n\n<pre><code>(function($){\n    $.fn.columnize = function(options) {\n    ...\n</code></pre>\n\n<p>What\u2019s <code>function($)</code>?</p>\n\n<p>What\u2019s <code>$.fn. \u2026</code>?</p>\n",
            "last_activity_date": 1266853856,
            "question_id": 2309614,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What does this JavaScript/jQuery syntax mean?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre>var myPopup = window.open(...);\nmyPopup.addEventListener('load', myFunction, false);</pre>\n\n<p>If you care about IE, use the following as the second line instead:</p>\n\n<pre>myPopup[myPopup.addEventListener ? 'addEventListener' : 'attachEvent'](\n  (myPopup.attachEvent ? 'on' : '') + 'load', myFunction, false\n);</pre>\n\n<p>As you can see, supporting IE is quite cumbersome and should be avoided <em>if possible</em>. I mean, if you need to support IE because of your audience, by all means, do so.</p>\n",
                    "is_accepted": false,
                    "score": 20
                },
                {
                    "body": "<p><code>onload</code> event handler must be inside popup's HTML <code>&lt;body&gt;</code> markup.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If the pop-up's document is from a different domain, this is simply not possible.</p>\n\n<p>If not, there's still no way you'll be able to make this work cross-browser without some help from the document being loaded into the pop-up. You need to be able to detect a change in the pop-up that occurs once it has loaded, which could be a variable that JavaScript in the pop-up page sets when it handles its own <code>load</code> event, or if you have some control of it you could add a call to a function in the opener.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>As noted this answer's <a href=\"http://stackoverflow.com/a/3030893\">http://stackoverflow.com/a/3030893</a> aka <a href=\"http://stackoverflow.com/questions/3030859/detecting-the-onload-event-of-a-window-opened-with-window-open/3030893#3030893\">Detecting the onload event of a window opened with window.open</a> solution is ideal:</p>\n\n<pre><code>javascript: /* IE will use 1 ignore 1 w/ error, FF t'other way 'round */\n (function(ow){\n   ow . addEventListener(  'load', function(){alert(\"loaded\")}, false);\n   ow .      attachEvent('onload', function(){alert(\"loaded\")}, false);\n  }(window.open(prompt(\"Where are you going today?\",location.href),\"snapDown\")))\n</code></pre>\n\n<p>However, other comments and answers perpetrate several erroneous misconceptions as explained below.</p>\n\n<p>The following script demonstrates the temperamental temporal fickleness of defining <code>onload</code>. Apply the script to a fast loading <code>location.href</code> such as <code>file:///</code> and some slow site to see the problem. It is possible to see either <code>onload</code> message or none at all (by reloading a loaded page all 3 variations can be seen). It is also assumed that the page being loaded itself does not define an <code>onload</code> event which would compound the problem.</p>\n\n<p>The <code>onload</code>'s event handler definitions are definitely not \"inside popup's HTML  markup\" though they will ultimately reside in the DOM of the <code>body</code> ... of the <code>HTML</code>.</p>\n\n<pre><code>javascript:\nwindow.popup=window.open(location.href,'snapDown');\nwindow.popup.onload=function(){alert(\"message one \")};\nalert(\"message 1 maybe too soon\\n\"+window.popup.onload);\nwindow.popup.onload=function(){alert(\"message two\")};\nalert(\"message 2 maybe too late\\n\"+window.popup.onload);\n</code></pre>\n\n<p>what you can do:</p>\n\n<ul>\n<li>open a foreign URL</li>\n<li>on that foreign URL pg. address bar enter a <code>javascript: ...</code> URI<br>\nit will inherit the same-site policies as the foreign URL<br>\nNB. the javascript may need to be bookmarked as a bookmarklet since address bar URI <code>javascript:</code>'s are not effective in recent (circa 2012) browsers</li>\n<li>this effectively gives cross domain access but note: \n<ol>\n<li>the javascript is <em>not</em> indigenous to a web page or site, meaning it's origin has a  stateless nationality and thus intrinsically satisfies css (x-site scripting) and sop (same origin policy) immigration rules</li>\n<li>it is invoked <em>manually</em> via the address bar or bookmarks AND<br>\nthe script is <em>manually</em> entered into those locations</li>\n</ol></li>\n</ul>\n\n<p>Thus any page, well almost, irregardless of origin, can be modified like:</p>\n\n<pre><code>javascript:\n  if(confirm(\"wipe out links &amp; anchors?\\n\"+document.body.innerHTML))\n     void(document.body.innerHTML=document.body.innerHTML.replace(/&lt;a /g,\"&lt; a \"))\n</code></pre>\n\n<p>(well almost ...<br>\n<code>jar:file:///usr/lib/firefox/omni.ja!/chrome/toolkit/content/global/aboutSupport.xhtml</code><br>\nMozilla's FF troubleshooting page and other <code>jar</code> archives are exceptions)</p>\n\n<p>As another example:<br>\nTo routinely disable google's usurping of target pg. hits, change it's <code>rwt</code> function as follows:</p>\n\n<pre><code>javascript:void(rwt=function(unusurpURL){return unusurpURL})\n</code></pre>\n\n<p>and bookmark this as <code>spay google</code> (<code>neuteralize google</code>?) ie. it's \"fixed\".</p>\n\n<p>This bookmark is then clicked before any <code>google</code> hits are clicked, so bookmarks of any of those hits are clean and not the mongrelized perverted aberrations that <code>google</code> made of them.</p>\n\n<p>tests done with</p>\n\n<pre><code>window.navigator.userAgent=\nMozilla/5.0 (X11; Ubuntu; Linux i686; rv:11.0) Gecko/20100101 Firefox/11.0\n</code></pre>\n\n<p>It should be noted that <code>addEventListener</code> in Mozilla only has a non-standard fourth, boolean parameter which,, if <code>true</code> allows untrusted content triggers to be instantiated for foreign pages.</p>\n\n<p>ref:<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/DOM/element.addEventListener\" rel=\"nofollow\">element.addEventListener | Document Object Model (DOM) | MDN:</a><br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Code_snippets/Interaction_between_privileged_and_non-privileged_pages\" rel=\"nofollow\">Interaction between privileged and non-privileged pages | Code snippets | MDN:</a></p>\n\n<p>Bookmark:<br>\n<a href=\"http://stackoverflow.com/questions/3030859/detecting-the-onload-event-of-a-window-opened-with-window-open/12659656#12659656\">Detecting the onload event of a window opened with window.open</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This did the trick for me; full example:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;a href=\"/my-popup.php\" class=\"import\"&gt;Click for my popup on same domain&lt;/a&gt;\n</code></pre>\n\n<p>Javascript:\n</p>\n\n<pre><code>(function(){\n    var doc = document;\n\n    jQuery('.import').click(function(e){\n        e.preventDefault();\n        window.popup = window.open(jQuery(this).attr('href'), 'importwindow', 'width=500, height=200, top=100, left=200, toolbar=1');\n\n        window.popup.onload = function() {\n            window.popup.onbeforeunload = function(){\n                doc.location.reload(true); //will refresh page after popup close\n            }\n        }\n    });\n})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code> window.popup = window.open($(this).attr('href'), 'Ad', 'left=20,top=20,width=500,height=500,toolbar=1,resizable=0');\n $(window.popup).onload = function()\n        {\n                alert(\"Popup has loaded a page\");\n        };\n</code></pre>\n\n<p>This doesn't work in any browser I've tried it with (IE, Firefox, Chrome). How can I detect when a page is loaded in the window (like an iframe onload)?</p>\n",
            "last_activity_date": 1411456935,
            "question_id": 3030859,
            "score": 5,
            "tags": [
                "javascript",
                "internet-explorer",
                "firefox",
                "google-chrome",
                "popup"
            ],
            "title": "Detecting the onload event of a window opened with window.open"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Last time I had that issue, I ended up using the <code>onpropertychange</code> event for Internet Explorer instead. I read about that <a href=\"http://msdn.microsoft.com/en-us/library/ms533032%28VS.85%29.aspx\" rel=\"nofollow\">here on MSDN</a>: it is the recommended way to get around it.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>I've encountered this annoying feature before and my solution at the time was to use the onfocus event to record the current value of the text box, and then use the onblur event to check whether the current value now matches the value saved during onfocus. For example</p>\n\n<pre><code>&lt;input type=\"text\" name=\"txtTest\" value=\"\" onfocus=\"this.originalvalue=this.value\" onblur=\"if (this.value != this.originalvalue) alert('Test has changed')\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I just turn Autocomplete off for the text boxes I need to fire a text change event</p>\n\n<pre><code>'Turn off Auto complete \n'(it needs to fire the text change event)\n txtYourTextBox.Attributes.Add(\"AutoComplete\", \"off\")\n</code></pre>\n\n<p>Just put that in the page load.</p>\n\n<p>Alternately, you can add the attribute to your markup on the <code>input</code> element or the entire <code>form</code>:</p>\n\n<pre><code>&lt;input type=text autocomplete=off&gt;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;form autocomplete=off&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just found that <a href=\"http://blog.darkthread.net/blogs/darkthreadtw/archive/2010/03/09/jquery1-4-fix-autocomplete-onchange-issue.aspx\" rel=\"nofollow\">using jQuery 1.4 to set change event</a> can solve this issue.  It seems the easiest solution to this issue if you are already familiar with jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Building on Tim C's answer, here is the simple jquery I came up with to handle this for all text boxes on a page:</p>\n\n<pre><code>$(\"input[type=text]\").bind(\"focus change\",function(){\n    this.previousvalue = this.value;\n}).blur(function(){\n    if (this.previousvalue != this.value){\n        $(this).change();\n    }\n})\n</code></pre>\n\n<p>If you don't care about onchange firing multiple times, you can make it simpler:</p>\n\n<pre><code>$(\"input[type=text]\").blur(function(){\n    $(this).change();\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>focus and blur does not really solve the problem, as they don't get fired (at least in Chrome). I've come up with a better solution here: </p>\n\n<p><a href=\"http://stackoverflow.com/questions/7955380/event-on-selecting-from-autocomplete/19776985#19776985\">event on selecting from autocomplete</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found that the following jQuery (v1.10+) JavaScript does work in the case of text being auto-completed for HTML text input fields. This was tested to work reliably at least in Safari 6.1.1 on Mac OS X 10.8.5, but should work in other compliant browsers also:</p>\n\n<pre><code>$(\"input:text[id=text_field_id]\").bind(\"focus change keyup blur\", function(event) {\n// handle text change here...\n});\n</code></pre>\n\n<p>It seemed the addition of the <code>blur</code> event handler was the key to making this work, although the other event handlers help ensure that the event handler is called any time the text changes, whether due to an edit or new input by the browser's auto-complete feature.</p>\n\n<p>Simply replace the <code>\"input:text[id=text_field_id]\"</code> code above with the relevant selector for your desired text input field, or if using the <code>id</code> attribute to refer to your field, replace <code>text_field_id</code> with your text field's <code>id</code> attribute value.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a textbox with an onchange event. Why does this event not fire when the user uses the autocomplete feature to populate the textbox?</p>\n\n<p>I am working with Internet Explorer. Is there a standard and relatively simple solution to workaround this problem, without me having to disable the autocomplete feature?</p>\n",
            "last_activity_date": 1397853636,
            "question_id": 343192,
            "score": 22,
            "tags": [
                "asp.net",
                "javascript"
            ],
            "title": "Why does the javascript onchange event not fire if autocomplete is on?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is a good compatability script on this page:\n<a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind</a></p>\n\n<p>Just copy and paste it into your script.</p>\n\n<p><strong>EDIT:</strong> placing the script below for clarity.</p>\n\n<pre><code>if (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP &amp;&amp; oThis\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    fNOP.prototype = this.prototype;\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>The best solution could be to install <a href=\"http://modernizr.com\" rel=\"nofollow\">Modernizr</a>. </p>\n\n<p>Modernizr tells you whether the current browser has this feature natively implemented or not\nand it provides a script loader so you can pull in polyfills to backfill functionality in old browsers. </p>\n\n<p>Here is the link to generate your modernizr custom version:<br>\n<a href=\"http://modernizr.com/download/#-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes\" rel=\"nofollow\">http://modernizr.com/download/#-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The Function constructor is the old-fashioned way of doing this:</p>\n\n<pre><code>funcabc = function(x, y, z){ \n    this.myx = x;\n    this.playUB = function(w) {\n        if ( this.myx === null ) {\n            // do blah blah\n            return;\n        }\n\n        // do other stuff\n    };\n    this.play = Function(\"obj\",\"return this.playUB.call(obj)\")\n};\n</code></pre>\n\n<p><strong>References</strong></p>\n\n<ul>\n<li><a href=\"http://www.webreference.com/programming/javascript/rg25/3.html\" rel=\"nofollow\">Functional JavaScript: Harnessing the power of the Function Object</a></li>\n<li><a href=\"http://www.nczonline.net/blog/2013/06/25/eval-isnt-evil-just-misunderstood/\" rel=\"nofollow\">eval() isn\u2019t evil, just misunderstood</a></li>\n<li><a href=\"http://dmitrysoshnikov.com/ecmascript/chapter-4-scope-chain/#scope-of-functions-created-via-function-constructor\" rel=\"nofollow\">[Scope] of Functions Created via the Function constructor</a></li>\n<li><a href=\"http://dailyjs.com/2012/07/02/function/\" rel=\"nofollow\">Functions are Objects</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Function.prototype.bind isn\u2019t supported in Internet Explorer 8 and below. Compatibility chart here: <a href=\"http://kangax.github.io/es5-compat-table/\" rel=\"nofollow\">http://kangax.github.io/es5-compat-table/</a></p>\n\n<p>Mozilla Developer Network provide this alternative for older browsers that don't implemented .bind() natively:</p>\n\n<pre><code>if (!Function.prototype.bind) {\n  Function.prototype.bind = function (oThis) {\n    if (typeof this !== \"function\") {\n      // closest thing possible to the ECMAScript 5 internal IsCallable function\n      throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n    }\n\n    var aArgs = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP = function () {},\n        fBound = function () {\n          return fToBind.apply(this instanceof fNOP &amp;&amp; oThis\n                                 ? this\n                                 : oThis,\n                               aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    fNOP.prototype = this.prototype;\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am writing a bit of JavaScript that uses the <code>Object.bind</code> method.</p>\n\n<pre><code>funcabc = function(x, y, z){ \n    this.myx = x;\n    this.playUB = function(w) {\n        if ( this.myx === null ) {\n            // do blah blah\n            return;\n        }\n\n        // do other stuff\n    };\n    this.play = this.playUB.bind(this);\n};\n</code></pre>\n\n<p>Since I develop in WinXP with Firefox and sometimes test in Win7 with IE 9 or 10, I did not notice or pay attention to the fact that IE8 and below do not support <code>bind</code>.</p>\n\n<p>This particular script does not use the canvas, so I'm a little hesitant to write off all IE 8 users. </p>\n\n<p>Is there a standard work-around?</p>\n\n<p>I'm getting around sort of okay in JavaScript, but I'm still a bit of a noob. So forgive me if the solution is totally obvious. </p>\n",
            "last_activity_date": 1414442951,
            "question_id": 11054511,
            "score": 14,
            "tags": [
                "javascript",
                "internet-explorer-8",
                "cross-browser",
                "bind",
                "backwards-compatibility"
            ],
            "title": "How to handle lack of JavaScript Object.bind() method in IE 8"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Yes, you can, provided your JavaScript code is embedded into a PHP file.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're pretty much on the ball. The only difference is I'd separate out the javascript so the majority was in an external static file. Then you just define variables or call a function from the actual PHP page:</p>\n\n<pre><code>&lt;script type=\"text/javascript&gt;\n    function_in_other_file(&lt;?php echo my_php_var; ?&gt;);\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>We can't use \"php in between javascript\", because php runs on the server and js - on client.<br>\nHowever we can generate JS code as well as HTML, using all PHP features, including <a href=\"http://php.net/manual/en/language.basic-syntax.phpmode.php\" rel=\"nofollow\">escaping from HTML</a> one</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If your whole JS code gets processed by PHP, then you can do it just like that. If you have individual .js files, and you don't want PHP to process them (for example, for caching reasons), then what you can do is just pass variables around in JS. For example in your index.php (or wherever you specify your layout), you'd do something like this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar my_var = &lt;?php echo json_encode($my_var); ?&gt;;\n&lt;/script&gt;\n</code></pre>\n\n<p>You could then use <code>my_var</code> in your JS files. This method also lets you pass other than just simple integer values, as json_encode() also deals with arrays, strings, etc. correctly, serializing them into a format that JS can use.</p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>If you put your javascript code in <strong>php</strong> file, you can not otherwise, for example:</p>\n\n<p><strong>page.php</strong> (This will work)</p>\n\n<pre><code>function jst()\n{\nvar i = 0 ;\ni = &lt;?php echo 35; ?&gt;;\nalert( i );\n}\n</code></pre>\n\n<p><strong>page.js</strong> (This won't work)</p>\n\n<pre><code>function jst()\n{\nvar i = 0 ;\ni = &lt;?php echo 35; ?&gt;\nalert( i );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>PHP has to be parsed on the server. \nJS is worked in the Client's browser.</p>\n\n<p>Having PHP Code in a .js file will not work, except you can tell the server, to parse the file you want to have as .js before he sends it to the client. And telling the server is the easiest thing on the world: just add .php at the end of the filename.</p>\n\n<p>So, you could name it javascript.php\nor, so you know what this file is PRIMARILY, you could name it javascript.js.php - the server will recognize it as .php and parse it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is the bit of code you need at the top of you js</p>\n\n<pre><code>&lt;?php\n    header('Content-Type: text/javascript; charset=UTF-8');\n?&gt;\n\n(function() {\n    alert(\"hello world\");\n}) ();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>how can we use php in between javascript ?????\n<br>\nlike <br></p>\n\n<pre><code>function jst()\n{\nvar i = 0 ;\ni = &lt;?php echo 35; ?&gt;\nalert( i );\n}\n</code></pre>\n\n<p>Please suggest a better way</p>\n",
            "last_activity_date": 1388895480,
            "question_id": 3352576,
            "score": 13,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "How to embed php in javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I use the <code>type</code> attribute since it's required for valid HTML. But practically, it serves no purpose.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The type attribute is required for HTML and XHTML validation so I always write it</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If the script is embedded in the page, Crockford's advice isn't relevant.</p>\n\n<p>If you want to write standard-conforming HTML, then it still isn't relevant.</p>\n\n<p>He's generally spot on about everything to do with JavaScript, so he's probably just giving you some background information, rather than telling you what to do.</p>\n\n<p>Having followed the link, that page is showing its age a little. For example:</p>\n\n<blockquote>\n  <p><code>&lt;script src=filename.js&gt;</code> tags should\n  be placed as late in the body as\n  possible. This reduces the effects of\n  delays imposed by script loading on\n  other page components.</p>\n</blockquote>\n\n<p>The \"modern\" approach is to use jQuery (or similar style) to perform processing when the document has loaded, which automatically solves that problem, allowing you to put the script tag wherever it makes logical sense.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You misunderstood what Crockford meant, he didn't say the <code>type</code> attribute is completely invalid, it's just that it's incorrect. The MIME type for JavaScript is <code>application/javascript</code> (or <code>application/ecmascript</code> I can't remember right now).</p>\n\n<p>The general usage though is that is <code>text/javascript</code> which browsers will handle without any problems as that's been the <em>defacto</em> standard for a long time.</p>\n\n<p>In regards to the <code>&lt;script src=\"...\"</code> tag it is redundant because the server determines the MIME type of the file and that is what the browser will then deal with.</p>\n\n<p>He best explains it in one of his videos on YUI Theater (<a href=\"http://developer.yahoo.com/yui/theater/\">http://developer.yahoo.com/yui/theater/</a>). I don't remember exactly which one he talks about this, I think it was in the advanced JavaScript series (but yeah I've watched them all a few times so they kind of blur into each other).</p>\n\n<p>So if you want to write valid XHTML you need to provide something like <code>text/javascript</code> but it's not the <em>official</em> MIME type of the JavaScript language.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>I will also use type attribute because, sometimes in firefox the javascript codes are not working. By using this i solved some browser compatibility issues.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The HTML5 spec says the default <code>type</code> is <code>text/javascript</code>... so in HTML5 you can leave this blank in all cases where you are, in fact, scripting in Javascript. See <a href=\"http://www.w3.org/html/wg/drafts/html/master/scripting-1.html#attr-script-type\" rel=\"nofollow\" title=\"The Spec\">the spec</a> for more information.</p>\n\n<p>In HTML4 the <code>type</code> attribute is <a href=\"http://www.w3.org/TR/html4/interact/scripts.html#h-18.2.1\" rel=\"nofollow\">required</a>, so you should include it in that case if you are concerned about having \"valid\" HTML, obviously if Crockford is saying the attribute is not needed, there is no apparent downside to invalid HTML in this case. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I read through <a href=\"http://javascript.crockford.com/code.html\">Crockford's JavaScript best practise</a>, and he stated:</p>\n\n<blockquote>\n  <p>There is no need to use the language or type attributes. It is the server, not the script tag, that determines the MIME type.</p>\n</blockquote>\n\n<p>But I've never seen anyone omit the <code>type</code> attribute in their <code>&lt;script&gt;</code> tag...</p>\n\n<p>Do you guys include <code>type</code>? Why (not)?</p>\n",
            "last_activity_date": 1361570237,
            "question_id": 985408,
            "score": 13,
            "tags": [
                "javascript"
            ],
            "title": "Should I include type=&quot;text/javascript&quot; in my SCRIPT tags?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I would personally use <a href=\"http://www.datejs.com/\" rel=\"nofollow\">http://www.datejs.com/</a>, really handy. Specifically, look at the time.js file: <a href=\"http://code.google.com/p/datejs/source/browse/trunk/src/time.js\" rel=\"nofollow\">http://code.google.com/p/datejs/source/browse/trunk/src/time.js</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Some math is in order.</p>\n\n<p>You can subtract one Date object from another in Javascript, and you'll get the difference between them in milisseconds. From this result you can extract the other parts you want (days, months etc.)</p>\n\n<p>For example:</p>\n\n<pre><code>var a = new Date(2010, 10, 1);\nvar b = new Date(2010, 9, 1);\n\nvar c = a - b; // c equals 2674800000,\n               // the amount of milisseconds between September 1, 2010\n               // and August 1, 2010.\n</code></pre>\n\n<p>Now you can get any part you want. For example, how many days have elapsed between the two dates:</p>\n\n<pre><code>var days = (a - b) / (60 * 60 * 24 * 1000);\n// 60 * 60 * 24 * 1000 is the amount of milisseconds in a day.\n// the variable days now equals 30.958333333333332.\n</code></pre>\n\n<p>That's almost 31 days. You can then round down for 30 days, and use whatever remained to get the amounts of hours, minutes etc.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>How precise do you need to be? If you do need to take into account common years and leap years, and the exact difference in days between months then you'll have to write something more advanced but for a basic and rough calculation this should do the trick:</p>\n\n<pre><code>today = new Date()\npast = new Date(2010,05,01) // remember this is equivalent to 06 01 2010\n//dates in js are counted from 0, so 05 is june\n\nfunction calcDate(date1,date2) {\n    var diff = Math.floor(date1.getTime() - date2.getTime());\n    var day = 1000 * 60 * 60 * 24;\n\n    var days = Math.floor(diff/day);\n    var months = Math.floor(days/31);\n    var years = Math.floor(months/12);\n\n    var message = date2.toDateString();\n    message += \" was \"\n    message += days + \" days \" \n    message += months + \" months \"\n    message += years + \" years ago \\n\"\n\n    return message\n    }\n\n\na = calcDate(today,past)\nconsole.log(a) // returns Tue Jun 01 2010 was 1143 days 36 months 3 years ago\n</code></pre>\n\n<p>Keep in mind that this is imprecise, in order to calculate the date with full precision one would have to have a calendar and know if a year is a leap year or not, also the way I'm calculating the number of months is only approximate. </p>\n\n<p>But you can improve it easily. </p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For quick and easy use I wrote this function some time ago. It returns the diff between two dates in a nice format. Feel free to use it (tested on webkit).</p>\n\n<pre><code>/**\n * Function to print date diffs.\n * \n * @param {Date} fromDate: The valid start date\n * @param {Date} toDate: The end date. Can be null (if so the function uses \"now\").\n * @param {Number} levels: The number of details you want to get out (1=\"in 2 Months\",2=\"in 2 Months, 20 Days\",...)\n * @param {Boolean} prefix: adds \"in\" or \"ago\" to the return string\n * @return {String} Diffrence between the two dates.\n */\nfunction getNiceTime(fromDate, toDate, levels, prefix){\n    var lang = {\n            \"date.past\": \"{0} ago\",\n            \"date.future\": \"in {0}\",\n            \"date.now\": \"now\",\n            \"date.year\": \"{0} year\",\n            \"date.years\": \"{0} years\",\n            \"date.years.prefixed\": \"{0} years\",\n            \"date.month\": \"{0} month\",\n            \"date.months\": \"{0} months\",\n            \"date.months.prefixed\": \"{0} months\",\n            \"date.day\": \"{0} day\",\n            \"date.days\": \"{0} days\",\n            \"date.days.prefixed\": \"{0} days\",\n            \"date.hour\": \"{0} hour\",\n            \"date.hours\": \"{0} hours\",\n            \"date.hours.prefixed\": \"{0} hours\",\n            \"date.minute\": \"{0} minute\",\n            \"date.minutes\": \"{0} minutes\",\n            \"date.minutes.prefixed\": \"{0} minutes\",\n            \"date.second\": \"{0} second\",\n            \"date.seconds\": \"{0} seconds\",\n            \"date.seconds.prefixed\": \"{0} seconds\",\n        },\n        langFn = function(id,params){\n            var returnValue = lang[id] || \"\";\n            if(params){\n                for(var i=0;i&lt;params.length;i++){\n                    returnValue = returnValue.replace(\"{\"+i+\"}\",params[i]);\n                }\n            }\n            return returnValue;\n        },\n        toDate = toDate ? toDate : new Date(),\n        diff = fromDate - toDate,\n        past = diff &lt; 0 ? true : false,\n        diff = diff &lt; 0 ? diff * -1 : diff,\n        date = new Date(new Date(1970,0,1,0).getTime()+diff),\n        returnString = '',\n        count = 0,\n        years = (date.getFullYear() - 1970);\n    if(years &gt; 0){\n        var langSingle = \"date.year\" + (prefix ? \"\" : \"\"),\n            langMultiple = \"date.years\" + (prefix ? \".prefixed\" : \"\");\n        returnString += (count &gt; 0 ?  ', ' : '') + (years &gt; 1 ? langFn(langMultiple,[years]) : langFn(langSingle,[years]));\n        count ++;\n    }\n    var months = date.getMonth();\n    if(count &lt; levels &amp;&amp; months &gt; 0){\n        var langSingle = \"date.month\" + (prefix ? \"\" : \"\"),\n            langMultiple = \"date.months\" + (prefix ? \".prefixed\" : \"\");\n        returnString += (count &gt; 0 ?  ', ' : '') + (months &gt; 1 ? langFn(langMultiple,[months]) : langFn(langSingle,[months]));\n        count ++;\n    } else {\n        if(count &gt; 0)\n            count = 99;\n    }\n    var days = date.getDate() - 1;\n    if(count &lt; levels &amp;&amp; days &gt; 0){\n        var langSingle = \"date.day\" + (prefix ? \"\" : \"\"),\n            langMultiple = \"date.days\" + (prefix ? \".prefixed\" : \"\");\n        returnString += (count &gt; 0 ?  ', ' : '') + (days &gt; 1 ? langFn(langMultiple,[days]) : langFn(langSingle,[days]));\n        count ++;\n    } else {\n        if(count &gt; 0)\n            count = 99;\n    }\n    var hours = date.getHours();\n    if(count &lt; levels &amp;&amp; hours &gt; 0){\n        var langSingle = \"date.hour\" + (prefix ? \"\" : \"\"),\n            langMultiple = \"date.hours\" + (prefix ? \".prefixed\" : \"\");\n        returnString += (count &gt; 0 ?  ', ' : '') + (hours &gt; 1 ? langFn(langMultiple,[hours]) : langFn(langSingle,[hours]));\n        count ++;\n    } else {\n        if(count &gt; 0)\n            count = 99;\n    }\n    var minutes = date.getMinutes();\n    if(count &lt; levels &amp;&amp; minutes &gt; 0){\n        var langSingle = \"date.minute\" + (prefix ? \"\" : \"\"),\n            langMultiple = \"date.minutes\" + (prefix ? \".prefixed\" : \"\");\n        returnString += (count &gt; 0 ?  ', ' : '') + (minutes &gt; 1 ? langFn(langMultiple,[minutes]) : langFn(langSingle,[minutes]));\n        count ++;\n    } else {\n        if(count &gt; 0)\n            count = 99;\n    }\n    var seconds = date.getSeconds();\n    if(count &lt; levels &amp;&amp; seconds &gt; 0){\n        var langSingle = \"date.second\" + (prefix ? \"\" : \"\"),\n            langMultiple = \"date.seconds\" + (prefix ? \".prefixed\" : \"\");\n        returnString += (count &gt; 0 ?  ', ' : '') + (seconds &gt; 1 ? langFn(langMultiple,[seconds]) : langFn(langSingle,[seconds]));\n        count ++;\n    } else {\n        if(count &gt; 0)\n            count = 99;\n    }\n    if(prefix){\n        if(returnString == \"\"){\n            returnString = langFn(\"date.now\");\n        } else if(past)\n            returnString = langFn(\"date.past\",[returnString]);\n        else\n            returnString = langFn(\"date.future\",[returnString]);\n    }\n    return returnString;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Yet another solution, based on some PHP code.\nThe strtotime function, also based on PHP, can be found here: <a href=\"http://phpjs.org/functions/strtotime/\" rel=\"nofollow\">http://phpjs.org/functions/strtotime/</a>.</p>\n\n<pre><code>Date.dateDiff = function(d1, d2) {\n    d1 /= 1000;\n    d2 /= 1000;\n    if (d1 &gt; d2) d2 = [d1, d1 = d2][0];\n\n    var diffs = {\n        year: 0,\n        month: 0,\n        day: 0,\n        hour: 0,\n        minute: 0,\n        second: 0\n    }\n\n    $.each(diffs, function(interval) {\n        while (d2 &gt;= (d3 = Date.strtotime('+1 '+interval, d1))) {\n            d1 = d3;\n            ++diffs[interval];\n        }\n    });\n\n    return diffs;\n};\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>&gt; d1 = new Date(2000, 0, 1)\nSat Jan 01 2000 00:00:00 GMT+0100 (CET)\n\n&gt; d2 = new Date(2013, 9, 6)\nSun Oct 06 2013 00:00:00 GMT+0200 (CEST)\n\n&gt; Date.dateDiff(d1, d2)\nObject {\n  day: 5\n  hour: 0\n  minute: 0\n  month: 9\n  second: 0\n  year: 13\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I used this simple code to get difference in Years, Months, days with current date.</p>\n\n<pre><code>var sdt = new Date('1972-11-30');\nvar difdt = new Date(new Date() - sdt);\nalert((difdt.toISOString().slice(0, 4) - 1970) + \"Y \" + (difdt.getMonth()+1) + \"M \" + difdt.getDate() + \"D\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Time span in full Days, Hours, Minutes, Seconds, Milliseconds:</p>\n\n<pre><code>// Extension for Date\nDate.difference = function (dateFrom, dateTo) {\n  var diff = { TotalMs: dateTo - dateFrom };\n  diff.Days = Math.floor(diff.TotalMs / 86400000);\n\n  var remHrs = diff.TotalMs % 86400000;\n  var remMin = remHrs % 3600000;\n  var remS   = remMin % 60000;\n\n  diff.Hours        = Math.floor(remHrs / 3600000);\n  diff.Minutes      = Math.floor(remMin / 60000);\n  diff.Seconds      = Math.floor(remS   / 1000);\n  diff.Milliseconds = Math.floor(remS % 1000);\n  return diff;\n};\n\n// Usage\nvar a = new Date(2014, 05, 12, 00, 5, 45, 30); //a: Thu Jun 12 2014 00:05:45 GMT+0400 \nvar b = new Date(2014, 02, 12, 00, 0, 25, 0);  //b: Wed Mar 12 2014 00:00:25 GMT+0400\nvar diff = Date.difference(b, a);\n/* diff: {\n  Days: 92\n  Hours: 0\n  Minutes: 5\n  Seconds: 20\n  Milliseconds: 30\n  TotalMs: 7949120030\n} */\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you are looking for the same thing that I wanted.  I tried to do this using the difference in milliseconds that javascript provides, but those results do not work in the real world of dates.  If you want the difference between Feb 1, 2016 and January 31, 2017 the result I would want is 1 year, 0 months, and 0 days.  Exactly one year (assuming you count the last day as a full day, like in a lease for an apartment).  However, the millisecond approach would give you 1 year 0 months and 1 day, since the date range includes a leap year.  So here is the code I used in javascript for my adobe form (you can name the fields): (edited, there was an error that I corrected)</p>\n\n<pre><code>var f1 = this.getField(\"LeaseExpiration\");\nvar g1 = this.getField(\"LeaseStart\");\n\n\nvar end = f1.value\nvar begin = g1.value\nvar e = new Date(end);\nvar b = new Date(begin);\nvar bMonth = b.getMonth();\nvar bYear = b.getFullYear();\nvar eYear = e.getFullYear();\nvar eMonth = e.getMonth();\nvar bDay = b.getDate();\nvar eDay = e.getDate() + 1;\n\nif ((eMonth == 0)||(eMonth == 2)||(eMonth == 4)|| (eMonth == 6) || (eMonth == 7) ||(eMonth == 9)||(eMonth == 11))\n\n{\nvar eDays =  31;\n}\n\nif ((eMonth == 3)||(eMonth == 5)||(eMonth == 8)|| (eMonth == 10))\n\n{\nvar eDays = 30;\n}\n\nif (eMonth == 1&amp;&amp;((eYear % 4 == 0) &amp;&amp; (eYear % 100 != 0)) || (eYear % 400 == 0))\n{\nvar eDays = 29;\n}\n\nif (eMonth == 1&amp;&amp;((eYear % 4 != 0) || (eYear % 100 == 0)))\n{\nvar eDays = 28;\n}\n\n\nif ((bMonth == 0)||(bMonth == 2)||(bMonth == 4)|| (bMonth == 6) || (bMonth == 7) ||(bMonth == 9)||(bMonth == 11))\n\n{\nvar bDays =  31;\n}\n\nif ((bMonth == 3)||(bMonth == 5)||(bMonth == 8)|| (bMonth == 10))\n\n{\nvar bDays = 30;\n}\n\nif (bMonth == 1&amp;&amp;((bYear % 4 == 0) &amp;&amp; (bYear % 100 != 0)) || (bYear % 400 == 0))\n{\nvar bDays = 29;\n}\n\nif (bMonth == 1&amp;&amp;((bYear % 4 != 0) || (bYear % 100 == 0)))\n{\nvar bDays = 28;\n}\n\n\nvar FirstMonthDiff = bDays - bDay + 1;\n\n\nif (eDay - bDay &lt; 0)\n{\n\neMonth = eMonth - 1;\neDay = eDay + eDays;\n\n}\n\nvar daysDiff = eDay - bDay;\n\nif(eMonth - bMonth &lt; 0)\n{\neYear = eYear - 1;\neMonth = eMonth + 12;\n}\n\nvar monthDiff = eMonth - bMonth;\n\nvar yearDiff = eYear - bYear;\n\nif (daysDiff == eDays)\n{\ndaysDiff = 0;\nmonthDiff = monthDiff + 1;\n\nif (monthDiff == 12)\n{\nmonthDiff = 0;\nyearDiff = yearDiff + 1;\n}\n\n}\n\nif ((FirstMonthDiff != bDays)&amp;&amp;(eDay - 1 == eDays))\n\n{\ndaysDiff = FirstMonthDiff;\n\n}\nevent.value = yearDiff + \" Year(s)\" + \" \" + monthDiff + \" month(s) \" + daysDiff + \" days(s)\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Neither of the codes work for me, so I use this instead for months and days:</p>\n\n<pre><code>function monthDiff(d2, d1) {\n    var months;\n    months = (d2.getFullYear() - d1.getFullYear()) * 12;\n    months -= d1.getMonth() + 1;\n    months += d2.getMonth() + 1;\n    return months &lt;= 0 ? 0 : months;\n}\n\nfunction daysInMonth(date) {\n    return new Date(date.getYear(), date.getMonth() + 1, 0).getDate();\n}    \n\nfunction diffDate(date1, date2) {\n    if (date2 &amp;&amp; date2.getTime() &amp;&amp; !isNaN(date2.getTime())) {\n        var months = monthDiff(date1, date2);\n        var days = 0;\n\n        if (date1.getUTCDate() &gt;= date2.getUTCDate()) {\n            days = date1.getUTCDate() - date2.getUTCDate();\n        }\n        else {\n            months--;\n            days = date1.getUTCDate() - date2.getUTCDate() + daysInMonth(date2);\n        }\n\n        // Use the variables months and days how you need them.\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been searching for 4 hours now, and have not found a solution to get the difference between two dates in years, months, and days in JavaScript, like: 10th of April 2010 was 3 years, x month and y days ago.</p>\n\n<p>There are lots of solutions, but they only offer the difference in the format of either days OR months OR years, or they are not correct (meaning not taking care of actual number of days in a month or leap years, etc). Is it really that difficult to do that? </p>\n\n<p>I've had a look at: </p>\n\n<ul>\n<li><a href=\"http://momentjs.com/\">http://momentjs.com/</a> -> can only output the difference in either years, months, OR days</li>\n<li><a href=\"http://www.javascriptkit.com/javatutors/datedifference.shtml\">http://www.javascriptkit.com/javatutors/datedifference.shtml</a></li>\n<li><a href=\"http://www.javascriptkit.com/jsref/date.shtml\">http://www.javascriptkit.com/jsref/date.shtml</a></li>\n<li><a href=\"http://timeago.yarp.com/\">http://timeago.yarp.com/</a></li>\n<li>www.stackoverflow.com -> Search function</li>\n</ul>\n\n<p>In php it is easy, but unfortunately I can only use client-side script on that project. Any library or framework that can do it would be fine, too.</p>\n",
            "last_activity_date": 1419004741,
            "question_id": 17732897,
            "score": 11,
            "tags": [
                "javascript",
                "date",
                "datediff"
            ],
            "title": "Difference between two dates in years, months, days in JavaScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I don't think you can access invalid property names, at least it doesn't work in Chrome or Firefox for me. The CSSStyleDeclaration simply skips the invalid property. For the given CSS:</p>\n\n<pre><code>div {\n    width: 100px;\n    -my-foo: 25px;\n}\n</code></pre>\n\n<p><code>style:CSSStyleDeclaration</code> object contains only the following keys:</p>\n\n<pre><code>0: width\ncssText: \"width: 100px\"\nlength: 1\n</code></pre>\n\n<p>However, interestingly this is what the <a href=\"http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration\">DOM-Level-2 Style spec</a> says:</p>\n\n<blockquote>While an implementation may not recognize all CSS properties within a CSS declaration block, it is expected to provide access to all specified properties in the style sheet through the CSSStyleDeclaration interface.</blockquote>\n\n<p>implying that the CSSStyleDeclaration object ought to have listed the <code>-my-foo</code> property in the above example. Maybe there is some browser out there which supports it. </p>\n\n<p>The code I used for testing is at <a href=\"http://jsfiddle.net/q2nRJ/1/\">http://jsfiddle.net/q2nRJ/1/</a>.</p>\n\n<p><strong>Note</strong>: You can always DIY by parsing the raw text. For example:</p>\n\n<pre><code>document.getElementsByTagName(\"style\")[0].innerText\n</code></pre>\n\n<p>but that seems like a lot of work to me, and not knowing your reasons for doing this, I can't say if a better alternate for your problem exists.</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>Assume I have the following CSS:</p>\n\n<pre><code>div {\n    -my-foo: 42;\n}\n</code></pre>\n\n<p>Can I later in JavaScript somehow know what the value of the <code>-my-foo</code> CSS property is for a given <code>div</code>?</p>\n",
            "last_activity_date": 1275017835,
            "question_id": 2926326,
            "score": 11,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "Can I access the value of invalid/custom CSS properties from JavaScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>The <code>setTimeout</code> function expects a function reference<sup>*</sup> as an argument: references are variables, and don't have parentheses.</p>\n\n<p>Function <em>calls</em> require parentheses (even if the function takes no parameters).</p>\n\n<p><strong>Nutshell:</strong> <code>myFunction</code> is a reference to the function. <code>myFunction()</code> executes the function, and in an expression, will \"equal\" the function's return value (or <code>undefined</code> if nothing is returned).</p>\n\n<p><strong>Digging Deeper:</strong> There are circumstances where <code>setTimeout(myFunction(), 1000)</code> might make sense, like if <code>myFunction()</code> itself <em>returns</em> a function. For example:</p>\n\n<pre><code>var myFunction = function() {\n    return function() {\n        alert(\"ohai\");\n    };\n};\n</code></pre>\n\n<ul>\n<li>The anonymous function (containing a single <code>return</code> statement) is executed immediately.</li>\n<li>The return value of that function is itself a function containing an <code>alert</code>.</li>\n</ul>\n\n<p>So: </p>\n\n<ul>\n<li><code>myFunction</code> alone is a reference to a function (that happens to return a function).</li>\n<li><code>myFunction()</code> will execute. It evaluates to a function reference, suitable for <code>setTimeout()</code>.</li>\n</ul>\n\n<p>Finally:</p>\n\n<pre><code>setTimeout(myFunction(), 1000);\n</code></pre>\n\n<p>This calls <code>myFunction()</code>'s return value in one second. One second later, up pops the alert.</p>\n\n<p><sup>* Or a string to be evaluated, but a reference is preferred.</sup></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>In line 2, the function <code>myFunction</code> is not called, but passed as an argument to the <code>setTimeout</code> function, whereas in line 4 <code>myFunction</code> is called; to call a function, you <em>always</em> have to use parentheses, even if there are no arguments.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>myFunction</code> is a function</p>\n\n<p><code>myFunction()</code> calls the function and yields whatever value the function returns.</p>\n\n<p>The purpose of setTimeout is running code after some time elapses. You need to pass just the function to it (so setTimeout can itself call the function when appropriate) because if you called the function (with the parenthesis) before passing it to setTimeout it would execute <em>now</em> instead of after 1 second.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>When you use the parenthesis, it's saying 'call this function now'. So if you say <code>setTimeout(myFunction(),1000);</code>, it will use the <em>return value</em> of the function as the callback for the timeout. If the return value for the function is not itself a function, you'll get an error because it will try to execute something that isn't executable after the timeout (a string, a number, undefined, etc).</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>How come I can say:</p>\n\n<pre><code>var myFunction = function() {\n   setTimeout(myFunction, 1000);\n}\nmyFunction();\n</code></pre>\n\n<p>Why does the function call in the <code>setTimeout</code> not require a parenthesis, but the last line does?</p>\n",
            "last_activity_date": 1344988015,
            "question_id": 7969088,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "When do I use parenthesis and when do I not?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>No, not from <em>outside</em> the iframe. An <code>&lt;iframe&gt;</code> is its own world. If the domains etc. match, then Javascript can communicate in and out, and could (if it wanted to) inject CSS into a child frame.</p>\n\n<p>If the <code>&lt;iframe&gt;</code> contains content from a different domain, there's pretty much nothing you can do. The parent page controls the size of the frame and whether it's visible, and can put its own content <em>over</em> the frame by positioning etc, but it can't directly effect the way the actual frame content is rendered.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I think these are pretty much your only two choices: <a href=\"http://stackoverflow.com/questions/217776/how-to-apply-css-to-iframe\">http://stackoverflow.com/questions/217776/how-to-apply-css-to-iframe</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p><strong>I often see sites using iframes containing an external site, and a top frame containing JavaScript functionality for the user.</strong></p>\n\n<p>e.g. user analytics software, Digg bar, etc...</p>\n\n<hr>\n\n<p>Any tips for experimenting on something similar? =) Would be awesome to know</p>\n",
            "last_activity_date": 1279601535,
            "question_id": 3286178,
            "score": 6,
            "tags": [
                "javascript",
                "html",
                "css",
                "dom",
                "iframe"
            ],
            "title": "Can I apply CSS to the elements within an iframe?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>your code (what you gave on top) is working fine. But it's working when you click exactly on the border not in side box, try once.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>iframe doesn't have onclick event but we can implement this by using iframe's onload event and javascript like this...</p>\n\n<pre><code>function iframeclick() {\ndocument.getElementById(\"theiframe\").contentWindow.document.body.onclick = function() {\n        document.getElementById(\"theiframe\").contentWindow.location.reload();\n    }\n}\n\n\n&lt;iframe id=\"theiframe\" src=\"youriframe.html\" style=\"width: 100px; height: 100px;\" onload=\"iframeclick()\"&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p>I hope it will helpful to you....</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You can use closures to pass parameters:</p>\n\n<pre><code>iframe.document.addEventListener('click', function(event) {clic(this.id);}, false);\n</code></pre>\n\n<p>However, I recommend that you use a better approach to access your frame (I can only assume that you are using the DOM0 way of accessing frame windows by their name - something that is only kept around for backwards compatibility):</p>\n\n<pre><code>document.getElementById(\"myFrame\").contentDocument.addEventListener(...);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I want to handle <code>click</code> event on an <code>iframe</code> with a handler that gets the <code>iframe</code>\u2019s id as parameter.</p>\n\n<p>I\u2019m able to add an <code>onClick</code> event handler via JavaScript as follows and it works fine:</p>\n\n<pre><code>iframe.document.addEventListener('click', clic, false);\n</code></pre>\n\n<p>But in this case I\u2019m unable to pass a parameter to <code>clic()</code>. I tried to print <code>this.id</code> in <code>clic()</code> but no result.</p>\n\n<p><code>onClick</code> HTML attribute does not work at all, the handler is not called.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction def() {\n    myFrame.document.designMode = 'on';\n}\nfunction clic(id) {\n    alert(id);\n}\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body onLoad=\"def()\"&gt;\n&lt;iframe id=\"myFrame\" border=\"0\" onClick=\"clic(this.id)\"&gt;&lt;/iframe&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1391160640,
            "question_id": 6452502,
            "score": 5,
            "tags": [
                "javascript",
                "iframe",
                "onclick",
                "addeventlistener"
            ],
            "title": "Adding click event handler to iframe"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It seems to me that you are not the first person who ask the same question. Recently I asked on <a href=\"http://stackoverflow.com/questions/4949837/i-need-sme-help-automating-jqgrid-filters-please/4950386#4950386\">the close question</a> (read many comments to the answer). Another <a href=\"http://stackoverflow.com/questions/3981874/multiple-search-with-multiplefields-by-default/3981986#3981986\">old answer</a> including <a href=\"http://www.ok-soft-gmbh.com/jqGrid/MultisearchFilterAtStart.htm\">the demo</a> could probably answer on some your opened questions.</p>\n\n<p>Your code using <code>beforeRequest</code> don't work just because the function <code>beforeRequest</code> will be caled immediately before the ajax call and the changing of the <code>search</code> parameter is <strong>too late</strong>. Moreover overwiting of <code>filters</code> everytime is probably not the best idea. In the case the user will not able to set any other grid filter.</p>\n\n<p>So I can repeat, that the imlementation of the solution which you need is very simple. You should just set <code>filters</code> property of the <code>postData</code> parameter of jqGrid to the filter which you need and set another jqGrid parameter <code>search:true</code> additionally. It's all! Later the user will be able to open advance searching dialog and overwrite the filters. The user can also click on \"Reset\" button of the advance searching dialog and set <code>filters</code> to empty string and <code>search:false</code>.</p>\n\n<p>For better understanding I have to clear how <code>search</code> parameter or some other jqGrid will be used in the URL. There are parameter <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aoptions\">prmNames</a> of jqGrid which defines <strong>the names of parameters</strong> send as a part of URL or as a part of data POSTed to the server. The default value of <a href=\"http://www.trirand.com/jqgridwiki/doku.php?id=wiki%3aoptions\">prmNames</a> contain <code>search:\"_search\"</code> and the code of internal <a href=\"https://github.com/tonytomov/jqGrid/blob/master/js/grid.base.js#L1539\">populate</a> function used by jqGrid has the following simplified code fragment:</p>\n\n<pre><code>var prm = {}, pN=ts.p.prmNames;\nif(pN.search !== null) {prm[pN.search] = ts.p.search;}\nif(pN.nd !== null) {prm[pN.nd] = new Date().getTime();}\nif(pN.rows !== null) {prm[pN.rows]= ts.p.rowNum;}\nif(pN.page !== null) {prm[pN.page]= ts.p.page;}\nif(pN.sort !== null) {prm[pN.sort]= ts.p.sortname;}\nif(pN.order !== null) {prm[pN.order]= ts.p.sortorder;}\n...\n$.extend(ts.p.postData,prm);\n</code></pre>\n\n<p>where</p>\n\n<pre><code>prmNames: {page:\"page\",rows:\"rows\", sort: \"sidx\",order: \"sord\", search:\"_search\",\n           nd:\"nd\", id:\"id\",oper:\"oper\",editoper:\"edit\",addoper:\"add\",\n           deloper:\"del\", subgridid:\"id\", npage: null, totalrows:\"totalrows\"}\n</code></pre>\n\n<p>So to set <code>_search</code> parameter of URL one should set <code>search</code> parameter of jqGrid.</p>\n\n<p>Look at <a href=\"http://www.ok-soft-gmbh.com/jqGrid/MultisearchFilterAtStart.htm\">the following demo</a>. You can easy to verify using <a href=\"http://www.fiddler2.com/fiddler2/\">Fiddler</a> of <a href=\"http://getfirebug.com/\">Firebug</a> that the jqGrid from the page send HTTP GET with the following url:</p>\n\n<pre><code>http://www.ok-soft-gmbh.com/jqGrid/MultisearchFilterAtStart1.json?filters=%7B%22groupOp%22%3A%22AND%22%2C%22rules%22%3A%5B%7B%22field%22%3A%22invdate%22%2C%22op%22%3A%22gt%22%2C%22data%22%3A%222007-09-06%22%7D%2C%7B%22field%22%3A%22invdate%22%2C%22op%22%3A%22lt%22%2C%22data%22%3A%222007-10-04%22%7D%2C%7B%22field%22%3A%22name%22%2C%22op%22%3A%22bw%22%2C%22data%22%3A%22test%22%7D%5D%7D&amp;_search=true&amp;nd=1297508504770&amp;rows=10&amp;page=1&amp;sidx=id&amp;sord=asc\n</code></pre>\n\n<p>So it do exactly what you need. The code of the demo contain the following code fragment:</p>\n\n<pre><code>$(\"#list\").jqGrid({\n    url: 'MultisearchFilterAtStart1.json',\n    datatype: \"json\",\n    postData: {\n        filters:'{\"groupOp\":\"AND\",\"rules\":['+\n                '{\"field\":\"invdate\",\"op\":\"gt\",\"data\":\"2007-09-06\"}'+\n                ',{\"field\":\"invdate\",\"op\":\"lt\",\"data\":\"2007-10-04\"}'+\n                ',{\"field\":\"name\",\"op\":\"bw\",\"data\":\"test\"}]}'\n    },\n    search:true,\n    // ...\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>@Oleg Oleg's answer works like a charm but just for the first time.</p>\n\n<p>For me when I reload the grid, filters and search flag are not set up.\nWith the following code each time I reload the grid it also sends the filters and search flag.\nI use server side sort and pagination.</p>\n\n<p>I'm using:</p>\n\n<pre><code>jQuery(\"#myGrid\").navGrid(\"#myPager\", {search: true, refresh: true, edit: false, \n    add:false, del:false}, {}, {}, {}, {});\n</code></pre>\n\n<p>On the grid definition:</p>\n\n<pre><code>beforeRequest: function() {\n    // filter to be added on each request\n    var filterObj1 = {\"field\":\"myField\",\"op\":\"eq\",\"data\":\"myValue\"}; \n    var grid = jQuery(\"#myGrid\");\n    var postdata = grid.jqGrid('getGridParam', 'postData');             \n    if(postdata != undefined &amp;&amp; postdata.filters != undefined ) {\n        postdata.filters = jQuery.jgrid.parse(postdata.filters);\n        //Remove if current field exists\n        postdata.filters.rules = jQuery.grep(postdata.filters.rules, function(value) {\n            if(value.field != 'myField')\n                return value;\n        });\n        // Add new filters\n        postdata.filters.rules.push(filterObj1);\n    } else {\n        jQuery.extend(postdata, {\n            filters:  { \n                \"groupOp\":\"AND\",\n                \"rules\":[filterObj1] \n            }\n        });\n        // more filters in the way: postdata.filters.rules.push(filterObj1);\n    }\n    postdata.filters = JSON.stringify(postdata.filters);\n    postdata._search = true;\n    return [true,''];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I found many discussions that were close to what I need, and this question is the \nclosest - <a href=\"http://stackoverflow.com/questions/4566242\">How can I set postData._search to true in the request in jqGrid?</a>.</p>\n\n<p>As I'm struggling with almost the same problem, and just can't get it working - I want to setup \"search\" and \"filters\" during the initial loading of the jqGrid - say, on the page reload, and I have my filters stored in the session - and I tried everything I found in Oleg's examples - it just doesn't work!</p>\n\n<p>That's what I'm trying to do -</p>\n\n<pre><code>loadBeforeSend: function (xhr) {\n    var grid = jQuery('#' + block_id);\n    var postData = grid.jqGrid('getGridParam','postData');\n    jQuery.extend(postData,{filters:MyFilters});\n    grid.jqGrid('setGridParam', {search: true, postData: postData});\n    console.log(grid.jqGrid('getGridParam','postData'));\n}\n</code></pre>\n\n<p>The console printout shows that the filters are in place, but the _search is still false, and the actual Post gets sent even with no filters:</p>\n\n<pre><code>_search   false\nblock_id  report_block_1table\nnd        1297451574526\npage      1\nrows      25\nsidx      id\nsord      desc\n</code></pre>\n\n<p>However, if I put exactly the same code -  with the addition of</p>\n\n<pre><code>grid.trigger(\"reloadGrid\");\n</code></pre>\n\n<p>line - into some button's onClickButton function, and later click the button - everything works; but I need to make it work on \"page reload\"!</p>\n\n<p>Any ideas? It's driving me crazy...</p>\n",
            "last_activity_date": 1393922185,
            "question_id": 4973361,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "jqgrid"
            ],
            "title": "How can I preserve the search filters in jqGrid on page reload?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is probably some special handling for the HTML <code>&lt;option&gt;</code> element, but I can't find that in the source.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>On line 4448 of the unminified source for 1.4.2 is the culprit:</p>\n\n<pre><code>// ( div = a div node )\n// ( elem = the xml you've passed to it )\n\ndiv.innerHTML = wrap[1] + elem + wrap[2]; \n</code></pre>\n\n<p>Consider this code:</p>\n\n<pre><code>var d = document.createElement('div');\nd.innerHTML = \"&lt;foo&gt;&lt;option&gt;bar&lt;/option&gt;&lt;b&gt;blah&lt;/b&gt;&lt;/foo&gt;\";\n\nalert(d.innerHTML); // &lt;foo&gt;bar&lt;b&gt;blah&lt;/b&gt;&lt;/foo&gt;\n\n// tested on Firefox 3.6\n</code></pre>\n\n<p>So, don't ask me why exactly, but it looks like something in the way the DOM handles it, not necessarily jQuery's fault.</p>\n\n<p>Perhaps just use a different node name?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Update</strong></p>\n\n<p>jQuery has this method built-in now. You can use</p>\n\n<pre><code>$.parseXML(\"..\")\n</code></pre>\n\n<p>to construct the XML DOM from a string.</p>\n\n<hr />\n\n<p>jQuery relies on the HTML DOM using <code>innerHTML</code> to parse the document which can have unreliable results when tag names collide with those in HTML.</p>\n\n<p>Instead, you can use a proper XML parser to first parse the document, and then use jQuery for querying. The method below will parse a valid XML document in a cross-browser fashion:</p>\n\n<pre><code>// http://www.w3schools.com/dom/dom_parser.asp\nfunction parseXML(text) {\n    var doc;\n\n    if(window.DOMParser) {\n        var parser = new DOMParser();\n        doc = parser.parseFromString(text, \"text/xml\");\n    }\n    else if(window.ActiveXObject) {\n        doc = new ActiveXObject(\"Microsoft.XMLDOM\");\n        doc.async = \"false\";\n        doc.loadXML(text);\n    }\n    else {\n        throw new Error(\"Cannot parse XML\");\n    }\n\n    return doc;\n}\n</code></pre>\n\n<p>Once the XML DOM is constructed, jQuery can be used as normal - <a href=\"http://jsfiddle.net/Rz7Uv/\">http://jsfiddle.net/Rz7Uv/</a></p>\n\n<pre><code>var text = \"&lt;root&gt;&lt;option&gt;cow&lt;/option&gt;&lt;option&gt;squirrel&lt;/option&gt;&lt;/root&gt;\";\nvar xml = parseXML(text);\n$(xml).find(\"option\"); // selects &lt;option&gt;cow&lt;/option&gt;, &lt;option&gt;squirrel&lt;/option&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I'm using jQuery to parse some XML, like so:</p>\n\n<pre><code>function enumOptions(xml) {\n   $(xml).find(\"animal\").each(function(){  \n       alert($(this).text());\n   });\n}\n\nenumOptions(\"&lt;root&gt;&lt;animal&gt;cow&lt;/animal&gt;&lt;animal&gt;squirrel&lt;/animal&gt;&lt;/root&gt;\");\n</code></pre>\n\n<p>This works great. However if I try and look for nodes called \"option\" then it doesn't work:</p>\n\n<pre><code>function enumOptions(xml) {\n   $(xml).find(\"option\").each(function(){  \n      alert($(this).text());\n   });\n}\n\nenumOptions(\"&lt;root&gt;&lt;option&gt;cow&lt;/option&gt;&lt;option&gt;squirrel&lt;/option&gt;&lt;/root&gt;\");\n</code></pre>\n\n<p>There's no error, just nothing gets alerted, as if the find isn't finding anything. It only does it for nodes called option everything else I tested works ok!</p>\n\n<p>I'm using the current version of jQuery - 1.4.2.</p>\n\n<p>Anyone any idea?</p>\n\n<p>TIA.</p>\n\n<p>bg</p>\n",
            "last_activity_date": 1327457926,
            "question_id": 2908899,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "xml"
            ],
            "title": "jQuery won&#39;t parse xml with nodes called option"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As far as I know, the only way is to use data: URLs to force a download:</p>\n\n<pre><code>var data = \"This is a test\";\nwindow.location.href = \"data:application/x-download;charset=utf-8,\" + encodeURIComponent(data);\n</code></pre>\n\n<p>Two catches here:</p>\n\n<ul>\n<li>It won't work in MSIE because its support of data: URLs is very limited (supposedly <a href=\"http://msdn.microsoft.com/en-us/library/cc848897%28v=vs.85%29.aspx\">for security reasons</a>). So you will still need Downloadify there.</li>\n<li>You cannot specify a file name, the suggested file name will depend on the browser used. And file type will be \"unknown\" (you cannot use a known MIME type because the browser won't offer to download the file then).</li>\n</ul>\n\n<p>Bonus reading: there was a W3.org discussion in February 2010 on fixing the second problem: <a href=\"http://lists.w3.org/Archives/Public/uri/2010Feb/thread.html#msg58\">http://lists.w3.org/Archives/Public/uri/2010Feb/thread.html#msg58</a>. However, this doesn't seem to have made it into any specification so far, let alone browser implementations.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p><a href=\"http://html5-demos.appspot.com/static/a.download.html\">Here is</a> what you need. But it's not cross-browser yet. Works in Google Chrome.</p>\n\n<pre><code>&lt;a download=\"MyFile.txt\" \n   href=\"your-data-uri-here\"\n   draggable=\"true\" \n   class=\"dragout\"\n&gt;Download ready&lt;/a&gt;\n</code></pre>\n\n<p>Also Wikipedia has a good <a href=\"http://en.wikipedia.org/wiki/Data_URI_scheme\">article about Data URI</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Is there a JavaScript library that allows to save strings as txt files, and works cross-browser?</p>\n\n<p>In the past, I have been using Downloadify, but I am looking at another option for a couple reasons:</p>\n\n<ul>\n<li>I hope to find a pure JavaScript solution, without the need for Flash</li>\n<li>it seems that Downloadify is not updated anymore\n(no update in the past 18 months)</li>\n<li>I am experiencing an issue with Downloadify in IE 9, where strings are cut off</li>\n</ul>\n",
            "last_activity_date": 1330427698,
            "question_id": 6464828,
            "score": 4,
            "tags": [
                "javascript",
                "save-as",
                "execcommand",
                "data-uri"
            ],
            "title": "Cross-browser Save As .txt"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>When you use <code>&lt;%=arraylist%&gt;</code> it calls the <code>toString()</code> on list and prints  <code>[a,b,c]</code> </p>\n\n<p>And No,you cannot direclty convert From Java <code>arrayList</code> to javascript array ,Convert the Java <code>ArrayList</code> to <code>JSON String</code>, and use <code>JSON.parse()</code> to get Javascript <code>object</code>.</p>\n\n<p>Have a look at <a href=\"http://www.json.org/\" rel=\"nofollow\"><em>Json objet</em></a>  and <a href=\"http://json.org/java/\" rel=\"nofollow\"><em>Json in java</em></a> </p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>try this way:</p>\n\n<pre><code>var myArray = &lt;%=net.sf.json.JSONSerializer.toJSON(arrayList) %&gt;;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Withoug a library:</p>\n\n<p>Java:</p>\n\n<pre><code>public static String toJavascriptArray(String[] arr){\n    StringBuffer sb = new StringBuffer();\n    sb.append(\"[\");\n    for(int i=0; i&lt;arr.length; i++){\n        sb.append(\"\\\"\").append(arr[i]).append(\"\\\"\");\n        if(i+1 &lt; arr.length){\n            sb.append(\",\");\n        }\n    }\n    sb.append(\"]\");\n    return sb.toString();\n}\n</code></pre>\n\n<p>JSP:</p>\n\n<pre><code>var myArray = &lt;%= toJavascriptArray(arrayList) %&gt;;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Do the following in your JSP page</p>\n\n<pre><code>&lt;% List&lt;String&gt; strList = new ArrayList&lt;String&gt;();\nstrList.add(\"one\");\nstrList.add(\"two\");\nstrList.add(\"three\"); %&gt;\n\nvar jsArray = [&lt;% for (int i = 0; i &lt; strList.size(); i++) { %&gt;\"&lt;%= strList.get(i) %&gt;\"&lt;%= i + 1 &lt; strList.size() ? \",\":\"\" %&gt;&lt;% } %&gt;];\n</code></pre>\n\n<p>The output will be</p>\n\n<pre><code>var jsArray = [\"one\",\"two\",\"three\"];\n</code></pre>\n\n<p>If your List was empty it will output</p>\n\n<pre><code>var jsArray = [];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript <code>split()</code> method returns an array, as we know that, so its a simplest way to convert <code>javaArrayList</code> into javascript array. It works fine for me. </p>\n\n<pre><code>function toJavascript(){\n          &amp;nbsp;&amp;nbsp;&amp;nbsp;  &amp;nbsp;&amp;nbsp;&amp;nbsp;  var array=\"&lt;%=javaArrayList%&gt;\";&lt;br&gt;\n          &amp;nbsp;&amp;nbsp;&amp;nbsp;  &amp;nbsp;&amp;nbsp;&amp;nbsp;  array=array.replace(\"[\", \"\");&lt;br&gt;\n          &amp;nbsp;&amp;nbsp;&amp;nbsp;  &amp;nbsp;&amp;nbsp;&amp;nbsp;    array=array.replace(\"]\", \"\");&lt;br&gt;\n          &amp;nbsp;&amp;nbsp;&amp;nbsp;  &amp;nbsp;&amp;nbsp;&amp;nbsp;    return javaArray.split(\",\");&lt;br&gt;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In my Java code, I have an <code>ArrayList</code> of <code>String</code>s. I'd like to put this data in a JavaScript variable on a JSP page I'm working on. My first thought was to include it directly, e.g.:</p>\n\n<pre><code>var myArray = &lt;%= arrayList %&gt;;\n</code></pre>\n\n<p>Unfortunately, when executed, <code>myArray</code> is a string in the format <code>[a,b,c]</code>, not an actual JavaScript array. How do I get some data from a Java <code>ArrayList</code> to a JavaScript array?</p>\n",
            "last_activity_date": 1410697895,
            "question_id": 17440164,
            "score": 2,
            "tags": [
                "java",
                "javascript",
                "jsp"
            ],
            "title": "Converting a Java ArrayList of strings to a JavaScript array"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.c-point.com/javascript_tutorial/jsoprrshift.htm\" rel=\"nofollow\">Bitwise right shift</a>. Although <code>somevar &gt;&gt; 0</code> looks weird.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Have a look at <a href=\"http://www.c-point.com/javascript_tutorial/jsoprrshift.htm\" rel=\"nofollow\">JavaScript tutorial:>> Operator</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Explained here : <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Bitwise_Operators\" rel=\"nofollow\">Bitwise Operators</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In <code>a &gt;&gt; b</code>, <code>&gt;&gt;</code> is a bitwise operator that shifts <code>a</code> in binary representation <code>b</code> (&lt; 32) bits to the right, discarding bits shifted off.\nReference: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Operators/Bitwise_Operators\">https://developer.mozilla.org/en/JavaScript/Reference/Operators/Bitwise_Operators</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>It's a <a href=\"http://en.wikipedia.org/wiki/Bitwise_operation\" rel=\"nofollow\">bitwise operator.</a> \nIn this case, for shifting the first operand in binary representation the number of bits to the right specified in the second operand, discarding bits shifted off. </p>\n\n<p><strike>With a <code>0</code> as second operand, I guess it has no effect (shifting 0 bits, is getting the same value?).</strike></p>\n\n<p>I was wrong with this last. As explained at <a href=\"http://stackoverflow.com/questions/4437169/in-javascript/4437186#4437186\">this @Gumbo's comment</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><br>\nWhat does the notation <code>somevar &gt;&gt; 0</code> mean in javascript?    </p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1393975466,
            "question_id": 4437169,
            "score": 2,
            "tags": [
                "javascript",
                "operators"
            ],
            "title": "What does &quot;somevar &gt;&gt; 0&quot; mean?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Neither the <a href=\"http://www.w3schools.com/jsref/event_onselect.asp\"><code>onSelect()</code></a> nor <a href=\"http://www.w3schools.com/jsref/event_onclick.asp\"><code>onClick()</code></a> events are supported by the <code>&lt;option&gt;</code> tag. The former refers to selecting text (i.e. by clicking + dragging across a text field) so can only be used with the <code>&lt;text&gt;</code> and <code>&lt;textarea&gt;</code> tags. The <code>onClick()</code> event can be used with <code>&lt;select&gt;</code> tags - however, you probably are looking for functionality where it would be best to use the <a href=\"http://www.w3schools.com/jsref/event_onchange.asp\"><code>onChange()</code></a> event, not <code>onClick()</code>.</p>\n\n<p>Furthermore, by the look of your <code>&lt;c:...&gt;</code> tags, you are also trying to use <a href=\"http://java.sun.com/products/jsp/\">JSP</a> syntax in a plain HTML document. That's just... incorrect.</p>\n\n<p>In response to your comment to this answer - I can barely understand it. However, it sounds like what you want to do is get the value of the <code>&lt;option&gt;</code> tag that the user has just selected whenever they select one. In that case, you want to have something like:</p>\n\n<pre><code>&lt;html&gt;\n &lt;head&gt;\n  &lt;script type=\"text/javascript\"&gt;\n\n   function changeFunc() {\n    var selectBox = document.getElementById(\"selectBox\");\n    var selectedValue = selectBox.options[selectBox.selectedIndex].value;\n    alert(selectedValue);\n   }\n\n  &lt;/script&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;select id=\"selectBox\" onchange=\"changeFunc();\"&gt;\n   &lt;option value=\"1\"&gt;Option #1&lt;/option&gt;\n   &lt;option value=\"2\"&gt;Option #2&lt;/option&gt;\n  &lt;/select&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>the answer you gave above works but it is confusing because you have used two names twice\nand you have an unnecessary line of code. you are doing a process that is not necessary.</p>\n\n<p>it's a god idea when debugging code to get pen and paper and draw little boxes to represent memory spaces i.e variables being stored and then to draw arrows to indicate when a variable goes into a little box and when it comes out, if it gets overwritten or is a copy made etc.</p>\n\n<p>if you do this with the code below you will see that </p>\n\n<pre><code>var selectBox = document.getElementById(\"selectBox\");\n</code></pre>\n\n<p>gets put in a box and stays there you don't do anything with it afterwards.</p>\n\n<p>and </p>\n\n<pre><code>var selectBox = document.getElementById(\"selectBox\");\n</code></pre>\n\n<p>is hard to debug and is confusing when you have a select id of  selectBox for the options list . ---- which selectBox do you want to manipulate / query / etc is it the local var selectBox that will disappear or is it the selectBox id you have assigned to the select tag</p>\n\n<p>your code works until you add to it or modify it then you can easily loose track and get all mixed up</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nfunction changeFunc() {\nvar selectBox = document.getElementById(\"selectBox\");\nvar selectedValue = selectBox.options[selectBox.selectedIndex].value;\nalert(selectedValue);\n}\n\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;select id=\"selectBox\" onchange=\"changeFunc();\"&gt;\n&lt;option value=\"1\"&gt;Option #1&lt;/option&gt;\n&lt;option value=\"2\"&gt;Option #2&lt;/option&gt;\n&lt;/select&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>a leaner way that works also</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nfunction changeFunc() {\n\nvar selectedValue = selectBox.options[selectBox.selectedIndex].value;\nalert(selectedValue);\n}\n\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;select id=\"selectBox\" onchange=\"changeFunc();\"&gt;\n&lt;option value=\"1\"&gt;Option #1&lt;/option&gt;\n&lt;option value=\"2\"&gt;Option #2&lt;/option&gt;\n&lt;/select&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>and it's a good idea to use descriptive names that match the program and task you are working on am currently writing a similar program to accept and process postcodes using your code and modifying it with descriptive names the object is to make computer language as close to natural language as possible.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nfunction Mapit(){\n\nvar actualPostcode=getPostcodes.options[getPostcodes.selectedIndex].value;\n\nalert(actualPostcode);\n\n// alert is for debugging only next we go on to process and do something\n// in this developing program it will placing markers on a map\n\n}\n\n\n&lt;/script&gt;\n\n\n&lt;select id=\"getPostcodes\" onchange=\"Mapit();\"&gt;\n\n&lt;option&gt;London North Inner&lt;/option&gt;\n\n&lt;option&gt;N1&lt;/option&gt;\n\n&lt;option&gt;London North Outer&lt;/option&gt;\n\n&lt;option&gt;N2&lt;/option&gt;\n&lt;option&gt;N3&lt;/option&gt;\n&lt;option&gt;N4&lt;/option&gt;\n</code></pre>\n\n<p>// a lot more options follow \n   // with text in options to divide into areas and nothing will happen \n   // if visitor clicks on the text function Mapit() will ignore\n   // all clicks on the divider text inserted into option boxes</p>\n\n<pre><code>&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Even more simplified: You can pass the <strong>value</strong> attribute directly!</p>\n\n<pre><code>&lt;html&gt;\n &lt;head&gt;\n  &lt;script type=\"text/javascript\"&gt;\n\n   function changeFunc($i) {\n    alert($i);\n   }\n\n  &lt;/script&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;select id=\"selectBox\" onchange=\"changeFunc(value);\"&gt;\n   &lt;option value=\"1\"&gt;Option #1&lt;/option&gt;\n   &lt;option value=\"2\"&gt;Option #2&lt;/option&gt;\n  &lt;/select&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The alert will either return <code>1</code> or <code>2</code>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Other option, for similar example but with anidated selects, think that you have two select, the name of the first is \"ea_pub_dest\" and the name of the second is \"ea_pub_dest_2\", ok, now take the event click of the first and display the second.</p>\n\n<pre><code>&lt;script&gt;\n\nfunction test()\n{\n    value = document.getElementById(\"ea_pub_dest\").value;\n    if ( valor == \"value_1\" )\n        document.getElementById(\"ea_pub_dest_nivel\").style.display = \"block\";\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Change onClick() from  with onChange() in the . You can send the option value to a javascript function.</p>\n\n<pre><code>&lt;select id=\"selector\" onChange=\"doSomething(document.getElementById(this).options[document.getElementById(this).selectedIndex].value);\"&gt; \n&lt;option value=\"option1\"&gt; Option1 &lt;/option&gt;\n&lt;option value=\"option2\"&gt; Option2 &lt;/option&gt;\n&lt;option value=\"optionN\"&gt; OptionN &lt;/option&gt;\n&lt;/select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to use  onClick() or onSelect() on option tag .Below is my code in which i want to use \n Onclick() or OnSelect() in option tag.</p>\n\n<p>Note: where  <code>listCustomer</code> domain object list getting in jsp page.</p>\n\n<pre><code>&lt;td align=\"right\"&gt; \n  &lt;select name=\"singleSelect\" \"&gt; \n     &lt;c:forEach var=\"Customer\" items=\"${listCustomer}\" &gt;\n     &lt;option value=\"\" onClick=\"javascript:onSelect(this);&gt; &lt;c:out value=\"${Customer}\" /&gt;&lt;/option&gt;\n                &lt;/c:forEach&gt;\n          &lt;/select&gt;         \n        &lt;/td&gt;   \n</code></pre>\n\n<p>Above code is not working fine please modify it.</p>\n",
            "last_activity_date": 1381757982,
            "question_id": 3487263,
            "score": 1,
            "tags": [
                "javascript"
            ],
            "title": "how to use onClick() or onSelect() on option tag in jsp page"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p><code>C:</code> is not a recognized URI scheme. Try <code>file://c|/...</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Because it's rendered on the user's browser, so on when the page is put together, it looks for c:/image.jpg and if it's not there, nothing shows up.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>Browsers aren't allowed to access the local file system unless you're accessing a local html page.  You have to upload the image somewhere.  If it's in the same directory as the html file, then you can use <code>&lt;img src=\"localfile.jpg\"/&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>shouldn't you use \"file://C:/localfile.jpg\" instead of \"C:/localfile.jpg\"?</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It would be a security vulnerability if the client could request local file system files and then use JavaScript to figure out what's in them.</p>\n\n<p>The only way around this is to build an extension in a browser. Firefox extensions and IE extensions can access local resources. Chrome is much more restrictive.</p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Newtang's observation about the security rules aside, how are you going to know that anyone who views your page will have the correct images at <code>c:\\localfile.jpg</code>? You can't. Even if you think you can, you can't. It presupposes a windows environment, for one thing.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You need to upload the image aswell, then link to the image on the server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I see two possibilities for what you are trying to do: </p>\n\n<ol>\n<li><p>You want your webpage, running on a server, to find the file on the computer that you originally designed it? </p></li>\n<li><p>You want it to fetch it from the pc that is viewing at the page?</p></li>\n</ol>\n\n<p>Option 1 just doesn't make sense :)</p>\n\n<p>Option 2 would be a security hole, the browser prohibits a web page (served from the web) from loading content on the viewer's machine.</p>\n\n<p>Kyle Hudson told you what you need to do, but that is so basic that I find it hard to believe this is all you want to do.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Um, just think... there are billions of computers have the C:\\ drive so how do you expect the html on the server to know your local C:\\localfile.jpg? Everything must be on the server.  </p>\n\n<p>Move your image file to the server. You need to rename the tag to &lt;img src=\"localfile.jpg\"&gt; Be sure to put it in the same directory where the document is however I recommend you add \"images\" directory and put the image in the images directory and write like this: &lt;img src=\"images/localfile.jpg\"&gt; on your document. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>what about having the image be something selected by the user?  Use a input:file tag and then after they select the image, show it on the clientside webpage?  That is doable for most things.  Right now i am trying to get it working for IE, but as with all microsoft products, it is a cluster fork().</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>IE 9 : If you want that the user takes a look at image before he posts it to the server :\nThe user should ADD the website to \"trusted Website list\".</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>It works if the html file is local (on my C drive), but not if the html file is on a server and the image file is local. Why is that?</p>\n\n<p>Any possible workarounds?</p>\n",
            "last_activity_date": 1422465117,
            "question_id": 4090712,
            "score": 31,
            "tags": [
                "javascript",
                "html",
                "filesystems",
                "src"
            ],
            "title": "Why can&#39;t I do &lt;img src=&quot;C:/localfile.jpg&quot;&gt;?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This is test, if <code>obj.length</code> is number.</p>\n\n<p>Doing arithmetic operation on string converts it to integer (and + is unary operation.. which doesn't do anything :-) ), and === operator does type-wise comparsion</p>\n\n<p><code>a === b &lt;=&gt; (a == b) &amp;&amp; (typeof a) == (typeof b)</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>+length</code> is a method to convert anything to a number.</p>\n\n<p>If it's a number, the value doesn't change, and the comparison returns true.<br />\nIf it's not a number, the assertion is false.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>That's the unary + operator. This website has a great article on its uses with the different data types in javascript.</p>\n\n<p><a href=\"http://xkr.us/articles/javascript/unary-add/\" rel=\"nofollow\">http://xkr.us/articles/javascript/unary-add/</a></p>\n\n<p>I'll steal the introduction, but it is really worth reading if you are into javascript. </p>\n\n<blockquote>\n  <p>In JavaScript it is possible to use the + operator alone before a\n  single element. This indicates a math operation and tries to convert\n  the element to a number. If the conversion fails, it will evaluate to\n  NaN. This is especially useful when one wants to convert a string to a\n  number quickly, but can also be used on a select set of other types.</p>\n  \n  <p>The unary + operator, when used on types other than string, will\n  internally attempt to call valueOf() or toString() (in that order) and\n  then attempt to convert the result to a number. Thusly, the unary +\n  operator can successfully convert many of the native JS types with\n  certain restrictions:</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have found some code from <a href=\"http://documentcloud.github.com/underscore/\" rel=\"nofollow\">Underscore.js</a></p>\n\n<pre><code>  _.map = _.collect = function(obj, iterator, context) {\n    var results = [];\n    if (obj == null) return results;\n    if (nativeMap &amp;&amp; obj.map === nativeMap) return obj.map(iterator, context);\n    each(obj, function(value, index, list) {\n      results[results.length] = iterator.call(context, value, index, list);\n    });\n    if (obj.length === +obj.length) results.length = obj.length;\n    return results;\n  };\n</code></pre>\n\n<p>I would like to know what <code>if (obj.length === +obj.length)</code> does?</p>\n",
            "last_activity_date": 1332982055,
            "question_id": 9081880,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "What is unary + used for in Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>yes, they're doing the same thing.  the <code>$()</code> function wraps <code>$(document).ready()</code> when the parameter to the call is a single function object.</p>\n\n<p>(Edited to reflect a question in comment)</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Yes, they are doing exactly the same thing.</p>\n\n<pre><code>$(function(){\n    // Your code here...\n});\n</code></pre>\n\n<p>is a shortcut for</p>\n\n<pre><code>$(document).ready(function(){\n    // Your code here...\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>So I know what this does:</p>\n\n<pre><code>$(document).ready(function(){\n    // Your code here...\n});\n</code></pre>\n\n<p>Now I have seen people doing this lately:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;     \n$(function(){\n    // Your code here...\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Are these two ways of doing the same thing?</p>\n\n<p>I see an anonymous function being declared inside a jquery selector here, but never actually being invoked, yet by the way the page runs it seems that this may just run on pageload.</p>\n",
            "last_activity_date": 1313075518,
            "question_id": 593292,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "What is the difference between $(document).ready(function() and $(function() ?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I recently dabbled into this.  The Arduino automatically resets when it receives serial communication from most things other than the Arduino IDE. This is why you can send from the IDE but not node.js.  </p>\n\n<p>I have an Uno and put a capacitor between Reset and Ground.Here's a page with some good info on the subject.<br>\nGood luck.  <a href=\"http://arduino.cc/playground/Main/DisablingAutoResetOnSerialConnection\">http://arduino.cc/playground/Main/DisablingAutoResetOnSerialConnection</a></p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>On the capacitor and reset issue...\nThere is a small capacitor between one of the serial control lines and reset on the Arduino in the later models. This capacitor causes the Arduino to reset when the port is opened but otherwise does not interfere with normal serial operation. </p>\n\n<p>This reset trick allows the code upload to reset the Arduino as part of the upload process. When the Arduino starts up the code boot loader runs first for a short time before the loaded code runs.</p>\n\n<p>The upload process is: Reset the Arduino which starts the boot loader, start the upload process in the Arduino IDE, establish communications, upload, then run the loaded code. When the Arduino starts up it waits for uploads for a short period of time, if none are received, it moves on to running the code.</p>\n\n<p>I find this very useful as it allows us to effectively reset the Arduino just by closing and opening the port. In the old Arduino's, without this capacitor, you had to press the reset button at the right time to get the code to upload. And the timing was such that the Arduino spent much more time waiting before it started with the uploaded code.</p>\n\n<p>In the problem described here, I do not believe he was having any troubles due to the reset trick used. It should have had only the effect of resetting the Arduino when he opened the serial port, and from the looks of his information, this is a desired side-effect. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I use node on a daily basis to send actions to my Arduino via usb or via bt and it works great in both cases.\nI think your problem comes from sending letters. You should send a buffer instead, with the ascii value of the letter, just like that:</p>\n\n<pre><code>myPort.write(Buffer([myValueToBeSent]));\n</code></pre>\n\n<p>also, for this, I think you would be better with some \"logic\" interface, with data headers, number of actions, stuff like that. It is no required for you but it will make your code more robust and easier to modify in the future.</p>\n\n<p>Here is an example of how I do it. First, Node:</p>\n\n<pre><code>var dataHeader = 0x0f, //beginning of the data stream, very useful if you intend to send a batch of actions\nmyFirstAction = 0x01,\nmySecondAction = 0x02,\nmyThirdAction = 0x03;\n</code></pre>\n\n<p>You then call them like you did:</p>\n\n<pre><code>everyone.now.MyBatchOfActions = function() {\n    sp.write(Buffer([dataHeader]));\n\n    sp.write(Buffer([0x03])); // this is the number of actions for the Arduino code\n\n    sp.write(Buffer([myFirstAction]));\n    sp.write(Buffer([mySecondAction]));\n    sp.write(Buffer([myThirdAction]));\n}\n</code></pre>\n\n<p>This way it is easy on the Arduino to Serial.read() the data: (Note that you need to define data header and data footer somewhere)</p>\n\n<pre><code>void readCommands(){\n    while(Serial.available() &gt; 0){\n\n        // Read first byte of stream.\n        uint8_t numberOfActions;\n        uint8_t recievedByte = Serial.read();\n\n        // If first byte is equal to dataHeader, lets do\n        if(recievedByte == DATA_HEADER){\n            delay(10);\n\n            // Get the number of actions to execute\n            numberOfActions = Serial.read();\n\n            delay(10);\n\n            // Execute each actions\n            for (uint8_t i = 0 ; i &lt; numberOfActions ; i++){\n\n                // Get action type\n                actionType = Serial.read();\n\n                if(actionType == 0x01){\n                    // do you first action\n                }\n                else if(actionType == 0x02{\n                    // do your second action\n                }\n                else if(actionType == 0x03){\n                    // do your third action\n                }\n            }\n        }\n    }\n}\n</code></pre>\n\n<p>I hope I'm clear and I hope it helps!\nCheers!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I made a program that sends out data to my arduino which detects what was sent and then turns on the correct pin according to what key is pressed.</p>\n\n<p>When using the arduino software from my windows computer the arduino sketch works fine, I can make each pin turn on and off by sending either W A S Or D.</p>\n\n<p>When sending via node the RX light on the arduino flashes but nothing else happens.</p>\n\n<p>Can anyone help?</p>\n\n<p>Node.js program:</p>\n\n<pre><code>var httpServer = require('http').createServer(function(req, response){ /* Serve your static files */ })\nhttpServer.listen(8080);\n\nvar nowjs = require(\"now\");\nvar everyone = nowjs.initialize(httpServer);\n\neveryone.now.logStuff = function(msg){\n    console.log(msg);\n}\n\nvar SerialPort = require('serialport2').SerialPort;\nvar assert = require('assert');\n\nvar portName;\n\nif (process.platform == 'win32') {\n  portName = 'COM4';\n} else if (process.platform == 'darwin') {\n  portName = '/dev/cu.usbserial-A800eFN5';\n} else {\n  portName = '/dev/ttyUSB0';\n}\n\nvar readData = '';\nvar sp = new SerialPort();\n\nsp.on('close', function (err) {\n  console.log('port closed');\n});\n\nsp.on('error', function (err) {\n  console.error(\"error\", err);\n});\n\nsp.on('open', function () {\n  console.log('port opened... Press reset on the Arduino.');\n});\n\nsp.open(portName, {\n  baudRate: 9600,\n  dataBits: 8,\n  parity: 'none',\n  stopBits: 1,\n  flowControl: false\n});\n\neveryone.now.forward = function() {\nsp.write(\"w\");\n}\n\neveryone.now.back = function() {\nsp.write(\"s\");\n}\n\neveryone.now.left = function() {\nsp.write(\"a\");\n}\n\neveryone.now.right = function() {\nsp.write(\"d\");\n}\n\nsp.on('data', function(data) {\n  console.log(data.toString());\n});\n</code></pre>\n\n<p>Arduino Program:</p>\n\n<pre><code>void setup(){\n  Serial.begin(9600);\n  Serial.write(\"READY\");\n  //Set all the pins we need to output pins\n  pinMode(8, OUTPUT);\n  pinMode(9, OUTPUT);\n  pinMode(10, OUTPUT);\n  pinMode(11, OUTPUT);\n}\n\nvoid loop (){\n  if (Serial.available() &gt; 0) {\n\n    //read serial as a character\n    char ser = Serial.read();\n    Serial.write(ser);\n    //NOTE because the serial is read as \"char\" and not \"int\", the read value must be compared to character numbers\n    //hence the quotes around the numbers in the case statement\n    switch (ser) {\n      case 'w':\n        move(8);\n        break;\n      case 's':\n        move(9);\n        break;\n      case 'a':\n        move(10);\n        break;\n      case 'q':\n        move(10);\n        move(8);        \n        break;\n      case 'd':\n        move(11);\n        break;\n      case 'e':\n        move(11);\n        move(8);\n        break;\n    }\n  }\n}\n\nvoid move(int pin){\n  Serial.print(pin);  \n  digitalWrite(pin, HIGH);\n  delay(1);\n  digitalWrite(pin, LOW);\n}\n</code></pre>\n",
            "last_activity_date": 1390614987,
            "question_id": 10902704,
            "score": 6,
            "tags": [
                "javascript",
                "node.js",
                "socket.io",
                "arduino",
                "node-serialport"
            ],
            "title": "Serial port not working?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The problem is that you are 'closing' over the <em>same variable</em>.</p>\n\n<p><strong>var does not declare a variable</strong><sup>1</sup>. It simply annotates a 'stop look-up' for an identifier within a given execution context.</p>\n\n<p>Please see <a href=\"http://jibbering.com/faq/faq_notes/closures.html\" rel=\"nofollow\">Javascript Closures \"FAQ Notes\"</a> for all the nice details. The sections on 'execution context' and 'scope chain' are most interesting.</p>\n\n<p>The common idiom is perform a double-binding to create a new execution context.</p>\n\n<p>E.g.</p>\n\n<pre><code>var k\nfor (k = 1; k &lt; 10; k++) {\n  setTimeout((function (_k) {\n    return function () {\n      alert(_k)\n    }\n  })(k), k * 100)\n}\n</code></pre>\n\n<hr>\n\n<p>As of JavaScript 5th Edition there is <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\" rel=\"nofollow\"><code>Function.bind</code></a> (it can also be implemented in 3rd edition such as <a href=\"http://www.prototypejs.org/api/function/bind\" rel=\"nofollow\">bind from prototype.js</a>), which can be used as such:</p>\n\n<pre><code>var k\nfor (k = 1; k &lt; 10; k++) {\n  setTimeout((function () {\n     alert(this)\n  }).bind(k), k * 100)\n}\n</code></pre>\n\n<hr>\n\n<p><sup>1</sup> This construct <em>is</em> referred to as a Variable Declaration in the ECMAScript specification. However, this statements, as misleading as it may be viewed, is stressed to bring home a point: also see \"variable hoisting\".</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>I also found this solution at <a href=\"http://meshfields.de/event-listeners-for-loop/\" rel=\"nofollow\">http://meshfields.de/event-listeners-for-loop/</a>:</p>\n\n<pre><code>var myArr = [0,1,2,3]; \n\nfor (var i = 0; i &lt; myArr.length; i+=1) { \n\n(function (i) { \n\n    document.getElementById('myDOMelement' myArr[i]).onclick = function () { \n\n        if (window.console.firebug !== undefined) { \n            console.log('myDOMelement' myArr[i]); \n        } \n        else { \n                alert('myDOMelement' myArr[i]); \n        } \n        }; \n    }) (i); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to do the following:</p>\n\n<p>I have a set of images and select (dropdown) HTML elements, 30 of each one. I'm trying to use AddEventListener on a loop from 1 to 30 so that when I change the value of the select, the image src is updated (and the image changes).</p>\n\n<p>The AddEventListener function is this one:</p>\n\n<pre><code>function AddEventListener(element, eventType, handler, capture)\n{\n    if (element.addEventListener)\n        element.addEventListener(eventType, handler, capture);\n    else if (element.attachEvent)\n        element.attachEvent(\"on\" + eventType, handler);\n}\n</code></pre>\n\n<p>I tried this and it worked:</p>\n\n<pre><code>var urlfolderanimalimages = \"http://localhost/animalimages/\";\nvar testselect = \"sel15\";\nvar testimg = \"i15\";\n\nAddEventListener(document.getElementById(testselect), \"change\", function(e) {\n    document.getElementById(testimg).src = urlfolderanimalimages + document.getElementById(testselect).value;\n    document.getElementById(testimg).style.display = 'inline';\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnResult = false;\n    if (e.stopPropagation) e.stopPropagation();\n    else e.cancelBubble = true;\n}, false);\n</code></pre>\n\n<p>But then I tried to call it in a loop and it doesn't work. The event is added, but when I change any select, it will update the last one (the image with id i30).</p>\n\n<pre><code>var urlfolderanimalimages = \"http://localhost/animalimages/\";\n\nfor (k=1;k&lt;=30;k++) {\n    var idselect = \"sel\" + k;\n    var idimage = \"i\" + k;\n\n    AddEventListener(document.getElementById(idselect), \"change\", function(e) {\n        document.getElementById(idimage).src = urlfolderanimalimages + document.getElementById(idselect).value;\n        document.getElementById(idimage).style.display = 'inline';\n\n        if (e.preventDefault) e.preventDefault();\n        else e.returnResult = false;\n        if (e.stopPropagation) e.stopPropagation();\n        else e.cancelBubble = true;\n    }, false);\n\n}\n</code></pre>\n\n<p>What am I doing wrong? I'm new to JavaScript (and programming in general), so sorry for the vomit-inducing code :(</p>\n",
            "last_activity_date": 1400431971,
            "question_id": 2520587,
            "score": 6,
            "tags": [
                "javascript",
                "addeventlistener"
            ],
            "title": "Variable in JavaScript callback functions always gets last value in loop?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use this below html,add <code>id</code> to <code>&lt;div&gt;</code> and <code>&lt;a class=\"fancybox\" rel=\"group\" href=\"#r\"&gt;&lt;div id=\"r\" class=\"r\"&gt;&lt;/div&gt;&lt;/a&gt;</code></p>\n\n<pre><code>&lt;div id=\"a1\"&gt;\n    &lt;p&gt;Click on colors&lt;/p&gt;\n    &lt;a class=\"fancybox\" rel=\"group\" href=\"#r\"&gt;&lt;div id=\"r\" class=\"r\"&gt;&lt;/div&gt;&lt;/a&gt;\n    &lt;a class=\"fancybox\" rel=\"group\" href=\"#g\"&gt;&lt;div id=\"g\" class=\"g\"&gt;&lt;/div&gt;&lt;/a&gt;\n    &lt;a class=\"fancybox\" rel=\"group\" href=\"#b\"&gt;&lt;div id=\"b\" class=\"b\"&gt;&lt;/div&gt;&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/t6sq3/1/\" rel=\"nofollow\">check here</a></p>\n\n<p><strong>----------------------Update----------------</strong></p>\n\n<p>add afterShow()  to your jquery</p>\n\n<pre><code>$('#a1').fancybox({ \n    afterClose: function()\n            {\n            console.log('closed :( ');\n            },\n            afterShow:function()\n            {\n                $('#a1').click(function(){return false;});\n            }\n\n        }).click();\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/t6sq3/2/\" rel=\"nofollow\">Check again</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't know it will be helpful or not just try this, </p>\n\n<pre><code>$(document).ready(function(e)\n{\ne.preventDefault();   \n            $('#a1').fancybox({ \n                afterClose: function()\n                {\n                    console.log('closed :( ');\n                }\n            }).click();// or .trigger('click');\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The problem with your code is that you are making the selector <code>#a1</code> to act as both : the <em>trigger</em> and the <em>target</em> of fancybox therefore any click on itself will fire fancybox over and over again.</p>\n\n<p>You would need to create another selector (the trigger) that targets the <code>#a1</code> element like</p>\n\n<pre><code>&lt;a class=\"fancybox\" href=\"#a1\"&gt;triggers fancybox&lt;/a&gt;\n&lt;div id=\"a1\"&gt;\n  &lt;p&gt;Click on the box&lt;/p&gt;\n  &lt;div class=\"r\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>if you don't want the element <code>.fancybox</code> be visible, just add a <code>display:none</code> property</p>\n\n<p>Then your js</p>\n\n<pre><code>$(document).ready(function () {\n    $('.fancybox').fancybox({\n        afterClose: function () {\n            console.log('closed :( ');\n        }\n    }).trigger('click');\n});\n</code></pre>\n\n<p>See <strong><a href=\"http://jsfiddle.net/LF27m/\">JSFIDDLE</a></strong></p>\n\n<p><strong>EDIT</strong> : looking at you sample <a href=\"http://jsfiddle.net/LF27m/2/\">JSFIDDLE</a>, things could have been much simpler. </p>\n\n<p>Having just this html</p>\n\n<pre><code>&lt;div id=\"a1\"&gt;\n  &lt;p&gt;Click on the box&lt;/p&gt;\n  &lt;div class=\"r\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>you could use this code</p>\n\n<pre><code>$(document).ready(function () {\n    $.fancybox({\n        href: \"#a1\"\n    });\n});\n</code></pre>\n\n<p>where no <code>click</code> is needed.</p>\n\n<p>See you updated <strong><a href=\"http://jsfiddle.net/LF27m/3/\">JSFIDDLE</a></strong></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>I had the same symptom of an unclickable Fancybox overlay.  My client wanted to be able to link and automatically open up a certain Fancybox, like <a href=\"http://yoursite.com/#signup\" rel=\"nofollow\">http://yoursite.com/#signup</a> to open up an inline 'signup' Fancybox overlay.  Thanks to JFK I realized I was triggering and targeting the element with the ID of 'signup' rather than the element with the href attribute of '#signup'.  I got it to hook onto the last portion of the URL (i.e. #signup) and look up the matching 'a' href attribute, and to trigger a click on that element.</p>\n\n<p>The demo below doesn't really help portray this, but you get to see the code.</p>\n\n<p><a href=\"http://jsfiddle.net/ca7no4yp/2/\" rel=\"nofollow\">http://jsfiddle.net/ca7no4yp/2/</a></p>\n\n<p>The juicy bit:</p>\n\n<pre><code>$(\"a[href='#\" + location.href.substr(location.href.indexOf('#')+1) + \"']\").fancybox().trigger('click');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have to run fancybox with <strong>trigger click</strong> in my website, the problem that i discovered is that <strong>with this method</strong> if you click on elements inside the fancy box, the fancy box will close and appear again (<strong>blinks</strong>) .</p>\n\n<p><strong>i want fancybox to prevent blinking when i click on elements inside the box and when i click on those elements i don't want to see any changes, thats all :)</strong></p>\n\n<p>i created demo for this problem</p>\n\n<p><a href=\"http://jsfiddle.net/NhWLc/5/\">http://jsfiddle.net/NhWLc/5/</a></p>\n\n<pre><code>&lt;div id=\"a1\"&gt;\n  &lt;p&gt;Click on the box&lt;/p&gt;\n  &lt;div class=\"r\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n$(document).ready(function() {\n  $('#a1').fancybox({   \n    afterClose: function() {\n      console.log('closed :( ');\n    }\n  }).click();// or .trigger('click');\n});\n</code></pre>\n\n<p>any idea? </p>\n",
            "last_activity_date": 1408120616,
            "question_id": 18573059,
            "score": 5,
            "tags": [
                "javascript",
                "jquery",
                "fancybox"
            ],
            "title": "fancybox bug with trigger click"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var str1 = \"When I say wall I want to split\";\nvar chunks = str1.split(\"wall\");\n\nalert(chunks[0]); /* When I say */\nalert(chunks[1]); /* I want to split */\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<pre><code>var s = str.split(\"wall\");\nvar st1 = s[0];\nvar st2 = s[1];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var parts = str.split('wall ');\n\nvar st1 = parts[0];\nvar st2 = parts[1];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Objects/String/split\" rel=\"nofollow\">String.split</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just for the sake of completeness, I'll add a regular expressions answer:</p>\n\n<pre><code>var splits = str.split(/wall /);\nalert(\"'\"+splits[0]+\"'\"); //'this is part 1 '\nalert(\"'\"+splits[1]+\"'\"); //'this is part 2 '\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/96428/how-do-i-split-this-string-with-javascript\">How do I split this string with JavaScript?</a>  </p>\n</blockquote>\n\n\n\n<p>how to split a string in javascript?</p>\n\n<p>example <code>str = \"this is part 1 one wall this is part 2 \"</code><br>\nnow I want to split the str in 2 parts separated by word <code>wall</code></p>\n\n<p>so I want output to be:</p>\n\n<pre><code>st1 =\"this is part 1 \"\nst2 =\"this is part 2 \"\n</code></pre>\n",
            "last_activity_date": 1254239833,
            "question_id": 1493407,
            "score": 5,
            "tags": [
                "javascript",
                "string"
            ],
            "title": "how to split a string in javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>$(\"#textbox\").selectionStart=14</code> might works for Firefox, Opera, Chrome, but not sure for IE</p>\n\n<p>PS: There should be length 14 > characters already in textbox to work properly.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>IE use different approach at setting cursor position than Firefox,Opera and Chrome. It's better to make a helper function, which will do it for you. I use this one for own needs.</p>\n\n<pre><code>function setCursor(node,pos){\n\n    node = (typeof node == \"string\" || node instanceof String) ? document.getElementById(node) : node;\n\n    if(!node){\n        return false;\n    }else if(node.createTextRange){\n        var textRange = node.createTextRange();\n        textRange.collapse(true);\n        textRange.moveEnd(pos);\n        textRange.moveStart(pos);\n        textRange.select();\n        return true;\n    }else if(node.setSelectionRange){\n        node.setSelectionRange(pos,pos);\n        return true;\n    }\n\n    return false;\n}\n</code></pre>\n\n<p>Last thing, is to call it from your onfocus handler.</p>\n\n<p>Goodluck</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>The moveStart and moveEnd methods expects 2 parameters.\nThe first parameter is a string (character, word, sentence or textedit).\nThe second parameter is an integer and refers to the number of units to move.\n<a href=\"http://msdn.microsoft.com/en-us/library/ie/ms536623%28v=vs.85%29.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/ie/ms536623%28v=vs.85%29.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Hai Guys,\n         I want to set cursor at a position of length 14 on a textbox which will not have a value.. Iknow initially cursor will be at 0 i want it to be at 14</p>\n",
            "last_activity_date": 1417697502,
            "question_id": 1865563,
            "score": 3,
            "tags": [
                "javascript",
                "html",
                "textbox",
                "cursor-position",
                "onfocus"
            ],
            "title": "Set cursor at a length of 14 onfocus of a textbox"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>PHP and javascript don't work like that.</p>\n\n<p>PHP is a server-side language. While javascript is a clientside language.</p>\n\n<p>There are still ways of passing data from the client-window to your server, via ajax, query parameters, cookies... But none will work in the same page.</p>\n\n<p>Give us a clearer image on what you are trying to achieve and we will gladly help.</p>\n\n<p><strong>UPDATE</strong></p>\n\n<p><strong>JS</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;  \n    document.cookie = 'name=Khez' ;  \n&lt;/script&gt;  \n</code></pre>\n\n<p><strong>PHP</strong> </p>\n\n<pre><code>&lt;?php  \n    var_dump($_COOKIE['name']);  \n?&gt;  \n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>PHP is \"Server Side\" code and javascript is client side code.  They don't interact... </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>PHP is server-side~ all parsing is done on the server. JavaScript is client-side~ everything happens AFTER it get's to the client. If you need date in PHP, I recommend <code>time()</code> and or <code>date()</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>So there are 2 pages <code>page1.php</code> and <code>page2.php</code></p>\n\n<p><code>page2.php</code> needs to pass JS variables to <code>page1.php</code></p>\n\n<p>We can do this by passing it as url variables from <code>page2.php</code> and get it in <code>page1.php</code> using <code>$_GET[]</code>.</p>\n\n<p><code>page2.php</code> (send JS variable)</p>\n\n<pre><code>&lt;script type=text/javascript&gt;\n  var lati = location.lat();\n  var longi = location.lng();\n  document.location = 'http://www.rajak.me/index.php?addlat='+lati+'&amp;addlong='+longi;   \n});\n&lt;/script&gt;\n</code></pre>\n\n<p><code>page1.php</code> (receive JS variable)</p>\n\n<pre><code>&lt;?php    \n  $addlat = $_GET['addlat'];\n  $addlong = $_GET['addlong'];\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You could use the following Javascript which will link to <em>somepage.php</em> with the variable in the Url</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nx = new Date()\nwindow.location.href = \"somepage.php?w1=\" + x;\n&lt;/script&gt;\n</code></pre>\n\n<p>This is the contents of <em>somepage.php</em> which recieves the variable and echoes it</p>\n\n<pre><code>&lt;?php\n   if (isset($_GET[\"w1\"])) {\n     $x = $_GET[\"w1\"];\n     echo $x;\n   }else{\n   echo 'no variable received';\n   }\n    ?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>ok so im trying to get a javascript variable into a php script, this would be an example,</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nx = new Date()\n&lt;/script&gt;\n&lt;?php\n$x = $_GET[\"x\"]; \n?&gt;\n&lt;p&gt;&lt;?php echo $x ?&gt;&lt;/p&gt;\n</code></pre>\n\n<p>i just cant get it to work! I need help please?</p>\n\n<p>EDIT: well im just trying to get the hash from a url via javascript then put that in a php script.</p>\n",
            "last_activity_date": 1423095221,
            "question_id": 5546675,
            "score": 1,
            "tags": [
                "php",
                "javascript",
                "variables"
            ],
            "title": "Passing javascript variables to php?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>How about this?</p>\n\n<pre><code>[1-9]{1,2}[-./][1-12]{1}[-./](19|20)[1-99]{1}\n</code></pre>\n\n<p>I have not tested this. And this does not validate leap years</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>You'd better do a split on <code>-</code> and test all elements. But if you really want to use a regex you can try this one :</p>\n\n<pre><code>/^(?:(?:31-(?:(?:0?[13578])|(1[02]))-(19|20)?\\d\\d)|(?:(?:29|30)-(?:(?:0?[13-9])|(?:1[0-2]))-(?:19|20)?\\d\\d)|(?:29-0?2-(?:19|20)(?:(?:[02468][048])|(?:[13579][26])))|(?:(?:(?:0?[1-9])|(?:1\\d)|(?:2[0-8]))-(?:(?:0?[1-9])|(?:1[0-2]))-(?:19|20)?\\d\\d))$/\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>^            # start of line\n (?:         # group without capture\n             # that match 31st of month 1,3,5,7,8,10,12\n   (?:       # group without capture\n     31      # number 31\n     -       # dash\n     (?:     # group without capture\n       (?:   # group without capture\n         0?  # number 0 optionnal\n         [13578] # one digit either 1,3,5,7 or 8\n       )     # end group\n       |     # alternative\n       (1[02]) # 1 followed by 0,1 or 2\n     )       # end group\n     -       # dash\n     (19|20)? #numbers 19 or 20 optionnal\n     \\d\\d    # 2 digits from 00 to 99 \n   )         # end group\n|\n   (?:(?:29|30)-(?:(?:0?[13-9])|(?:1[0-2]))-(?:19|20)?\\d\\d)\n|\n   (?:29-0?2-(?:19|20)(?:(?:[02468][048])|(?:[13579][26])))\n|\n   (?:(?:(?:0?[1-9])|(?:1\\d)|(?:2[0-8]))-(?:(?:0?[1-9])|(?:1[0-2]))-(?:19|20)?\\d\\d)\n )\n$\n</code></pre>\n\n<p>I've explained the first part, leaving the rest as an exercise.</p>\n\n<p>This match one invalid date : <code>29-02-1900</code> but is correct for any date between <code>01-01-1900</code> and <code>31-12-2099</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I came up with this:</p>\n\n<pre><code>function isValidDate(inputDate){\n\n    var myRegex = /^(\\d{1,2})([\\-\\/])(\\d{1,2})\\2(\\d{4}|\\d{2})$/;\n    var match = myRegex.exec(inputDate);\n\n    if (match != null) {\n        var auxDay = match[1];\n        var auxMonth = match[3] - 1;\n        var auxYear = match[4];\n        auxYear = auxYear.length &lt; 3 ? (auxYear &lt; 70 ? '20' + auxYear : '19' + auxYear) : auxYear;\n        var testingDate = new Date(auxYear,auxMonth,auxDay);\n        return ((auxDay == testingDate.getDate()) &amp;&amp; (auxMonth == testingDate.getMonth()) &amp;&amp; (auxYear == testingDate.getFullYear()));\n    } else return false;\n}\n</code></pre>\n\n<p>Works for <code>dd-mm-yyyy</code>, <code>dd-mm-yy</code>, <code>d-m-yyyy</code> and <code>d-m-yy</code>, using <code>-</code> or <code>/</code> as separators</p>\n\n<p>Based on <a href=\"http://www.codetoad.com/javascript_IsValidDate.asp\" rel=\"nofollow\">This script</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I'm working in JavaScript and I need to figure out how to determine a valid date using regular expressions.  </p>\n\n<p>The matches will be:</p>\n\n<pre><code>dd-mm-yyyy\ndd-mm-yy\n</code></pre>\n\n<p>Also, no leading zeros should be accepted like:</p>\n\n<pre><code>9-8-2010\n10-6-99\n</code></pre>\n\n<p>How can I write a regular expression to do this?</p>\n",
            "last_activity_date": 1315336587,
            "question_id": 3871984,
            "score": 1,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "How to write regex to validate dates?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Timing. </p>\n\n<p>The document isn't ready, when you're getting the element. </p>\n\n<p>You have to <a href=\"http://javascript.about.com/library/blonload.htm\" rel=\"nofollow\">wait until the document is ready</a>, before retrieving the element.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The page is rendered top to bottom. You code executes immediately after it's parsed. At the time of execution, the div does not exist yet. You need to wrap it in an window.onload function.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt;\n  window.onload = function() {\n   document.getElementById(\"ThisWillBeNull\").innerHTML = \"Why is this null?\";\n  }\n &lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The browser is going to execute that script as soon as it finds it. At that point, the rest of the document hasn't loaded yet \u2014 there isn't any element with that id yet. If you run that code <em>after</em> that part of the document is loaded, it will work fine.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Without <em>window.onload</em> your script is never invoked. Javascript is an event based language so without an explicit event like onload, onclick, onmouseover, the scripts are not run.  </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;  \n  window.onload = function(){  \n   document.getElementById(\"ThisWillBeNull\").innerHTML = \"Why is this null?\";  \n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>Onload event:</p>\n\n<blockquote>\n  <p>The load event fires at the end of the document loading process. At this point, all of the objects in the document are in the DOM, and all the images and sub-frames have finished loading.</p>\n</blockquote>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/window.onload\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/window.onload</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\n  window.onload += function() {\n   document.getElementById(\"ThisWillBeNull\").innerHTML = \"Why is this null?\";\n  }\n &lt;/script&gt;\n</code></pre>\n\n<p>Use <code>+=</code> to assign more <code>eventHandler</code>s to onload event of document.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been using document.GetElementById succesfully but from some time on I can't make it work again.\nOld pages in which I used it still work but things as simple as this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n &lt;title&gt;no title&lt;/title&gt; \n &lt;script type=\"text/javascript\"&gt;\n document.getElementById(\"ThisWillBeNull\").innerHTML = \"Why is this null?\";\n &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n &lt;div id=\"ThisWillBeNull\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Are giving me \"document.getElementById(\"parsedOutput\") is null\"  all the time now.\nIt doesnt matter if I use Firefox or Chrome or which extensions i have enabled or what headers I use for the html, it's always null and I can't find what could be wrong.</p>\n\n<p>Thanks for your input =)</p>\n",
            "last_activity_date": 1321885854,
            "question_id": 2632137,
            "score": 1,
            "tags": [
                "javascript",
                "getelementbyid"
            ],
            "title": "Why is document.GetElementById returning null"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Your phrasing is a bit confusing, but I'll do my best. First, you should note that your curly braces are a bit off. Your code should look like this:</p>\n\n<pre><code>function ObjectCreate(){\n   this.a = \"a\";\n   this.b = \"b\";\n}\n\nObjectCreate.prototype.show = function(){\n     alert(this.a+\" \"+this.b);\n}\n\nobj1 = new ObjectCreate();\n</code></pre>\n\n<p>You need to define your constructor, <em>then</em> attach things to its prototype.</p>\n\n<p>When you call the constructor, the <code>this</code> keyword <em>does</em> basically refer to the new object being created. This is important because, for example, you could write a constructor like:</p>\n\n<pre><code>function ObjectCreate(x,y){\n   this.a = x*x;\n   this.b = y*x+4;\n}\nobj1 = new ObjectCreate(10,20);\n</code></pre>\n\n<p>Here, as in all constructors, <code>this</code> refers to the instance being created (<code>obj1</code>, in this case).</p>\n\n<p>I think you suggested that <code>this</code> refers to the object's prototype, but that would make <code>this.a</code> and <code>this.b</code> static variables, which would be useless in a constructor like the one here, since every time you initialized a new object you would change the vale of <code>this.a</code> and <code>this.b</code> for all previously existing objects, and that just isn't useful.</p>\n\n<p>I hope that answered your question. If not, please go ahead and leave comments for further clarification.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In this example, during constructor invocation, <code>obj1</code> is undefined. Value is assigned to <code>obj1</code> variable after <code>ObjectCreate</code> function returns.</p>\n\n<p>You can check yourself:</p>\n\n<pre><code>function ObjectCreate(){\n    this.a = \"a\";\n    this.b = \"b\";\n\n    alert(obj1); // yields \"undefined\"\n    ObjectCreate.prototype.show = function(){\n        alert(this.a+\" \"+this.b);\n    }\n}\n\nvar obj1 = new ObjectCreate(); // note \"var\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>It seems nobody mentioned that <code>this</code> refers to the <code>invoking object</code>.</p>\n\n<pre><code>window.sayHi=function(){\n  console.log(this.name);\n}\nwindow.name=\"Window\"\nwindow.sayHi();//=Window\n\nvar obj={\n  name:\"obj\"\n}\nobj.fn=window.sayHi;\n\nobj.fn();//=obj\n</code></pre>\n\n<p>The code above shows that when passing functions around the <code>this</code> context will change. If you don't want that then you can pass a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Closures\" rel=\"nofollow\">closure</a> instead of the function or use <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/call\" rel=\"nofollow\">call</a>, <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\" rel=\"nofollow\">apply</a> or <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/bind\" rel=\"nofollow\">bind</a>:</p>\n\n<pre><code>//closure example\nobj.fn=(function(w){//w is available because the returned function is a closure\n  return function(){\n    w.sayHi();\n  }\n}(window));\n\nobj.fn();//=Window\n//using call\nobj.fn.call(window);//=Window\n//using apply\nobj.fn.apply(window);//=Window\n//using bind\nvar boundFn=obj.fn.bind(window);\nboundFn();//=Window\n</code></pre>\n\n<p>That was when you pass a function as a parameter on another object. When you use constructor functions then <code>this</code> within the function body will refer to the object to be created.</p>\n\n<p>But when you pass around it's functions it may not be:</p>\n\n<pre><code>var obj={\n  name:\"obj\"\n}\nvar Test=function(){\n  this.name=\"Test\";\n}\nTest.prototype.sayHi=function(){\n  console.log(this.name);\n};\n\nvar t=new Test();\nobj.fn=t.sayHi\nt.sayHi();//=Test\nobj.fn();//=obj\n</code></pre>\n\n<p>This is a pitfall most people fall in when passing object instance functions to setTimeout or event handlers:</p>\n\n<pre><code>someButton.onclick=t.sayHi;//when button is clicked this will be the button clicked\nsetTimeout(t.sayHi,100);//when sayHi is executed 'this' will be window\n</code></pre>\n\n<p>To answer your question about obj1 existing within the constructor function's body; I'd say no (not in Firefox at least). I don't have a link to the specs but obj1 would be set to <code>this</code> when the constructor function returns:</p>\n\n<pre><code>//clean up window.t\ndelete window.t;\nvar Test=function(){\n  this.name=\"Test\";\n  console.log(\"and window.t is:\",window.t);//undefined\n}\nTest.prototype.sayHi=function(){\n  console.log(this.name);\n};\n\nwindow.t=new Test();\n</code></pre>\n\n<p>More on constructor functions, prototype, inheritance, overriding and calling super <a href=\"http://stackoverflow.com/a/16063711/1641941\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So, when we create constructor function for creating new object the new keyword does 3 things\nI'am going to explain it but please correct me if I'am wrong i want to be sure I'am correct </p>\n\n<p>first i will create a constructor function</p>\n\n<pre><code>function ObjectCreate(){\n    this.a = \"a\";\n    this.b = \"b\";\n\n    ObjectCreate.prototype.show = function(){\n        alert(this.a+\" \"+this.b);\n    }\n}\n\nobj1 = new ObjectCreate();\n</code></pre>\n\n<p>now the first thing new keyword does is create new object and set its secret link to its constructor's prototype and pass it to the constructor function where now the <code>this</code> can refer to it and please note <code>this</code> does not refer to obj1 at this point because once constructor finished creating object only then it returns the newly created object to obj1 variable. i ask this question because some people say that <code>this</code> refer to the obj1 object in this case. so am i right here.</p>\n",
            "last_activity_date": 1380382117,
            "question_id": 19055948,
            "score": -1,
            "tags": [
                "javascript",
                "constructor"
            ],
            "title": "does javascript&#39;s this object refer to newly created object in the way i think"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are many standalone implementations of JavaScript that you may be able to leverage for this purpose:</p>\n\n<p>Here is a link to the stackoverflow info page on JavaScript which lists at the top many of these implementations: <a href=\"http://stackoverflow.com/tags/javascript/info\">http://stackoverflow.com/tags/javascript/info</a> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>While it is possible to use JavaScript as scripting for .Net application it is not most popular choice. If you can pick other language - IronPython or LUA.Net may be choices you'll get better support. I listed several links in similar question recently: <a href=\"http://stackoverflow.com/questions/11589289/write-npc-scripts-to-be-executed-by-c-sharp-using-class-with-npc-methods/11589365#11589365\">Write npc scripts to be executed by c# using class with npc methods</a>.</p>\n\n<p>Otherwise JavaScript.Net (part of .Net framework) or other implementations either explicitly .Net or with .Net bindings will work as scripting language.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This shows the two-way interaction between Javascript and c#.</p>\n\n<ol>\n<li>Javascript calls a c# method</li>\n<li>C# gets the result of an expression in Javascript</li>\n</ol>\n\n<p>-</p>\n\n<pre><code>Type scriptType = Type.GetTypeFromCLSID(Guid.Parse(\"0E59F1D5-1FBE-11D0-8FF2-00A0D10038BC\"));\n\ndynamic obj = Activator.CreateInstance(scriptType, false);\nobj.Language = \"javascript\";\nobj.AddObject(\"MyClass\",new JSAccessibleClass());\n\nobj.Eval(\"MyClass.MsgBox('Hello World')\"); //&lt;--1\nvar result = obj.Eval(\"3+5\"); //&lt;--2\n\n\n[ComVisible(true)]\npublic class JSAccessibleClass\n{\n    public void MsgBox(string s)\n    {\n        MessageBox.Show(s);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I am writing a raytracer as a part of my complete 3d engine. I am planning on using javascript for the scripting language instead of writing my own. The question is how can I use it? Btw the raytracer and the UI are written in C#.</p>\n",
            "last_activity_date": 1345854863,
            "question_id": 12118077,
            "score": -2,
            "tags": [
                "c#",
                "javascript",
                "3d",
                "raytracing"
            ],
            "title": "Using javascript for custom purposes"
        },
        {
            "answer_count": 0,
            "body": "<p>When I submit a form using jQuery, I want to display an animation image (<code>load.gif</code> or <code>progressbar.gif</code>, etc.) for a few seconds.</p>\n\n<p>How can I show a GIF image in jQuery?</p>\n",
            "last_activity_date": 1396721209,
            "question_id": 750358,
            "score": 48,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "With jQuery, how can I implement a &quot;page loading&quot; animation?"
        },
        {
            "answer_count": 0,
            "body": "<p>Can someone please explain what the difference is between the following two ways to specifying onload callback functions in javascript?</p>\n\n<pre><code>element.onload = callback\n</code></pre>\n\n<p>AND</p>\n\n<pre><code>element.addEventListener(\"load\",callbak,false)\n</code></pre>\n",
            "last_activity_date": 1374076660,
            "question_id": 6902033,
            "score": 32,
            "tags": [
                "javascript",
                "javascript-events",
                "onload-event"
            ],
            "title": "element.onload vs element.addEventListener(&quot;load&quot;,callbak,false)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>For some value of \"a very shoddy equivalent\":</p>\n\n<pre><code>var button = document.getElementById(\"thebutton\")\nbutton.click()\n</code></pre>\n\n<p>Not all browsers (e.g. Firefox!) allow simulated events this way! Using <code>onclick()</code> only works if the event is in-line, etc. </p>\n\n<p>Please see <a href=\"http://code.jquery.com/jquery-1.5.2.js\" rel=\"nofollow\">the jQuery source</a> and search for \"trigger:\" (first match) to see all the icky stuff done to \"make it work\" (a good bit of it is just munging around the jQuery internals, other frameworks make have much simpler examples).</p>\n\n<p>Happy coding.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>event.initMouseEvent(\"click\"...</p>\n\n<p>Here is an example:</p>\n\n<pre><code>function simulateClick(elId) {\n    var evt;\n    var el = document.getElementById(elId);\n    if (document.createEvent) {\n        evt = document.createEvent(\"MouseEvents\");\n        evt.initMouseEvent(\"click\", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n    }\n    (evt) ? el.dispatchEvent(evt) : (el.click &amp;&amp; el.click());\n}\n\nvar foo = document.getElementById(\"hey\");\n\nfoo.onclick = function () {alert(\"bar\");}\n\nsimulateClick(\"hey\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Here is my example. Working perfectly in all situations</p>\n\n<pre><code>var d=document.createEvent(\"MouseEvents\"),\n    c=document.createEvent(\"MouseEvents\"),\n    p=document.createEvent(\"MouseEvents\");\n    d.initMouseEvent(\"mousedown\",true,true,window,0,0,0,0,0,false,false,false,false,0,null);\n    c.initMouseEvent(\"click\"    ,true,true,window,0,0,0,0,0,false,false,false,false,0,null);\n    u.initMouseEvent(\"mouseup\"  ,true,true,window,0,0,0,0,0,false,false,false,false,0,null);\n\n    var element =// some selector;\n\n    element.dispatchEvent(d);\n    element.dispatchEvent(c);\n    element.dispatchEvent(p);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>what's the equivalent of <em>jQuery</em>'s <code>trigger</code> method without <em>jQuery</em>?</p>\n\n<p>e.g., how do i do something like <code>$('.blah').trigger('click');</code> without <em>jQuery</em>?</p>\n",
            "last_activity_date": 1423789193,
            "question_id": 5658849,
            "score": 15,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "what&#39;s the equivalent of jquery&#39;s &#39;trigger&#39; method without jquery?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><em><strong>The Answer</em></strong></p>\n\n<p>It seems my 'experimental method' was flawed. The assumption about the Chrome console's omniscience is incorrect. The Chrome console does not appear to have access to the content script's execution context. So although console was reporting that jQuery did not have access to the page, it actually did, from the content script's execution context.</p>\n\n<p>This was verified by adding a content script, test.js, to manifest.json :</p>\n\n<pre><code>\"content_scripts\"         :   [\n                                  {\n                                    \"matches\"   : [\"&lt;all_urls&gt;\"],\n                                    \"js\"        : [\n                                                    \"javascript/jq/jquery-1.9.1.min.js\",\n                                                    \"javascript/jq/non-standard.js\",\n                                                    \"javascript/test.js\" // &lt;-- add\n                                                  ],\n</code></pre>\n\n<p>The content of test.js is :</p>\n\n<pre><code>    var jtest = $('body');\n    alert(jtest);\n    alert(jtest.text());\n</code></pre>\n\n<p>Now whatever page I navigate to, the two alert boxes pop up as expected.</p>\n\n<p>It works!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>The Chrome console does not appear to have access to the content script's execution context. </p>\n</blockquote>\n\n<p>Wrong, it does. You need to look at the correct place:</p>\n\n<p><img src=\"http://i.stack.imgur.com/8m3fc.gif\" alt=\"Animation of how-to get access to the execution environment of the Chromne extension\"></p>\n\n<p>The previous screencast shows that the Console tab of the Chrome developer tools has two dropdown boxes at the bottom, which can be used to change the execution environment for the developer tools' console.<br>\nThe left side can be used to change the frame context (top frame, so iframe, ...), and the right side can be used to change the script context (page, content script, ...).</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p><strong>Situation</strong> : I am writing a chrome extension that works on any page.</p>\n\n<p><strong>Problem Question</strong> : I can not load jQuery into Facebook and I would like to understand what is happening.</p>\n\n<p><strong>Hypotheses</strong> : Facebook possess some ultra advanced tech that somehow detects both : </p>\n\n<ol>\n<li>When jQuery is loaded via a chrome extension in an\nostensibly <em>separate</em> JSVM execution context, the Facebook megamind\nsomehow knows about this ostensibly <em>separate</em> JSVM execution\ncontext, and blocks it. </li>\n<li><strike>that jQuery is loaded via script.src and blocks it </strike>\n(when I used the Google CDN which serves over HTTPS instead of the\njQuery one which doesn't method 2 works, <em>but is not sufficient for\nanswer</em>).</li>\n</ol>\n\n<p><em><strong>DATA</em></strong></p>\n\n<p><strong>How do I know jQuery is not loading?</strong>  </p>\n\n<p>I <kbd>\u2318</kbd><kbd>\u2325</kbd><kbd>j</kbd> to bring up the console in Chrome. When I do :</p>\n\n<pre><code>    &gt; jQuery\n    &gt;&gt; ReferenceError : jQuery is not defined.\n    &gt; $('body')\n    &gt;&gt; Error : Tried to get element \"body\" but it is not present on the page.\n</code></pre>\n\n<p><strong>How do I attempt to load jQuery in facebook?</strong></p>\n\n<p><strong>Method 1 (required but fails)</strong>:</p>\n\n<p>Via the following code in the manifest.json file : </p>\n\n<pre><code>\"content_scripts\"         :   [\n                                  {\n                                    \"matches\"   : [\"&lt;all_urls&gt;\"],\n                                    \"js\"        : [ \n                                                    \"javascript/jq/jquery-1.9.1.min.js\",                                            \n                                                    \"javascript/jq/non-standard.js\"\n                                                  ],\n                                    \"all_frames\": true // (or false, same failure)\n                                  } \n                              ]\n</code></pre>\n\n<p><strong>Method 2 (works, but insufficent)</strong>:</p>\n\n<p>Via the method described in this SO answer (<a href=\"http://stackoverflow.com/a/7474386/907415\">load jQuery into console</a>), modified to permit the correct protocol :</p>\n\n<pre><code>    var jq = document.createElement('script');\n    jq.src = \"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\";\n    document.getElementsByTagName('head')[0].appendChild(jq);\n    jQuery.noConflict();\n</code></pre>\n\n<p><em><strong>Summary</em></strong></p>\n\n<p>Hypothesis 1 seems very unlikely, because over-riding the separate execution contexts of a web browser would be a major security vulnerability (break that sandbox), and not likely to be sanctioned. Therefore, I am probably being paranoid and overlooking the obvious, which hopefully one of you will see.</p>\n\n<p><em><strong>Appendix (other relevant code)</em></strong></p>\n\n<p>All of <em>non-standard.js</em> :</p>\n\n<pre><code>    $.fn.in_groups_of = function( countPerGroup ) {\n        var groups = [], offset = 0, $group;\n        while ( ($group = this.slice( offset, (countPerGroup + offset) )).length ) {\n            groups.push( $group );\n            offset += countPerGroup;\n        }\n        return groups;\n    };\n</code></pre>\n\n<p>More of <em>manifest.json</em> :</p>\n\n<pre><code>\"manifest_version\"        :   2,\n\"permissions\"             :   [\n                                  \"http://*/\",\n                                  \"https://*/\",\n                                  \"tabs\",\n                                  \"storage\",\n                                  \"unlimitedStorage\"\n                              ],\n</code></pre>\n",
            "last_activity_date": 1381453918,
            "question_id": 15194699,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "facebook",
                "google-chrome-extension",
                "google-chrome-devtools"
            ],
            "title": "Why will jQuery not load in Facebook?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>These are bit operators. Have a look at this link: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/operators/bitwise_operators\" rel=\"nofollow\">Bitwise Operators</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>These are the <a href=\"http://www.java2s.com/Tutorial/JavaScript/0040__Operators/ShiftRightwithSign.htm\"><strong>shift right</strong> (with sign)</a> and <a href=\"http://www.java2s.com/Tutorial/JavaScript/0040__Operators/ShiftLeft.htm\"><strong>shift left</strong></a> operators.</p>\n\n<p>Essentially, these operators are <strong>used to manipulate values at BIT-level</strong>.<br>\nThey are typically used along with the the <code>&amp;</code> (bitwise AND) and <code>|</code> (bitwise OR) operators and in association with <code>masks</code> values such as the <code>0x7F</code> and similar immediate values found the question's snippet.<br>\n  The snippet in question uses these operators to \"parse\" the three components of a 32 bits float value (sign, exponent and fraction).</p>\n\n<p>For example, in the question's snippet:<br>\n<code>1 - (2*(b1 &gt;&gt; 7))</code>   produces the <em>integer</em> value 1 or -1 depending if the bit 7  (the 8th bit from the right) in the b1 variable is zero or one respectively.<br>\nThis idiom can be explained as follow.</p>\n\n<ul>\n<li>at the start, b1, expressed as bits is    <code>0000000000000000abcdefgh</code><br>\nnote how all the bits on the left are zeros,  this comes from the<br>\n<code>b1 = data.charCodeAt(offset) &amp; 0xFF</code>  assignement a few lines above, which essentially zero-ed all the bits in b1 except for the rightmot 8 bits  (0xFF mask).<br>\na, b, c... thru h represent unknown boolean values either 0 or 1.<br>\nWe are interested in testing the value of a.</li>\n<li><code>b1 &gt;&gt; 7</code> shifts this value to the right by 7 bits, leaving<br>\nb1 as <code>00000000000000000000000a</code>  which, read as an integer will have value 1 or 0</li>\n<li>this 1 or 0 <em>integer</em> value is then multiplied by 2<br>\nit is then either 2 or 0, respectively.</li>\n<li>this value is then substracted from 1, leaving either -1 or 1.</li>\n</ul>\n\n<p>Although useful to illustrate the way the bit-operators work, the above idiom could be replaced by something which tests the bit 7 more directly and assigns the sign variable more explicitly.  Furthermore this approach does not require the initial masking of the leftmost bits in b1:</p>\n\n<pre><code>var sign\nif (b1 &amp; 0x80)   // test bit 7  (0x80 is  [00000000]10000000)\n  sign = -1;\nelse\n  sign = 1;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>shift left and shift right operators. If you have a number it will shift its bits to left or right.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can read about the operators here: <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/operators/bitwise_operators\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript/Reference/operators/bitwise_operators</a></p>\n\n<p>They are bit shifts and also occur in languages other than JS.</p>\n\n<p>Example:  5 >> 1 = 2</p>\n\n<p>binary: 0101 shifting one position = 0010</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's the bitshifting operator. See <a href=\"http://www.javascripter.net/faq/arithmet.htm\" rel=\"nofollow\">here</a> for more details.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.java2s.com/Tutorial/JavaScript/0040__Operators/ShiftRightwithSign.htm\" rel=\"nofollow\">Right</a> and <a href=\"http://www.java2s.com/Tutorial/JavaScript/0040__Operators/ShiftLeft.htm\" rel=\"nofollow\">Left</a> and shift operators.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>shift a by b bits to the left (padding with zeros)</p>\n\n<pre><code>a &lt;&lt; b\n</code></pre>\n\n<p>shift a by b bits to the right (copying the sign bit)</p>\n\n<pre><code>a &gt;&gt; b\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>They are bitshift operators. Numbers in the computer are represented in binary. Shifting left is equivalent to multiplying by 2 and shifting right is equivalent to dividing by 2.</p>\n\n<p>For example, the number 8 is <code>1000</code> in binary. Shift left <code>&lt;&lt;</code> by 3 would yield <code>1000000</code> which is 64. Shift right by 2 would yield <code>10</code> which is 2.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is an <a href=\"http://en.wikipedia.org/wiki/Bitwise_operation\" rel=\"nofollow\">arithmetic shift</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>From <a href=\"http://ecma262-5.com/ELS5_HTML.htm\" rel=\"nofollow\">http://ecma262-5.com/ELS5_HTML.htm</a></p>\n\n<blockquote>\n  <p>11.7   Bitwise Shift Operators</p>\n  \n  <p>ShiftExpression :\n     AdditiveExpression\n      ShiftExpression  &lt;&lt; AdditiveExpression\n      ShiftExpression  >> AdditiveExpression\n      ShiftExpression  >>> AdditiveExpression</p>\n  \n  <p>11.7.1   The Left Shift Operator ( &lt;&lt; )\n  Performs a bitwise left shift operation on the left operand by the amount specified by the right operand. \n  The production ShiftExpression : ShiftExpression &lt;&lt; AdditiveExpression is evaluated as follows:</p>\n\n<pre><code>Let lref be the result of evaluating ShiftExpression.\nLet lval be GetValue(lref).\nLet rref be the result of evaluating AdditiveExpression.\nLet rval be GetValue(rref).\nLet lnum be ToInt32(lval).\nLet rnum be ToUint32(rval).\nLet shiftCount be the result of masking out all but the least significant 5 bits of rnum, that is, compute rnum &amp; 0x1F.\nReturn the result of left shifting lnum by shiftCount bits. The result is a signed 32-bit integer.\n</code></pre>\n  \n  <p>11.7.2   The Signed Right Shift Operator ( >> )\n  Performs a sign-filling bitwise right shift operation on the left operand by the amount specified by the right operand.</p>\n  \n  <p>The production ShiftExpression : ShiftExpression >> AdditiveExpression is evaluated as follows:</p>\n\n<pre><code>Let lref be the result of evaluating ShiftExpression.\nLet lval be GetValue(lref).\nLet rref be the result of evaluating AdditiveExpression.\nLet rval be GetValue(rref).\nLet lnum be ToInt32(lval).\nLet rnum be ToUint32(rval).\nLet shiftCount be the result of masking out all but the least significant 5 bits of rnum, that is, compute rnum &amp; 0x1F.\nReturn the result of performing a sign-extending right shift of lnum by shiftCount bits. The most significant bit is propagated. The result is a signed 32-bit integer.\n</code></pre>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a piece of Javascript code I'm trying to understand</p>\n\n<pre><code>// read big-endian (network byte order) 32-bit float\nreadFloat32 = function(data, offset) {\n    var b1 = data.charCodeAt(offset) &amp; 0xFF,\n        b2 = data.charCodeAt(offset+1) &amp; 0xFF,\n        b3 = data.charCodeAt(offset+2) &amp; 0xFF,\n        b4 = data.charCodeAt(offset+3) &amp; 0xFF;\n    var sign = 1 - (2*(b1 &gt;&gt; 7));       //&lt;--- here it is and 2 lines below\n    var exp = (((b1 &lt;&lt; 1) &amp; 0xff) | (b2 &gt;&gt; 7)) - 127;\n    var sig = ((b2 &amp; 0x7f) &lt;&lt; 16) | (b3 &lt;&lt; 8) | b4;\n    if (sig == 0 &amp;&amp; exp == -127)\n      return 0.0;\n    return sign * (1 + sig * Math.pow(2, -23)) * Math.pow(2, exp);\n}\n</code></pre>\n\n<p>what does \">>\" mean? Is it a special type of boolean (like '&lt;' or '>') </p>\n",
            "last_activity_date": 1312909084,
            "question_id": 6997909,
            "score": 5,
            "tags": [
                "javascript",
                "operators"
            ],
            "title": "What do &quot;&gt;&gt;&quot; and &quot;&lt;&lt;&quot; mean in Javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Not tested, but it probably works:</p>\n\n<pre><code>&lt;script lang=\"text/javascript\" src=\"path/to/your/script.php\" &gt;&lt;/script&gt;\n</code></pre>\n\n<p>Try to give the script <code>.php</code> as file extension.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>&lt;script src=\"/path/to/my/file.php\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>In <code>file.php</code> you'll also want to output the correct header, before outputting anything you should have the following:</p>\n\n<pre><code>header(\"Content-Type: text/javascript\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p><code>&lt;script&gt; global_one = '&lt;?php echo $global_one; ?&gt;';&lt;/script&gt;</code>\nQuick example ;) If you put this in your html <code>&lt;head&gt;</code> before all other javascript files the <code>global_one</code> variable will be available to all js files.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, just write a php file that outputs the JavaScript and include it in your page as you normally would, like</p>\n\n<pre><code>&lt;?php $f=40; ?&gt;\n&lt;script type='text/javascript&gt;\n   var f=&lt;?php echo $f;?&gt;;\n&lt;/script&gt;\n</code></pre>\n\n<p>The client does not care if the script file ends in .js, .php or whatever, just about the mime type and the contents.</p>\n\n<p>You could also use Apache directives, perhaps in a .htaccess file, to tell it to process a certain .js file as PHP, or direct requests for filename.js to filename.php, though it's not necessary.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sure, most easily by making it a <code>js.php</code> file.</p>\n\n<p>If possible, though, consider an alternative: Fetch the PHP defines into JavaScript before including the external script file:</p>\n\n<pre><code> &lt;script&gt;\n define1 = &lt;?php echo YOUR_DEFINE1; ?&gt;\n define2 = &lt;?php echo YOUR_DEFINE2; ?&gt;\n &lt;/script&gt;\n &lt;script src=\".....\"&gt; // This script can now use define1 and define2\n</code></pre>\n\n<p>This way, the external JavaScript can still be served as a static content and doesn't need to be run through PHP. That is less resource intensive.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can do this on a server level too. Say you're using apache, you can add this line to your configuration (even your .htaccess will do):</p>\n\n<p><code>AddType application/x-httpd-php .js</code></p>\n\n<p>You could also do that with css or even plain ol' html pages.</p>\n\n<p>I'm sure other server software have similar capabilities.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Create a php file called javascript-test.php</p>\n\n<pre><code>&lt;?php\nheader('Content-type: application/javascript');\n\n$php = 'Hello World';\necho \"alert('$php');\";\n?&gt;\n</code></pre>\n\n<p>And then link to your php as if it was a javascript file:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"javascript-test.php\" /&gt;\n</code></pre>\n\n<p>If you need your php file to have a .js extension, that is possible in your server configuration.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I have a JavaScript file where I would like to include some php code.\nThe problem is that I have a few defines on PHP that I would like to use on JS as well.</p>\n\n<p>Is there any way of including a .js file in HTML allowing the server to first interpret it (before downloading to the client) using php?</p>\n\n<p>Thanks :)</p>\n",
            "last_activity_date": 1422394440,
            "question_id": 3943198,
            "score": 5,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "Parse a JavaScript file through PHP"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You should use <code>.</code> when you know the name of the property</p>\n\n<pre><code>var object = {};\nobject.property = 'whatever';\n</code></pre>\n\n<p>, use <code>[]</code> when the name of the property is contained in a variable</p>\n\n<pre><code>var object = {};\nvar property = 'another-property';\nobject[property] = 'whatever';\n</code></pre>\n\n<p>As @DCoder added certain object properties cannot be accessed without using the <code>[]</code> notation because their names break the syntax. E.g. properties named <code>class</code>, <code>default</code>, or data-prop-value</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You cannot use <code>.</code> to access array elements. However you can use both <code>.</code> and <code>[]</code> to access object properties.</p>\n\n<p>When trying to access a non-existing object property with <code>.</code> you will get an error but if you try with <code>[]</code> instead you will get <code>undefined</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Accessing members with <code>.</code> is called <em>dot notation</em>.  Accessing them with <code>[]</code> is called <em>bracket notation</em>.</p>\n\n<p>The dot notation only works with property names which are valid <a href=\"http://es5.github.io/#x7.6\"><strong>identifier names</strong> <sup>[spec]</sup></a>, so basically any name that would also be a valid <strong>variable name</strong> (a valid <em>identifier</em>, see also <a href=\"http://stackoverflow.com/questions/1661197/valid-characters-for-javascript-variable-names\">Valid Characters for JavaScript Variable Names</a>) and any <a href=\"http://es5.github.io/#x7.6.1\">reserved keyword <em><sup>[spec]</sup></em></a>.</p>\n\n<p>Bracket notation expects an expression which evaluates to a string (or can be coerced to a string), so you can use <em>any character sequence as property name</em>. There are no limits to what a string can contain.</p>\n\n<p>Examples:</p>\n\n<pre><code>obj.foo;  // valid\nobj.else  // valid, reserved keywords are valid identifier names\nobj.42    // invalid, identifier names cannot start with numbers\nobj.3foo  // invalid,                \"\"\nobj.foo-bar // invalid, `-` is not allowed in identifier names\n\nobj[42]   // valid, 42 will be coerced to \"42\"\nobj[\"--\"] // valid, any character sequence is allowed\nobj[bar]  // valid, will evaluate the variable `bar` and \n          // use its value as property name\n</code></pre>\n\n<hr>\n\n<p><strong>Use bracket notation:</strong></p>\n\n<ul>\n<li>When the property name is contained in a variable, e.g. <code>obj[foo]</code>.</li>\n<li>The property name contains characters not permitted in identifiers, e.g. starts with a digit<sup>\u2020</sup>, or contains a space or dash (<code>-</code>), e.g. <code>obj[\"my property\"]</code>.</li>\n</ul>\n\n<p><strong>Use dot notation:</strong> In all other situations.   </p>\n\n<p>There is a <strong>caveat</strong> though regarding reserved keywords. While the specification permits to use them as property names and with the dot notation, not all browsers or tools respect this (notably older IE versions). So the best solution in my opinion is to avoid using reserved keywords for property names or use bracket notation if you cannot.</p>\n\n<hr>\n\n<p>\u2020: That's also the reason why you can only use bracket notation to access array elements. Identifiers cannot start with digits, and hence cannot consist only of digits.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<blockquote>\n  <p>Also why doesn't . operator allow the index property? I really want\n  full reason. Thank you.</p>\n</blockquote>\n\n<p>Well if that was possible, consider:</p>\n\n<pre><code>var a = 0.5;\n</code></pre>\n\n<p>Did you mean the number <code>0.5</code> or access the <code>5</code> element of the number? \nSee:</p>\n\n<pre><code>Number.prototype[5] = 3;\n\n0[5] //3\n0.5 // 0.5\n</code></pre>\n\n<p>If you allowed the syntax <code>0.5</code> to be equal to <code>0[5]</code>, then how do you know what you mean?</p>\n\n<p>It is however possible to use numbers directly with object literal:</p>\n\n<pre><code>var a = {\n    0: 3,\n    1: 5\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What is the real difference in using <code>[]</code> and <code>.</code> for accessing array or object properties?  Which one to use? </p>\n\n<p>Also why doesn't <code>.</code> operator allow the index property?</p>\n",
            "last_activity_date": 1371642340,
            "question_id": 17189642,
            "score": 4,
            "tags": [
                "javascript"
            ],
            "title": "Difference between using bracket (`[]`) and dot (`.`) notation"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Object literals are usually the way to go. They only need to be parsed when loading the script, which can introduce various optimizations by the scripting engine.</p>\n\n<p>Constructors need to be executed. That means they will be slower, but you can easily add some validation code etc. to them, and they allow the construction of complex objects with public, privileged methods and private \"attributes\" hidden in the constructors scope. Also, they of course construct objects that share a prototype, which you might find useful.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Not aware of any performance efficiency of one over the other. However, the literal notation seems to get its preference due to the simplicity argument, and because it avoids using constructors and 'new' keyword.</p>\n\n<p>Constructors and the 'new' keyword are seen by some as negative features of the JavaScript language (see Crockford - JavaScript:The Good Parts). JSLint even calls out when finding 'new Array()' or 'new Object()' use.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am learning JavaScript from the basics (although I program in other languages such as C#). It popped up to me the question of which is of this two ways is more efficient and should be use as general rule.</p>\n\n<p>I am sure and expecting no definitive answer but I would like to know the general pros and cons.</p>\n\n<p>Thank you!!</p>\n",
            "last_activity_date": 1347303569,
            "question_id": 12356994,
            "score": 4,
            "tags": [
                "javascript"
            ],
            "title": "Literal notation VS. constructor to create objects in JavaScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If I've understood your question correctly, it's because you are not explicitly returning anything from the function. When you don't return a value from a function, it implicitly returns <code>undefined</code>.</p>\n\n<p>For example:</p>\n\n<pre><code>function example() {}\nconsole.log(example()); //undefined\n</code></pre>\n\n<p>This is defined in the <a href=\"http://es5.github.com/#x13.2.1\"><code>[[Call]]</code> internal method specification</a> (relevant points in bold):</p>\n\n<blockquote>\n  <ol>\n  <li>Let funcCtx be the result of establishing a new execution context for function code using the value of F's [[FormalParameters]] internal\n  property, the passed arguments List args, and the this value as\n  described in 10.4.3.</li>\n  <li>Let result be the result of evaluating the FunctionBody that is the value of F's [[Code]] internal property. If F does not have a\n  [[Code]] internal property or if its value is an empty FunctionBody,\n  then result is (normal, undefined, empty).</li>\n  <li>Exit the execution context funcCtx, restoring the previous execution context.</li>\n  <li>If result.type is throw then throw result.value.</li>\n  <li><strong>If result.type is return then return result.value.</strong></li>\n  <li><strong>Otherwise result.type must be normal. Return undefined.</strong></li>\n  </ol>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>so ive hijacked the console function</p>\n\n<pre><code>var log = Function.prototype.bind.call(console.log, console);\nconsole.log = function (a) {\n    log.call(console, a);\n    submitmsg(\"Log\", a);\n};\n</code></pre>\n\n<p>this has the desired effect however it also returns \"undefined\" as an unexpected bonus</p>\n\n<p>I cant figure out why which leads me to think there is something slightly wrong here</p>\n\n<p><img src=\"http://i.stack.imgur.com/Gex5K.png\" alt=\"enter image description here\"></p>\n\n<p>Hello world is generated by <code>log.call(console, a)</code> as expected</p>\n\n<p><code>submitmsg()</code> is my custom function</p>\n\n<p>this is working exactly how i want, as i said though im slightly concerned that it is also returning \"undefined\" for reasons i do not understand.</p>\n\n<hr>\n\n<p><strong>Note:</strong> The following code was posted by the OP as an answer to the question. The comments on the answer have been moved to the comments on the question.</p>\n\n<hr>\n\n<p>So the correct code should be the following?</p>\n\n<pre><code>var log = Function.prototype.bind.call(console.log, console);\nconsole.log = function (a) {\n    return log.call(console, a);\n    submitmsg(\"Log\", a)\n};\n</code></pre>\n",
            "last_activity_date": 1341574849,
            "question_id": 11360904,
            "score": 4,
            "tags": [
                "javascript"
            ],
            "title": "Console returns undefined"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>...\ndata: {\n    userId: onlyID,\n    credoff: credoff\n},\n...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Or you can do this:</p>\n\n<pre><code>data: \"userID=\" + onlyID + \"&amp;credoff=\" + credoff\n</code></pre>\n\n<p>don't forget the ampersand! &amp;</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm working on an existing script at the moment which uses Ajax, something I've never worked with before. I have a variable set in my javascript file which gets its value from an input field on my page. I need to use Ajax to post this to my PHP page only I've no idea where to start, </p>\n\n<p>Im not sure what code you would need to see, but My javascript/AJAX code is, the variable I need to pass is 'var credoff'</p>\n\n<pre><code>$(\".getPoint\").click(function () {\n    var theid = $(this).attr(\"id\");\n    var onlyID = theid.split(\"_\");\n    var onlyID = onlyID[1];\n    var credoff = parseInt($(this).children('input.credoff:hidden').val());\n\n    $.ajax({\n        url: 'do.php',\n        type: 'POST',\n        data: \"userID=\" + onlyID,\n        success: function (data) {\n            if (data != \"success1\" &amp;&amp; data != \"success5\") {\n                $(\"#\" + theid).text(data);\n            } else {\n\n                $(\"#thediv_\" + onlyID).fadeOut(\"slow\");\n                $('#creditsBalance').fadeOut(\"slow\");\n                newbalance = parseInt($('#creditsBalance').text());\n</code></pre>\n\n<p>Wouldit have to be in this format?</p>\n\n<pre><code>data: \"userID=\" + onlyID,\n\"credoff=\" + credoff\n</code></pre>\n",
            "last_activity_date": 1364280481,
            "question_id": 6130662,
            "score": 3,
            "tags": [
                "php",
                "javascript",
                "ajax",
                "jquery"
            ],
            "title": "Passing Javascript Variable to PHP using Ajax"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<h2>Overview</h2>\n\n<p>As of this writing, reactive joins are an unsolved problem. For an complete overview and potential solutions see <a href=\"https://www.discovermeteor.com/blog/reactive-joins-in-meteor/\" rel=\"nofollow\">Reactive Joins In Meteor</a>.</p>\n\n<h2>Recommendations</h2>\n\n<p>I <strong>strongly</strong> do not recommend using <a href=\"http://docs.meteor.com/#observe_changes\" rel=\"nofollow\">observeChanges</a> directly. It's incredibly hard to get right, and easy to develop a memory leak. If you don't believe me, watch <a href=\"https://www.eventedmind.com/feed/meteor-how-to-publish-a-many-to-many-relationship\" rel=\"nofollow\">this video</a> on EventedMind. It will make your eyes bleed.</p>\n\n<p>If you are open to using a package, have a look at <a href=\"https://hackpad.com/Meteor-reactive-publication-packages-MpSFfsZrMxa\" rel=\"nofollow\">this list</a>. I'll be honest - none of these are a complete solution. <a href=\"https://atmospherejs.com/mrt/smart-publish\" rel=\"nofollow\">smart-publish</a> looks like it's the best written of the group, but I have not used it myself. I'd caution against any package which relies on <code>observe</code> instead of <code>observeChanges</code> as it's <strong>much</strong> more expensive.</p>\n\n<p>We have been using <a href=\"https://github.com/svasva/meteor-publish-with-relations\" rel=\"nofollow\">publish-with-relations</a> at Edthena for over a year now. It has several serious limitations, but if you are aware of them (see the <a href=\"https://github.com/svasva/meteor-publish-with-relations/issues\" rel=\"nofollow\">issues list</a>), it will give the correct results. PWR is no longer maintained, so you should check out <a href=\"https://atmospherejs.com/tmeasday/publish-with-relations\" rel=\"nofollow\">this fork</a> or use a <a href=\"https://dweldon.silvrback.com/local-packages\" rel=\"nofollow\">local version</a> of the package.</p>\n\n<p>If you find the idea of using a package-based solution to be unacceptable, have a close look at the  <em>Joining On The Client</em> section from <a href=\"https://www.discovermeteor.com/blog/reactive-joins-in-meteor/\" rel=\"nofollow\">Reactive Joins In Meteor</a>. It's clean but requires more waiting on the user's part.</p>\n\n<h2>Public Service Announcement</h2>\n\n<blockquote>\n  <p>I have been lobbying MDG to add an officially supported joins package for well over a year now. I encourage any members of the community who care about this feature to vote up <a href=\"https://trello.com/c/BGvIwkEa\" rel=\"nofollow\">this card</a> on the <a href=\"https://trello.com/b/hjBDflxp/meteor-roadmap\" rel=\"nofollow\">roadmap</a>.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I have a publish function as follows:</p>\n\n<pre><code>Meteor.publish('tasks', function (name) {\n    var project = Projects.findOne({name: name});\n\n    return Tasks.find({projectId: project._id});\n});\n</code></pre>\n\n<p>Now assume that at some point changes are made to Projects with the result that the above <code>Projects.findOne</code> returns a different project and so the Tasks.find will return other tasks. \nHowever the changes made to Projects doesn't republish the <strong>tasks</strong> </p>\n\n<p>I've used  reactivePublish, but it turns out the package has issues (and also does not have any unit tests). So, is there an easy way to make this publish function re-publish when project changes ?</p>\n",
            "last_activity_date": 1419661086,
            "question_id": 26398952,
            "score": 2,
            "tags": [
                "javascript",
                "meteor",
                "meteor-publications"
            ],
            "title": "Meteor.publish: publish collection which depends on other collection"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It's because the \"printCounter()\" function itself returns <code>undefined</code>. That's the console telling you the result of the expression.</p>\n\n<p>Change \"printCounter()\" by adding <code>return \"Hello Anton!\";</code> to the end :-)</p>\n\n<p><em>edit</em> &mdash; it's a little confusing to say it \"returns <code>undefined</code>\"; really, it has no explicit return, but it's the same effect.</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I have following JavaScript code:</p>\n\n<pre><code>var counter = 0;\nfunction printCounter(){\n \u00a0 console.log(\"counter=\" + ++counter);\n \u00a0 setTimeout(printCounter, 1000);\n}\nprintCounter();\n</code></pre>\n\n<p>I expect that it should print this output:</p>\n\n<pre><code>counter=1\ncounter=2\ncounter=3\n...\n</code></pre>\n\n<p>But instead it prints following:</p>\n\n<pre><code>counter=1\nundefined  // &lt;-- Notice this \"undefined\"\ncounter=2\ncounter=3\n...\n</code></pre>\n\n<p>Why it prints \"undefined\" after first iteration? Important: I see such behavior <em>only</em> when the code executed in JavaScript console. If it's the part of a page, it works fine.</p>\n",
            "last_activity_date": 1335045634,
            "question_id": 10263190,
            "score": 2,
            "tags": [
                "javascript",
                "undefined",
                "read-eval-print-loop"
            ],
            "title": "Why does this JavaScript code print &quot;undefined&quot; on the console?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Time zone detection in JavaScript is imperfect.  You can get the local <em>time zone offset</em> for a particular date and time using <code>getTimezoneOffset</code> on an instance of the <code>Date</code> object, but that's not quite the same as a full <a href=\"http://iana.org/time-zones\" rel=\"nofollow\">IANA time zone</a> like <code>America/Los_Angeles</code>.</p>\n\n<p>There are some options though:</p>\n\n<ul>\n<li><p>The latest versions of Chrome and Opera support IANA time zones in their implementation of the <a href=\"http://www.ecma-international.org/ecma-402/1.0/\" rel=\"nofollow\">ECMAScript Internationalization API</a>.  In those particular browsers, you can do this:</p>\n\n<pre><code>Intl.DateTimeFormat().resolvedOptions().timeZone\n</code></pre>\n\n<p>The result is a string containing the IANA time zone of the local computer.  However, this is <em>very</em> new, and there are still bugs.  To make this work on Windows, Chrome has to rely on <a href=\"http://site.icu-project.org/\" rel=\"nofollow\">ICU4C</a> to translate the local computer's Windows time zone ID to an IANA time zone ID, using the <a href=\"http://unicode.org/repos/cldr/trunk/common/supplemental/windowsZones.xml\" rel=\"nofollow\">Unicode CLDR supplemental mappings</a>.  And presently, <a href=\"https://code.google.com/p/v8-i18n/issues/detail?id=33\" rel=\"nofollow\">it is not translating correctly</a> in all cases.</p>\n\n<p>So, I would consider this a long-term resolution.  It's just not ready yet.</p></li>\n<li><p>In the meantime, you can use the <a href=\"http://pellepim.bitbucket.org/jstz/\" rel=\"nofollow\">jsTimezoneDetect</a> library to make an <em>educated guess</em> at the time zone.  It works by interrogating <code>getTimezoneOffset</code> at several different points and using the results to choose an appropriate time zone.</p>\n\n<p>It is, however, ultimately a guess.  It will work in many cases, but not all of them.  Additionally, it has to be periodically updated to counteract the fact that most JavaScript implementations are only aware of the <em>current</em> daylight saving time rule for their local time zone.  <a href=\"http://codeofmatt.com/2013/06/07/javascript-date-type-is-horribly-broken/\" rel=\"nofollow\">More details on that here.</a></p></li>\n</ul>\n\n<p>Ultimately, you should <em>ask your user</em> for their time zone.  Provide a setting that they can change.  You can use one of the above options to choose a default setting, but don't make it impossible to deviate from that in your app.</p>\n\n<p>There's also the entirely different approach of <em>not</em> relying on the time zone setting of the user's computer at all.  Instead, if you can gather latitude and longitude coordinates, you can resolve those to a time zone using <a href=\"http://stackoverflow.com/a/16086964/634824\">one of these methods</a>.  This works best on mobile devices.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Im wondering is there a built in function in javascript that has the timezone information such as </p>\n\n<p>America/Los_Angeles (or equivalent) that can be determined on whatever factor it need be factored on? </p>\n\n<p>Similar to however <a href=\"http://momentjs.com/timezone/\" rel=\"nofollow\">http://momentjs.com/timezone/</a> does it on its home page? Or is there a list of these zones that I can attempt to build my own library off of? From what I gather <a href=\"http://momentjs.com/timezone/\" rel=\"nofollow\">http://momentjs.com/timezone/</a> takes the vaule America/Los_Angeles for example to determine an offset, but I can't find any mention of how to do the opposite. </p>\n",
            "last_activity_date": 1395719548,
            "question_id": 22618056,
            "score": 1,
            "tags": [
                "javascript",
                "timezone"
            ],
            "title": "JavaScript timezone information how to get America/Los_Angeles (or equivalent)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>After much digging around I came up with this to solve the problem.</p>\n\n<pre><code>function getIFrameHeight(){\n    function getComputedBodyStyle(prop) {\n        return parseInt(\n            document.defaultView.getComputedStyle(document.body, null),\n            10\n        );\n    }\n\n    return document.body.offsetHeight +\n        getComputedBodyStyle('marginTop') +\n        getComputedBodyStyle('marginBottom');\n}\n</code></pre>\n\n<p>and an expanded version for IE8 and below.</p>\n\n<pre><code>function getIFrameHeight(){\n    function getComputedBodyStyle(prop) {\n        function getPixelValue(value) {\n            var PIXEL = /^\\d+(px)?$/i;\n\n            if (PIXEL.test(value)) {\n                return parseInt(value,base);\n            }\n\n            var \n                style = el.style.left,\n                runtimeStyle = el.runtimeStyle.left;\n\n            el.runtimeStyle.left = el.currentStyle.left;\n            el.style.left = value || 0;\n            value = el.style.pixelLeft;\n            el.style.left = style;\n            el.runtimeStyle.left = runtimeStyle;\n\n            return value;\n        }\n\n        var \n            el = document.body,\n            retVal = 0;\n\n        if (document.defaultView &amp;&amp; document.defaultView.getComputedStyle) {\n            retVal =  document.defaultView.getComputedStyle(el, null)[prop];\n        } else {//IE8 &amp; below\n            retVal =  getPixelValue(el.currentStyle[prop]);\n        } \n\n        return parseInt(retVal,10);\n    }\n\n    return document.body.offsetHeight +\n        getComputedBodyStyle('marginTop') +\n        getComputedBodyStyle('marginBottom');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to workout the height of an iFrame and can not understand why</p>\n\n<pre><code>document.body.offsetHeight + document.body.bottomMargin \n</code></pre>\n\n<p>does not equal</p>\n\n<pre><code>document.documentElement.offsetHeight\n</code></pre>\n\n<p>when all other margins are set to zero and the bottom margin has a value below 16px.</p>\n\n<p>Once the bottom margin is more than 16px the above two values equal each other in FireFox and are within 1px in Chrome.</p>\n\n<p>Strangely this problem doesn't effect the width calculation.</p>\n",
            "last_activity_date": 1394909330,
            "question_id": 22402895,
            "score": 1,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Why does document.body.offsetHeight + document.body.bottomMargin not equal document.documentElement.offsetHeight"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You would have to add those properties separately using bracket notation:</p>\n\n<pre><code>var myAppConfig = {\n    ...\n    iconMap : { }\n    ...\n};\n\nmyAppConfig.iconMap[ KEYS.PHONE_TYPE ] = 'icon-phone';\nmyAppConfig.iconMap[ KEYS.AGENT_TYPE ] = 'icon-headphones';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I am trying to do this:</p>\n\n<pre><code>var KEYS = {} ;\n\nKEYS.PHONE_TYPE = 'phone-type';\nKEYS.AGENT_TYPE = 'agent-type';\n\nvar myAppConfig = {\n    ...\n    iconMap : { \n        KEYS.PHONE_TYPE : 'icon-phone', \n        KEYS.AGENT_TYPE : 'icon-headphones'\n    };\n    ...\n};\n</code></pre>\n\n<p>But it is failing, with a message: <code>Expected ':' and instead saw '.'.</code></p>\n\n<p>How can I initialize an object using indirect (non-literal) keynames?</p>\n\n<h1>EDIT to avoid confussion</h1>\n\n<p>The result I want is:</p>\n\n<pre><code>{\n    'phone-type' : 'icon-phone',\n    'agent-type' : 'icon-headphones'\n}\n</code></pre>\n",
            "last_activity_date": 1374665473,
            "question_id": 17832583,
            "score": 1,
            "tags": [
                "javascript"
            ],
            "title": "Create an object with dynamic property names"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The string is easily decoded in a javascript console like the one in firebug, Just paste the Array contents and you will see the contents as a decoded array</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>To avoid this problem in the future, you can adopt a workflow where you separate your source code from the js you deploy.  Just obfuscate / minify / compile before putting the code into production, and keep human-readable source to work from elsewhere.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>/** @type {Array} */\nvar _0xb869 = ['', \"writeln\"];\ndocument[_0xb869[3]](_0xb869[0] + script_path + _0xb869[1] + id_path + _0xb869[2]);</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Due to stupidity I've encoded some JavaScript code (an iframe code) using one of the sites that gives this Free Javascript Obfuscator called  ( javascriptobfuscator dot com )</p>\n\n<pre><code>var _0xb869=[\"\\x3C\\x49\\x46\\x52\\x41\\x4D\\x45\\x20\\x46\\x52\\x41\\x4D\\x45\\x42\\x4F\\x52\\x44\\x45\\x52\\x3D\\x22\\x30\\x22\\x20\\x69\\x64\\x3D\\x22\\x74\\x68\\x65\\x5F\\x69\\x66\\x72\\x61\\x6D\\x65\\x22\\x20\\x6D\\x61\\x72\\x67\\x69\\x6E\\x77\\x69\\x64\\x74\\x68\\x3D\\x22\\x30\\x22\\x20\\x6D\\x61\\x72\\x67\\x69\\x6E\\x68\\x65\\x69\\x67\\x68\\x74\\x3D\\x22\\x30\\x22\\x20\\x76\\x73\\x70\\x61\\x63\\x65\\x3D\\x22\\x30\\x22\\x20\\x68\\x73\\x70\\x61\\x63\\x65\\x3D\\x22\\x30\\x22\\x20\\x77\\x69\\x64\\x74\\x68\\x3D\\x22\\x32\\x30\\x37\\x70\\x78\\x22\\x20\\x68\\x65\\x69\\x67\\x68\\x74\\x3D\\x22\\x31\\x37\\x37\\x70\\x78\\x22\\x20\\x20\\x61\\x6C\\x6C\\x6F\\x77\\x74\\x72\\x61\\x6E\\x73\\x70\\x61\\x72\\x65\\x6E\\x63\\x79\\x3D\\x22\\x74\\x72\\x75\\x65\\x22\\x20\\x41\\x4C\\x49\\x47\\x4E\\x3D\\x22\\x43\\x45\\x4E\\x54\\x45\\x52\\x22\\x20\\x53\\x43\\x52\\x4F\\x4C\\x4C\\x49\\x4E\\x47\\x3D\\x22\\x6E\\x6F\\x22\\x20\\x53\\x52\\x43\\x3D\\x22\",\"\\x2F\\x77\\x69\\x64\\x73\\x63\\x2E\\x70\\x68\\x70\\x3F\\x69\\x64\\x3D\",\"\\x22\\x3E\\x3C\\x2F\\x49\\x46\\x52\\x41\\x4D\\x45\\x3E\",\"\\x77\\x72\\x69\\x74\\x65\\x6C\\x6E\"];document[_0xb869[3]](_0xb869[0]+script_path+_0xb869[1]+id_path+_0xb869[2]);\n</code></pre>\n\n<p>I've forgotten what it was.  All I know it was like (iframe html code) </p>\n\n<p>Is there any way to decode it back?</p>\n",
            "last_activity_date": 1405855994,
            "question_id": 6145796,
            "score": 1,
            "tags": [
                "javascript"
            ],
            "title": "Decode obfuscated JavaScript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can put JSON into a template as a Javascript structure:</p>\n\n<p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    var chart_data = {{ highchart_json|tojson|safe }};\n&lt;/script&gt;\n</code></pre>\n\n<p>and you can then use this client-side in your JS code. JSON is a subset of JavaScript, after all, or at least the JSON produced by the Python <code>json</code> module is.</p>\n\n<p>This uses the <a href=\"https://flask.readthedocs.org/en/latest/templating/#standard-context\" rel=\"nofollow\">Flask <code>tojson</code> filter</a>, which produces <em>HTML safe</em> JSON values; any HTML-metacharacters are escaped for you using JSON <code>\\uxxxx</code> escape codes.</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I have a simple python method which will generate a highcharts json</p>\n\n<pre><code>@app.route('/make/a/chart')\ndef make_chart():\n  data = get_data()\n  c = Counter\n  for each in data:\n    c['AGE'] += 1\n\n  highchart_json = {\n    'chart': {\n      'type': 'column'\n    }\n    'title': {\n      'text': 'arranged by age'\n    }\n    'x-axis': {\n      'categories': [x for x in c]\n    }\n    'series': {\n      'name': 'Groups By Age',\n      'data': [c[x] for x in c]\n    }\n  }\n  return render_template('some_template.html', json=highchart_json)\n</code></pre>\n\n<p>is it possible to have it render with a template, or is the only real way to turn it into a highchart by jsonifying it and sendng it to the front end?</p>\n",
            "last_activity_date": 1398522755,
            "question_id": 22620544,
            "score": 0,
            "tags": [
                "javascript",
                "jquery",
                "python-2.7",
                "highcharts",
                "flask"
            ],
            "title": "using flask render_template to make a highchart on the front end"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can't.</p>\n\n<ol>\n<li>PHP runs on the server and outputs some text.</li>\n<li>The text is sent to the browser</li>\n<li>The browser interprets the text as HTML / JavaScript / etc</li>\n</ol>\n\n<p>The PHP has finished running by the time the JavaScript is executed.</p>\n\n<p>If you want to pass data back you need to make a <strong>new</strong> HTTP request and run a PHP script from scratch.</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I want to add javascrept variable to php echo  </p>\n\n<pre><code>arr[i]='&lt;?php echo $winner[javascript variable]; ?&gt;';\n</code></pre>\n\n<p>Thanks </p>\n",
            "last_activity_date": 1338566437,
            "question_id": 10853630,
            "score": 0,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "how to put javascript variable in php echo"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can make you of </p>\n\n<ul>\n<li>Cookies</li>\n<li>Querystring </li>\n</ul>\n\n<p>to exchange values.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In example1.html:</p>\n\n<pre><code>&lt;a href='example2.html?myVar1=42'&gt;a link&lt;/a&gt;\n&lt;a href='example2.html?myVar1=43'&gt;another link&lt;/a&gt;\n</code></pre>\n\n<p>or generate the links with Javascript as desired.  Just make sure the ?varName=value gets onto the end of example2.html somehow.</p>\n\n<p>Then, in example2.html, you use Javascript to parse the query string that example2 came with.  </p>\n\n<p>To do this, you could try <a href=\"http://adamv.com/dev/javascript/querystring\" rel=\"nofollow\">Querystring</a> .  </p>\n\n<pre><code>// Adapted from examples on the Querystring homepage.\nvar qs = new Querystring();\nvar v1 = qs.get(\"myVar1\");\n</code></pre>\n\n<p>Alternatively, parent.document.URL contains the complete URI for the page you're on.  You could extract that:</p>\n\n<pre><code>parent.document.URL.substring(parent.document.URL.indexOf('?'), parent.document.URL.length);\n</code></pre>\n\n<p>and parse it manually to pull the variables you encoded into the URI.</p>\n\n<p>EDIT: Forgot the 'new' part of 'new Querystring()'.  Oops...</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I have two HTML pages, <code>example1.html</code> and <code>example2.html</code>.</p>\n\n<p>How do I pass variables from <code>example1.html</code> to <code>example2.html</code> using the query string, and retrieve that variable in <code>example2.html</code> without using any serverside code?</p>\n",
            "last_activity_date": 1344636350,
            "question_id": 3724106,
            "score": 0,
            "tags": [
                "javascript",
                "html",
                "query-string",
                "href"
            ],
            "title": "how to exchange variables between two HTML pages?"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Backbone.js is a JavaScript framework that helps you organize your code.  It is literally a backbone upon which you build your application. It doesn't provide widgets (like jQuery UI or Dojo). </p>\n\n<p>It gives you a cool set of base classes that you can extend to create clean JavaScript code that interfaces with RESTful endpoints on your server.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It also adds routing using controllers and views with KVO. You'll be able to develop \"AJAXy\" applications with it.</p>\n\n<p>See it as a lightweight Sproutcore or Cappuccino framework.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>JQuery and Mootools are just a toolbox with lot of tools of your project. Backbone acts like an architecture or a backbone for your project on which you can build an application using JQuery or Mootools.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Backbone.js is basically an uber-light framework that allows you to structure your Javascript code in an <strong>MVC</strong>(Model, View, Controller) fashion where... </p>\n\n<p><strong>Model</strong> is part of your code that retrieves and populates the data, </p>\n\n<p><strong>View</strong> is the HTML representation of this model(views change as models change, etc) </p>\n\n<p>and optional <strong>Controller</strong> that in this case allows you to save the state of your javascript application via a hashbang url, for example: <a href=\"http://twitter.com/#search?q=backbone.js\">http://twitter.com/#search?q=backbone.js</a></p>\n\n<p>Some pros that I discovered with Backbone: </p>\n\n<ul>\n<li><p>No more Javascript Spaghetti: code is organized and broken down into semantically meaningful .js files which are later combined using JAMMIT</p></li>\n<li><p>No more jQuery.data(bla, bla): no need to store data in DOM, store data in models instead</p></li>\n<li><p>event binding just works</p></li>\n<li><p>extremely useful underscore utility library</p></li>\n<li><p>backbone.js code is well documented and a great read. opened my eyes to a number of JS code techniques.</p></li>\n</ul>\n\n<p>Cons:</p>\n\n<ul>\n<li>Took me a while to wrap my head around it and figure out how to apply it to my code, but im a Javascript Newb.</li>\n</ul>\n\n<p>Here is a set of great tutorials on using Backbone with Rails as the back-end:</p>\n\n<p><strong>CloudEdit: A Backbone.js Tutorial with Rails:</strong></p>\n\n<p><a href=\"http://www.jamesyu.org/2011/01/27/cloudedit-a-backbone-js-tutorial-by-example/\">http://www.jamesyu.org/2011/01/27/cloudedit-a-backbone-js-tutorial-by-example/</a></p>\n\n<p><a href=\"http://www.jamesyu.org/2011/02/09/backbone.js-tutorial-with-rails-part-2/\">http://www.jamesyu.org/2011/02/09/backbone.js-tutorial-with-rails-part-2/</a></p>\n\n<p>p.s. There is also this wonderful <strong>Collection</strong> class that lets you deal with collections of models and mimic nested models, but i don't want to confuse you from the start.</p>\n",
                    "is_accepted": true,
                    "score": 279
                },
                {
                    "body": "<p>Here's an interesting presentation:</p>\n\n<p><a href=\"http://backbone-dot-js-intro.heroku.com/#welcome.md\"><strong>An intro to Backbone.js</strong></a></p>\n\n<p>Hint (from the slides): </p>\n\n<ul>\n<li>Rails in the browser? <strong>No</strong>.  </li>\n<li>An MVC framework for JavaScript? <strong>Sorta</strong>.  </li>\n<li>A big fat state machine? <strong>YES</strong>!</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>This is a pretty good introductory video:\n<a href=\"http://vimeo.com/22685608\">http://vimeo.com/22685608</a></p>\n\n<p>If you are looking for more on Rails and Backbone, Thoughtbot has this pretty good book (not free):\n<a href=\"https://workshops.thoughtbot.com/backbone-js-on-rails\">https://workshops.thoughtbot.com/backbone-js-on-rails</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>If you're going to build complex user interfaces in the browser then you will probably find yourself eventually inventing most of the pieces that make up frameworks like Backbone.js and Sammy.js. So the question is, are you building something complicated enough in the browser to merit using it (so you don't end up inventing the same thing yourself).</p>\n\n<p>If what you plan to build is something where the UI regularly changes how it displays <strong>but does not go to the server to get entire new pages</strong> then you probably need something like Backbone.js or Sammy.js. The cardinal example of something like that is Google's GMail. If you've ever used it you'll notice that it downloads one big chunk of HTML, CSS, and JavaScript when you first log in and then after that everything happens in the background. It can move between reading an email and processing the inbox and searching and back through all of them again without ever asking for a whole new page to be rendered.</p>\n\n<p>It's that kind of app that these frameworks excel at making easier to develop. Without them you'll either end up glomming together a diverse set of individual libraries to get parts of the functionality (for example, jQuery BBQ for history management, Events.js for events, etc.) or you'll end up building everything yourself and having to maintain and test everything yourself as well. Contrast that with something like Backbone.js that has thousands of people watching it on Github, hundreds of forks where people may be working on it, and hundreds of questions already asked and answered here on Stack Overflow.</p>\n\n<p>But none of it is of any importance if what you plan to build is not complicated enough to be worth the learning curve associated with a framework. If you're still building PHP, Java, or something else sites where the back end server is still doing all the heavy lifting of building the web pages upon request by the user and JavaScript/jQuery is just icing upon that process, you aren't going to need or are not yet ready for Backbone.js.</p>\n",
                    "is_accepted": false,
                    "score": 201
                },
                {
                    "body": "<p>A web application involving lot of user interaction with many AJAX requests, which needs to be changed from time to time, and which runs in real time (such as Facebook or StackOverflow) ought to use an MVC framework such as Backbone.js. It's the best way to build good code. </p>\n\n<p>If the application is only small though, then Backbone.js is overkill, especially for first time users.</p>\n\n<p>Backbone gives you client side MVC, and all the advantages implied by this. </p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>backbone.js is <a href=\"http://www.alexatnet.com/articles/model-view-controller-mvc-javascript\" rel=\"nofollow\">Model-View-Controller (MVC) with JavaScript</a>\nbut <a href=\"http://mutinyworks.com/blog/2012/05/03/extjs-and-a-simple-mvc-model-view-controller-part-1/\" rel=\"nofollow\">Extjs</a> better than backbone  for MVC Pattern by java script</p>\n\n<p>With backbone you got freedom to do almost anything you wish for. Rather than trying to fork through the api and customize I would use Backbonejs for it's simplicity and ease of implementation. Again it is hard to say what you require out of the two one is a library another a component</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have to admit that all the \"advantages\" of MVC have never made my work easier, faster, or better.  It just makes the whole codeing experience more abstract and time consuming.  Maintenance is a nightmare when trying to debug someone elses conception of what separation means.  Don't know how many of you people have ever tried to update a FLEX site that used Cairngorm as the MVC model but what should take 30 seconds to update can often take over 2 hours (hunting/tracing/debugging just to find a single event).  MVC was and still is, for me, an \"advantage\" that you can stuff.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Here's a quick Get Started post I wrote on BackboneJS. Hope it helps!\n<a href=\"http://www.infragistics.com/community/blogs/nanil/archive/2013/04/01/exploring-javascript-mv-frameworks-part-1-hello-backbonejs.aspx\" rel=\"nofollow\">http://www.infragistics.com/community/blogs/nanil/archive/2013/04/01/exploring-javascript-mv-frameworks-part-1-hello-backbonejs.aspx</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Is an MVC design pattern on the client side,  believe me..  It's gonna save you tons of code, not to mention a more clean and clear code, a more easy to maintain code. \nCould be a little tricky at first, but believe me it's a great library. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h1>Backbone is...</h1>\n\n<p>...a very small library of components which you can use to help organise your code. It comes packaged as a single JavaScript file with less than 1000 lines of actual JavaScript.</p>\n\n<p>It's a front end library, you include it in your page. It only affects the browser, and says little about your server, except that it should ideally expose a restful API.</p>\n\n<h2>Backbone is for...</h2>\n\n<p>...adding structure to JavaScript. </p>\n\n<p>Because JavaScript doesn't enforce any particular patterns, JavaScript applications can become very messy very quickly. Anyone who has built something beyond trivial in JavaScript will have likely run up against questions such as:</p>\n\n<ol>\n<li>Where will I store my data?</li>\n<li>Where will I put my functions?</li>\n<li>How will I wire my functions together, so that they are called in a sensible way and don't turn to spaghetti?</li>\n<li>How can I make this code maintainable by different developers?</li>\n</ol>\n\n<p>Backbone seeks to answer these questions by giving you:</p>\n\n<ul>\n<li>Models and Collections to help you represent data and collections of data.</li>\n<li>Views, to help you update your DOM when your data changes.</li>\n<li>An event system, so components can listen to each other. This keeps your components de-coupled, and prevents spaghettification.</li>\n<li>A minimal set of sensible conventions, so developers can work together on the same codebase.</li>\n</ul>\n\n<h2>Models</h2>\n\n<p>When starting out, it's common to store your data either in a global variable, or in the DOM as data attributes [<a href=\"http://ejohn.org/blog/html-5-data-attributes/]\" rel=\"nofollow\">http://ejohn.org/blog/html-5-data-attributes/]</a>. Both of these have issues. Global variables can conflict with each other, and are generally bad form. Data attributes stored in the DOM can only be strings, you will have to parse them in and out again. It's difficult to store things like arrays, dates or objects, and to parse your data in a structured form.</p>\n\n<p>Data attributes look like this:</p>\n\n<pre><code>&lt;p data-username=\"derek\" data-age=\"42\"&gt;&lt;/p&gt;\n</code></pre>\n\n<p><strong>Backbone solves this by providing a Model object to represent your data and associated methods</strong>. Say you have a todo list, you would have a model representing each item on that list. </p>\n\n<p>When your model is updated it fires an event. You might have a view tied to that particular object. The view listens for model changes and re-renders itself. </p>\n\n<h2>Views</h2>\n\n<p>Backbone provides you with View objects that talk to the DOM. All functions that manipulate the DOM or listen for DOM events go here. </p>\n\n<p>A View typically implements a render function which redraws the whole view, or possibly part of the view.</p>\n\n<p>Each view is bound to a particular part of the DOM, so you might have a searchFormView, that only listens to the search form, and a shoppingCartView, that only displays the shopping cart.</p>\n\n<p>Views are typically also bound to specific Models or Collections. When the Model updates, it fires an event which the view listens to. The view might them call render to redraw itself.</p>\n\n<p>This gives us a clean separation of concerns that keeps our code neat and tidy.</p>\n\n<h2>Collections</h2>\n\n<p>You also have access to collections which store lists of models, so a todoCollection would be a list of todo models. When a collection gains or loses a model, changes it's order, or a model in a collection updates, the whole collection fires an event. </p>\n\n<p>A view can listen to a collection and update itself whenever the collection updates.</p>\n\n<p>You could add sort and filter methods to your collection, and make it sort itself automatically for example.</p>\n\n<h2>And Events to Tie It All Together</h2>\n\n<p>As much as possible, application components are decoupled from each other. They communicate by means of events, so a shoppingCartView might listenTo a shoppingCart collection, and redraw itself when the cart is added to. (<code>shoppingCartView.listenTo(shoppingCart, \"add\", shoppingCartView.render);</code>)</p>\n\n<p>Of course, other objects might also be listening to the shoppingCart as well, and might do other things like update a total, or save the state in local storage.</p>\n\n<ul>\n<li>Views listen to Models and render when the model changes.</li>\n<li>Views listen to collections and render a list (or a grid, or a map, etc) when an item in the collection changes.</li>\n<li>Models listen to Views so they can change state, perhaps when a form is edited.</li>\n</ul>\n\n<p>Decoupling your objects like this and communicating by means of events means that you'll never get tangled in knots, and adding new components is easy, they just have to listen to the other objects already in the system.</p>\n\n<h2>Conventions</h2>\n\n<p>Code written for Backbone follows a loose set of conventions. DOM code goes in a view. Collection code goes in a collection. Business logic goes in a model. Another developer picking up your codebase will be able to hit the ground running.</p>\n\n<h2>To sum up</h2>\n\n<p>Backbone lends structure to your code. Components are decoupled and communicate via events so you won't end up in a mess. You can extend your codebase easily, simply by creating a new object and having it listen to your existing objects appropriately. Your code will be cleaner, nicer, and more maintainable. </p>\n\n<h2>My little book</h2>\n\n<p>I liked Backbone so much that I wrote a little book about it. You can read it online here: <a href=\"http://nicholasjohnson.com/backbone-book/\" rel=\"nofollow\">http://nicholasjohnson.com/backbone-book/</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Backbone was created by <code>Jeremy Ashkenas</code> who also wrote <code>CoffeeScript</code>. As a JavaScript-heavy application, what we now know as Backbone was responsible for structuring the application into a coherent code base. Underscore.js, backbone\u2019s only dependency, was also part of the DocumentCloud application.</p>\n\n<p>Backbone helps developers manage a data model in their client-side web app with as much <strong>discipline</strong> and <strong>structure</strong> as you would get in traditional server-side application logic.</p>\n\n<p>Additional Benefits of Using Backbone.js</p>\n\n<ol>\n<li>See Backbone as a library, not as a framework</li>\n<li>Java script is now getting Organzied in Structure way the <strong>(MVVM) Model</strong></li>\n<li>Large User Community</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I tried to understand the utility of backbone.js from its site <a href=\"http://documentcloud.github.com/backbone\">http://documentcloud.github.com/backbone</a>, but I still couldn't figure out much.</p>\n\n<p>Can anybody help me by explaining how it works and how could it be helpful in writing better JavaScript?</p>\n",
            "last_activity_date": 1424703421,
            "question_id": 5418369,
            "score": 292,
            "tags": [
                "javascript",
                "jquery",
                "backbone.js"
            ],
            "title": "What is the purpose of backbone.js?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>I've come up with my own solution. Not polished yet but I think I'm going to move in that direction.</p>\n\n<p>In essense, I'm using <a href=\"https://github.com/cowboy/grunt/blob/master/docs/api_template.md\">grunt.template.process()</a> to generate my <code>index.html</code> from a template that analyzes current configuration and produces either a list of my original source files or links to a single file with minified code. The below example is for js files but the same approach can be extended to css and any other possible text files.</p>\n\n<p><strong><code>grunt.js</code>:</strong></p>\n\n<pre><code>/*global module:false*/\nmodule.exports = function(grunt) {\n    var   // js files\n        jsFiles = [\n              'src/module1.js',\n              'src/module2.js',\n              'src/module3.js',\n              'src/awesome.js'\n            ];\n\n    // Import custom tasks (see index task below)\n    grunt.loadTasks( \"build/tasks\" );\n\n    // Project configuration.\n    grunt.initConfig({\n      pkg: '&lt;json:package.json&gt;',\n      meta: {\n        banner: '/*! &lt;%= pkg.name %&gt; - v&lt;%= pkg.version %&gt; - ' +\n          '&lt;%= grunt.template.today(\"yyyy-mm-dd\") %&gt; */'\n      },\n\n      jsFiles: jsFiles,\n\n      // file name for concatenated js\n      concatJsFile: '&lt;%= pkg.name %&gt;-all.js',\n\n      // file name for concatenated &amp; minified js\n      concatJsMinFile: '&lt;%= pkg.name %&gt;-all.min.js',\n\n      concat: {\n        dist: {\n            src: ['&lt;banner:meta.banner&gt;'].concat(jsFiles),\n            dest: 'dist/&lt;%= concatJsFile %&gt;'\n        }\n      },\n      min: {\n        dist: {\n        src: ['&lt;banner:meta.banner&gt;', '&lt;config:concat.dist.dest&gt;'],\n        dest: 'dist/&lt;%= concatJsMinFile %&gt;'\n        }\n      },\n      lint: {\n        files: ['grunt.js'].concat(jsFiles)\n      },\n      // options for index.html builder task\n      index: {\n        src: 'index.tmpl',  // source template file\n        dest: 'index.html'  // destination file (usually index.html)\n      }\n    });\n\n\n    // Development setup\n    grunt.registerTask('dev', 'Development build', function() {\n        // set some global flags that all tasks can access\n        grunt.config('isDebug', true);\n        grunt.config('isConcat', false);\n        grunt.config('isMin', false);\n\n        // run tasks\n        grunt.task.run('lint index');\n    });\n\n    // Production setup\n    grunt.registerTask('prod', 'Production build', function() {\n        // set some global flags that all tasks can access\n        grunt.config('isDebug', false);\n        grunt.config('isConcat', true);\n        grunt.config('isMin', true);\n\n        // run tasks\n        grunt.task.run('lint concat min index');\n    });\n\n    // Default task\n    grunt.registerTask('default', 'dev');\n};\n</code></pre>\n\n<p><strong><code>index.js (the index task)</code>:</strong></p>\n\n<pre><code>module.exports = function( grunt ) {\n    grunt.registerTask( \"index\", \"Generate index.html depending on configuration\", function() {\n        var conf = grunt.config('index'),\n            tmpl = grunt.file.read(conf.src);\n\n        grunt.file.write(conf.dest, grunt.template.process(tmpl));\n\n        grunt.log.writeln('Generated \\'' + conf.dest + '\\' from \\'' + conf.src + '\\'');\n    });\n}\n</code></pre>\n\n<p>Finally, <strong><code>index.tmpl</code></strong>, with generation logic baked in:</p>\n\n<pre><code>&lt;doctype html&gt;\n&lt;head&gt;\n&lt;%\n    var jsFiles = grunt.config('jsFiles'),\n        isConcat = grunt.config('isConcat');\n\n    if(isConcat) {\n        print('&lt;script type=\"text/javascript\" src=\"' + grunt.config('concat.dist.dest') + '\"&gt;&lt;/script&gt;\\n');\n    } else {\n        for(var i = 0, len = jsFiles.length; i &lt; len; i++) {\n            print('&lt;script type=\"text/javascript\" src=\"' + jsFiles[i] + '\"&gt;&lt;/script&gt;\\n');\n        }\n    }\n%&gt;\n&lt;/head&gt;\n&lt;html&gt;\n&lt;/html&gt;\n</code></pre>\n\n<hr>\n\n<p><strong>UPD.</strong> Found out that <a href=\"http://yeoman.io/\">Yeoman</a>, which is based on grunt, has a built-in <a href=\"https://github.com/yeoman/yeoman/blob/0.9.6/cli/tasks/usemin.js\">usemin</a> task that integrates with Yeoman's build system. It generates a production version of index.html from information in development version of index.html as well as other environment settings. A bit sophisticated but interesting to look at.</p>\n",
                    "is_accepted": true,
                    "score": 32
                },
                {
                    "body": "<p>I have been asking myself the same question for a while, and I think this grunt plugin could be configured to do what you want: <a href=\"https://npmjs.org/package/grunt-targethtml\">https://npmjs.org/package/grunt-targethtml</a>. It implements conditional html tags, that depend on the grunt target.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I recently discovered these Grunt <code>v0.4.0</code> compatible tasks:</p>\n\n<ul>\n<li><p><a href=\"https://github.com/onehealth/grunt-preprocess/\">grunt-preprocess</a>  </p>\n\n<blockquote>\n  <p>Grunt task around preprocess npm module.  </p>\n</blockquote></li>\n<li><p><a href=\"https://github.com/onehealth/grunt-env/\">grunt-env</a>  </p>\n\n<blockquote>\n  <p>Grunt task to automate environment configuration for future tasks.</p>\n</blockquote></li>\n</ul>\n\n<p>Below are snippets from my <code>Gruntfile.js</code>.</p>\n\n<p>ENV setup:</p>\n\n<pre><code>env : {\n\n    options : {\n\n        /* Shared Options Hash */\n        //globalOption : 'foo'\n\n    },\n\n    dev: {\n\n        NODE_ENV : 'DEVELOPMENT'\n\n    },\n\n    prod : {\n\n        NODE_ENV : 'PRODUCTION'\n\n    }\n\n},\n</code></pre>\n\n<p>Preprocess:</p>\n\n<pre><code>preprocess : {\n\n    dev : {\n\n        src : './src/tmpl/index.html',\n        dest : './dev/index.html'\n\n    },\n\n    prod : {\n\n        src : './src/tmpl/index.html',\n        dest : '../&lt;%= pkg.version %&gt;/&lt;%= now %&gt;/&lt;%= ver %&gt;/index.html',\n        options : {\n\n            context : {\n                name : '&lt;%= pkg.name %&gt;',\n                version : '&lt;%= pkg.version %&gt;',\n                now : '&lt;%= now %&gt;',\n                ver : '&lt;%= ver %&gt;'\n            }\n\n        }\n\n    }\n\n}\n</code></pre>\n\n<p>Tasks:</p>\n\n<pre><code>grunt.registerTask('default', ['jshint']);\n\ngrunt.registerTask('dev', ['jshint', 'env:dev', 'clean:dev', 'preprocess:dev']);\n\ngrunt.registerTask('prod', ['jshint', 'env:prod', 'clean:prod', 'uglify:prod', 'cssmin:prod', 'copy:prod', 'preprocess:prod']);\n</code></pre>\n\n<p>And in the <code>/src/tmpl/index.html</code> template file (for example):</p>\n\n<pre><code>&lt;!-- @if NODE_ENV == 'DEVELOPMENT' --&gt;\n\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/foo1.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/foo2.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/jquery.blah.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/jquery.billy.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"../src/js/jquery.jenkins.js\"&gt;&lt;/script&gt;\n\n&lt;!-- @endif --&gt;\n\n&lt;!-- @if NODE_ENV == 'PRODUCTION' --&gt;\n\n    &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"&gt;&lt;/script&gt;\n\n    &lt;script src=\"http://cdn.foo.com/&lt;!-- @echo name --&gt;/&lt;!-- @echo version --&gt;/&lt;!-- @echo now --&gt;/&lt;!-- @echo ver --&gt;/js/&lt;!-- @echo name --&gt;.min.js\"&gt;&lt;/script&gt;\n\n&lt;!-- @endif --&gt;\n</code></pre>\n\n<p>I'm sure my setup is different than most people, and the usefulness of the above will depend on your situation. For me, while it's an awesome bit of code, the Yeoman <a href=\"https://github.com/yeoman/grunt-usemin\">grunt-usemin</a> is a more robust than I personally need.</p>\n\n<p><strong>NOTE:</strong> I <em>just</em> discovered the above listed tasks today, so I might be missing a feature and/or my process may change down the road. For now, I'm loving the simplicity <strong>and</strong> features that <a href=\"https://github.com/onehealth/grunt-preprocess/\">grunt-preprocess</a> and <a href=\"https://github.com/onehealth/grunt-env/\">grunt-env</a> have to offer. :)</p>\n\n<hr>\n\n<h3>Jan 2014 update:</h3>\n\n<p>Motivated by a down vote ...</p>\n\n<p>When I posted this answer there weren't many options for Grunt <code>0.4.x</code> that offered a solution that worked for my needs. Now, months later, I would guess that there are more options out there that <em>could</em> be better than what I have posted here. <strong>While I still personally use, and enjoy using, this technique for my builds</strong>, I ask that future readers take the time to read the other answers given and to research all the options. <strong>If you find a better solution, please post your answer here.</strong></p>\n\n<h3>Feb 2014 update:</h3>\n\n<p>I'm not sure if it will be of any help to anyone, but I've created <a href=\"https://github.com/mhulse/grunt-html-boiler\">this demo repository on GitHub</a> that shows a complete (and more complex setup) using the technique(s) I've outlined above.</p>\n",
                    "is_accepted": false,
                    "score": 125
                },
                {
                    "body": "<p>This grunt task named <a href=\"https://npmjs.org/package/grunt-scriptlinker\">scriptlinker</a> looks like an easy way to add the scripts in dev mode.  You could probably run a concat task first and then point it to your concatenated file in prod mode.  </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>grunt-bake is a fantastic grunt script that would work great here. I use it in my JQM auto build script.</p>\n\n<p><a href=\"https://github.com/imaginethepoet/autojqmphonegap\" rel=\"nofollow\">https://github.com/imaginethepoet/autojqmphonegap</a></p>\n\n<p>Take a look at my grunt.coffee file: </p>\n\n<pre><code>bake:\n    resources: \n      files: \"index.html\":\"resources/custom/components/base.html\"\n</code></pre>\n\n<p>This looks at all the files in base.html and sucks them in to create index.html works fantastic for multipage apps (phonegap). This allows for easier development as all devs are not working on one long single page app (preventing lots of conflict checkins). Instead you can break up the pages and work on smaller chunks of code and compile to the full page using a watch command.</p>\n\n<p>Bake reads the template from base.html and injects the component html pages on watch.</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n</code></pre>\n\n<p>\n\n  \n  \n  jQuery Mobile Demos</p>\n\n<p></p>\n\n<p>\n  \n  </p>\n\n<p>\n  \n  </p>\n\n<p>\n  </p>\n\n<p>\n  \n  \n  \n  \n      app.initialize();\n    </p>\n\n<p>\n  </p>\n\n<p></p>\n\n<pre><code>&lt;body&gt;\n    &lt;!--(bake /resources/custom/components/page1.html)--&gt;\n    &lt;!--(bake /resources/custom/components/page2.html)--&gt;\n    &lt;!--(bake /resources/custom/components/page3.html)--&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n\n<p>You can take this a step further and add injections in your pages for \"menus\" \"popups\" etc so you can really break pages into smaller manageable components.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"https://github.com/cgross/grunt-dom-munger\" rel=\"nofollow\">grunt-dom-munger</a> reads and manipulates HTML with CSS selectors. Ex. read  tags from your html. Remove nodes, add nodes, and more.</p>\n\n<p>You can use grunt-dom-munger to read all your JS files that are linked by your index.html, uglify them and then use grunt-dom-munger again to modify your index.html to only link the minified JS</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I was looking for a more simple, straight forward solution so I combined the answer from this question:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/19010621/how-to-place-if-else-block-in-gruntfile-js\">How to place if else block in gruntfile.js</a></p>\n\n<p>and came up with following simple steps:</p>\n\n<ol>\n<li>Keep two versions of your index files as you listed and name them index-development.html and index-prodoction.html.</li>\n<li><p>Use the following logic in your Gruntfile.js's concat/copy block for your index.html file:</p>\n\n<pre><code>concat: {\n    index: {\n        src : [ (function() {\n            if (grunt.option('Release')) {\n              return 'views/index-production.html';\n            } else {\n              return 'views/index-development.html';\n            }\n          }()) ],\n       dest: '&lt;%= distdir %&gt;/index.html',\n       ...\n    },\n    ...\n},\n</code></pre></li>\n<li><p>run 'grunt --Release' to choose the index-production.html  file and leave off the flag to have the development version.</p></li>\n</ol>\n\n<p>No new plugins to add  or configure and no new grunt tasks.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I dislike the solutions here (including <a href=\"http://stackoverflow.com/a/18319872/61624\">the one I previously gave</a>) and here's why:</p>\n\n<ul>\n<li>The problem with <a href=\"http://stackoverflow.com/a/14970339/61624\">the highest voted answer</a> is that you have to manually sync the list of script tags when you add/rename/delete a JS file.  </li>\n<li>The problem with <a href=\"http://stackoverflow.com/a/12424966/61624\">the accepted answer</a> is that your list of JS files can't have pattern matching.  This means you've got to update it by hand in the Gruntfile.  </li>\n</ul>\n\n<p>I've figured out how to solve both of these issues.  I've set up my grunt task so that every time a file is added or deleted, the script tags automatically get generated to reflect that.  This way, <strong>you don't need to modify your html file or your grunt file</strong> when you add/remove/rename your JS files.</p>\n\n<p>To summarize how that works, I have a html template with a variable for the script tags.  I use <a href=\"https://github.com/alanshaw/grunt-include-replace\" rel=\"nofollow\">https://github.com/alanshaw/grunt-include-replace</a> to populate that variable.  In dev mode, that variable comes from a globbing pattern of all my JS files.  The watch task recalculates this value when a JS file is added or removed.  </p>\n\n<p>Now, to get different results in dev or prod mode, you simply populate that variable with a different value.  Here's some code:</p>\n\n<pre><code>var jsSrcFileArray = [\n    'src/main/scripts/app/js/Constants.js',\n    'src/main/scripts/app/js/Random.js',\n    'src/main/scripts/app/js/Vector.js',\n    'src/main/scripts/app/js/scripts.js',\n    'src/main/scripts/app/js/StatsData.js',\n    'src/main/scripts/app/js/Dialog.js',\n    'src/main/scripts/app/**/*.js',\n    '!src/main/scripts/app/js/AuditingReport.js'\n];\n\nvar jsScriptTags = function (srcPattern, destPath) {\n    if (srcPattern === undefined) {\n        throw new Error(\"srcPattern undefined\");\n    }\n    if (destPath === undefined) {\n        throw new Error(\"destPath undefined\");\n    }\n    return grunt.util._.reduce(\n        grunt.file.expandMapping(srcPattern, destPath, {\n            filter: 'isFile',\n            flatten: true,\n            expand: true,\n            cwd: '.'\n        }),\n        function (sum, file) {\n            return sum + '\\n&lt;script src=\"' + file.dest + '\" type=\"text/javascript\"&gt;&lt;/script&gt;';\n        },\n        ''\n    );\n};\n\n...\n\ngrunt.initConfig({\n\n    includereplace: {\n        dev: {\n            options: {\n                globals: {\n                    scriptsTags: '&lt;%= jsScriptTags(jsSrcFileArray, \"../../main/scripts/app/js\")%&gt;'\n                }\n            },\n            src: [\n                'src/**/html-template.html'\n            ],\n            dest: 'src/main/generated/',\n            flatten: true,\n            cwd: '.',\n            expand: true\n        },\n        prod: {\n            options: {\n                globals: {\n                    scriptsTags: '&lt;script src=\"app.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;'\n                }\n            },\n            src: [\n                'src/**/html-template.html'\n            ],\n            dest: 'src/main/generatedprod/',\n            flatten: true,\n            cwd: '.',\n            expand: true\n        }\n\n...\n\n    jsScriptTags: jsScriptTags\n</code></pre>\n\n<p><code>jsSrcFileArray</code> is your typical grunt file-globbing pattern.  <code>jsScriptTags</code> takes the <code>jsSrcFileArray</code> and concatenates them together with <code>script</code> tags on both sides.  <code>destPath</code> is the prefix I want on each file.  </p>\n\n<p>And here's what the HTML looks like:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"/&gt;\n    &lt;title&gt;Example&lt;/title&gt;\n\n&lt;/head&gt;\n\n&lt;body&gt;    \n@@scriptsTags\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Now, as you can see in the config, I generate the value of that variable as a hard coded <code>script</code> tag when it's run in <code>prod</code> mode.  In dev mode, this variable will expand to a value like this:</p>\n\n<pre><code>&lt;script src=\"../../main/scripts/app/js/Constants.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../main/scripts/app/js/Random.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../main/scripts/app/js/Vector.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../main/scripts/app/js/StatsData.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;script src=\"../../main/scripts/app/js/Dialog.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Let me know if you have any questions.  </p>\n\n<p>PS: This is a crazy amount of code for something I'd want to do in every client-side JS app.  I hope someone can turn this into a reusable plugin.  Maybe I will some day.  </p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Use a combination of wiredep <a href=\"https://github.com/taptapship/wiredep\" rel=\"nofollow\">https://github.com/taptapship/wiredep</a> and usemin <a href=\"https://github.com/yeoman/grunt-usemin\" rel=\"nofollow\">https://github.com/yeoman/grunt-usemin</a> in order to have grunt take care of these tasks. Wiredep will add your dependencies one script file at a time, and usemin will concatenate them all into a single file for production. This can then be accomplished with just some html comments. For instance, my bower packages are automatically included and added to the html when I run <code>bower install &amp;&amp; grunt bowerInstall</code>:</p>\n\n<pre><code>&lt;!-- build:js /scripts/vendor.js --&gt;\n&lt;!-- bower:js --&gt;\n&lt;!-- endbower --&gt;\n&lt;!-- endbuild --&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to use Grunt as a build tool for my webapp.</p>\n\n<p>I want to have at least two setups: </p>\n\n<p><strong>I. Development setup</strong> - load scripts from separate files, without concatenation,</p>\n\n<p>so my index.html would look something like:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"js/module1.js\" /&gt;\n        &lt;script src=\"js/module2.js\" /&gt;\n        &lt;script src=\"js/module3.js\" /&gt;\n        ...\n    &lt;/head&gt;\n    &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><strong>II. Production setup</strong> - load my scripts minified &amp; concatenated in one file,</p>\n\n<p>with index.html accordingly:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;script src=\"js/MyApp-all.min.js\" /&gt;\n    &lt;/head&gt;\n    &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The question is, <em>how can I make grunt make these index.html's depending on the configuration when I run <code>grunt dev</code> or <code>grunt prod</code>?</em></p>\n\n<p>Or maybe I'm digging in the wrong direction and it would be easier to always generate <code>MyApp-all.min.js</code> but put inside it either all my scripts (concatenated) or a loader script that asynchronously loads those scripts from separate files?</p>\n\n<p>How do you do it, guys?</p>\n",
            "last_activity_date": 1416958575,
            "question_id": 12401998,
            "score": 146,
            "tags": [
                "javascript",
                "build",
                "build-automation",
                "gruntjs"
            ],
            "title": "Have Grunt generate index.html for different setups"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>I think it is not totally unrelated but did you consider canvas? something like <a href=\"http://ejohn.org/blog/processingjs/\">Process JS</a> can make it simpler.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>For posterity, I'd like to note that I ended up choosing Raphael, because of the clean API and \"free\" IE support, and also because the <a href=\"http://groups.google.com/group/raphaeljs\">active development</a> looks promising (event support was just added in 0.7, for instance). However, I'll leave the question unanswered, and I'd still be interested to hear about others' experiences using Javascript + SVG libraries.</p>\n",
                    "is_accepted": false,
                    "score": 52
                },
                {
                    "body": "<p>I will throw my vote behind Raphael - the cross-browser support, clean API and consistent updates (so far) make it a joy to use.  It plays very nicely with jQuery too.  Processing is cool, but more useful as a demo for bleeding-edge stuff at the moment.  </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm a huge fan of Raphael and the development momentum seems to be going strong (version 0.85 was released late last week). Another big plus is that its developer, <a href=\"http://dmitry.baranovskiy.com/\">Dmitry Baranovskiy</a>, is currently working on a Raphael charting plugin, <a href=\"http://github.com/DmitryBaranovskiy/g.raphael/tree/master\">g.raphael</a>, which looks like its shaping up to be pretty slick (there are a few samples of the output from the early versions on <a href=\"http://www.flickr.com/photos/dmitry-baranovskiy/sets/72157620525949908/\">Flickr</a>).</p>\n\n<p>However, just to throw another possible contender into the SVG library mix, Google's <a href=\"http://code.google.com/p/svgweb/\">SVG Web</a> looks very promising indeed (even though I'm not a big fan of Flash, which it uses to render in non-SVG compliant browsers). Probably one to watch, especially with the upcoming <a href=\"http://www.svgopen.org/2009/\">SVG Open conference</a>.</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>You should also take a look at svgweb. It uses flash to render svg in IE, and optionally on other browsers (in the cases where it supports more than the browser itself does).</p>\n\n<p><a href=\"http://code.google.com/p/svgweb/\">http://code.google.com/p/svgweb/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Oh Raphael has moved on significantly since June.\nThere is a new charting library that can work with it and these are very eye catching.\nRaphael also supports full SVG path syntax and is incorporating really advanced path methods. Come see 1.2.8+ at my site (Shameless plug) and then bounce over to the Dmitry's site from there.\n<a href=\"http://www.irunmywebsite.com/raphael/raphaelsource.html\">http://www.irunmywebsite.com/raphael/raphaelsource.html</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I've recently used both Raphael and jQuery SVG - and here are my thoughts:</p>\n\n<h2>Raphael</h2>\n\n<p><strong>Pros:</strong> a good starter library, easy to do a LOT of things with SVG quickly. Well written and documented. Lots of examples and Demos. Very extensible architecture. Great with animation.</p>\n\n<p><strong>Cons:</strong> is a layer over the actual SVG markup, makes it difficult to do more complex things with SVG - such as grouping (it supports Sets, but not groups). Doesn't do great w/ editing of already existing elements.</p>\n\n<h2>jQuery SVG</h2>\n\n<p><strong>Pros:</strong> a jquery plugin, if you're already using jQuery. Well written and documented. Lots of examples and demos. Supports most SVG elements, allows native access to elements easily</p>\n\n<p><strong>Cons:</strong> architecture not as extensible as Raphael. Some things could be better documented (like configure of SVG element). Doesn't do great w/ editing of already existing elements. Relies on SVG semantics for animation - which is not that great.</p>\n\n<h2><a href=\"http://snapsvg.io/\">SnapSVG</a> as a pure SVG version of Raphael</h2>\n\n<p>SnapSVG is the successor of Raphael. It is supported only in the SVG enabled browsers and supports almost all the features of SVG.</p>\n\n<h2>Conclusion</h2>\n\n<p>If you're doing something quick and easy, Raphael is an easy choice. If you're going to do something more complex, I chose to use jQuery SVG because I can manipulate the actual markup significantly easier than with Raphael. And if you want a non-jQuery solution then SnapSVG is a good option.</p>\n",
                    "is_accepted": true,
                    "score": 168
                },
                {
                    "body": "<p>Raphael is definitely easier to set up and get going, but note that there are ways of expressing things in SVG that are not possible in Raphael.  As noted above there are no \"groups\". This implies that you can't implement layers of Coordinate Transfomations. Instead there is only one coordinate transform available.</p>\n\n<p>If your design depends on nested coordinate transforms, Raphael is not for you.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I prefer using RaphaelJS because it has great cross-browser abilities. However, some SVG &amp;  VML effects can't be achieved with RaphaelJS (complex gradients...).</p>\n\n<p>Google has also developped a library of its own to enable SVG support in IE:\n<a href=\"http://svgweb.googlecode.com/files/svgweb-2009-08-20-B.zip\" rel=\"nofollow\">http://svgweb.googlecode.com/files/svgweb-2009-08-20-B.zip</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Since it's not mentioned here yet:\nYou should also take a look at <a href=\"http://dojotoolkit.org/reference-guide/dojox/drawing.html#dojox-drawing\" rel=\"nofollow\">Dojox.drawing</a>, which also provides good SVG drawing capabilities. It has a pretty impressive set of features. I'm just starting a project with it, but it seems to me that it's far superior (at least in terms of features) to Raphael and JQuerySVG. </p>\n\n<p>This presentation convinced me to use it instead of Raphael/JQuerySVG:\n<a href=\"http://www.slideshare.net/elazutkin/dojo-gfx-svg-in-the-real-world-2114082\" rel=\"nofollow\">http://www.slideshare.net/elazutkin/dojo-gfx-svg-in-the-real-world-2114082</a></p>\n\n<p>Reference:\n<a href=\"http://dojotoolkit.org/reference-guide/dojox/index.html\" rel=\"nofollow\">http://dojotoolkit.org/reference-guide/dojox/index.html</a></p>\n\n<p>Reference on Dojocampus:\n<a href=\"http://docs.dojocampus.org/dojox/drawing\" rel=\"nofollow\">http://docs.dojocampus.org/dojox/drawing</a></p>\n\n<p>Download Dojo (including Dojox):\n<a href=\"http://dojotoolkit.org/download/\" rel=\"nofollow\">http://dojotoolkit.org/download/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you don't need VML and IE8 support then use Canvas (PaperJS for example). Look at latest IE10 demos for Windows 7. They have amazing animations in Canvas. SVG is not capable to do anything close to them. \nOverall Canvas is available at all mobile browsers. SVG is not working at early versions of Android 2.0- 2.3 (as I know)</p>\n\n<p>Yes, Canvas is not scalable, but it so fast that you can redraw the whole canvas faster then browser capable to scroll view port. </p>\n\n<p>From my perspective Microsoft's optimizations provides means to use Canvas as regular GDI engine and implement graphics applications like we do them for Windows now. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As a Javascript beginner, I found Rapahel samples not so easy, I recommend  <a href=\"http://cancerbero.mbarreneche.com/raphaeltut\" rel=\"nofollow\">http://cancerbero.mbarreneche.com/raphaeltut</a>, which is a real Step by step tutorial.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Another svg javascript library you might want to look at is d3.js. <a href=\"http://d3js.org/\" rel=\"nofollow\">http://d3js.org/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For those who don't care about IE6/IE7, the same guy who wrote Raphael built an svg engine specifically for modern browsers: <strong>snap.svg</strong> .. it has a really nice site with good docs: <a href=\"http://snapsvg.io\" rel=\"nofollow\">http://snapsvg.io</a></p>\n\n<p>snap.svg couldn't be easier to use right out of the box and can manipulate/update existing SVGs or generate new ones. You can read this stuff on the snap.io about page but here's a quick run down:</p>\n\n<p><strong>Cons</strong></p>\n\n<ul>\n<li>To make use of snap's features you must forgo on support for older browsers. Raphael supports browsers like IE6/IE7, snap features are only supported by IE9 and up, Safari, Chrome, Firefox, and Opera.</li>\n</ul>\n\n<p><strong>Pros</strong></p>\n\n<ul>\n<li><p>Implements the full features of SVG like masking, clipping, patterns, full gradients, groups, and more.</p></li>\n<li><p>Ability to work with existing SVG: content does not have to be generated with Snap for it to work with Snap, allowing you to create the content with any common design tools.</p></li>\n<li><p>Full animation support using a straightforward, easy-to-implement JavaScript API</p></li>\n<li><p>Works with strings of SVG (for example, SVG files loaded via Ajax) without having to actually render them first, similar to a resource container or sprite sheet.</p></li>\n</ul>\n\n<p>check it out if you're interested: <a href=\"http://snapsvg.io\" rel=\"nofollow\">http://snapsvg.io</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm working on an interactive interface using SVG and JavaScript/jQuery, and I'm trying to decide between <a href=\"http://raphaeljs.com/\">Raphael</a> and <a href=\"http://keith-wood.name/svgRef.html\">jQuery SVG</a>. I'd like to know </p>\n\n<ol>\n<li>What the trade-offs are between the two</li>\n<li>Where the development momentum seems to be.</li>\n</ol>\n\n<p>I don't need the VML/IE support in Raphael, or the plotting abilities of jQuery SVG. I'm primarily interested in the most elegant way to create, animate, and manipulate individual items on an SVG canvas.</p>\n",
            "last_activity_date": 1383562475,
            "question_id": 588718,
            "score": 219,
            "tags": [
                "javascript",
                "jquery",
                "svg",
                "raphael"
            ],
            "title": "jQuery SVG vs. Raphael"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>If you stick to using jQuery or YUI as your post is tagged, you should have minimal differences between browsers...that's what the frameworks are for, to take care of these cross-browser differences for you.  </p>\n\n<p>For an example, look at the <a href=\"http://www.quirksmode.org/dom/w3c_traversal.html\">quirksmode DOM traversal page</a>, according to it IE doesn't support most things...while true, the frameworks do, for example IE doesn't support <code>elem.childElementCount</code>, but in jQuery: <code>$(elem).children().size()</code> works to get this value, in every browser.  You'll find there's something in the library to handle 99% of the unsupported cases across browsers, at least with script...with CSS you might have to move to plugins for the library, a common example of this is to get rounded corners working in IE...since it has no CSS support for such.</p>\n\n<p>If however you start doing things directly, like <code>document.XXX(thing)</code>, then you're not in the library, you're doing javascript directly (it's all javascript, but you get the point :), and this might or might not cause issues, depending on how drunk the IE team was when implementing that particular function.</p>\n\n<p>With IE you're more likely to fail on styling coming out right than raw javascript issues, animations a few pixels off and that sort of thing, <strong>much</strong> more-so in IE6 of course.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>There are loads of things, but one trap I used to fall in was that many browsers accepts JSON without quoted names, while ie6 and ie7 does not.</p>\n\n<pre><code>{ name: \"Jakob\" } // will often work, but not in ie6/ie7\n{ \"name\": \"Jakob\" } // Better!\n</code></pre>\n\n<p><strong>Edit</strong>: To clarify, this is only an issue when actual JSON is required, as opposed to an object literal. JSON is a subset of the object literal syntax and is meant as a data exchange format (like XML) which is why it's designed to be pickier.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Check also for commas such as these or similar if any in your code</p>\n\n<pre><code>var o={\n'name1':'value1',\n'name2':'value2',\n} \n</code></pre>\n\n<p>the last comma (following value2) will  be tolerated by Firefox, but not IE</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Trailing commas in arrays and object literals used to be a problem, haven't checked recently (meaning IE8):</p>\n\n<pre><code>var a = [ 1, 2, 3, ];\nvar o = { a:1, b:2, c:3, };\n</code></pre>\n\n<p>This would cause some extra code when generating such structures server side.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Some native objects are read-only without really seeming to be so (you can write to them but it has no effect). For example, a common advanced javascript is based on extending the <code>Element</code> object by overriding system methods, say, changing Element.prototype.appendChild() to do more than appending a child node - say, initialize it with parent's data. This will fail silently on IE6 - original method will be invoked on new objects instead of the new one.</p>\n\n<p>Some browsers (I don't remember which now) consider newlines between HTML tags to be text nodes, while others don't. So childNodes(n), nextSibling(), firstChild() and the like will behave very differently.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Extra commas and missing commas used to be usual problem on IE while it works smoothly on FF.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Please feel free to update this list if you see any errors/omissions etc. </p>\n\n<p><strong>Note:</strong> IE9 fixes many of the following issues, so a lot of this only applies to IE8 and below and to a certain extent IE9 in quirks mode. For example, IE9 supports SVG, <code>&lt;canvas&gt;</code>, <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code> natively, however you must <a href=\"http://blogs.msdn.com/b/ie/archive/2010/09/03/same-markup-using-canvas-audio-and-video.aspx\">enable standards compliance mode</a> for them to be available.</p>\n\n<hr>\n\n<h2>General:</h2>\n\n<ul>\n<li><p><strong>Problems with partially loaded documents:</strong> It\u2019s a good idea to add your JavaScript in a <code>window.onload</code> or similar event as IE doesn\u2019t support many operations in partially loaded documents.<P></p></li>\n<li><p><strong>Differing attributes</strong>: In CSS, it's <code>elm.style.styleFloat</code> in IE vs <code>elm.style.cssFloat</code> in Firefox. In <code>&lt;label&gt;</code> tags the <code>for</code> attribute is accessed with <code>elm.htmlFor</code> in IE vs <code>elm.for</code> in Firefox. Note that <code>for</code> is reserved in IE so <code>elm['for']</code> is probably a better idea to stop IE from raising an exception.</p></li>\n</ul>\n\n<hr>\n\n<h2>Base JavaScript language:</h2>\n\n<ul>\n<li><p><strong>Access characters in strings</strong>: <code>'string'[0]</code> isn\u2019t supported in IE as it\u2019s not in the original JavaScript specifications. Use <code>'string'.charAt(0)</code> or <code>'string'.split('')[0]</code> noting that accessing items in arrays is significantly faster than using <code>charAt</code> with strings in IE (though there's some initial overhead when <code>split</code> is first called.)<P></p></li>\n<li><p><strong>Commas before the end of objects:</strong> e.g. <code>{'foo': 'bar',}</code> aren't allowed in IE.</p></li>\n</ul>\n\n<hr>\n\n<h2>Element-specific issues:</h2>\n\n<ul>\n<li><p><strong>Getting the <code>document</code> of an IFrame</strong>:</p>\n\n<ul>\n<li><strong>Firefox and IE8+:</strong> <code>IFrame.contentDocument</code> (IE started supporting this <a href=\"http://stackoverflow.com/a/6582370/304185\">from version 8</a>.)</li>\n<li><strong>IE:</strong> <code>IFrame.contentWindow.document</code></li>\n<li>(<code>IFrame.contentWindow</code> refers to the <code>window</code> in both browsers.)<p></li>\n</ul></li>\n<li><p><strong>Canvas:</strong> Versions of IE before IE9 don't support the <code>&lt;canvas&gt;</code> element. IE does support <a href=\"http://en.wikipedia.org/wiki/Vector_Markup_Language\">VML</a> which is a similar technology however, and <a href=\"http://code.google.com/p/explorercanvas/\">explorercanvas</a> can provide an in-place wrapper for <code>&lt;canvas&gt;</code> elements for many operations. Be aware that IE8 in standards compliance mode is many times slower and has many more glitches than when in quirks mode when using VML.</p></li>\n<li><p><strong>SVG:</strong> IE9 supports SVG natively. IE6-8 can support SVG, but only with <a href=\"http://www.planetsvg.com/content/svg-solutions-internet-explorer\">external plugins</a> with only some of those plugins supporting JavaScript manipulation.</p></li>\n<li><p><strong><code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code>:</strong> are only supported in IE9.</p></li>\n<li><p><strong>Dynamically creating radio buttons:</strong> IE &lt;8 has a bug which makes radio buttons created with <code>document.createElement</code> uncheckable. See also <a href=\"http://stackoverflow.com/questions/118693/how-do-you-dynamically-create-a-radio-button-in-javascript-that-works-in-all-brow/119079\">How do you dynamically create a radio button in Javascript that works in all browsers?</a> for a way to get around this.</p></li>\n<li><p><strong>Embedded JavaScript in <code>&lt;a href&gt;</code> tags and <code>onbeforeunload</code> conflicts in IE:</strong> If there's embedded JavaScript in the <code>href</code> part of an <code>a</code> tag (e.g. <code>&lt;a href=\"javascript: doStuff()\"&gt;</code> then IE will always show the message returned from <code>onbeforeunload</code> unless the <code>onbeforeunload</code> handler is removed beforehand. See also <a href=\"http://stackoverflow.com/questions/2858057/javascript-function-on-web-page-close/2858329\">Javascript function, on web page close</a>. </p></li>\n<li><p><strong><code>&lt;script&gt;</code> tag event differences:</strong> <code>onsuccess</code> and <code>onerror</code> aren't supported in IE and are replaced by an IE-specific <code>onreadystatechange</code> which is fired regardless of whether the download succeeded or failed. See also <a href=\"http://unixpapa.com/js/dyna.html\">JavaScript Madness</a> for more info.</p></li>\n</ul>\n\n<hr>\n\n<h2>Element size/position/scrolling and mouse position:</h2>\n\n<ul>\n<li><p><strong>Getting element size/position</strong>: width/height of elements is sometimes <code>elm.style.pixelHeight/Width</code> in IE rather than <code>elm.offsetHeight/Width</code>, but neither is reliable in IE, especially in quirks mode, and sometimes one gives a better result than the other. </p>\n\n<p><code>elm.offsetTop</code> and <code>elm.offsetLeft</code> are often incorrectly reported, leading to finding positions of elements being incorrect, which is why popup elements etc are a few pixels off in a lot of cases. </p>\n\n<p>Also note that if an element (or a parent of the element) has a <code>display</code> of <code>none</code> then IE will raise an exception when accessing size/position attributes rather than returning <code>0</code> as Firefox does. </p></li>\n<li><p><strong>Get the screen size</strong> (Getting the viewable area of the screen):</p>\n\n<ul>\n<li><strong>Firefox:</strong> <code>window.innerWidth/innerHeight</code></li>\n<li><strong>IE standards mode:</strong> <code>document.documentElement.clientWidth/clientHeight</code></li>\n<li><strong>IE quirks mode:</strong> <code>document.body.clientWidth/clientHeight</code><P></li>\n</ul></li>\n<li><p><strong>Document scroll position/mouse position</strong>: This one is actually not defined by the w3c so is non-standard even in Firefox. To find the <code>scrollLeft</code>/<code>scrollTop</code> of the <code>document</code>:</p>\n\n<ul>\n<li><strong>Firefox and IE in quirks mode:</strong> <code>document.body.scrollLeft/scrollTop</code></li>\n<li><strong>IE in standards mode:</strong> <code>document.documentElement.scrollLeft/scrollTop</code></li>\n<li><p><strong>NOTE:</strong> Some other browsers use <code>pageXOffset</code>/<code>pageYOffset</code> as well.</p>\n\n<pre><code>function getDocScrollPos() {\n var x = document.body.scrollLeft ||\n         document.documentElement.scrollLeft ||\n         window.pageXOffset || 0,\n     y = document.body.scrollTop ||\n         document.documentElement.scrollTop ||\n         window.pageYOffset || 0;\n return [x, y];\n};\n</code></pre></li>\n</ul>\n\n<p>In order to get the position of the mouse cursor, <code>evt.clientX</code> and <code>evt.clientY</code> in <code>mousemove</code> events will give the position relative to the document <em>without adding the scroll position</em> so the previous function will need to be incorporated:</p>\n\n<pre><code>var mousepos = [0, 0];\ndocument.onmousemove = function(evt) {\n evt = evt || window.event;\n if (typeof evt.pageX != 'undefined') {\n  // Firefox support\n  mousepos = [evt.pageX, evt.pageY];\n } else {\n  // IE support\n  var scrollpos = getDocScrollPos();\n  mousepos = [evt.clientX+scrollpos[0], evt.clientY+scrollpos[1]];\n };\n};\n</code></pre></li>\n</ul>\n\n<hr>\n\n<h2>Selections/ranges:</h2>\n\n<ul>\n<li><p><strong><code>&lt;textarea&gt;</code> and <code>&lt;input&gt;</code> selections</strong>: <code>selectionStart</code> and <code>selectionEnd</code> are not implemented in IE, and there's a proprietary \"ranges\" system in its place, see also <a href=\"http://stackoverflow.com/questions/263743/how-to-get-cursor-position-in-textarea\">How to get caret position in textarea?</a>.</p></li>\n<li><p><strong>Getting the currently selected text in the document:</strong> </p>\n\n<ul>\n<li><strong>Firefox:</strong> <code>window.getSelection().toString()</code></li>\n<li><strong>IE:</strong> <code>document.selection.createRange().text</code><P></li>\n</ul></li>\n</ul>\n\n<hr>\n\n<h2>Getting elements by ID:</h2>\n\n<ul>\n<li><p><code>document.getElementById</code> can also refer to the <code>name</code> attribute in forms (depending which is defined first in the document) so it's best not to have different elements which have the same <code>name</code> and <code>id</code>. This dates back to the days when <code>id</code> wasn't a w3c standard. <code>document.all</code> (<a href=\"http://stackoverflow.com/questions/2408424/\">a proprietary IE-specific property</a>) is significantly faster than <code>document.getElementById</code>, but it has other problems as it always prioritizes <code>name</code> before <code>id</code>. I personally use this code, falling back with additional checks just to be sure:</p>\n\n<pre><code>function getById(id) {\n var e;\n if (document.all) {\n  e = document.all[id];\n  if (e &amp;&amp; e.tagName &amp;&amp; e.id === id) {\n   return e;\n  };\n };\n e = document.getElementById(id);\n if (e &amp;&amp; e.id === id) {\n  return e;\n } else if (!e) {\n  return null;\n } else {\n  throw 'Element found by \"name\" instead of \"id\": ' + id;\n };\n};\n</code></pre></li>\n</ul>\n\n<hr>\n\n<h2>Problems with read only innerHTML:</h2>\n\n<ul>\n<li><p>IE does <a href=\"http://msdn.microsoft.com/en-us/library/ie/ms533897%28v=vs.85%29.aspx\">not support</a> setting the innerHTML of <code>col</code>, <code>colGroup</code>, <code>frameSet</code>, <code>html</code>, <code>head</code>, <code>style</code>, <code>table</code>, <code>tBody</code>, <code>tFoot</code>, <code>tHead</code>, <code>title</code>, and <code>tr</code> elements. Here's a function which works around that for table-related elements:</p>\n\n<pre><code>function setHTML(elm, html) {\n // Try innerHTML first\n try {\n  elm.innerHTML = html;\n } catch (exc) {\n  function getElm(html) {\n   // Create a new element and return the first child\n   var e = document.createElement('div');\n   e.innerHTML = html;\n   return e.firstChild;\n  };\n  function replace(elms) {\n   // Remove the old elements from 'elm'\n   while (elm.children.length) {\n    elm.removeChild(elm.firstChild);\n   }\n   // Add the new elements from 'elms' to 'elm'\n   for (var x=0; x&lt;elms.children.length; x++) {\n    elm.appendChild(elms.children[x]);\n   };\n  };\n  // IE 6-8 don't support setting innerHTML for\n  // TABLE, TBODY, TFOOT, THEAD, and TR directly\n  var tn = elm.tagName.toLowerCase();\n  if (tn === 'table') {\n   replace(getElm('&lt;table&gt;' + html + '&lt;/table&gt;'));\n  } else if (['tbody', 'tfoot', 'thead'].indexOf(tn) != -1) {\n   replace(getElm('&lt;table&gt;&lt;tbody&gt;' + html + '&lt;/tbody&gt;&lt;/table&gt;').firstChild);\n  } else if (tn === 'tr') {\n   replace(getElm('&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;' + html + '&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;').firstChild.firstChild);\n  } else {\n   throw exc;\n  };\n };\n};\n</code></pre>\n\n<p>Also note that IE requires adding a <code>&lt;tbody&gt;</code> to a <code>&lt;table&gt;</code> before appending <code>&lt;tr&gt;</code>s to that <code>&lt;tbody&gt;</code> element when creating using <code>document.createElement</code>, for example:</p>\n\n<pre><code>var table = document.createElement('table');\nvar tbody = document.createElement('tbody');\nvar tr = document.createElement('tr');\nvar td = document.createElement('td');\ntable.appendChild(tbody);\ntbody.appendChild(tr);\ntr.appendChild(td);\n// and so on\n</code></pre></li>\n</ul>\n\n<hr>\n\n<h2>Event differences:</h2>\n\n<ul>\n<li><p><strong>Getting the <code>event</code> variable:</strong> DOM events aren't passed to functions in IE and are accessible as <code>window.event</code>. One common way of getting the event is to use e.g. <BR><code>elm.onmouseover = function(evt) {evt = evt||window.event}</code><BR>which defaults to <code>window.event</code> if <code>evt</code> is undefined.</p></li>\n<li><p><strong>Key event code differences:</strong> Key event codes vary wildly, though if you look at <a href=\"http://www.quirksmode.org/js/keys.html\">Quirksmode</a> or <a href=\"http://unixpapa.com/js/key.html\">JavaScript Madness</a>, it's hardly specific to IE, Safari and Opera are different again.</p></li>\n<li><p><strong>Mouse event differences:</strong> the <code>button</code> attribute in IE is a bit-flag which allows multiple mouse buttons at once:</p>\n\n<ul>\n<li><strong>Left:</strong> 1 (<code>var isLeft = evt.button &amp; 1</code>)</li>\n<li><strong>Right:</strong> 2 (<code>var isRight = evt.button &amp; 2</code>)</li>\n<li><p><strong>Center:</strong> 4 (<code>var isCenter = evt.button &amp; 4</code>)<P></p>\n\n<p>The W3C model (supported by Firefox) is less flexible than the IE model is, with only a single button allowed at once with left as <code>0</code>, right as <code>2</code> and center as <code>1</code>. Note that, as Peter-Paul Koch <a href=\"http://www.quirksmode.org/js/events_properties.html#button\">mentions</a>, this is very counter-intuitive, as <code>0</code> usually means 'no button'.</p>\n\n<p><code>offsetX</code> and <code>offsetY</code> are <a href=\"http://www.quirksmode.org/dom/w3c_cssom.html#mousepos\">problematic</a> and it's probably best to avoid them in IE. A more reliable way to get the <code>offsetX</code> and <code>offsetY</code> in IE would be to <a href=\"http://stackoverflow.com/questions/160144/find-x-y-of-an-html-element-with-javascript\">get the position</a> of the relatively positioned element and subtract it from <code>clientX</code> and <code>clientY</code>.</p>\n\n<p>Also note that in IE to get a double click in a <code>click</code> event you'd need to register both a <code>click</code> and <code>dblclick</code> event to a function. Firefox fires <code>click</code> as well as <code>dblclick</code> when double clicking, so IE-specific detection is needed to have the same behaviour.</p></li>\n</ul></li>\n<li><p><strong>Differences in the event handling model:</strong> Both the proprietary IE model and the Firefox model support handling of events from the bottom up, e.g. if there are events in both elements of <code>&lt;div&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;</code> then events will trigger in the <code>span</code> <em>then</em> the <code>div</code> rather than the order which they're bound if a traditional e.g. <code>elm.onclick = function(evt) {}</code> was used. <P>\"Capture\" events are generally only supported in Firefox etc, which will trigger the <code>div</code> then the <code>span</code> events in a top down order. IE has <code>elm.setCapture()</code> and <code>elm.releaseCapture()</code> for redirecting mouse events from the document to the element (<code>elm</code> in this case) before processing other events, but they have a number of performance and other issues so should probably be avoided. </p>\n\n<ul>\n<li><p><strong>Firefox:</strong><P>\n<strong>Attach</strong>: <code>elm.addEventListener(type, listener, useCapture [true/false])</code><BR>\n<strong>Detach</strong>: <code>elm.removeEventListener(type, listener, useCapture)</code><BR>\n(<code>type</code> is e.g. <code>'mouseover'</code> without the <code>on</code>)<P></p></li>\n<li><p><strong>IE:</strong> Only a single event of a given type on an element can be added in IE - an exception is raised if more than one event of the same type is added. Also note that the <code>this</code> refers to <code>window</code> rather than the bound element in event functions (so is less useful):<P>\n<strong>Attach</strong>: <code>elm.attachEvent(sEvent, fpNotify)</code><BR> \n<strong>Detach</strong>: <code>elm.detachEvent(sEvent, fpNotify)</code><BR>\n(<code>sEvent</code> is e.g. <code>'onmouseover'</code>)<P></p></li>\n</ul></li>\n<li><p><strong>Event attribute differences:</strong></p>\n\n<ul>\n<li><p><strong>Stop events from being processed by any other listening functions</strong>:<P>\n<strong>Firefox:</strong> <code>evt.stopPropagation()</code><BR>\n<strong>IE:</strong> <code>evt.cancelBubble = true</code></p></li>\n<li><p><strong>Stop e.g. key events from inserting characters or stopping checkboxes from getting checked:</strong><P>\n<strong>Firefox:</strong> <code>evt.preventDefault()</code><BR>\n<strong>IE:</strong> <code>evt.returnValue = false</code><BR>\n<strong>Note:</strong> Just returning <code>false</code> in <code>keydown</code>, <code>keypress</code>, <code>mousedown</code>, <code>mouseup</code>, <code>click</code> and <code>reset</code> will also prevent default.</p></li>\n<li><p><strong>Get the element which triggered the event:</strong><P>\n<strong>Firefox:</strong> <code>evt.target</code><BR>\n<strong>IE:</strong> <code>evt.srcElement</code></p></li>\n<li><p><strong>Getting the element the mouse cursor moved away from:</strong> <code>evt.fromElement</code> in IE is <code>evt.target</code> in Firefox if in an <code>onmouseout</code> event, otherwise <code>evt.relatedTarget</code></p></li>\n<li><p><strong>Getting the element the mouse cursor moved to:</strong> <code>evt.toElement</code> in IE is <code>evt.relatedTarget</code> in Firefox if in an <code>onmouseout</code> event, otherwise <code>evt.target</code></p></li>\n<li><p><strong>Note:</strong> <code>evt.currentTarget</code> (the element to which the event was bound) has no equivalent in IE.</p></li>\n</ul></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 118
                },
                {
                    "body": "<p>IE is not a modern browser and only follows ECMAScript loosely.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>IE is very strict about missing \";\" so is usually that.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>getElementbyID will also match against the name attribute in IE, but not other browsers, and IE will select whichever it finds first.</p>\n\n<p>example:</p>\n\n<pre><code>&lt;script&gt;\n var foo = document.getElementById('bar');\n&lt;/script&gt;\n\n....\n&lt;input name=\"bar\" type=\"text\" /&gt;  //IE will get this element\n&lt;span id=\"bar\"&gt; Hello, World! &lt;/span&gt;  //FF,Safari,Chrome will get this element\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>I just found one this morning, a co-worker set the script tag as:\n<code>&lt;script type=\"application/javascript\"&gt;</code> because his ide autocomplete had that before \"text/javascript\"</p>\n\n<p>But, it turns out that IE just ignores the entire script if you use \"application/javascript\", you need to use \"text/javascript\"</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You mentioned jQuery which I'm less familiar with but for general reference, and specifically with Prototype, one thing to watch out for is reserved words / method names in IE. I know what often gets me is things like:</p>\n\n<p><code>someElement.appendChild(new Element('label',{ **for**: someInput.id }).update( someLabelText );</code></p>\n\n<p>(new Element(tagName, propertyHash) is how new elements are created in Protitype). In IE, <code>for:</code> must be <code>'for':</code>, because <code>for</code> is a reserved word. Which makes complete sense -- but FireFox will tolerate this.</p>\n\n<p>Another example:</p>\n\n<p><code>someElement.wrap('div').addClassName('someClass')</code></p>\n\n<p>(the <code>wrap</code> method in Prototype wraps one element in another) -- In IE, on textareas, <code>wrap</code> is a property, and <code>Element.wrap()</code> must be used instead of the methodized version</p>\n\n<p>These are two examples which come to mind from my experience. They're based on prototype but the core issue isn't: Watch out for any methods/labels/identifiers which IE considers reserved words but FireFox or Safari will tolerate.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The fact is that IE doesn't support JavaScript... It supports his own implementation of ECMAScript : JScript... which is kind of different...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using <code>console.log()</code> for outputting errors to the Firefox error console will cause your scripts to fail in IE. Got to remember to take those out when you test in IE. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I found an odd quirk just the other day with Internet Explorer.  I was using YUI, and replacing the contents of a table body () by setting the innerHTML</p>\n\n<pre><code>Y.one('#elementId').set('innerHTML', '&lt;tr&gt;&lt;td&gt;Column 1&lt;/td&gt;&lt;/tr&gt;');\n</code></pre>\n\n<p>This would work in all browsers EXCEPT IE.  I finally discovered that you couldn't replace the innerHTML of a table in IE.  I had to create a node using YUI and then append that node.</p>\n\n<pre><code>var myNode = Y.node.create('&lt;tr&gt;&lt;td&gt;Column 1&lt;/td&gt;&lt;/tr&gt;');\nY.one('#elementId').append(myNode);\n</code></pre>\n\n<p>That was a fun one to figure out!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2><a href=\"http://en.wikipedia.org/wiki/JavaScript#Versions\" rel=\"nofollow\">Differing JavaScript Support</a></h2>\n\n<p>IE doesn't support (most of) the extensions added to JavaScript since 1.5.</p>\n\n<h2><a href=\"https://developer.mozilla.org/en/New_in_JavaScript_1.6\" rel=\"nofollow\">New in 1.6</a></h2>\n\n<ul>\n<li>Array Methods - <code>indexOf()</code>, <code>lastIndexOf()</code>, <code>every()</code>, <code>filter()</code>, <code>forEach()</code>, <code>map()</code>, <code>some()</code></li>\n<li><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Statements#Object_Manipulation_Statements\" rel=\"nofollow\"><code>for each ... in</code></a> - iterates values instead of property names.</li>\n</ul>\n\n<h2><a href=\"https://developer.mozilla.org/en/New_in_JavaScript_1.7\" rel=\"nofollow\">New in 1.7</a></h2>\n\n<ul>\n<li>Destructuring assignment -- <code>[a,b] = [1,2]</code></li>\n<li><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Iterators_and_Generators\" rel=\"nofollow\">Iterators and Generators</a></li>\n<li><code>let</code> and <code>yeild</code></li>\n</ul>\n\n<h2><a href=\"https://developer.mozilla.org/en/New_in_JavaScript_1.8\" rel=\"nofollow\">New in 1.8</a></h2>\n\n<ul>\n<li>Array Methods - <code>reduce()</code>, <code>reduceRight()</code></li>\n<li>Shortcuts for defining functions.</li>\n</ul>\n\n<p>Some of these things require you to specify a version number of JavaScript to run under (which will break under IE), but some things like <code>[1,2,3].indexOf(2)</code> might not seem like that big a deal, until you try to run it in IE</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The major differences between JavaScript in IE and JavaScript in modern browsers (ex, Firefox) can be attributed to the same reasons behind the differences in CSS/(X)HTML cross-browser. Back in the day there was no de facto standard; IE/Netscape/Opera fought a turf war, implementing most of the specs, but also omitting some as well as making proprietary specs to gain advantages over each other. I could go on at length, but lets skip ahead to the release of IE8: JavaScript was avoided/scorned for years, and with the rise of FF and the contempt of webcomm, IE chose to focus mostly on advancing their CSS from IE6 on. And basically left DOM support behind. IE8's DOM support might as well be IE6's, which rolled out in 2001....so IE's DOM support is nearly a decade behind modern browsers. \nIf you are having JavaScript discrepancies particular to a layout engine, you're best bet is to attack it the same way we took on the CSS problems; Targeting that browser. DON'T USE BROWSER SNIFFING, use feature detection to sniff out your browser/it's level of DOM support.</p>\n\n<p>JScript is not IE's own implementation of ECMAScript; JScript was IE's answer to Netscape's JavaScript, both of which came into existence before ECMAScript.</p>\n\n<p>As far as type attributes on the script element, type=\"text/javascript\" is the default standard (at least in HTML5), so you don't ever need a type attribute unless your script isn't JavaScript.</p>\n\n<p>As far as IE not supporting innerHTML...innerHTML was invented by IE and is still today NOT a DOM standard. Other browsers have adopted it because it's useful, which is why you can use it cross-browser. As far as dynamically changing tables, MSDN says \"because of the specific structure required by tables, the <a href=\"http://msdn.microsoft.com/en-us/library/aa219845%28office.11%29.aspx\" rel=\"nofollow\">innerText</a> and <a href=\"http://msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\" rel=\"nofollow\">innerHTML</a> properties of the table and tr objects are read-only.\" I don't know how much of that was true initially, but clearly the modern browsers have figured it out while dealing with the complexities of table-layout.</p>\n\n<p>I highly recommend reading <em>PPK on JavaScript</em> \nJeremy Keith's <em>DOM Scripting</em> \nDouglas Crockford's <em>JavaScript: The Good Parts</em> \nand Christian Hellman's <em>Beginning JavaScript with DOM Scripting and Ajax</em> to get a strong grasp on JavaScript.</p>\n\n<p>As far as Frameworks/Libraries are concerned, if you don't have a strong grasp on JavaScript yet, you should avoid them. 2 years ago I fell into the jQuery trap, and while I was able to pull off magnificent feats, I never learned a damn thing about coding JavaScript properly. In hindsight, jQuery is a wicked awesome DOM Toolkit, but my failure to learn proper closures, prototypical inheritance, etc., not only set my personal knowledge back, my work starting taking huge performance hits because I had no clue wtf I was doing. </p>\n\n<p>JavaScript is the language of the browser; if you are client-side/front-end engineer it is of upmost importance that you command JavaScript. \nNode.js is bringing JavaScript full tilt, I see immense strides taken daily in its development; Server-side JavaScript will be a standard in the very near future. I'm mentioning this to further emphasize just how important JavaScript is now and will be.</p>\n\n<p>JavaScript is going to make more waves than Rails. </p>\n\n<p>Happy Scripting!</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>For what it's worth I just came across this nasty issue in &lt; IE9</p>\n\n<p>say you have some html like this:</p>\n\n<pre><code>&lt;table&gt;&lt;tr&gt;&lt;td&gt;some content...&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;\n</code></pre>\n\n<p>and for some reason (I had a good one) you need to retrieve all HTML in the table before the last closing TR you might try something like this:</p>\n\n<pre><code>var tableHtml = document.getElementById('thetable').innerHTML;\nvar fragment = tableHtml.substring(0, tableHtml.lastIndexOf('&lt;/tr&gt;'));\n</code></pre>\n\n<p>&lt; IE9 will return nothing (-1) here because the tableHtml variable contains all html tags upper-cased and lastIndexOf is case sensitive. To get around this I had to throw in a toLowerCase() before lastIndexOf.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I developed some javascript enhanced pages that run fine on recent Firefox and Safari. I missed to check in Internet Explorer, and now I find the pages don't work on IE 6 and 7 (so far). The scripts are somehow not executed, the pages show as if javascript wasn't there, although some javascript is executed. I am using own libraries with dom manipulation, from YUI 2 I use YUI-Loader and the XML-Http-Request, and on one page I use \"psupload\", which depends on JQuery.</p>\n\n<p>I am installing Microsoft Script Editor from Office XP and will now debug. I will also write specific tests now.</p>\n\n<p>What are the typical failing points of IE? What direction I can keep my eyes open.</p>\n\n<p>I found this page, which shows some differences. visit: <a href=\"http://www.quirksmode.org/compatibility.html\" rel=\"nofollow\">Quirksmode</a></p>\n\n<p>Can you from your experience name some typical things I should look for first?</p>\n\n<p>I will also ask more questions here for specific tasks later, but for now I am interested in your experience why IE usually fails on scripts that run fine in Firefox</p>\n\n<p><em>Edit:</em> Thank you for all those great answers!</p>\n\n<p>In the meantime I have adapted the whole code so that it also works with Internet Explorer. I integrated jQuery and built my own classes on top of it now. This was my basic mistake, that I did not build all my stuff on jQuery from the beginning. Now I have.</p>\n\n<p>Also JSLint helped me a lot.</p>\n\n<p>And many of the single issues from the different answers helped.</p>\n",
            "last_activity_date": 1420020260,
            "question_id": 2599020,
            "score": 102,
            "tags": [
                "javascript",
                "jquery",
                "firefox",
                "yui",
                "javascript-library"
            ],
            "title": "What are the typical reasons Javascript developed on Firefox fails on IE?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>To start with <strong>Socket.IO</strong> I suggest you read first the example \"How to use (Node.JS)\" on the main page:</p>\n\n<p><a href=\"http://socket.io/\">http://socket.io/</a></p>\n\n<p>On the <strong>server side</strong>, read the \"How to use\" on the GitHub source page:</p>\n\n<p><a href=\"https://github.com/LearnBoost/Socket.IO-node\">https://github.com/LearnBoost/Socket.IO-node</a></p>\n\n<p>And on the <strong>client side</strong>:</p>\n\n<p><a href=\"https://github.com/LearnBoost/Socket.IO\">https://github.com/LearnBoost/Socket.IO</a></p>\n\n<p>Finally you need to read this great tutorial:</p>\n\n<p><a href=\"http://howtonode.org/websockets-socketio\">http://howtonode.org/websockets-socketio</a></p>\n\n<p><em>Hint</em>: At the end of this blog post, you will have some links pointing on source code that could be some help.</p>\n",
                    "is_accepted": true,
                    "score": 92
                },
                {
                    "body": "<p>I found these two links very helpful while I was trying to learn socket.io:</p>\n\n<ul>\n<li><a href=\"http://fzysqr.com/2011/02/28/nodechat-js-using-node-js-backbone-js-socket-io-and-redis-to-make-a-real-time-chat-app/\" rel=\"nofollow\">http://fzysqr.com/2011/02/28/nodechat-js-using-node-js-backbone-js-socket-io-and-redis-to-make-a-real-time-chat-app/</a></li>\n<li><strike> <a href=\"http://thecoffman.com/2011/02/21/getting-your-feet-wet-with-node.js-and-socket.io/\" rel=\"nofollow\">http://thecoffman.com/2011/02/21/getting-your-feet-wet-with-node.js-and-socket.io/</a>\n</strike></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>A 'fun' way to learn socket.io is to play BrowserQuest by mozilla and look at its source code :-)</p>\n\n<p><a href=\"http://browserquest.mozilla.org/\">http://browserquest.mozilla.org/</a></p>\n\n<p><a href=\"https://github.com/mozilla/BrowserQuest\">https://github.com/mozilla/BrowserQuest</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I am very new to the world of webdevelopment and jumped into the bandwagon because I find the concept of HTML5 very interesting. I am fairly confident on working with canvas and would now like to move over to websockets part of it. I have come to understand socket.io is by far the framework to work with, when we want to work with web sockets.</p>\n\n<p>Any pointers on what tutorial and examples to refer to for a total dummy would be very appreciated!</p>\n",
            "last_activity_date": 1399221465,
            "question_id": 4094350,
            "score": 137,
            "tags": [
                "javascript",
                "html5",
                "node.js",
                "websocket"
            ],
            "title": "Good beginners tutorial to socket.io?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I'm just describing an idea for the algorithm, no full solution:</p>\n\n<p>Basically, you have three numbers <code>x</code>, <code>y</code>, <code>z</code> and you are looking for three new numbers <code>x'</code>, <code>y'</code>, <code>z'</code> and a multiplier <code>a</code> in the range [0,1] such that:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>x = a + (1 - a) x'\ny = a + (1 - a) y'\nz = a + (1 - a) z'\n</code></pre>\n\n<p>This is written in units where the channels also take values in the range [0,1]. In 8bit discrete values, it'd be something like this:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>x = 255 a + (1 - a) x'\ny = 255 a + (1 - a) y'\nz = 255 a + (1 - a) z'\n</code></pre>\n\n<p>Moreover, you want the largest possible value <code>a</code>. You can solve:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>a  = (x - x')/(255 - x')          x' = (x - 255 a)/(1 - a)\n</code></pre>\n\n<p>Etc. In real values this has infinitely many solutions, just plug in any real number <code>a</code>, but the problem is to find a number for which the discretization error is minimal.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This should do it:</p>\n\n<pre><code>let x = min(r,g,b)\na = 1 - x/255                    # Correction 1\nr,g,b = ( (r,g,b) - x ) / a      # Correction 2\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Take the lowest color component, and convert that to an alpha value. Then scale the color components by subtracting the lowest, and dividing by the alpha value.</p>\n\n<p>Example:</p>\n\n<pre><code>152 converts to an alpha value of (255 - 152) / 255 ~ 0.404\n\n152 scales using (152 - 152) / 0.404 = 0\n177 scales using (177 - 152) / 0.404 ~ 62\n202 scales using (202 - 152) / 0.404 ~ 123\n</code></pre>\n\n<p>So, <code>rgb(152, 177, 202)</code> displays as <code>rgba(0, 62, 123, .404)</code>.</p>\n\n<p>I have verified in Photoshop that the colors actually match perfectly.</p>\n",
                    "is_accepted": true,
                    "score": 157
                },
                {
                    "body": "<p>I'd look to RGB&lt;->HSL conversion. I.e. luminosity == amount of white == amount of transparency. </p>\n\n<p>For your example <code>rgb( 128, 128, 255 )</code>, we need to shift RGB values to <code>0</code> first by maximum amount, i.e. to <code>rgb( 0, 0, 128 )</code> - that would be our color with as few of white as possible. And after that, using formula for luminance, we calculate amount of white we need to add to our dark color to get original color - that would be our alpha:</p>\n\n<pre><code>L = (MAX(R,G,B) + MIN(R,G,B))/2\nL1 = (255 + 128) / 2 = 191.5\nL2 = (128 + 0) /2 = 64\nA = (191,5 - 64) / 255 = 0,5;\n</code></pre>\n\n<p>Hope that makes sense. :)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Let r, g, and b be the input values and r', g', b', and a' be the output values, all scaled (for now, as it makes the math prettier) between 1 and 0. Then, by the formula for overlaying colors:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>r = a' * r' + 1 - a'\ng = a' * g' + 1 - a'\nb = a' * b' + 1 - a'\n</code></pre>\n\n<p>The 1 - a' terms represent the background contribution, and the other terms represent the foreground. Do some algebra:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>r = a' * (r' - 1) + 1\nr - 1 = a' * (r' - 1)\n(r - 1) / (r' - 1) = a'\n(r' - 1) / (r - 1) = 1 / a'\nr' - 1 = (r - 1) / a'\nr' = (r - 1) / a' + 1\n</code></pre>\n\n<p>Intuitively, it seems that the minimum color value will be the limiting factor in the problem, so bind this to m:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>m = min(r, g, b)\n</code></pre>\n\n<p>Set the corresponding output value, m', to zero, as we want to maximize transparency:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>0 = (m - 1) / a' + 1\n-1 = (m - 1) / a'\n-a' = m - 1\na' = 1 - m\n</code></pre>\n\n<p>So, in javascript (translating from 1 to 255 along the way):</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function rgba(r, g, b) {\n    var a = 1 - Math.min(r, Math.min(g, b)) / 255;\n    return [255 + (r - 255) / a, 255 + (g - 255) / a, 255 + (b - 255) / a, a];\n}\n</code></pre>\n\n<p>Note that I'm assuming that a' is opacity here. It is trivial to change it to transparency - just remove the \"1 -\" from the formula for a'. Anothing thing to note is that this does not seem to produce exact results - it said that the opacity was 0.498 for the example you gave above (128, 128, 255). However, this is extremely close.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>The top answer didn't work for me with low color components. For example it does not calculate correct alpha if color is #80000. Technically it should make it into #ff0000 with alpha 0.5. To resolve this, you need to use RGB -> HSL -> RGBA conversion. This is pseudo code to get the correct values:</p>\n\n<pre><code>//Convert RGB to HSL\nhsl = new HSL(rgb)\n\n//Use lightness as alpha\nalpha = hsl.Lightness\n\n//For #80000 lightness is 0.5, so we have to take this into account.\n//Lightness more than 0.5 converts to alpha 1 and below is a linear ratio\nif (alpha &gt; 0.5)\n{\n    alpha = 1;\n}\nelse\n{\n    alpha = alpha / 0.5;\n    //We need to drop the lightness of the color to 0.5 to get the actual color\n    //that needs to display. Alpha blending will take care of that.\n    hsl.Lightness = 0.5;\n}\n\nnewRgb = hsl.convertToRgb()\n</code></pre>\n\n<p>\"newRgb\" will contain the value of the new adjusted color and use \"alpha\" variable to control the transparency.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have a hex color, e.g. <code>#F4F8FB</code> (or <code>rgb(244, 248, 251)</code>) that I want converted into an <em>as-transparent-as-possible</em> rgba color (when displayed over white).  Make sense?  I'm looking for an algorithm, or at least idea of an algorithm for how to do so.</p>\n\n<p>For Example:</p>\n\n<pre><code>rgb( 128, 128, 255 ) --&gt; rgba(   0,   0, 255,  .5 )\nrgb( 152, 177, 202 ) --&gt; rgba(  50, 100, 150,  .5 ) // can be better(lower alpha)\n</code></pre>\n\n<p>Ideas?</p>\n\n<hr>\n\n<p>FYI solution based on Guffa's answer:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function RGBtoRGBA(r, g, b){\n    if((g==void 0) &amp;&amp; (typeof r == 'string')){\n        r = r.replace(/^\\s*#|\\s*$/g, '');\n        if(r.length == 3){\n            r = r.replace(/(.)/g, '$1$1');\n        }\n        g = parseInt(r.substr(2, 2), 16);\n        b = parseInt(r.substr(4, 2), 16);\n        r = parseInt(r.substr(0, 2), 16);\n    }\n\n    var min, a = ( 255 - (min = Math.min(r, g, b)) ) / 255;\n\n    return {\n        r    : r = 0|( r - min ) / a,\n        g    : g = 0|( g - min ) / a,\n        b    : b = 0|( b - min ) / a,\n        a    : a = (0|1000*a)/1000,\n        rgba : 'rgba(' + r + ', ' + g + ', ' + b + ', ' + a + ')'\n    };\n}\n\nRGBtoRGBA(204, 153, 102) == RGBtoRGBA('#CC9966') == RGBtoRGBA('C96') == \n    {\n       r    : 170,\n       g    : 85 ,\n       b    : 0  ,\n       a    : 0.6,\n       rgba : 'rgba(170, 85, 0, 0.6)' \n    }\n</code></pre>\n",
            "last_activity_date": 1425530671,
            "question_id": 6672374,
            "score": 166,
            "tags": [
                "javascript",
                "css",
                "colors",
                "css3",
                "rgba"
            ],
            "title": "Convert RGB to RGBA over white"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<p>You can use the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substring\">substring</a> function:</p>\n\n<pre><code>var str = \"12345.00\";\nstr = str.substring(0, str.length - 1);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 571
                },
                {
                    "body": "<p>How about:</p>\n\n<pre><code>var myString = \"12345.00\";\nmyString.substring(0, myString.length - 1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For a number like your example, I would recommend doing this over <code>substring</code>:</p>\n\n<pre><code>alert(parseFloat('12345.00').toFixed(1)); // 12345.0\n</code></pre>\n\n<p>Do note that this will actually round the number, though, which I would imagine is desired but maybe not:</p>\n\n<pre><code>alert(parseFloat('12345.46').toFixed(1)); // 12345.5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 42
                },
                {
                    "body": "<p>If you want to do generic rounding of floats, instead of just trimming the last character:</p>\n\n<pre><code>var float1 = 12345.00,\n    float2 = 12345.4567,\n    float3 = 12345.982;\n\nvar MoreMath = {\n    /**\n     * Rounds a value to the specified number of decimals\n     * @param float value The value to be rounded\n     * @param int nrDecimals The number of decimals to round value to\n     * @return float value rounded to nrDecimals decimals\n     */\n    round: function (value, nrDecimals) {\n        var x = nrDecimals &gt; 0 ? 10 * parseInt(nrDecimals, 10) : 1;\n        return Math.round(value * x) / x;\n    }\n}\n\nMoreMath.round(float1, 1) =&gt; 12345.0\nMoreMath.round(float2, 1) =&gt; 12345.5\nMoreMath.round(float3, 1) =&gt; 12346.0\n</code></pre>\n\n<p><em>EDIT:</em> Seems like there exists a built in function for this, as Paolo points out. That solution is obviously much cleaner than mine. Use <a href=\"http://www.w3schools.com/jsref/jsref%5FparseFloat.asp\" rel=\"nofollow\">parseFloat</a> followed by <a href=\"http://www.w3schools.com/jsref/jsref%5Ftofixed.asp\" rel=\"nofollow\">toFixed</a> </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice\">slice</a>! You just have to make sure you know how to use it. Positive #s are relative to the beginning, negative numbers are relative to the end.</p>\n\n<pre><code>js&gt;\"12345.00\".slice(0,-1)\n12345.0\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 568
                },
                {
                    "body": "<blockquote>\n  <p>@Jason S:</p>\n  \n  <p>You can use slice! You just have to\n  make sure you know how to use it.\n  Positive #s are relative to the\n  beginning, negative numbers are\n  relative to the end.</p>\n  \n  <p>js>\"12345.00\".slice(0,-1)\n  12345.0</p>\n</blockquote>\n\n<p>Sorry for my graphomany but post was tagged 'jquery' earlier. So, <strong><em>you can't use</em></strong> <strong>slice()</strong> inside jQuery because <strong>slice()</strong> is jQuery method for operations with DOM elements, not substrings ... \nIn other words answer <em>@Jon Erickson</em> suggest really perfect solution.</p>\n\n<p>However, your method will works out of jQuery function, inside simple Javascript.\nNeed to say due to last discussion in comments, that jQuery is very much more often renewable extension of JS than his own parent most known ECMAScript.</p>\n\n<p>Here also exist two methods:</p>\n\n<p><em>as our:</em></p>\n\n<p><code>string.substring(from,to)</code> <em>as plus if 'to' index nulled returns the rest of string. so:</em>\n<code>string.substring(from)</code> <em>positive or negative ...</em></p>\n\n<p><em>and some other - substr() - which provide range of substring and 'length' can be positive only:</em>\n<code>string.substr(start,length)</code></p>\n\n<p>Also some maintainers suggest that last method <code>string.substr(start,length)</code> do not works or work with error for MSIE.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use subString to get everything to the left of _bar.  But first you have to get the instr of _bar in the string.</p>\n\n<pre><code>str.substring(3,7);\n</code></pre>\n\n<p>3 is that start and 7 is the length</p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>You can use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/substring\">substring</a> method of Javascript string objects:</p>\n\n<pre><code>s = s.substring(0, s.length - 4)\n</code></pre>\n\n<p>unconditionally removes the last 4 characters from string <code>s</code>.</p>\n\n<p>However, if you want to <em>conditionally</em> remove the last 4 characters, only if they are <em>exactly</em> <code>_bar</code>:</p>\n\n<pre><code>var re = /_bar$/;\ns.replace(re, \"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 210
                },
                {
                    "body": "<pre><code>if(str.substring(str.length - 4) == \"_bar\")\n{\n    str = str.substring(0, str.length - 4);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Regular expression is what you are looking for.</p>\n\n<pre><code>var str = \"foo_bar\";\nalert(str.replace(/_bar$/, \"\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>The easiest method is to use the <code>slice</code> method of the string, which allows negative positions (corresponding to offsets from the end of the string):</p>\n\n<pre><code>var s = \"your string\";\nvar withoutLastFourChars = s.slice(0, -4);\n</code></pre>\n\n<p>If you needed something more general to remove everything after (and including) the last underscore, you could do the following (so long as <code>s</code> is guaranteed to contain at least one underscore):</p>\n\n<pre><code>var s = \"your_string\";\nvar withoutLastChunk = s.slice(0, s.lastIndexOf(\"_\"));\n// withoutLastChunk == \"your\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 112
                },
                {
                    "body": "<p>try this</p>\n\n<pre><code>&lt;script&gt;\nvar x=\"foo_foo_foo_bar\";\nfor(var i=0;i&lt;=x.length;i++){\n  if(x[i]==\"_\" &amp;&amp; x[i+1]==\"b\"){\n   break;\n  }\n  else{\n     document.write(x[i]);\n      }\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>you can also try the live working example on <a href=\"http://jsfiddle.net/informativejavascript/F7WTn/87/\" rel=\"nofollow\">http://jsfiddle.net/informativejavascript/F7WTn/87/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>\"a string\".match(/(.*).$/)[1] // =&gt; a strin\n\n\"a string\".match(/(.*).$/) // returns [\"a string\", \"a strin\"]\n\n\"a string\".match(/(.*).{2}$/)[1] // to get two chars off =&gt; a stri\n</code></pre>\n\n<ol>\n<li>(.*), captures any character multiple times</li>\n<li>., matches last character, in this case</li>\n<li>$, matches the end of the string</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>try this</p>\n\n<pre><code>var myString = \"Hello World!\";\nmyString.slice(0,-1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>var str = \"test!\";\nvar newStr = str.slice(0,-1); //test\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The simple way is:</p>\n\n<pre><code>str.slice(0,-1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Using java-script's slice function    </p>\n\n<pre><code>var string='foo_bar';\nstring=string.slice(0,-4); //slice off last four characters here\n</code></pre>\n\n<p>This could be use to remove '_bar' at end of string,with a any length.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>debris = string.split(\"_\") //explode string into array of strings indexed by \"_\"\n\ndebris.pop(); //pop last element off the array (which you didn't want)\n\nresult = debris.join(\"_\"); //fuse the remainng items together like the sun\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a string <code>12345.00</code> would like it to return <code>12345.0</code></p>\n\n<p>I have looked at trim but looks only to trim whitespace and slice which I don't see how this would work. Any suggestions ?</p>\n",
            "last_activity_date": 1420396520,
            "question_id": 952924,
            "score": 346,
            "tags": [
                "javascript",
                "trim",
                "slice",
                "chop"
            ],
            "title": "Javascript chop/slice/trim off last character in string"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>I have changed how I do this now, I try to avoid using constructor functions and their <code>prototype</code> property, but my old answer from 2010 is still at the bottom. I now prefer <code>Object.create()</code>.  <code>Object.create</code> is available in all modern browsers.</p>\n\n<p>I should note that <code>Object.create</code> is usually <a href=\"http://jsperf.com/object-create-vs-crockford-vs-jorge-vs-constructor/26\" rel=\"nofollow\">much slower</a> than using <code>new</code> with a function constructor.</p>\n\n<pre><code>//The prototype is just an object when you use `Object.create()`\nvar Base = {};\n\n//This is how you create an instance:\nvar baseInstance = Object.create(Base);\n\n//If you want to inherit from \"Base\":\nvar subInstance = Object.create(Object.create(Base));\n\n//Detect if subInstance is an instance of Base:\nconsole.log(Base.isPrototypeOf(subInstance)); //True\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/btipling/2e79g3c4/\" rel=\"nofollow\">jsfiddle</a></p>\n\n<p>One of the big benefits of using Object.create is being able to pass in a <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperties\" rel=\"nofollow\">defineProperties</a> argument, which gives you significant control over how properties on the class can be accessed and enumerated over, and I also use functions to create instances, these serve as constructors in a way, as you can do initialization at the end instead of just returning the instance.</p>\n\n<pre><code>var Base = {};\n\nfunction createBase() {\n  return Object.create(Base, {\n    doSomething: {\n       value: function () {\n         console.log(\"Doing something\");\n       },\n    },\n  });\n}\n\nvar Sub = createBase();\n\nfunction createSub() {\n  return Object.create(Sub, {\n    doSomethingElse: {\n      value: function () {\n        console.log(\"Doing something else\");\n      },\n    },\n  }); \n}\n\nvar subInstance = createSub();\nsubInstance.doSomething(); //Logs \"Doing something\"\nsubInstance.doSomethingElse(); //Logs \"Doing something else\"\nconsole.log(Base.isPrototypeOf(subInstance)); //Logs \"true\"\nconsole.log(Sub.isPrototypeOf(subInstance)); //Logs \"true\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/btipling/a034tg7c/\" rel=\"nofollow\">jsfiddle</a></p>\n\n<p>This is my original answer from 2010:</p>\n\n<pre><code>function Base ( ) {\n  this.color = \"blue\";\n}\n\nfunction Sub ( ) {\n\n}\nSub.prototype = new Base( );\nSub.prototype.showColor = function ( ) {\n console.log( this.color );\n}\n\nvar instance = new Sub ( );\ninstance.showColor( ); //\"blue\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>you can't (in the classical sense).  Javascript is a prototypical language.  You will observe that you never declare a \"class\" in Javascript; you merely define the state and methods of an object.  To produce inheritance, you take some object and prototype it.  The prototype is extended with new functionality.  </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In JavaScript you don't have <em>classes</em> but you can get inheritance and behavior reuse in many ways:</p>\n\n<p><strong>Pseudo-classical inheritance (through prototyping):</strong></p>\n\n<pre><code>function Super () {\n  this.member1 = 'superMember1';\n}\nSuper.prototype.member2 = 'superMember2';\n\nfunction Sub() {\n  this.member3 = 'subMember3';\n  //...\n}\nSub.prototype = new Super();\n</code></pre>\n\n<p>Should be used with the <code>new</code> operator:</p>\n\n<pre><code>var subInstance = new Sub();\n</code></pre>\n\n<p><strong>Function application or \"constructor chaining\":</strong></p>\n\n<pre><code>function Super () {\n  this.member1 = 'superMember1';\n  this.member2 = 'superMember2';\n}\n\n\nfunction Sub() {\n  Super.apply(this, arguments);\n  this.member3 = 'subMember3';\n}\n</code></pre>\n\n<p>This approach should also be used with the <code>new</code> operator:</p>\n\n<pre><code>var subInstance = new Sub();\n</code></pre>\n\n<p>The difference with the first example is that when we <code>apply</code> the <code>Super</code> constructor to the <code>this</code> object inside <code>Sub</code>, it adds the properties assigned to <code>this</code> on <code>Super</code>, directly on the new instance, e.g. <code>subInstance</code> contains the properties <code>member1</code> and <code>member2</code> directly (<code>subInstance.hasOwnProperty('member1') == true;</code>).</p>\n\n<p>In the first example, those properties are reached through the <em>prototype chain</em>, they exist on an internal <code>[[Prototype]]</code> object.</p>\n\n<p><strong>Parasitic inheritance or Power Constructors:</strong></p>\n\n<pre><code>function createSuper() {\n  var obj = {\n    member1: 'superMember1',\n    member2: 'superMember2'\n  };\n\n  return obj;\n}\n\nfunction createSub() {\n  var obj = createSuper();\n  obj.member3 = 'subMember3';\n  return obj;\n}\n</code></pre>\n\n<p>This approach is based basically on \"object augmenting\", you don't need to use the <code>new</code> operator, and as you can see, the <code>this</code> keyword is not involved.</p>\n\n<pre><code>var subInstance = createSub();\n</code></pre>\n\n<p><strong>ECMAScript 5th Ed. <code>Object.create</code> method:</strong></p>\n\n<pre><code>// Check if native implementation available\nif (typeof Object.create !== 'function') {\n  Object.create = function (o) {\n    function F() {}  // empty constructor\n    F.prototype = o; // set base object as prototype\n    return new F();  // return empty object with right [[Prototype]]\n  };\n}\n\nvar superInstance = {\n  member1: 'superMember1',\n  member2: 'superMember2'\n};\n\nvar subInstance = Object.create(superInstance);\nsubInstance.member3 = 'subMember3';\n</code></pre>\n\n<p>The above method is a prototypal inheritance technique proposed by <a href=\"http://javascript.crockford.com/prototypal.html\">Crockford</a>.</p>\n\n<p>Object instances inherit from other object instances, that's it.</p>\n\n<p>This technique can be better than simple \"object augmentation\" because the inherited properties aren't copied over all the new object instances, since the <em>base</em> object is set as the <code>[[Prototype]]</code> of the <em>extended</em> object, in the above example <code>subInstance</code> contains physically only the <code>member3</code> property.</p>\n",
                    "is_accepted": false,
                    "score": 150
                },
                {
                    "body": "<p>You can't inherit from a class in JavaScript, because there are no classes in JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well, in JavaScript there is no \"class inheritance\", there is just \"prototype inheritance\". So you don't make a class \"truck\" and then mark it as a subclass of \"automobile\". Instead, you make an object \"Jack\" and say that it uses \"John\" as a prototype. If John knows, how much \"4+4\" is, then Jack knows it, too. </p>\n\n<p>I suggest you read Douglas Crockford's article about prototypal inheritance here: <a href=\"http://javascript.crockford.com/prototypal.html\" rel=\"nofollow\">http://javascript.crockford.com/prototypal.html</a> He also shows how you can make JavaScript have \"look-alike\" inheritance as in other OO languages and then explains that this actually means breaking javaScript in a way it was not meant to be used.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>var Super = function(){\n this.member1 = 'supermember';\n};\n\nvar Sub = function(){\n$.extend(this,new Super());//this does inheritance magic \n this.member3 = 'subMember3';\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use <code>.inheritWith</code> and <code>.fastClass</code> <a href=\"https://github.com/dotnetwise/Javascript-FastClass\" rel=\"nofollow\">library</a>. It is faster than most popular libraries and sometimes even faster than the native version.</p>\n\n<p>Very easy to use:</p>\n\n<pre><code>function Super() {\n   this.member1 = \"superMember\";//instance member\n}.define({ //define methods on Super's prototype\n   method1: function() { console.log('super'); } //prototype member\n}.defineStatic({ //define static methods directly on Super function \n   staticMethod1: function() { console.log('static method on Super'); }\n});\n\nvar Sub = Super.inheritWith(function(base, baseCtor) {\n   return {\n      constructor: function() {//the Sub constructor that will be returned to variable Sub\n         this.member3 = 'subMember3'; //instance member on Sub\n         baseCtor.apply(this, arguments);//call base construcor and passing all incoming arguments\n      },\n      method1: function() { \n         console.log('sub'); \n         base.method1.apply(this, arguments); //call the base class' method1 function\n      }\n}\n</code></pre>\n\n<p>Usage</p>\n\n<pre><code>var s = new Sub();\ns.method1(); //prints:\n//sub \n//super\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I find this quote to be the most enlightening:</p>\n\n<blockquote>\n  <p>In essence, a JavaScript <strong><em>\"class\"</em></strong> is just a Function object that serves as a constructor plus an attached prototype object. (<a href=\"http://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/\" rel=\"nofollow\">Source: Guru Katz</a>)</p>\n</blockquote>\n\n<p>I like using constructors rather than objects, so I'm partial to the \"pseudo-classical inheritance\" method <a href=\"http://stackoverflow.com/a/2107586/1766230\">described here by CMS</a>. Here is an example of <strong>multiple inheritance with a prototype chain</strong>:</p>\n\n<pre><code>// Lifeform \"Class\" (Constructor function, No prototype)\nfunction Lifeform () {\n    this.isLifeform = true;\n}\n\n// Animal \"Class\" (Constructor function + prototype for inheritance)\nfunction Animal () {\n    this.isAnimal = true;\n}\nAnimal.prototype = new Lifeform();\n\n// Mammal \"Class\" (Constructor function + prototype for inheritance)\nfunction Mammal () {\n    this.isMammal = true;\n}\nMammal.prototype = new Animal();\n\n// Cat \"Class\" (Constructor function + prototype for inheritance)\nfunction Cat (species) {\n    this.isCat = true;\n    this.species = species\n}\nCat.prototype = new Mammal();\n\n// Make an instance object of the Cat \"Class\"\nvar tiger = new Cat(\"tiger\");\n\nconsole.log(tiger);\n// The console outputs a Cat object with all the properties from all \"classes\"\n\nconsole.log(tiger.isCat, tiger.isMammal, tiger.isAnimal, tiger.isLifeform);\n// Outputs: true true true true\n\n// You can see that all of these \"is\" properties are available in this object\n// We can check to see which properties are really part of the instance object\nconsole.log( \"tiger hasOwnProperty: \"\n    ,tiger.hasOwnProperty(\"isLifeform\") // false\n    ,tiger.hasOwnProperty(\"isAnimal\")   // false\n    ,tiger.hasOwnProperty(\"isMammal\")   // false\n    ,tiger.hasOwnProperty(\"isCat\")      // true\n);\n\n// New properties can be added to the prototypes of any\n// of the \"classes\" above and they will be usable by the instance\nLifeform.prototype.A    = 1;\nAnimal.prototype.B      = 2;\nMammal.prototype.C      = 3;\nCat.prototype.D         = 4;\n\nconsole.log(tiger.A, tiger.B, tiger.C, tiger.D);\n// Console outputs: 1 2 3 4\n\n// Look at the instance object again\nconsole.log(tiger);\n// You'll see it now has the \"D\" property\n// The others are accessible but not visible (console issue?)\n// In the Chrome console you should be able to drill down the __proto__ chain\n// You can also look down the proto chain with Object.getPrototypeOf\n// (Equivalent to tiger.__proto__)\nconsole.log( Object.getPrototypeOf(tiger) );  // Mammal \nconsole.log( Object.getPrototypeOf(Object.getPrototypeOf(tiger)) ); // Animal\n// Etc. to get to Lifeform\n</code></pre>\n\n<p>Here is <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain\" rel=\"nofollow\">another good resource from MDN</a>, and here is <a href=\"http://jsfiddle.net/luken/q4vtcvg3/\" rel=\"nofollow\">a jsfiddle so you can try it out</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function Person(attr){\n  this.name = (attr &amp;&amp; attr.name)? attr.name : undefined;\n  this.birthYear = (attr &amp;&amp; attr.birthYear)? attr.birthYear : undefined;\n\n  this.printName = function(){\n    console.log(this.name);\n  }\n  this.printBirthYear = function(){\n    console.log(this.birthYear);\n  }\n  this.print = function(){\n    console.log(this.name + '(' +this.birthYear+ ')');\n  }\n}\n\nfunction PersonExt(attr){\n  Person.call(this, attr);\n\n  this.print = function(){\n    console.log(this.name+ '-' + this.birthYear);\n  }\n  this.newPrint = function(){\n    console.log('New method');\n  }\n}\nPersonExt.prototype = new Person();\n\n// Init object and call methods\nvar p = new Person({name: 'Mr. A', birthYear: 2007});\n// Parent method\np.print() // Mr. A(2007)\np.printName() // Mr. A\n\nvar pExt = new PersonExt({name: 'Mr. A', birthYear: 2007});\n// Overwriten method\npExt.print() // Mr. A-2007\n// Extended method\npExt.newPrint() // New method\n// Parent method\npExt.printName() // Mr. A\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After reading many posts, i came up with this solution (<a href=\"http://jsfiddle.net/chauwel/y6wf0y3t/10/\" rel=\"nofollow\">jsfiddle here</a>). Most of the time i don't need something more sophisticated</p>\n\n<pre><code>var Class = function(definition) {\n    var base = definition.extend || null;\n    var construct = definition.construct || definition.extend || function() {};\n\n    var newClass = function() { \n        this._base_ = base;        \n        construct.apply(this, arguments);\n    }\n\n    if (definition.name) \n        newClass._name_ = definition.name;\n\n    if (definition.extend) {\n        var f = function() {}       \n        f.prototype = definition.extend.prototype;      \n        newClass.prototype = new f();   \n        newClass.prototype.constructor = newClass;\n        newClass._extend_ = definition.extend;      \n        newClass._base_ = definition.extend.prototype;         \n    }\n\n    if (definition.statics) \n        for (var n in definition.statics) newClass[n] = definition.statics[n];          \n\n    if (definition.members) \n        for (var n in definition.members) newClass.prototype[n] = definition.members[n];    \n\n    return newClass;\n}\n\n\nvar Animal = Class({\n\n    construct: function() {        \n    },\n\n    members: {\n\n        speak: function() {\n            console.log(\"nuf said\");                        \n        },\n\n        isA: function() {        \n            return \"animal\";           \n        }        \n    }\n});\n\n\nvar Dog = Class({  extend: Animal,\n\n    construct: function(name) {  \n        this._base_();        \n        this.name = name;\n    },\n\n    statics: {\n        Home: \"House\",\n        Food: \"Meat\",\n        Speak: \"Barks\"\n    },\n\n    members: {\n        name: \"\",\n\n        speak: function() {\n            console.log( \"ouaf !\");         \n        },\n\n        isA: function(advice) {\n           return advice + \" dog -&gt; \" + Dog._base_.isA.call(this);           \n        }        \n    }\n});\n\n\nvar Yorkshire = Class({ extend: Dog,\n\n    construct: function(name,gender) {\n        this._base_(name);      \n        this.gender = gender;\n    },\n\n    members: {\n        speak: function() {\n            console.log( \"ouin !\");           \n        },\n\n        isA: function(advice) {         \n           return \"yorkshire -&gt; \" + Yorkshire._base_.isA.call(this,advice);       \n        }        \n    }\n});\n\n\nvar Bulldog = function() { return _class_ = Class({ extend: Dog,\n\n    construct: function(name) {\n        this._base_(name);      \n    },\n\n    members: {\n        speak: function() {\n            console.log( \"OUAF !\");           \n        },\n\n        isA: function(advice) {         \n           return \"bulldog -&gt; \" + _class_._base_.isA.call(this,advice);       \n        }        \n    }\n})}();\n\n\nvar animal = new Animal(\"Maciste\");\nconsole.log(animal.isA());\nanimal.speak();\n\nvar dog = new Dog(\"Sultan\");\nconsole.log(dog.isA(\"good\"));\ndog.speak();\n\nvar yorkshire = new Yorkshire(\"Golgoth\",\"Male\");\nconsole.log(yorkshire.isA(\"bad\"));\nyorkshire.speak();\n\nvar bulldog = new Bulldog(\"Mike\");\nconsole.log(bulldog.isA(\"nice\"));\nbulldog.speak();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Can anyone pls tell me what's the name of the design pattern \"chauwel\" posted in this thread?\nIt ellegantly uses the prototype pattern, and I found it to be the best one on this page.\n\"Luke\" also posted the classic answer which is how javascript is supposed to do inheritence.\n \"chauwel\" is an encapsulating pattern of the prototype pattern.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In PHP/Java one can do:</p>\n\n<pre><code>class Sub extends Base\n{\n}\n</code></pre>\n\n<p>And automatically all public/protected methods, properties, fields, etc of the Super class become a part of the Sub class which can be overridden if necessary.</p>\n\n<p>What's the equivalent for that in Javascript?</p>\n",
            "last_activity_date": 1417726171,
            "question_id": 2107556,
            "score": 55,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "How to inherit from a class in javascript?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>As for libraries using it, there's always <a href=\"http://osteele.com/sources/javascript/functional/\" rel=\"nofollow\">Functional</a>.</p>\n\n<p>When is it useful in JS? Probably the same times it is useful in other modern languages, but the only time I can see myself using it is in conjunction with partial application.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would say that, most probably, all the animation library in JS are using currying. Rather than having to pass for each call a set of impacted elements and a function, describing how the element should behave, to a higher order function that will ensure all the timing stuff, its generally easier for the customer to release, as public API some function like \"slideUp\", \"fadeIn\" that takes only elements as arguments, and that are just some curried function returning the high order function with the default \"animation function\" built-in.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's no magic or anything... just a pleasant shorthand for anonymous functions.</p>\n\n<p>partial(alert, \"FOO!\") is equivalent to function(){alert(\"FOO!\");}</p>\n\n<p>partial(Math.max, 0) corresponds to function(x){return Math.max(0, x);}</p>\n\n<p>The calls to partial (<a href=\"http://mochikit.com\" rel=\"nofollow\">MochiKit</a> terminology. I think some other libraries give functions a .curry method which does the same thing) look slightly nicer and less noisy than the anonymous functions.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I found functions that resemble python's <code>functools.partial</code> more useful in JavaScript:</p>\n\n<pre><code>function partial(fn) {\n  return partialWithScope.apply(this,\n    Array.prototype.concat.apply([fn, this],\n      Array.prototype.slice.call(arguments, 1)));\n}\n\nfunction partialWithScope(fn, scope) {\n  var args = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    return fn.apply(scope, Array.prototype.concat.apply(args, arguments));\n  };\n}\n</code></pre>\n\n<p>Why would you want to use it?  A common situation where you want to use this is when you want to bind <code>this</code> in a function to a value:</p>\n\n<pre><code>var callback = partialWithScope(Object.function, obj);\n</code></pre>\n\n<p>Now when callback is called, <code>this</code> points to <code>obj</code>.  This is useful in event situations or to save some space because it usually makes code shorter.</p>\n\n<p>Currying is similar to partial with the difference that the function the currying returns just accepts one argument (as far as I understand that).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>@Hank Gay</p>\n\n<p>In response to EmbiggensTheMind's comment:</p>\n\n<p>I can't think of an instance where <a href=\"http://en.wikipedia.org/wiki/Currying\">currying</a>\u2014by itself\u2014is useful in JavaScript; it is a technique for converting function calls with multiple arguments into chains of function calls with a single argument for each call, but JavaScript supports multiple arguments in a single function call. </p>\n\n<p>In JavaScript\u2014and I assume most other actual languages (not lambda calculus)\u2014it is commonly associated with partial application, though. John Resig <a href=\"http://ejohn.org/blog/partial-functions-in-javascript/#postcomment\">explains it better</a>, but the gist is that have some logic that will be applied to two or more arguments, and you only know the value(s) for some of those arguments. </p>\n\n<p>You can use partial application/currying to fix those known values and return a function that only accepts the unknowns, to be invoked later when you actually have the values you wish to pass. This provides a nifty way to avoid repeating yourself when you would have been calling the same JavaScript built-ins over and over with all the same values but one. To steal John's example:</p>\n\n<pre><code>String.prototype.csv = String.prototype.split.partial(/,\\s*/);\nvar results = \"John, Resig, Boston\".csv();\nalert( (results[1] == \"Resig\") + \" The text values were split properly\" );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>Here's an example.</p>\n\n<p>I'm instrumenting a bunch of fields with JQuery so I can see what users are up to. The code looks like this:</p>\n\n<pre><code>$('#foo').focus(trackActivity);\n$('#foo').blur(trackActivity);\n$('#bar').focus(trackActivity);\n$('#bar').blur(trackActivity);\n</code></pre>\n\n<p>(For non-JQuery users, I'm saying that any time a couple of fields get or lose focus, I want the trackActivity() function to be called. I could also use an anonymous function, but I'd have to duplicate it 4 times, so I pulled it out and named it.)</p>\n\n<p>Now it turns out that one of those fields needs to be handled differently. I'd like to be able to pass a parameter in on one of those calls to be passed along to our tracking infrastructure. With currying, I can.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I agree that at times you would like to get the ball rolling by creating a pseudo-function that will always have the value of the first argument filled in.  Fortunately, I came across a brand new JavaScript library called jPaq (h<a href=\"http://jpaq.org/\" rel=\"nofollow\">ttp://jpaq.org/</a>) which provides this functionality.  The best thing about the library is the fact that you can download your own build which contains only the code that you will need.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript functions is called lamda in other functional language. It can be used to compose a new api (more powerful or complext function) to based on another developer's simple input. Curry is just one of the techniques. You can use it to create a simplified api to call a complex api. If you are the develper who use the simplified api (for example you use jQuery to do simple manipulation), you don't need to use curry. But if you want to create the simplified api, curry is your friend.  You have to write a javascript framework (like jQuery, mootools) or library, then you can appreciate its power. I wrote a enhanced curry function, at <a href=\"http://blog.semanticsworks.com/2011/03/enhanced-curry-method.html\" rel=\"nofollow\">http://blog.semanticsworks.com/2011/03/enhanced-curry-method.html</a> . You don't need to the curry method to do currying, it just help to do currying, but you can always do it manually by writing a function A(){} to return another function B(){}. To make it more interesting, use function B() to return another function C().</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I just wrote a jPaq example which shows some cool applications of the curry function.  Check it out here:  <a href=\"http://jpaq.org/examples/7\" rel=\"nofollow\">Currying Up String Functions</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's an <a href=\"http://javascriptweblog.wordpress.com/2010/10/25/understanding-javascript-closures/\"><strong>interesting AND practical use of currying in JavaScript that uses closures</strong></a>:</p>\n\n<p><strong>The Converter Example:</strong><br/></p>\n\n<pre><code>function converter(toUnit, factor, offset, input) {\n    offset = offset || 0;\n    return [((offset+input)*factor).toFixed(2), toUnit].join(\" \");\n}\n\nvar milesToKm = converter.curry('km',1.60936,undefined);\nvar poundsToKg = converter.curry('kg',0.45460,undefined);\nvar farenheitToCelsius = converter.curry('degrees C',0.5556, -32);\n\nmilesToKm(10);            // returns \"16.09 km\"\npoundsToKg(2.5);          // returns \"1.14 kg\"\nfarenheitToCelsius(98);   // returns \"36.67 degrees C\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 75
                },
                {
                    "body": "<p>Just wanted to add some resources for Functional.js:</p>\n\n<p>Lecture/conference explaining some applications\n<a href=\"http://www.youtube.com/watch?v=HAcN3JyQoyY\" rel=\"nofollow\">http://www.youtube.com/watch?v=HAcN3JyQoyY</a></p>\n\n<p>Updated Functional.js library:\n<a href=\"https://github.com/loop-recur/FunctionalJS\" rel=\"nofollow\">https://github.com/loop-recur/FunctionalJS</a>\nSome nice helpers (sorry new here, no reputation :p):\n/loop-recur/PreludeJS</p>\n\n<p>I've been using this library a lot recently to reduce the repetition in an js IRC clients helper library. It's great stuff - really helps clean up and simplify code. </p>\n\n<p>In addition, if performance becomes an issue (but this lib is pretty light), it's easy to just rewrite using a native function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I don't think I've grokked currying yet. I understand what it does, and how to do it. I just can't think of a situation I would use it.</p>\n\n<p>Where are you using currying in javascript (or where are the main libraries using it)? DOM manipulation or general application development examples welcome.</p>\n\n<p>EDIT: <a href=\"http://stackoverflow.com/questions/113780/javascript-curry-what-are-the-practical-applications#113799\">One of the answers</a> mentions animation. Functions like \"slideUp\", \"fadeIn\" take an element as an arguments and are normally a curried function returning the high order function with the default \"animation function\" built-in. Why is that better than just applying the higher-up function with some defaults?</p>\n\n<p>Oh and are there any drawbacks to using it?</p>\n\n<p>Cheers.</p>\n\n<p>EDIT: As requested here are some good resources on javascript currying:</p>\n\n<ul>\n<li><a href=\"http://www.dustindiaz.com/javascript-curry/\">http://www.dustindiaz.com/javascript-curry/</a></li>\n<li>Crockford, Douglas (2008) <em>Javascript: The Good Parts</em></li>\n<li><a href=\"http://www.crockford.com/javascript/www_svendtofte_com/code/curried_javascript/index.html\">http://www.svendtofte.com/code/curried_javascript/</a>\n(Takes a detour into ML so skip the whole section from \"A crash course in ML\" and start again at \"How to write curried JavaScript\")</li>\n<li><a href=\"http://blog.morrisjohns.com/javascript_closures_for_dummies\">http://blog.morrisjohns.com/javascript_closures_for_dummies</a></li>\n<li><a href=\"http://stackoverflow.com/questions/111102/how-does-a-javascript-closure-work\">How do JavaScript closures work?</a></li>\n<li><strong><a href=\"http://ejohn.org/blog/partial-functions-in-javascript/\">http://ejohn.org/blog/partial-functions-in-javascript</a> (Mr. Resig on the money as per usual)</strong></li>\n<li><a href=\"http://benalman.com/news/2010/09/partial-application-in-javascript/\">http://benalman.com/news/2010/09/partial-application-in-javascript/</a></li>\n</ul>\n\n<p>I'll add more as they crop up in the comments.</p>\n\n<hr>\n\n<p>EDIT:</p>\n\n<p>Thanks for the answers.</p>\n\n<p>So currying and partial application in general are convenience techniques.</p>\n\n<p>If you are frequently \"refining\" a high-level function by calling it with same configuration, you can curry (or use Resig's partial) the higher-level function to create simple, concise helper methods.</p>\n\n<p>Cheers!</p>\n",
            "last_activity_date": 1401038618,
            "question_id": 113780,
            "score": 109,
            "tags": [
                "javascript",
                "function",
                "currying",
                "partial-application"
            ],
            "title": "Javascript curry - what are the practical applications?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you have not too much data, you can definitely do pagination by just storing all the data in the browser and filtering what's visible at a certain time.  </p>\n\n<p>Here's a simple pagination example: <a href=\"http://jsfiddle.net/2ZzZB/56/\">http://jsfiddle.net/2ZzZB/56/</a></p>\n\n<p>That example was on the list of fiddles on the angular.js github wiki, which should be helpful: <a href=\"https://github.com/angular/angular.js/wiki/JsFiddle-Examples\">https://github.com/angular/angular.js/wiki/JsFiddle-Examples</a>  </p>\n\n<p>EDIT:\n<a href=\"http://jsfiddle.net/2ZzZB/16/\">http://jsfiddle.net/2ZzZB/16/</a> \nto \n<a href=\"http://jsfiddle.net/2ZzZB/56/\">http://jsfiddle.net/2ZzZB/56/</a> (won't show \"1/4.5\" if there is 45 results)    </p>\n",
                    "is_accepted": true,
                    "score": 122
                },
                {
                    "body": "<p>I just made a JSFiddle that show pagination + search + order by on each column using \n<em>Build with Twitter Bootstrap</em> code:\n<a href=\"http://jsfiddle.net/SAWsA/11/\">http://jsfiddle.net/SAWsA/11/</a></p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>Check out this directive: <a href=\"https://github.com/samu/angular-table\" rel=\"nofollow\">https://github.com/samu/angular-table</a></p>\n\n<p>It automates sorting and pagination a lot and gives you enough freedom to customize your table/list however you want.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've built a module that makes in-memory pagination incredibly simple. </p>\n\n<p>It allows you to paginate by simply replacing <code>ng-repeat</code> with <code>dir-paginate</code>, specifying the items per page as a piped filter, and then dropping the controls wherever you like in the form of a single directive, <code>&lt;dir-pagination-controls&gt;</code></p>\n\n<p>To take the original example asked by Tomarto, it would look like this:</p>\n\n<pre><code>&lt;ul class='phones'&gt;\n    &lt;li class='thumbnail' dir-paginate='phone in phones | filter:searchBar | orderBy:orderProp | limitTo:limit | itemsPerPage: limit'&gt;\n            &lt;a href='#/phones/{{phone.id}}' class='thumb'&gt;&lt;img ng-src='{{phone.imageUrl}}'&gt;&lt;/a&gt;\n            &lt;a href='#/phones/{{phone.id}}'&gt;{{phone.name}}&lt;/a&gt;\n            &lt;p&gt;{{phone.snippet}}&lt;/p&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;dir-pagination-controls&gt;&lt;/dir-pagination-controls&gt;\n</code></pre>\n\n<p>There is no need for any special pagination code in your controller. It's all handled internally by the module.</p>\n\n<h2>Demo: <a href=\"http://plnkr.co/edit/Wtkv71LIqUR4OhzhgpqL?p=preview\">http://plnkr.co/edit/Wtkv71LIqUR4OhzhgpqL?p=preview</a></h2>\n\n<h2>Source: <a href=\"https://github.com/michaelbromley/angularUtils/tree/master/src/directives/pagination\">dirPagination of GitHub</a></h2>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm trying to add pages to my list. I followed the AngularJS tutorial, the one about smartphones and I'm trying to display only certain number of objects. Here is my html file:</p>\n\n<pre><code>  &lt;div class='container-fluid'&gt;\n    &lt;div class='row-fluid'&gt;\n        &lt;div class='span2'&gt;\n            Search: &lt;input ng-model='searchBar'&gt;\n            Sort by: \n            &lt;select ng-model='orderProp'&gt;\n                &lt;option value='name'&gt;Alphabetical&lt;/option&gt;\n                &lt;option value='age'&gt;Newest&lt;/option&gt;\n            &lt;/select&gt;\n            You selected the phones to be ordered by: {{orderProp}}\n        &lt;/div&gt;\n\n        &lt;div class='span10'&gt;\n          &lt;select ng-model='limit'&gt;\n            &lt;option value='5'&gt;Show 5 per page&lt;/option&gt;\n            &lt;option value='10'&gt;Show 10 per page&lt;/option&gt;\n            &lt;option value='15'&gt;Show 15 per page&lt;/option&gt;\n            &lt;option value='20'&gt;Show 20 per page&lt;/option&gt;\n          &lt;/select&gt;\n          &lt;ul class='phones'&gt;\n            &lt;li class='thumbnail' ng-repeat='phone in phones | filter:searchBar | orderBy:orderProp | limitTo:limit'&gt;\n                &lt;a href='#/phones/{{phone.id}}' class='thumb'&gt;&lt;img ng-src='{{phone.imageUrl}}'&gt;&lt;/a&gt;\n                &lt;a href='#/phones/{{phone.id}}'&gt;{{phone.name}}&lt;/a&gt;\n                &lt;p&gt;{{phone.snippet}}&lt;/p&gt;\n            &lt;/li&gt;\n          &lt;/ul&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n</code></pre>\n\n<p>I've added a select tag with some values in order to limit the number of items that will be displayed. What I want now is to add the pagination to display the next 5, 10, etc.</p>\n\n<p>I have a controller that works with this:</p>\n\n<pre><code>function PhoneListCtrl($scope, Phone){\n    $scope.phones = Phone.query();\n    $scope.orderProp = 'age';\n    $scope.limit = 5;\n}\n</code></pre>\n\n<p>And also I have a module in order to retrieve the data from the json files.</p>\n\n<pre><code>angular.module('phonecatServices', ['ngResource']).\n    factory('Phone', function($resource){\n        return $resource('phones/:phoneId.json', {}, {\n            query: {method: 'GET', params:{phoneId:'phones'}, isArray:true}\n        });\n    });\n</code></pre>\n\n<p>Hope you can help me. Thanks in advance.</p>\n",
            "last_activity_date": 1410043996,
            "question_id": 11581209,
            "score": 73,
            "tags": [
                "javascript",
                "angularjs",
                "paginate"
            ],
            "title": "Pagination on a list using ng-repeat"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>var stack = [];\nstack.push(2);       // stack is now [2]\nstack.push(5);       // stack is now [2, 5]\nvar i = stack.pop(); // stack is now [2]\nalert(i);            // displays 5\n\nvar queue = [];\nqueue.push(2);         // queue is now [2]\nqueue.push(5);         // queue is now [2, 5]\nvar i = queue.shift(); // queue is now [5]\nalert(i);              // displays 2\n</code></pre>\n\n<p>taken from \"<a href=\"http://codetunnel.com/9-javascript-tips-you-may-not-know\">9 javascript tips you may not know</a>\"</p>\n",
                    "is_accepted": true,
                    "score": 302
                },
                {
                    "body": "<p>Arrays.</p>\n\n<p>Stack:</p>\n\n<pre><code>var stack = [];\n\n//put value on top of stack\nstack.push(1);\n\n//remove value from top of stack\nvar value = stack.pop();\n</code></pre>\n\n<p>Queue:</p>\n\n<pre><code>var queue = [];\n\n//put value on end of queue\nqueue.push(1);\n\n//Take first value from queue\nvar value = queue.shift();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The regular Array structure in Javascript is a Stack (first in, last out) and can also be used as a Queue (first in, first out) depending on the calls you make.</p>\n\n<p>Check this link to see how to make an Array act like a Queue:</p>\n\n<p><a href=\"http://javascript.about.com/library/blqueue.htm\" rel=\"nofollow\">Queues</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Javascript has push and pop methods, which operate on ordinary Javascript array objects.</p>\n\n<p>For queues, look here:</p>\n\n<p><a href=\"http://safalra.com/web-design/javascript/queues/\">http://safalra.com/web-design/javascript/queues/</a></p>\n\n<blockquote>\n  <p>Queues can be implemented in\n  JavaScript using either the push and\n  shift methods or unshift and pop\n  methods of the array object. Although\n  this is a simple way to implement\n  queues, it is very inefficient for\n  large queues \u2014 because the methods\n  operate on arrays, the shift and\n  unshift methods move every element in\n  the array each time they are called.</p>\n  \n  <p>Queue.js is a simple and efficient queue implementation for JavaScript whose dequeue function runs in amortised constant time. As a result, for larger queues it can be significantly faster than using arrays.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Create a pair of classes that provide the various methods that each of these data structures has (push, pop, peek, etc).  Now implement the methods.  If you're familiar with the concepts behind stack/queue, this should be pretty straightforward. You can implement the stack with an array, and a queue with a linked list, although there are certainly other ways to go about it.  Javascript will make this easy, because it is weakly typed, so you don't even have to worry about generic types, which you'd have to do if you were implementing it in Java or C#.  </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Or else you can use two arrays to implement queue data structure.</p>\n\n<pre><code>var temp_stack = new Array();\nvar stack = new Array();\n\ntemp_stack.push(1);\ntemp_stack.push(2);\ntemp_stack.push(3);\n</code></pre>\n\n<p>If I pop the elements now then the output will be 3,2,1.\nBut we want FIFO structure so you can do the following.</p>\n\n<pre><code>stack.push(temp_stack.pop());\nstack.push(temp_stack.pop());\nstack.push(temp_stack.pop());\n\nstack.pop(); //Pop out 1\nstack.pop(); //Pop out 2\nstack.pop(); //Pop out 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use your own customize class based on the concept, here the code snippet which you can use to do the stuff</p>\n\n<pre><code>/*\n*   Stack implementation in JavaScript\n*/\n\nfunction Stack(){\n    this.top = null;\n    this.count = 0;\n\n    this.GetCount = function(){\n        return this.count;\n    }\n\n    this.GetTop = function(){\n        return this.top;\n    }\n\n    this.Push = function(data){\n        var node = {\n            data : data,\n            next : null\n        }\n\n        node.next = this.top;\n        this.top = node;\n\n        this.count++;\n    }\n\n    this.Peek = function(){\n        if(this.top === null){\n            return null;\n        }else{\n            return this.top.data;\n        }\n    }\n\n    this.Pop = function(){\n        if(this.top === null){\n            return null;\n        }else{\n            var out = this.top;\n            this.top = this.top.next;\n            if(this.count&gt;0){\n                this.count--;\n            }\n\n            return out.data;\n        }\n    }\n\n    this.DisplayAll = function(){\n        if(this.top === null){\n            return null;\n        }else{\n            var arr = new Array();\n\n            var current = this.top;\n            //console.log(current);\n            for(var i = 0;i&lt;this.count;i++){\n                arr[i] = current.data;\n                current = current.next;\n            }\n\n            return arr;\n        }\n    }\n}\n</code></pre>\n\n<p>and to check this use your console and try these line one by one.</p>\n\n<pre><code>&gt;&gt; var st = new Stack();\n\n&gt;&gt; st.Push(\"BP\");\n\n&gt;&gt; st.Push(\"NK\");\n\n&gt;&gt; st.GetTop();\n\n&gt;&gt; st.GetCount();\n\n&gt;&gt; st.DisplayAll();\n\n&gt;&gt; st.Pop();\n\n&gt;&gt; st.DisplayAll();\n\n&gt;&gt; st.GetTop();\n\n&gt;&gt; st.Peek();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>No Array(s)   </p>\n\n<pre><code>//Javascript stack linked list data structure (no array)\n\nfunction node(value, noderef) {\n    this.value = value;\n    this.next = noderef;\n}\nfunction stack() {\n    this.push = function (value) {\n        this.next = this.first;\n        this.first = new node(value, this.next);\n    }\n    this.pop = function () {\n        var popvalue = this.first.value;\n        this.first = this.first.next;\n        return popvalue;\n    }\n    this.hasnext = function () {\n        return this.next != undefined;\n    }\n    this.isempty = function () {\n        return this.first == undefined;\n    }\n\n}\n\n//Javascript stack linked list data structure (no array)\nfunction node(value, noderef) {\n    this.value = value;\n    this.next = undefined;\n}\nfunction queue() {\n    this.enqueue = function (value) {\n        this.oldlast = this.last;\n        this.last = new node(value);\n        if (this.isempty())\n            this.first = this.last;\n        else \n           this.oldlast.next = this.last;\n    }\n    this.dequeue = function () {\n        var queuvalue = this.first.value;\n        this.first = this.first.next;\n        return queuvalue;\n    }\n    this.hasnext = function () {\n        return this.first.next != undefined;\n    }\n    this.isempty = function () {\n        return this.first == undefined;\n    }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you understand stacks with push() and pop() functions, then queue is just to make one of these operations in the oposite sense. Oposite of push() is unshift() and oposite of pop() es shift().\nThen:</p>\n\n<pre><code>//classic stack\nvar stack = [];\nstack.push(\"first\"); // push inserts at the end\nstack.push(\"second\");\nstack.push(\"last\");\nstack.pop(); //pop takes the \"last\" element\n\n//One way to implement queue is to insert elements in the oposite sense than a stack\nvar queue = [];\nqueue.unshift(\"first\"); //unshift inserts at the beginning\nqueue.unshift(\"second\");\nqueue.unshift(\"last\");\nqueue.pop(); //\"first\"\n\n//other way to do queues is to take the elements in the oposite sense than stack\nvar queue = [];\nqueue.push(\"first\"); //push, as in the stack inserts at the end\nqueue.push(\"second\");\nqueue.push(\"last\");\nqueue.shift(); //but shift takes the \"first\" element\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you wanted to make your own data structures, you could build your own:</p>\n\n<pre><code>var Stack = function(){\n  this.top = null;\n  this.size = 0;\n};\n\nvar Node = function(data){\n  this.data = data;\n  this.previous = null;\n};\n\nStack.prototype.push = function(data) {\n  var node = new Node(data);\n\n  node.previous = this.top;\n  this.top = node;\n  this.size += 1;\n  return this.top;\n};\n\nStack.prototype.pop = function() {\n  temp = this.top;\n  this.top = this.top.previous;\n  this.size -= 1;\n  return temp;\n};\n</code></pre>\n\n<p>And for queue:</p>\n\n<pre><code>var Queue = function() {\n  this.first = null;\n  this.size = 0;\n};\n\nvar Node = function(data) {\n  this.data = data;\n  this.next = null;\n};\n\nQueue.prototype.enqueue = function(data) {\n  var node = new Node(data);\n\n  if (!this.first){\n    this.first = node;\n  } else {\n    n = this.first;\n    while (n.next) {\n      n = n.next;\n    }\n    n.next = node;\n  }\n\n  this.size += 1;\n  return node;\n};\n\nQueue.prototype.dequeue = function() {\n  temp = this.first;\n  this.first = this.first.next;\n  this.size -= 1;\n  return temp;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>What is the best way to implement a Stack and a Queue in JavaScript?</p>\n\n<p>I'm looking to do the shunting-yard algorithm and I'm going to need these data-structures.</p>\n",
            "last_activity_date": 1422598257,
            "question_id": 1590247,
            "score": 169,
            "tags": [
                "javascript",
                "data-structures",
                "stack",
                "queue"
            ],
            "title": "How do you implement a Stack and a Queue in JavaScript?"
        },
        {
            "answer_count": 24,
            "answers": [
                {
                    "body": "<p>If you're dealing with literal notation, and not constructors, you can use <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Operators/Special_Operators/typeof_Operator\">typeof</a>:.</p>\n\n<pre><code>typeof \"Hello World\"; // string\ntypeof 123;           // number\n</code></pre>\n\n<p>If you're creating numbers and strings via a constructor, such as <code>var foo = new String(\"foo\")</code>, you should keep in mind that <code>typeof</code> may return <code>object</code> for <code>foo</code>. </p>\n\n<p>Perhaps a more foolproof method of checking the type would be to utilize the method found in <a href=\"http://underscorejs.org/#\">underscore.js</a> (annotated source can be found <a href=\"http://underscorejs.org/docs/underscore.html#section-107\">here</a>),</p>\n\n<pre><code>var toString = Object.prototype.toString;\n\n_.isString = function (obj) {\n  return toString.call(obj) == '[object String]';\n}\n</code></pre>\n\n<p>This returns a boolean <code>true</code> for the following:</p>\n\n<pre><code>_.isString(\"Jonathan\"); // true\n_.isString(new String(\"Jonathan\")); // true\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 230
                },
                {
                    "body": "<p>Try this,</p>\n\n<pre><code>&lt;script&gt;\nvar regInteger = /^\\d+$/;\n\nfunction isInteger( str ) {    \n    return regInteger.test( str );\n}\n\nif(isInteger(\"1a11\")) {\n   console.log( 'Integer' );\n} else {\n   console.log( 'Non Integer' );\n}\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You're looking for isNaN():</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n  alert(isNaN(123));\n  alert(isNaN(-1.23));\n  alert(isNaN(5-2));\n  alert(isNaN(0));\n  alert(isNaN(\"Hello\"));\n  alert(isNaN(\"2005/12/12\"));\n&lt;/script&gt;\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/isNaN\" rel=\"nofollow\">JavaScript isNaN() Function</a> at MDN.</p>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<p>Best way to do that is using isNaN + type casting:</p>\n\n<p><strong>Updated all-in method:</strong></p>\n\n<pre><code>function isNumber(obj) { return !isNaN(parseFloat(obj)) }\n</code></pre>\n\n<p><strong>The same using regex:</strong></p>\n\n<pre><code>function isNumber(n) { return /^-?[\\d.]+(?:e-?\\d+)?$/.test(n); } \n\n------------------------\n\nisNumber ('123'); // true  \nisNumber (5); // true  \nisNumber ('q345'); // false\nisNumber(null); // false\nisNumber(undefined); // false\nisNumber(false); // false\nisNumber('   '); // false\n</code></pre>\n\n<p>EDIT:</p>\n\n<p>In case you need to handle <code>null</code> values:</p>\n\n<pre><code>function isNumber (o) {\n  return ! isNaN (o-0) &amp;&amp; o != null;\n}\n</code></pre>\n\n<p>EDIT2 (updated) :\nIn case you need to handle <code>null</code> and the empty string:</p>\n\n<pre><code>function isNumber (o) {\n  return ! isNaN (o-0) &amp;&amp; o !== null &amp;&amp; o !== \"\" &amp;&amp; o !== false;\n}\n\nisNumber (''); // false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 108
                },
                {
                    "body": "<p>The best way I have found is to either check for a method on the string, i.e.:</p>\n\n<pre><code>if (x.substring) {\n// do string thing\n} else{\n// do other thing\n}\n</code></pre>\n\n<p>or if you want to do something with the number check for a number property,</p>\n\n<pre><code>if (x.toFixed) {\n// do number thing\n} else {\n// do other thing\n}\n</code></pre>\n\n<p>This is sort of like \"duck typing\", it's up to you which way makes the most sense. I don't have enough karma to comment, but typeof fails for boxed strings and numbers, i.e.:</p>\n\n<pre><code>alert(typeof new String('Hello World'));\nalert(typeof new Number(5));\n</code></pre>\n\n<p>will alert \"object\".</p>\n",
                    "is_accepted": false,
                    "score": 53
                },
                {
                    "body": "<pre><code>//testing data types accurately in JavaScript (opposed to \"typeof\")\n//from http://bonsaiden.github.com/JavaScript-Garden/\nfunction is(type, obj) {\n    var clas = Object.prototype.toString.call(obj).slice(8, -1);\n    return obj !== undefined &amp;&amp; obj !== null &amp;&amp; clas === type;\n}\n\n//basic usage\nis('String', 'test'); // true\nis('Array', true); // false\n</code></pre>\n\n<p>Or adapt it to return an unknown type:</p>\n\n<pre><code>function realTypeOf(obj) {\n    return Object.prototype.toString.call(obj).slice(8, -1);\n}\n\n//usage\nrealTypeOf(999); // 'Number'\n</code></pre>\n\n<p><b>May 12, 2012 Update:</b>\nFull example at <a href=\"http://mrrena.blogspot.com/2012/05/javascript-better-typeof-accurately.html\">Javascript: A Better typeof</a>.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Best way to do this:</p>\n\n<pre><code>function isNumber(num) {\n  return (typeof num == 'string' || typeof num == 'number') &amp;&amp; !isNaN(num - 0) &amp;&amp; num !== '';\n};\n</code></pre>\n\n<p>This satisfies the following test cases:</p>\n\n<pre><code>assertEquals(\"ISNUMBER-True: 0\", true, isNumber(0));\nassertEquals(\"ISNUMBER-True: 1\", true, isNumber(-1));\nassertEquals(\"ISNUMBER-True: 2\", true, isNumber(-500));\nassertEquals(\"ISNUMBER-True: 3\", true, isNumber(15000));\nassertEquals(\"ISNUMBER-True: 4\", true, isNumber(0.35));\nassertEquals(\"ISNUMBER-True: 5\", true, isNumber(-10.35));\nassertEquals(\"ISNUMBER-True: 6\", true, isNumber(2.534e25));\nassertEquals(\"ISNUMBER-True: 7\", true, isNumber('2.534e25'));\nassertEquals(\"ISNUMBER-True: 8\", true, isNumber('52334'));\nassertEquals(\"ISNUMBER-True: 9\", true, isNumber('-234'));\n\nassertEquals(\"ISNUMBER-False: 0\", false, isNumber(NaN));\nassertEquals(\"ISNUMBER-False: 1\", false, isNumber({}));\nassertEquals(\"ISNUMBER-False: 2\", false, isNumber([]));\nassertEquals(\"ISNUMBER-False: 3\", false, isNumber(''));\nassertEquals(\"ISNUMBER-False: 4\", false, isNumber('one'));\nassertEquals(\"ISNUMBER-False: 5\", false, isNumber(true));\nassertEquals(\"ISNUMBER-False: 6\", false, isNumber(false));\nassertEquals(\"ISNUMBER-False: 7\", false, isNumber());\nassertEquals(\"ISNUMBER-False: 8\", false, isNumber(undefined));\nassertEquals(\"ISNUMBER-False: 9\", false, isNumber(null));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>uh, how about just:</p>\n\n<pre><code>function IsString(obj) {\n    return obj !== undefined &amp;&amp; obj != null &amp;&amp; obj.toLowerCase !== undefined;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>the best way i found which also thinks of positive and negative numbers is from : \n<a href=\"http://shop.oreilly.com/product/9780596004675.do\" rel=\"nofollow\">O'Reilly Javascript and DHTML Cookbook</a> :</p>\n\n<pre><code>function isNumber(elem) {\nvar str = elem.value;\nvar oneDecimal = false;\nvar oneChar = 0;\n// make sure value hasn't cast to a number data type\nstr = str.toString( );\nfor (var i = 0; i &lt; str.length; i++) {\n    oneChar = str.charAt(i).charCodeAt(0);\n    // OK for minus sign as first character\n    if (oneChar =  = 45) {\n        if (i =  = 0) {\n            continue;\n        } else {\n            alert(\"Only the first character may be a minus sign.\");\n            return false;\n        }\n    }\n    // OK for one decimal point\n    if (oneChar =  = 46) {\n        if (!oneDecimal) {\n            oneDecimal = true;\n            continue;\n        } else {\n            alert(\"Only one decimal is allowed in a number.\");\n            return false;\n        }\n    }\n    // characters outside of 0 through 9 not OK\n    if (oneChar &lt; 48 || oneChar &gt; 57) {\n        alert(\"Enter only numbers into the field.\");\n        return false;\n    }\n}\nreturn true;\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Errr? Just use regular expressions! :)</p>\n\n<pre><code>function isInteger(val) {\n  return val.match(/^[0-9]$/)\n}\n\nfunction isFloat(val) {\n  return val.match(/^[0-9]*/\\.[0-9]+$/)\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Can you just divide it by 1?</p>\n\n<p>I assume the issue would be a string input like: \"123ABG\"</p>\n\n<pre><code>var Check = \"123ABG\"\n\nif(Check == Check / 1)\n{\nalert(\"This IS a number \\n\")\n}\n\nelse\n{\nalert(\"This is NOT a number \\n\")\n}\n</code></pre>\n\n<p>Just a way I did it recently.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Check if the value is a string literal or String object:</p>\n\n<pre><code>function isString(o) {\n    return typeof o == \"string\" || (typeof o == \"object\" &amp;&amp; o.constructor === String);\n}\n</code></pre>\n\n<p>Unit test:</p>\n\n<pre><code>function assertTrue(value, message) {\n    if (!value) {\n        alert(\"Assertion error: \" + message);\n    }\n}\n\nfunction assertFalse(value, message)\n{\n    assertTrue(!value, message);\n}\n\nassertTrue(isString(\"string literal\"), \"number literal\");\nassertTrue(isString(new String(\"String object\")), \"String object\");\nassertFalse(isString(1), \"number literal\");\nassertFalse(isString(true), \"boolean literal\");\nassertFalse(isString({}), \"object\");\n</code></pre>\n\n<p>Checking for a number is similar:</p>\n\n<pre><code>function isNumber(o) {\n    return typeof o == \"number\" || (typeof o == \"object\" &amp;&amp; o.constructor === Number);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p><strong>This solution resolves many of the issues raised here!</strong></p>\n\n<p>This is by far the most reliable method I have used by far. I did not invent this, and cannot recall where I originally found it.  But it works where other techniques fail:</p>\n\n<pre><code>// Begin public utility /getVarType/\n// Returns 'Function', 'Object', 'Array',\n// 'String', 'Number', 'Boolean', or 'Undefined'\ngetVarType = function ( data ){\n  if (undefined === data ){ return 'Undefined'; }\n  if (data === null ){ return 'Null'; }\n  return {}.toString.call(data).slice(8, -1);\n};  \n// End public utility /getVarType/\n</code></pre>\n\n<p><strong>Example of correctness</strong></p>\n\n<pre><code>var str = new String();\nconsole.warn( getVarType(str) ); // Reports \"String\"    \nconsole.warn( typeof str );      // Reports \"object\"\n\nvar num = new Number();\nconsole.warn( getVarType(num) ); // Reports \"Number\"\nconsole.warn( typeof num );      // Reports \"object\"\n\nvar list = [];\nconsole.warn( getVarType( list ) ); // Reports \"Array\"\nconsole.warn( typeof list );        // Reports \"object\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>since a string as '1234' with typeof will show 'string', and the inverse cannot ever happen (typeof 123 will always be number), the best is to use a simple regex <code>/^\\-?\\d+$/.test(var)</code>. Or a more advanced to match floats, integers and negative numbers, <code>/^[\\-\\+]?[\\d]+\\.?(\\d+)?$/</code>\nThe important side of <code>.test</code> is that it WON'T throw an exception if the var isn't an string, the value can be anything. </p>\n\n\n\n<pre><code>var val, regex = /^[\\-\\+]?[\\d]+\\.?(\\d+)?$/;\n\nregex.test(val)       // false \nval = '1234';\nregex.test(val)       // true\nval = '-213';\nregex.test(val)       // true\nval = '-213.2312';\nregex.test(val)       // true\nval = '+213.2312';\nregex.test(val)       // true\nval = 123;\nregex.test(val)       // true\nval = new Number(123);\nregex.test(val)       // true\nval = new String('123');\nregex.test(val)       // true\nval = '1234e';\nregex.test(val)       // false \nval = {};\nregex.test(val)       // false \nval = false;\nregex.test(val)       // false \nregex.test(undefined) // false \nregex.test(null)      // false \nregex.test(window)    // false \nregex.test(document)  // false \n</code></pre>\n\n<p>If you are looking for the real type, then typeof alone will do. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>@BitOfUniverse's answer is good, and I come up with a new way:</p>\n\n<pre><code>function isNum(n) {\n    return !isNaN(n/0);\n}\n\nisNum('')  // false\nisNum(2)   // true\nisNum('2k') // false\nisNum('2')  //true\n</code></pre>\n\n<p>I know <code>0</code> can't be dividend, but here the function works perfectly.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's an approach based on the idea of coercing the input to a number or string by adding zero or the null string, and then do a typed equality comparison.</p>\n\n<pre><code>function is_number(x) { return x === x+0;  }\nfunction is_string(x) { return x === x+\"\"; }\n</code></pre>\n\n<p>For some unfathomable reason, <code>x===x+0</code> seems to perform better than <code>x===+x</code>.</p>\n\n<p>Are there any cases where this fails?</p>\n\n<p>In the same vein:</p>\n\n<pre><code>function is_boolean(x) { return x === !!x; }\n</code></pre>\n\n<p>This appears to be mildly faster than either <code>x===true || x===false</code> or <code>typeof x===\"boolean\"</code> (and much faster than <code>x===Boolean(x)</code>).</p>\n\n<p>Then there's also </p>\n\n<pre><code>function is_regexp(x)  { return x === RegExp(x); }\n</code></pre>\n\n<p>All these depend on the existence of an \"identity\" operation particular to each type which can be applied to any value and reliably produce a value of the type in question. I cannot think of such an operation for dates.</p>\n\n<p>For NaN, there is</p>\n\n<pre><code>function is_nan(x) { return x !== x;}\n</code></pre>\n\n<p>This is basically underscore's version, and as it stands is about four times faster than <code>isNaN()</code>, but the comments in the underscore source mention that \"NaN is the only <strong>number</strong> that does not equal itself\" and adds a check for _.isNumber. Why? What other objects would not equal themselves? Also, underscore uses <code>x !== +x</code>--but what difference could the <code>+</code> here make?</p>\n\n<p>Then for the paranoid:</p>\n\n<pre><code>function is_undefined(x) { return x===[][0]; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>jQuery uses this:</p>\n\n<pre><code>function isNumber(obj) {\n  return !isNaN( parseFloat( obj ) ) &amp;&amp; isFinite( obj );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Simply use </p>\n\n<pre><code>myVar.constructor == String\n</code></pre>\n\n<p>or</p>\n\n<pre><code>myVar.constructor == Number\n</code></pre>\n\n<p>if you want to handle strings defined as objects or literals and saves you don't want to use a  helper function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think converting the var to a string decreases the performance, at least this <a href=\"http://jsperf.com/check-if-var-is-string\" rel=\"nofollow\">test</a> performed in the latest browsers shows so.</p>\n\n<p>So if you care about performance, I would, I'd use this:</p>\n\n<pre><code>typeof str === \"string\" || str instanceof String\n</code></pre>\n\n<p>for checking if the variable is a string (even if you use <code>var str = new String(\"foo\")</code>, <code>str instanceof String</code> would return true).</p>\n\n<p>As for checking if it's a number I would go for the native: <code>isNaN</code>; function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function IsNumeric(num) {\n    return ((num &gt;=0 || num &lt; 0)&amp;&amp; (parseInt(num)==num) );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Jsut an FYI, if you're using jQuery you have</p>\n\n<pre><code>$.isNumeric() \n</code></pre>\n\n<p>to handle this. More details on <a href=\"http://api.jquery.com/jQuery.isNumeric/\" rel=\"nofollow\">http://api.jquery.com/jQuery.isNumeric/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>or just use the invert of isNaN</p>\n\n<p>if(!isNaN(data))\n do something with the number\nelse\n it is a string</p>\n\n<p>and yes - using jQuery - $.isNumeric() is more fun for the buck.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Very late to the party; however, the following has always worked well for me when I want to check whether some input is either a string or a number in one shot.</p>\n\n<pre><code>return !!Object.prototype.toString.call(input).match(/\\[object (String|Number)\\]/);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Created a jsperf on the checking if a variable is a number. Quite interesting! typeof actually has a performance use. Using <code>typeof</code> for anything other than numbers, generally goes a 1/3rd the speed as a <code>variable.constructor</code> since the majority of data types in javascript are Objects; numbers are not!</p>\n\n<p><a href=\"http://jsperf.com/jemiloii-fastest-method-to-check-if-type-is-a-number\" rel=\"nofollow\">http://jsperf.com/jemiloii-fastest-method-to-check-if-type-is-a-number</a></p>\n\n<p><code>typeof variable === 'number'</code>| fastest | if you want a number, such as 5, and not '5'<br>\n<code>typeof parseFloat(variable) === 'number'</code>| fastest | if you want a number, such as 5, and '5'</p>\n\n<p><code>isNaN()</code> is slower, but not that much slower. I had high hopes for <code>parseInt</code> and <code>parseFloat</code>, however they were horribly slower.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anyone know how can I check whether a variable is a number or a string in javascript?</p>\n",
            "last_activity_date": 1422435331,
            "question_id": 1303646,
            "score": 219,
            "tags": [
                "javascript",
                "types"
            ],
            "title": "Check whether variable is number or string in javascript"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>no, jquery always returns a jquery object regardless if a selector was matched or not.\nYou need to use .length</p>\n\n<pre><code>if ( $('#someDiv').length ){\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>As the other commenters are suggesting the most efficient way to do it seems to be: </p>\n\n<pre><code>if ($(selector).length ) {\n    // Do something\n}\n</code></pre>\n\n<p>If you absolutely must have an exists() function - which will be slower- you can do:</p>\n\n<pre><code>jQuery.fn.exists = function(){return this.length&gt;0;}\n</code></pre>\n\n<p>Then in your code you can use</p>\n\n<pre><code>if ($(selector).exists()) {\n    // Do something\n}\n</code></pre>\n\n<p>As answered <a href=\"http://stackoverflow.com/questions/31044/is-there-an-exists-function-for-jquery\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 421
                },
                {
                    "body": "<p>Alternatively:</p>\n\n<pre><code>if( jQuery('#elem').get(0) ) {}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>if you used:</p>\n\n<pre><code>jQuery.fn.exists = function(){return ($(this).length &gt; 0);}\nif ($(selector).exists()) { }\n</code></pre>\n\n<p>you would imply that chaining was possible when it is not.</p>\n\n<p>This would be better</p>\n\n<pre><code>jQuery.exists = function(selector) {return ($(selector).length &gt; 0);}\nif ($.exists(selector)) { }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<pre><code>if ($('#elem')[0]) {\n  // do stuff\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Yet another way:</p>\n\n<pre><code>$('#elem').each(function(){\n  // do stuff\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>For me <code>.exists</code> doesn't work, so I use the index :</p>\n\n<pre><code>if ($(\"#elem\").index() ! = -1) {}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>I think most of the people replying here didn't quite understand the question, or else I might be mistaken.</p>\n\n<p>The question is \"how to check whether or not a <em>selector</em> exists in jQuery.\"</p>\n\n<p>Most people have taken this for \"how to check whether an element exists in the DOM using jQuery.\" Hardly interchangeable.</p>\n\n<p>jQuery allows you to create custom selectors, but see here what happens when you try to use on e before initializing it;</p>\n\n<pre><code>$(':YEAH');\n\"Syntax error, unrecognized expression: YEAH\"\n</code></pre>\n\n<p>After running into this, I realized it was simply a matter of checking</p>\n\n<pre><code>if ($.expr[':']['YEAH']) {\n    // Query for your :YEAH selector with ease of mind.\n}\n</code></pre>\n\n<p>Cheers.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I prefer the </p>\n\n<pre><code>    if (jQuery(\"#anyElement\").is(\"*\")){...}\n</code></pre>\n\n<p>Which basically checks if this elements is a kind of \"*\" (any element).\nJust a cleaner syntax and the \"is\" makes more sense inside an \"if\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><strong>Extreme Update</strong> <em><sub>Oct 2, '13</sub></em></p>\n\n<hr>\n\n<p>Originally I made this plugin to provide a bit more acute sense than simply <code>if ($(ele).length) { /* DO WORK */ }</code>.\nSure that is simple and easy, but I didn't like how it took me \"outside\" of typical \"jQuery style\".\nI really wanted a <code>$.fn.exist()</code> method in order to maintain readable markup.\nAlso, the <em>simple plugins</em> so often previously suggested, do not account for <em>developer error</em>.\nThus the creation of the <em>very simple</em> plugin found <a href=\"http://jsfiddle.net/SpYk3/qkQgL\" rel=\"nofollow\"><strong>here</strong></a> (<a href=\"http://jsfiddle.net/SpYk3/qkQgL/44/\" rel=\"nofollow\"><strong>minified</strong></a>).</p>\n\n<p>I soon decided to kick it up a notch and provide for more functionality in checking against <em>developer mistakes</em> as well as provide a bit more <em>functionality</em>.\nThe thought lead me to the update on <sub>Jun 6, '13</sub> found over <a href=\"http://jsfiddle.net/SpYk3/qkQgL/41/\" rel=\"nofollow\"><strong>here</strong></a> (<a href=\"http://jsfiddle.net/SpYk3/qkQgL/45/\" rel=\"nofollow\"><strong>minified</strong></a>).\nNow I've finally put together a version I really <strong><em>like</em></strong>!</p>\n\n<p>This new version of the plugin can still be used as simple as <code>if ($(ele).exist()) { /* DO WORK */ }</code>, however I found that to be a bit \"against the grain\" with jQuery <em>typical</em> markup style.\nI thought, \"<em>Why the <strong>if</strong> statement? Shouldn't that be in a <strong>callback</strong>?</em>\"\nNow it is! Behold, the new, bigger, stronger, callbackier <strong>$.exist() Plugin</strong>!</p>\n\n<p><a href=\"http://jsfiddle.net/SpYk3/cEUR5/\" rel=\"nofollow\"><h1>jsFiddle</h1></a></p>\n\n<h2>Plugin</h2>\n\n<pre><code>(function($) {\n    if (!$.exist) {\n        $.extend({\n            exist: function() {\n                var ele, cbm;\n                if (arguments.length) {\n                    for (x in arguments) {\n                        switch (typeof arguments[x]) {\n                            case 'function':\n                                cbm = arguments[x];\n                                break;\n                            case 'object':\n                                if (arguments[x] instanceof jQuery) ele = arguments[x];\n                                else {\n                                    var obj = arguments[x];\n                                    for (y in obj) {\n                                        if (typeof obj[y] == 'function') cbm = obj[y];\n                                        if (typeof obj[y] == 'object' &amp;&amp; obj[y] instanceof jQuery) ele = obj[y];\n                                        if (typeof obj[y] == 'string') ele = $(obj[y]);\n                                    }\n                                }\n                                break;\n                            case 'string':\n                                ele = $(arguments[x]);\n                                break;\n                        }\n                    }\n                }\n\n                if (cbm) {  //  has callback method\n                    return ele.each(function(i) {\n                        var exist =  $(this).length &gt; 0 ? true : false; //  strict setting of boolean\n                        if (cbm.toString().match(/function \\(\\)/)) {    //  has no parameter, thus we only fire callback if ele exist\n                            if (exist) cbm.apply(this);\n                        }\n                        else {  //  has a parameter, pass exist as parameter, let callback method determine what to do next, even ele does not exist\n                            cbm.apply(this, [exist]);\n                        }\n                    })\n                }\n                else {  //  has NO callback method, thus return if exist or not based on element existant length\n                    if (ele.length &lt;= 1) return ele.length &gt; 0 ? true : false; //   strict return of boolean\n                    else return ele.length; //  return actual length for how many of this element exist\n                }\n                return false; //    only hits if something errored!\n            }\n        });\n        $.fn.extend({\n            exist: function() {\n                var args = [$(this)];\n                if (arguments.length) for (x in arguments) args.push(arguments[x]);\n                return $.exist.apply($, args);\n            }\n        });\n    }\n})(jQuery);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/SpYk3/cEUR5/\" rel=\"nofollow\">jsFiddle</a></p>\n\n<p>The use is extremely easy.\nYou can still use in an <strong><code>if:</code></strong> statement, or you can create your own callback.\nKeep in mind, the callback has 2 possible <em>creations</em>.\nYou can create the call back with <strong>NO PARAMETERS</strong> such as <code>function() {}</code> and it will <strong>ONLY FIRE IF</strong> the element <strong>EXIST</strong>.\n<em>However</em>, if you provide a parameter, such as <code>function(exist) {}</code> or even <code>function(bob) {}</code>, then the callback will <strong>ALWAYS FIRE</strong> even if the element does <strong>NOT EXIST</strong>.\nIn the second scenario, your <em>parameter</em>, no mater what you name it, becomes a <strong><code>BOOLEAN</code></strong> of wether or not the element exist.</p>\n\n<p><a href=\"http://jsfiddle.net/SpYk3/cEUR5/\" rel=\"nofollow\">jsFiddle</a></p>\n\n<h2>Example Uses</h2>\n\n<pre><code>if ($.exist('#eleID')) { /* DO WORK */ }        //  param as STRING\nif ($.exist($('#eleID'))) { /*  DO WORK */ }    //  param as jQuery OBJECT\nif ($('#eleID').exist()) { /*   DO WORK */ }        //  enduced on jQuery OBJECT\n\n$.exist('#eleID', function() {          //  param is STRING &amp;&amp; CALLBACK METHOD\n    /*  DO WORK */\n    /*  Because there is NO paremeter, this callback method will ONLY fire if the element EXIST */\n})\n\n$.exist($('#eleID'), function(exist) {      //  param is jQuery OBJECT &amp;&amp; CALLBACK METHOD\n    /*  DO WORK */\n    /*  Because there IS a paremeter, this callback method will ALLWAYS fire even if the element DOES NOT exist */\n})\n\n$('#eleID').exist(function() {          //  enduced on jQuery OBJECT with CALLBACK METHOD\n    /*  DO WORK */\n    /*  Will ONLY FIRE IF EXIST */\n})\n\n$.exist({                       //  param is OBJECT containing 2 key|value pairs: element = STRING, callback = METHOD\n    element: '#eleID',\n    callback: function(exist) {\n        /*  DO WORK */\n    /*  Will ALWAYS FIRE    */\n    }\n})\n\n$.exist({                       //  param is OBJECT containing 2 key|value pairs: element = jQuery OBJECT, callback = METHOD\n    element: $('#eleID'),\n    callback: function() {\n        /*  DO WORK */\n    /*  Will ONLY FIRE IF EXIST */\n    }\n})\n\n$.exist([                       //  param is ARRAY containing 2 key|value pairs: jQuery STRING, METHOD\n    '#eleID',\n    function(exist) {\n        /*  DO WORK */\n    /*  Will ALWAYS FIRE    */\n    }\n])\n\n//  Will only callback if true'\n$.exist([                       //  param is ARRAY containing 2 key|value pairs: jQuery OBJECT, METHOD\n    $('#eleID'),\n    function() {\n        /*  DO WORK */\n    /*  Will ONLY FIRE IF EXIST */\n    }\n])\n\n$.exist({ element: '#eleID' });     //  param is OBJECT containing 1 key|value pairs: element = STRING\n\n$.exist({ element: $('#eleID') });      //  param is OBJECT containing 1 key|value pairs: element = jQuery OBJECT\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/SpYk3/cEUR5/1/\" rel=\"nofollow\">Minified jsFiddle</a></p>\n\n<pre><code>(function(d){$.exist||($.extend({exist:function(){var a,c;if(arguments.length)for(x in arguments)switch(typeof arguments[x]){case \"function\":c=arguments[x];break;case \"object\":if(arguments[x]instanceof jQuery)a=arguments[x];else{var b=arguments[x];for(y in b)\"function\"==typeof b[y]&amp;&amp;(c=b[y]),\"object\"==typeof b[y]&amp;&amp;b[y]instanceof jQuery&amp;&amp;(a=b[y]),\"string\"==typeof b[y]&amp;&amp;(a=$(b[y]))}break;case \"string\":a=$(arguments[x])}return c?a.each(function(a){a=0&lt;$(this).length?!0:!1;c.toString().match(/function \\(\\)/)?a&amp;&amp;c():c(a)}):1&gt;=a.length?0&lt;a.length?!0:!1:a.length}}),$.fn.extend({exist:function(){var a=[$(this)];if(arguments.length)for(x in arguments)a.push(arguments[x]);return $.exist.apply($,a)}}))})(jQuery);\n</code></pre>\n\n<hr>\n\n<p><strong><code>NOTE:</code></strong> All minified versions were made using <a href=\"http://closure-compiler.appspot.com/home\" rel=\"nofollow\">Google Closure</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>firstly create a function:</p>\n\n<pre><code>$.fn.is_exists = function(){ return document.getElementById(selector) }\n</code></pre>\n\n<p>then</p>\n\n<pre><code>if($(selector).is_exists()){ ... }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>jQuery.fn.exists = function(selector, callback) {\n    var $this = $(this);\n    $this.each(function() {\n        callback.call(this, ($(this).find(selector).length &gt; 0));\n    });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Mootools, I'd just run <code>if ($('target')) { ... }</code>.  Does <code>if ($('#target')) { ... }</code> in jQuery work the same way?</p>\n",
            "last_activity_date": 1391034324,
            "question_id": 299802,
            "score": 226,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "How do you check if a selector matches something in jQuery?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>broadcast.emit sends the msg to all other clients (except for the sender)</p>\n\n<pre><code>socket.on('cursor', function(data) {\n  socket.broadcast.emit('msg', data);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is my list</p>\n\n<pre><code> // send to current request socket client\n socket.emit('message', \"this is a test\");\n\n // sending to all clients, include sender\n io.sockets.emit('message', \"this is a test\");\n\n // sending to all clients except sender\n socket.broadcast.emit('message', \"this is a test\");\n\n // sending to all clients in 'game' room(channel) except sender\n socket.broadcast.to('game').emit('message', 'nice game');\n\n  // sending to all clients in 'game' room(channel), include sender\n io.sockets.in('game').emit('message', 'cool game');\n\n // sending to individual socketid\n io.sockets.socket(socketid).emit('message', 'for your eyes only');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 161
                },
                {
                    "body": "<p>use this coding</p>\n\n<pre><code>io.sockets.on('connection', function (socket) {\n\n    socket.on('mousemove', function (data) {\n\n        socket.broadcast.emit('moving', data);\n    });\n</code></pre>\n\n<p>this socket.broadcast.emit() will emit everthing in the function except to the server which is emitting</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For namespaces within rooms looping the list of clients in a room (similar to Nav's answer) is one of only two approaches I've found that will work.  The other is to use exclude.  E.G.</p>\n\n<pre><code>socket.on('message',function(data) {\n    io.of( 'namespace' ).in( data.roomID ).except( socket.id ).emit('message',data);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>From the @LearnRPG answer but with 1.0:</p>\n\n<pre><code> // send to current request socket client\n socket.emit('message', \"this is a test\");\n\n // sending to all clients, include sender\n io.sockets.emit('message', \"this is a test\"); //still works\n //or\n io.emit('message', 'this is a test');\n\n // sending to all clients except sender\n socket.broadcast.emit('message', \"this is a test\");\n\n // sending to all clients in 'game' room(channel) except sender\n socket.broadcast.to('game').emit('message', 'nice game');\n\n // sending to all clients in 'game' room(channel), include sender\n // docs says \"simply use to or in when broadcasting or emitting\"\n io.in('game').emit('message', 'cool game');\n\n // sending to individual socketid, socketid is like a room\n socket.broadcast.to(socketid).emit('message', 'for your eyes only');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Other cases</p>\n\n<pre><code>io.of('/chat').on('connection', function (socket) {\n    //sending to all clients in 'room' and you\n    io.of('/chat').in('room').emit('message', \"data\");\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>To send something to all clients, you use:</p>\n\n<pre><code>io.sockets.emit('response', data);\n</code></pre>\n\n<p>To receive from clients, you use:</p>\n\n<pre><code>socket.on('cursor', function(data) {\n  ...\n});\n</code></pre>\n\n<p>How can I combine the two so that when recieving a message on the server from a client, I send that message to all users except the one sending the message.</p>\n\n<pre><code>socket.on('cursor', function(data) {\n  io.sockets.emit('response', data);\n});\n</code></pre>\n\n<p>Do I have to hack it around by sending the client-id with the message and then checking on the clientside or is there an easier way?</p>\n",
            "last_activity_date": 1421682572,
            "question_id": 10058226,
            "score": 36,
            "tags": [
                "javascript",
                "node.js",
                "socket.io"
            ],
            "title": "Send response to all clients except sender (Socket.io)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Amazon just allowed Cross-Origin Resource Sharing, in theory it allows your users to upload to S3 directly, without using your server (and PHP) as a proxy.</p>\n\n<p>Heres the docs -> <a href=\"http://docs.amazonwebservices.com/AmazonS3/latest/dev/cors.html\">http://docs.amazonwebservices.com/AmazonS3/latest/dev/cors.html</a></p>\n\n<p>They do a great job of telling you how to enable it on an S3 bucket, but iv found no actual javascript examples of how to get data from client to bucket.</p>\n\n<p>First person to post CORS.js is a legend xD   </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Got Amazon S3 &amp; CORS working on js and html5 using XMLHTTPObject based on this article <a href=\"http://bencoe.tumblr.com/post/30685403088/browser-side-amazon-s3-uploads-using-cors\">article</a>. </p>\n\n<p>1: CORS only works from a proper URL \"http://localhost\". (file///xyz will make you go insane)</p>\n\n<p>2 : Make sure you got the POLICY and Secret compiled correctly - here is my policy and this is the link you can get the project to get you started with <a href=\"http://www.tweetegy.com/2012/01/save-an-image-file-directly-to-s3-from-a-web-browser-using-html5-and-backbone-js/\">Signature and Policy </a> -- do not publish this JS with your Secret EVER!</p>\n\n<pre><code>POLICY_JSON = { \"expiration\": \"2020-12-01T12:00:00.000Z\",\n            \"conditions\": [\n            {\"bucket\": this.get('bucket')},\n            [\"starts-with\", \"$key\", \"\"],\n            {\"acl\": this.get('acl')},                           \n            [\"starts-with\", \"$Content-Type\", \"\"],\n            [\"content-length-range\", 0, 524288000]\n            ]\n          };\n\n\n    var secret = this.get('AWSSecretKeyId');\n    var policyBase64 = Base64.encode(JSON.stringify(POLICY_JSON));\n    console.log ( policyBase64 )\n\n    var signature = b64_hmac_sha1(secret, policyBase64);\n    b64_hmac_sha1(secret, policyBase64);\n    console.log( signature);\n</code></pre>\n\n<p>Here is the JS code</p>\n\n<pre><code>function uploadFile() {\n\n    var file = document.getElementById('file').files[0];\n    var fd = new FormData();\n\n    var key = \"events/\" + (new Date).getTime() + '-' + file.name;\n\n    fd.append('key', key);\n    fd.append('acl', 'public-read'); \n    fd.append('Content-Type', file.type);      \n    fd.append('AWSAccessKeyId', 'YOUR ACCESS KEY');\n    fd.append('policy', 'YOUR POLICY')\n    fd.append('signature','YOUR SIGNATURE');\n\n    fd.append(\"file\",file);\n\n    var xhr = getXMLHTTPObject();\n\n    xhr.upload.addEventListener(\"progress\", uploadProgress, false);\n    xhr.addEventListener(\"load\", uploadComplete, false);\n    xhr.addEventListener(\"error\", uploadFailed, false);\n    xhr.addEventListener(\"abort\", uploadCanceled, false);\n\n    xhr.open('POST', 'https://&lt;yourbucket&gt;.s3.amazonaws.com/', true); //MUST BE LAST LINE BEFORE YOU SEND \n\n    xhr.send(fd);\n  }\n</code></pre>\n\n<p>Helper functions</p>\n\n<pre><code>function uploadProgress(evt) {\n    if (evt.lengthComputable) {\n      var percentComplete = Math.round(evt.loaded * 100 / evt.total);\n      document.getElementById('progressNumber').innerHTML = percentComplete.toString() + '%';\n    }\n    else {\n      document.getElementById('progressNumber').innerHTML = 'unable to compute';\n    }\n  }\n\n  function uploadComplete(evt) {\n    /* This event is raised when the server send back a response */\n    alert(\"Done - \" + evt.target.responseText );\n  }\n\n  function uploadFailed(evt) {\n    alert(\"There was an error attempting to upload the file.\" + evt);\n  }\n\n  function uploadCanceled(evt) {\n    alert(\"The upload has been canceled by the user or the browser dropped the connection.\");\n  }\n</code></pre>\n\n<p>Then the HTML Form </p>\n\n<pre><code> &lt;form id=\"form1\" enctype=\"multipart/form-data\" method=\"post\"&gt;\n&lt;div class=\"row\"&gt;\n  &lt;label for=\"file\"&gt;Select a File to Upload&lt;/label&gt;&lt;br /&gt;\n  &lt;input type=\"file\" name=\"file\" id=\"file\" onchange=\"fileSelected()\"/&gt;\n&lt;/div&gt;\n&lt;div id=\"fileName\"&gt;&lt;/div&gt;\n&lt;div id=\"fileSize\"&gt;&lt;/div&gt;\n&lt;div id=\"fileType\"&gt;&lt;/div&gt;\n&lt;div class=\"row\"&gt;\n  &lt;input type=\"button\" onclick=\"uploadFile()\" value=\"Upload\" /&gt;\n&lt;/div&gt;\n&lt;div id=\"progressNumber\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p></p>\n\n<p>Happy CORS-ing!</p>\n",
                    "is_accepted": true,
                    "score": 69
                },
                {
                    "body": "<p>Here's an example of resumable file uploads on Amazon S3 using CORS and javascript <a href=\"http://cotag.github.com/Condominios/\" rel=\"nofollow\">http://cotag.github.com/Condominios/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am developing a website in HTML, javascript &amp; jQuery. I want to upload images to amazon s3 server in an ajax request. There is no such SDK to integrate s3 in Javascript. A PHP SDK is available, but it is not useful to me. Can anybody provide solution to this in javascript?</p>\n",
            "last_activity_date": 1383293352,
            "question_id": 11240127,
            "score": 32,
            "tags": [
                "javascript",
                "html5",
                "jquery",
                "amazon-s3"
            ],
            "title": "Uploading Image to Amazon s3 with HTML, javascript &amp; jQuery with Ajax Request (No PHP)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Is the variable <code>null</code>:</p>\n\n<pre><code>if (a === null)\n// or\nif (a == null)\n</code></pre>\n\n<p>...but note the latter will also be true if <code>a</code> is <code>undefined</code>.</p>\n\n<p>Is it <code>undefined</code>:</p>\n\n<pre><code>if (typeof a === \"undefined\")\n// or\nif (a === undefined)\n// or\nif (a == undefined)\n</code></pre>\n\n<p>...but again, note that the last one is vague; it will also be true if <code>a</code> is <code>null</code>.</p>\n\n<p>Now, despite the above, the <strong>usual</strong>  way to check for those is to use the fact that they're <em>falsey</em>:</p>\n\n<pre><code>if (!a) {\n    // `a` is falsey, which includes `undefined` and `null`\n    // (and `\"\"`, and `0`, and `NaN`, and [of course] `false`)\n}\n</code></pre>\n\n<p>What's the difference between <code>==</code> and <code>===</code>: <code>==</code> uses type coercion, so <code>\"1\" == 1</code>. <code>===</code> doesn't, <code>\"1\" !== 1</code>. Type coercion uses quite complex rules and can have surprising results (for instance, <code>\"\" == 0</code> is true).</p>\n\n<p>More in <a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">the spec</a>.</p>\n\n<p>Some experiments to play with: <a href=\"http://jsbin.com/evowe6\">http://jsbin.com/evowe6</a></p>\n",
                    "is_accepted": true,
                    "score": 211
                },
                {
                    "body": "<p>As far as regards #2 I must add that == and != are not commutative and that is something to be aware of. I'll give you a famous example, but it`s easy to find out others</p>\n\n<pre><code>false == undefined  // false\nfalse == null       // false\nnull == undefined   // true  WTF\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The difference is subtle.</p>\n\n<p>In JavaScript an <code>undefined</code> variable is a variable that as never been declared, or never assigned a value. Let's say you declare <code>var a;</code> for instance, then <code>a</code> will be <code>undefined</code>, because it was never assigned any value.</p>\n\n<p>But if you then assign <code>a = null;</code> then <code>a</code> will now be <code>null</code>. In JavaScript <code>null</code> is an object (try <code>typeof null</code> in a JavaScript console if you don't believe me), which means that null is a value (in fact even <code>undefined</code> is a value).</p>\n\n<p>Example:</p>\n\n<pre><code>var a;\ntypeof a;     # =&gt; \"undefined\"\n\na = null;\ntypeof null;  # =&gt; \"object\"\n</code></pre>\n\n<p>This can prove useful in function arguments. You may want to have a default value, but consider null to be acceptable. In which case you may do:</p>\n\n<pre><code>function doSomething(first, second, optional) {\n    if (typeof optional === \"undefined\") {\n        optional = \"three\";\n    }\n    // do something\n}\n</code></pre>\n\n<p>If you omit the <code>optional</code> parameter <code>doSomething(1, 2) then</code>optional will be the <code>\"three\"</code> string but if you pass <code>doSomething(1, 2, null)</code> then optional will be <code>null</code>.</p>\n\n<p>As for the equal <code>==</code> and strictly equal <code>===</code> comparators, the first one is weakly type, while strictly equal also checks for the type of values. That means that <code>0 == \"0\"</code> will return true; while <code>0 === \"0\"</code> will return false, because a number is not a string.</p>\n\n<p>You may use those operators to check between <code>undefined</code> an <code>null</code>. For example:</p>\n\n<pre><code>null === null            # =&gt; true\nundefined === undefined  # =&gt; true\nundefined === null       # =&gt; false\nundefined == null        # =&gt; true\n</code></pre>\n\n<p>The last case is interesting, because it allows you to check if a variable is either undefined or null and nothing else:</p>\n\n<pre><code>function test(val) {\n    return val == null;\n}\ntest(null);       # =&gt; true\ntest(undefined);  # =&gt; true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p><strong>undefined</strong></p>\n\n<p>It means the variable is not yet intialized . </p>\n\n<p>Example :</p>\n\n<pre><code>var x;\nif(x){ //you can check like this\n   //code.\n}\n</code></pre>\n\n<p><strong>equals(==)</strong></p>\n\n<p>It only check value is equals not datatype .</p>\n\n<p>Example :</p>\n\n<pre><code>var x = true;\nvar y = new Boolean(true);\nx == y ; //returns true\n</code></pre>\n\n<p>Because it checks only value .</p>\n\n<p><strong>Strict Equals(===)</strong></p>\n\n<p>Checks the value and datatype should be same .</p>\n\n<p>Example :</p>\n\n<pre><code>var x = true;\nvar y = new Boolean(true);\nx===y; //returns false.\n</code></pre>\n\n<p>Because it checks the datatype x is a primitive type and y is a boolean object .</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">The spec</a> is the place to go for full answers to these questions. Here's a summary:</p>\n\n<ol>\n<li>For a variable <code>x</code>, you can:<br>\n<br>\n<ul>\n<li>check whether it's <code>null</code> by direct comparison using <code>===</code>. Example: <code>x === null</code></li>\n<li>check whether it's <code>undefined</code> by either of two basic methods: direct comparison with <code>undefined</code> or <code>typeof</code>. For <a href=\"http://stackoverflow.com/a/4726198/96100\">various reasons</a>, I prefer <code>typeof x === \"undefined\"</code>.</li>\n<li>check whether it's one of <code>null</code> and <code>undefined</code> by using <code>==</code> and relying on the slightly arcane type coercion rules that mean <code>x == null</code> does exactly what you want.<br>\n<br></li>\n</ul></li>\n<li>The basic difference between <code>==</code> and <code>===</code> is that if the operands are of different types, <code>===</code> will always return <code>false</code> while <code>==</code> will convert one or both operands into the same type using <a href=\"http://ecma-international.org/ecma-262/5.1/#sec-11.9.3\">rules</a> that lead to some slightly unintuitive behaviour. If the operands are of the same type (e.g. both are strings, such as in the <code>typeof</code> comparison above), <code>==</code> and <code>===</code> will behave exactly the same.</li>\n</ol>\n\n<p>More reading:</p>\n\n<ul>\n<li>Angus Croll's <a href=\"http://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/\">Truth, Equality and JavaScript</a></li>\n<li>Andrea Giammarchi's <a href=\"http://webreflection.blogspot.co.uk/2010/10/javascript-coercion-demystified.html\">JavaScript Coercion Demystified</a></li>\n<li>comp.lang.javascript FAQs: <a href=\"http://jibbering.com/faq/notes/type-conversion/\">JavaScript Type-Conversion</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I know, I know there must be some threads covering this topic. But I used the search and didn't get the answer which fits my needs. So here we go:</p>\n\n<ol>\n<li><p>How do I check a variable if it's <code>null</code> or <code>undefined</code> and what is the difference between the <code>null</code> and <code>undefined</code>?</p></li>\n<li><p>What is the difference between \"==\" and \"===\" (it's hard to search Google for <code>===</code> )?</p></li>\n</ol>\n",
            "last_activity_date": 1418218973,
            "question_id": 5101948,
            "score": 127,
            "tags": [
                "javascript",
                "null",
                "undefined"
            ],
            "title": "JavaScript checking for null vs. undefined and difference between == and ==="
        },
        {
            "answer_count": 21,
            "answers": [
                {
                    "body": "<p>You could try setting body size to window size with overflow: hidden when modal is open</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I'm not sure about this code, but it's worth a shot.</p>\n\n<p>In jQuery:</p>\n\n<pre><code>$(document).ready(function() {\n    $(/* Put in your \"onModalDisplay\" here */)./* whatever */(function() {\n        $(\"#Modal\").css(\"overflow\", \"hidden\");\n    });\n});\n</code></pre>\n\n<p>As I said before, I'm not 100% sure but try anyway.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You could use the following logic, I tested it and it works(even in IE) </p>\n\n<pre><code>   &lt;html&gt;\n\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nvar currentScroll=0;\nfunction lockscroll(){\n    $(window).scrollTop(currentScroll);\n}\n\n\n$(function(){\n\n        $('#locker').click(function(){\n            currentScroll=$(window).scrollTop();\n            $(window).bind('scroll',lockscroll);\n\n        })  \n\n\n        $('#unlocker').click(function(){\n            currentScroll=$(window).scrollTop();\n            $(window).unbind('scroll');\n\n        })\n})\n\n&lt;/script&gt;\n\n&lt;div&gt;\n\n&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n&lt;button id=\"locker\"&gt;lock&lt;/button&gt;\n&lt;button id=\"unlocker\"&gt;unlock&lt;/button&gt;\n&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Bootstrap's <code>modal</code> automatically adds the class <code>modal-open</code> to the body when a modal dialog is shown and removes it when the dialog is hidden. You can therefore add the following to your CSS:</p>\n\n<pre><code>body.modal-open {\n    overflow: hidden;\n}\n</code></pre>\n\n<p>You could argue that the above code belongs to the Bootstrap CSS code base, but this is an easy fix to add it to your site.</p>\n\n<p><strong>Update 8th feb, 2013</strong><br>\nThis has now stopped working in Twitter Boostrap v. 2.3.0 -- they no longer add the <code>modal-open</code> class to the body.</p>\n\n<p>A workaround would be to add the class to the body when the modal is about to be shown, and remove it when the modal is closed:</p>\n\n<pre><code>$(\"#myModal\").on(\"show\", function () {\n  $(\"body\").addClass(\"modal-open\");\n}).on(\"hidden\", function () {\n  $(\"body\").removeClass(\"modal-open\")\n});\n</code></pre>\n\n<p><strong>Update 11th march, 2013</strong>\nLooks like the <code>modal-open</code> class will return in Bootstrap 3.0, explicitly for the purpose of preventing the scroll: </p>\n\n<blockquote>\n  <p>Reintroduces .modal-open on the body (so we can nuke the scroll there)</p>\n</blockquote>\n\n<p>See this: <a href=\"https://github.com/twitter/bootstrap/pull/6342\">https://github.com/twitter/bootstrap/pull/6342</a> - look at the <strong>Modal</strong> section.</p>\n",
                    "is_accepted": true,
                    "score": 163
                },
                {
                    "body": "<p>Simply hide the body overflow and it makes body not scrolling. When you hide the modal, revert it to automatic. </p>\n\n<p>Here is the code:</p>\n\n<pre><code>$('#adminModal').modal().on('shown', function(){\n    $('body').css('overflow', 'hidden');\n}).on('hidden', function(){\n    $('body').css('overflow', 'auto');\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><em><strong>Warning:</strong> The option below is not relevant to Bootstrap v3.0.x, as scrolling in those versions has been explicitly confined to the modal itself.  If you disable wheel events you may inadvertently prevent some users from viewing the content in modals that have heights greater than the viewport height.</em></p>\n\n<hr>\n\n<h2>Yet Another Option: Wheel Events</h2>\n\n<p>The <strong>scroll</strong> event is not cancelable.  However it is possible to cancel the <a href=\"https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/mousewheel\" rel=\"nofollow\"><strong>mousewheel</strong></a> and <a href=\"https://developer.mozilla.org/en-US/docs/DOM/DOM_event_reference/wheel?redirect=no\" rel=\"nofollow\"><strong>wheel</strong></a> events.  The big caveat is that not all legacy browsers support them, Mozilla only recently adding support for the latter in Gecko 17.0.  I don't know the full spread, but IE6+ and Chrome do support them.</p>\n\n<p>Here's how to leverage them:</p>\n\n<pre><code>$('#myModal')\n  .on('shown', function () {\n    $('body').on('wheel.modal mousewheel.modal', function () {\n      return false;\n    });\n  })\n  .on('hidden', function () {\n    $('body').off('wheel.modal mousewheel.modal');\n  });\n</code></pre>\n\n<h2><a href=\"http://jsfiddle.net/mmfansler/qrKWq/\" rel=\"nofollow\">JSFiddle</a></h2>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>This worked for me:</p>\n\n<pre><code>$(\"#mymodal\").mouseenter(function(){\n   $(\"body\").css(\"overflow\", \"hidden\"); \n}).mouseleave(function(){\n   $(\"body\").css(\"overflow\", \"visible\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You need to go beyond @charlietfl's answer and account for scrollbars, otherwise you may see a document reflow.</p>\n\n<h3>Opening the modal:</h3>\n\n<ol>\n<li>Record the <code>body</code> width</li>\n<li>Set <code>body</code> overflow to <code>hidden</code></li>\n<li>Explicitly set the body width to what it was in step 1.</li>\n</ol>\n\n<blockquote>\n<pre><code>var $body = $(document.body);\nvar oldWidth = $body.innerWidth();\n$body.css(\"overflow\", \"hidden\");\n$body.width(oldWidth);\n</code></pre>\n</blockquote>\n\n<h3>Closing the modal:</h3>\n\n<ol>\n<li>Set <code>body</code> overflow to <code>auto</code></li>\n<li>Set <code>body</code> width to <code>auto</code></li>\n</ol>\n\n<blockquote>\n<pre><code>var $body = $(document.body);\n$body.css(\"overflow\", \"hidden\");\n$body.width(\"auto\");\n</code></pre>\n</blockquote>\n\n<p>Inspired by: <a href=\"http://jdsharp.us/jQuery/minute/calculate-scrollbar-width.php\" rel=\"nofollow\">http://jdsharp.us/jQuery/minute/calculate-scrollbar-width.php</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>/* =============================\n * Disable / Enable Page Scroll\n * when Bootstrap Modals are\n * shown / hidden\n * ============================= */\n\nfunction preventDefault(e) {\n  e = e || window.event;\n  if (e.preventDefault)\n      e.preventDefault();\n  e.returnValue = false;  \n}\n\nfunction theMouseWheel(e) {\n  preventDefault(e);\n}\n\nfunction disable_scroll() {\n  if (window.addEventListener) {\n      window.addEventListener('DOMMouseScroll', theMouseWheel, false);\n  }\n  window.onmousewheel = document.onmousewheel = theMouseWheel;\n}\n\nfunction enable_scroll() {\n    if (window.removeEventListener) {\n        window.removeEventListener('DOMMouseScroll', theMouseWheel, false);\n    }\n    window.onmousewheel = document.onmousewheel = null;  \n}\n\n$(function () {\n  // disable page scrolling when modal is shown\n  $(\".modal\").on('show', function () { disable_scroll(); });\n  // enable page scrolling when modal is hidden\n  $(\".modal\").on('hide', function () { enable_scroll(); });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>&lt;body onscroll=\"stop_scroll()\"&gt;\n</code></pre>\n\n<p>javascript:</p>\n\n<pre><code>function stop_scroll(){\n    scroll(0,0) ;\n}\n</code></pre>\n\n<p>If you set a flag <code>(bool)</code> inside <code>stop_scroll()</code>, you can decide when to engage it (if you want it only temporarely).</p>\n\n<p>This will reset scrolling every time some element overflows the <code>body</code> boundaries and the windows tends to scroll (this is totally independent of scrollbars; <code>overflow : hidden</code> has nothing to do with it).</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The best solution is the css-only <code>body{overflow:hidden}</code> solution used by most of these answers.  Some answers provide a fix that also prevent the \"jump\" caused by the disappearing scrollbar; however, none were too elegant.  So, I wrote these two functions, and they seem to work pretty well.</p>\n\n<pre><code>var $body = $(window.document.body);\n\nfunction bodyFreezeScroll() {\n    var bodyWidth = $body.innerWidth();\n    $body.css('overflow', 'hidden');\n    $body.css('marginRight', ($body.css('marginRight') ? '+=' : '') + ($body.innerWidth() - bodyWidth))\n}\n\nfunction bodyUnfreezeScroll() {\n    var bodyWidth = $body.innerWidth();\n    $body.css('marginRight', '-=' + (bodyWidth - $body.innerWidth()))\n    $body.css('overflow', 'auto');\n}\n</code></pre>\n\n<p>Check out <a href=\"http://jsfiddle.net/ngwhk/\" rel=\"nofollow\">this jsFiddle</a> to see it in use.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Most of the pieces are here, but I don't see any answer that puts it all together.</p>\n\n<p>The problem is threefold.</p>\n\n<p>(1) prevent the scroll of the underlying page</p>\n\n<pre><code>$('body').css('overflow', 'hidden')\n</code></pre>\n\n<p>(2) and remove the scroll bar</p>\n\n<pre><code>var handler = function (e) { e.preventDefault() }\n$('.modal').bind('mousewheel touchmove', handler)\n</code></pre>\n\n<p>(3) clean up when the modal is dismissed</p>\n\n<pre><code>$('.modal').unbind('mousewheel touchmove', handler)\n$('body').css('overflow', '')\n</code></pre>\n\n<p>If the modal is not full-screen then apply the .modal bindings to a full screen overlay.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Couldn't make it work on Chrome just by changing CSS, because I didn't want the page to scroll back to the top. This worked fine:</p>\n\n<pre><code>$(\"#myModal\").on(\"show.bs.modal\", function () {\n  var top = $(\"body\").scrollTop(); $(\"body\").css('position','fixed').css('overflow','hidden').css('top',-top).css('width','100%').css('height',top+5000);\n}).on(\"hide.bs.modal\", function () {\n  var top = $(\"body\").position().top; $(\"body\").css('position','relative').css('overflow','auto').css('top',0).scrollTop(-top);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>My solution for Bootstrap 3:</p>\n\n<pre><code>.modal {\n  overflow-y: hidden;\n}\nbody.modal-open {\n  margin-right: 0;\n}\n</code></pre>\n\n<p>because for me the only <code>overflow: hidden</code> on the <code>body.modal-open</code> class did not prevent the page from shifting to the left due to the original <code>margin-right: 15px</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For those wondering how to get the scroll event for the bootstrap 3 modal:</p>\n\n<pre><code>$(\".modal\").scroll(function() {\n    console.log(\"scrolling!);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The accepted answer doesn't work on mobile (iOS7 w/ Safari 7, at least) and I don't want MOAR javascript running on my site when css will do. Check this out:</p>\n\n<p>This css will prevent the background page from scrolling under the modal.</p>\n\n<pre><code>body.modal-open {\n    overflow: hidden;\n    position: fixed;\n}\n</code></pre>\n\n<p>However, it also has a slight side-affect of essentially scrolling to the top. <code>position:absolute</code> resolves this but, re-introduces the ability to scroll on mobile.</p>\n\n<p>If you know your viewport (<a href=\"https://github.com/will-e-yams/yams.viewport\">my plugin for adding viewport to the <code>&lt;body&gt;</code></a>) you can just add a css toggle for the <code>position</code>.</p>\n\n<pre><code>body.modal-open {\n    // block scroll for mobile;\n    // causes underlying page to jump to top;\n    // prevents scrolling on all screens\n    overflow: hidden;\n    position: fixed;\n}\nbody.viewport-lg {\n    // block scroll for desktop;\n    // will not jump to top;\n    // will not prevent scroll on mobile\n    position: absolute; \n}\n</code></pre>\n\n<hr>\n\n<p>I also add this to prevent the underlying page from jumping left/right when showing/hiding modals.</p>\n\n<pre><code>body {\n    // STOP MOVING AROUND!\n    overflow-x: hidden;\n    overflow-y: scroll !important;\n}\n</code></pre>\n\n<p><a href=\"http://stackoverflow.com/a/24727026/444382\">this answer is a x-post.</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is the best solution for me: </p>\n\n<p>Css:</p>\n\n<pre><code>.modal {\n     overflow-y: auto !important;\n}\n</code></pre>\n\n<p>And Js:</p>\n\n<pre><code>modalShown = function () {\n    $('body').css('overflow', 'hidden');\n},\n\nmodalHidden = function () {\n    $('body').css('overflow', 'auto');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am using this vanilla js function to add \"modal-open\" class to the body. (Based on smhmic's answer)</p>\n\n<pre><code>function freezeScroll(show, new_width)\n{\n    var innerWidth = window.innerWidth,\n        clientWidth = document.documentElement.clientWidth,\n        new_margin = ((show) ? (new_width + innerWidth - clientWidth) : new_width) + \"px\";\n\n    document.body.style.marginRight = new_margin;\n    document.body.className = (show) ? \"modal-open\" : \"\";\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Hiding the overflow and fixing the position does the trick however with my fluid design it would fix it past the browsers width, so a width:100% fixed that.</p>\n\n<pre><code>body.modal-open{overflow:hidden;position:fixed;width:100%}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try this code:</p>\n\n<pre><code>$('.entry_details').dialog({\n    width:800,\n    height:500,\n    draggable: true,\n    title: entry.short_description,\n    closeText: \"Zamknij\",\n    open: function(){\n        //    blokowanie scrolla dla body\n        var body_scroll = $(window).scrollTop();\n        $(window).on('scroll', function(){\n            $(document).scrollTop(body_scroll);\n        });\n    },\n    close: function(){\n        $(window).off('scroll');\n    }\n}); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Try this one:</strong></p>\n\n<pre><code>.modal-open {\n    overflow: hidden;\n    position:fixed;\n    width: 100%;\n    height: 100%;\n}\n</code></pre>\n\n<p>it worked for me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want my body to stop scrolling when using the mousewheel while the Modal (from <a href=\"http://twitter.github.com/bootstrap\">http://twitter.github.com/bootstrap</a>) on my website (<a href=\"http://www.mysocialsync.com\">http://www.mysocialsync.com</a>) is opened.</p>\n\n<p>I've tried to call the piece of javascript below when the modal is opened but without success</p>\n\n<pre><code>$(window).scroll(function() { return false; });\n\nAND\n\n$(window).live('scroll', function() { return false; });\n</code></pre>\n\n<p>Please note our website dropped support for IE6, IE7+ needs to be compatible though.</p>\n\n<p>Thanks in advance for any help!</p>\n",
            "last_activity_date": 1424000932,
            "question_id": 9538868,
            "score": 87,
            "tags": [
                "javascript",
                "jquery",
                "scroll",
                "twitter-bootstrap"
            ],
            "title": "Prevent BODY from scrolling when a modal is opened"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p><strong>Edit September 2014</strong></p>\n\n<p>Given that:</p>\n\n<ul>\n<li>Different versions of the same browser on OS X have yielded different values in the past, and may do so in the future, and that</li>\n<li>Using the trackpad on OS X yields very similar <em>effects</em> to using a mouse wheel, yet gives very different event <em>values</em>, and yet the device difference cannot be detected by JS</li>\n</ul>\n\n<p>\u2026I can only recommend using this simple, sign-based-counting code:</p>\n\n<pre><code>var handleScroll = function(evt){\n  if (!evt) evt = event;\n  var direction = (evt.detail&lt;0 || evt.wheelDelta&gt;0) ? 1 : -1;\n  // Use the value as you will\n};\nsomeEl.addEventListener('DOMMouseScroll',handleScroll,false); // for Firefox\nsomeEl.addEventListener('mousewheel',    handleScroll,false); // for everyone else\n</code></pre>\n\n<hr>\n\n<p><em>Original attempt to be correct follows.</em></p>\n\n<p>Here is my first attempt at a script to normalize the values. It has two flaws on OS X: Firefox on OS X will produce values 1/3 what they should be, and Chrome on OS X will produce values 1/40 what they should be.</p>\n\n<pre><code>// Returns +1 for a single wheel roll 'up', -1 for a single roll 'down'\nvar wheelDistance = function(evt){\n  if (!evt) evt = event;\n  var w=evt.wheelDelta, d=evt.detail;\n  if (d){\n    if (w) return w/d/40*d&gt;0?1:-1; // Opera\n    else return -d/3;              // Firefox;         TODO: do not /3 for OS X\n  } else return w/120;             // IE/Safari/Chrome TODO: /3 for Chrome OS X\n};\n</code></pre>\n\n<p>You can test out this code on your own browser here: <a href=\"http://phrogz.net/JS/wheeldelta.html\" rel=\"nofollow\">http://phrogz.net/JS/wheeldelta.html</a></p>\n\n<p><em>Suggestions for detecting and improving the behavior on Firefox and Chrome on OS X are welcome.</em></p>\n\n<p><strong>Edit</strong>: One suggestion from @Tom is to simply count each event call as a single move, using the sign of the distance to adjust it. This will not give great results under smooth/accelerated scrolling on OS X, nor handle perfectly cases when the mouse wheel is moved very fast (e.g. <code>wheelDelta</code> is 240), but these happen infrequently. This code is now the recommended technique shown at the top of this answer, for the reasons described there.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>This is a problem I've been fighting with for some hours today, and not for the first time :(</p>\n\n<p>I've been trying to sum up values over a \"swipe\" and see how different browsers report values, and they vary a lot, with Safari reporting order of magnitude bigger numbers on almost all platforms, Chrome reporting quite more (like 3 times more) than firefox, firefox being balanced on the long run but quite different among platforms on small movements (on Ubuntu gnome, nearly only +3 or -3, seems like it sums up smaller events and then send a big \"+3\")</p>\n\n<p>The current solutions found right now are three :</p>\n\n<ol>\n<li>The already mentioned \"use only the sign\" which kills any kind of acceleration</li>\n<li>Sniff the browser up to minor version and platform, and adjust properly</li>\n<li>Qooxdoo recently implemented a self adapting algorithm, which basically tries to scale the delta based on minimum and maximum value received so far.</li>\n</ol>\n\n<p>The idea in Qooxdoo is good, and works, and is the only solution I've currently found to be completely consistent cross browser. </p>\n\n<p>Unfortunately it tends to renormalize also the acceleration. If you try it (in their demos), and scroll up and down at maximum speed for a while, you'll notice that scrolling extremely fast or extremely slow basically produce nearly the same amount of movement. On the opposite if you reload the page and only swipe very slowly, you'll notice that it will scroll quite fast\".</p>\n\n<p>This is frustrating for a Mac user (like me) used to give vigorous scroll swipes on the touchpad and expecting to get to the top or bottom of the scrolled thing.</p>\n\n<p>Even more, since it scales down the mouse speed based on the maximum value obtained, the more your user tries to speed it up, the more it will slow down, while a \"slow scrolling\" user will experience quite fast speeds.</p>\n\n<p>This makes this (otherwise brilliant) solution a slightly better implementation of solution 1. </p>\n\n<p>I ported the solution to the jquery mousewheel plugin : <a href=\"http://jsfiddle.net/SimoneGianni/pXzVv/\" rel=\"nofollow\">http://jsfiddle.net/SimoneGianni/pXzVv/</a></p>\n\n<p>If you play with it for a while, You'll see that you'll start getting quite homogeneous results, but you'll also notice that it tend to +1/-1 values quite fast.</p>\n\n<p>I'm now working on enhancing it to detect peaks better, so that they don't send everything \"out of scale\". It would also be nice to also obtain a float value between 0 and 1 as the delta value, so that there is a coherent output.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is definitely no simple way to normalize across all users in all OS in all browsers.</p>\n\n<p>It gets worse than your listed variations - on my WindowsXP+Firefox3.6 setup my mousewheel does 6 per one-notch scroll - probably because somewhere I've forgotten I've accelerated the mouse wheel, either in the OS or somewhere in about:config</p>\n\n<p>However I am working on a similar problem (with a similar app btw, but non-canvas) and it occurs to me by just using the delta sign of +1 / -1 and <em>measuring over time</em> the last time it fired, you'll have a rate of acceleration, ie. if someone scrolls <em>once</em> vs <em>several times in a few moments</em> (which I would bet is how google maps does it).</p>\n\n<p>The concept seems to work well in my tests, just make anything less than 100ms add to the acceleration.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Another more or less self-contained solution at <a href=\"http://jsbin.com/iqafek/2/edit\">http://jsbin.com/iqafek/2/edit</a> .</p>\n\n<p>This doesn't take time between events into account though. Some browsers seem to always fire events with the same delta, and just fire them faster when scrolling quickly. Others do vary the deltas. One can imagine an adaptive normalizer that takes time into account, but that'd get somewhat involved and awkward to use.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>For zoom support on touch devices, register for the gesturestart, gesturechange and gestureend events and use the event.scale property. You can see <a href=\"http://stackoverflow.com/questions/2557801/how-do-i-reset-the-scale-zoom-of-a-web-app-on-an-orientation-change-on-the-iphon/11878932#11878932\">example code</a> for this.</p>\n\n<p>For Firefox 17 the <code>onwheel</code> event is planned to be supported by desktop and mobile versions (as per <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla_event_reference/wheel\" rel=\"nofollow\">MDN docs on onwheel</a>). Also for Firefox maybe the Gecko specific <code>MozMousePixelScroll</code> event is useful (although presumably this is now deprecated since the DOMMouseWheel event is now deprecated in Firefox).</p>\n\n<p>For Windows, the driver itself seems to generate the WM_MOUSEWHEEL, WM_MOUSEHWHEEL events (and maybe the WM_GESTURE event for touchpad panning?). That would explain why Windows or the browser doesn't seem to normalise the mousewheel event values itself (and might mean you cannot write reliable code to normalise the values).</p>\n\n<p>For <code>onwheel</code> (<em>not</em> onmousewheel) event <a href=\"http://msdn.microsoft.com/en-us/library/ie/ff974352%28v=vs.85%29.aspx\" rel=\"nofollow\">support in Internet Explorer</a> for IE9 and IE10, you can also use the <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#events-WheelEvent\" rel=\"nofollow\">W3C standard</a> <code>onwheel</code> event. However one notch can be a value different from 120 (e.g. a single notch becomes 111 (instead of -120) on my mouse <a href=\"http://www.quirksmode.org/dom/events/tests/scroll.html\" rel=\"nofollow\">using this test page</a>). I wrote <a href=\"http://stackoverflow.com/a/12850780/436776\">another article</a> with other details wheel events that might be relevant.</p>\n\n<p>Basically in my own testing for wheel events (I am trying to normalise the values for scrolling), I have found that I get varying values for OS, browser vendor, browser version, event type, and device (Microsoft tiltwheel mouse, laptop touchpad gestures, laptop touchpad with scrollzone, Apple magic mouse, Apple mighty mouse scrollball, Mac touchpad, etc etc).</p>\n\n<p>And have to ignore a variety of side-effects from browser configuration (e.g. Firefox mousewheel.enable_pixel_scrolling, chrome --scroll-pixels=150), driver settings (e.g. Synaptics touchpad), and OS configuration (Windows mouse settings, OSX Mouse preferences, X.org button settings).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is my crazy attempt to produce a cross browser coherent and normalized delta ( -1 &lt;= delta &lt;= 1 ) :</p>\n\n<pre><code>var o = e.originalEvent,\n    d = o.detail, w = o.wheelDelta,\n    n = 225, n1 = n-1;\n\n// Normalize delta\nd = d ? w &amp;&amp; (f = w/d) ? d/f : -d/1.35 : w/120;\n// Quadratic scale if |d| &gt; 1\nd = d &lt; 1 ? d &lt; -1 ? (-Math.pow(d, 2) - n1) / n : d : (Math.pow(d, 2) + n1) / n;\n// Delta *should* not be greater than 2...\ne.delta = Math.min(Math.max(d / 2, -1), 1);\n</code></pre>\n\n<p>This is totally empirical but works quite good on Safari 6, FF 16, Opera 12 (OS X) and IE 7 on XP</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<pre><code>var onMouseWheel = function(e) {\n    e = e.originalEvent;\n    var delta = e.wheelDelta&gt;0||e.detail&lt;0?1:-1;\n    alert(delta);\n}\n$(\"body\").bind(\"mousewheel DOMMouseScroll\", onMouseWheel);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I made a table with different values returned by different events/browsers, <a href=\"http://www.w3.org/TR/DOM-Level-3-Events/#event-type-wheel\" rel=\"nofollow\">taking into account the DOM3</a> <code>wheel</code> event that some browsers already support (table under).</p>\n\n<p>Based on that I made this function to normalize the speed:</p>\n\n<h3><a href=\"http://jsfiddle.net/mfe8J/1/\" rel=\"nofollow\">http://jsfiddle.net/mfe8J/1/</a></h3>\n\n<pre><code>function normalizeWheelSpeed(event) {\n    var normalized;\n    if (event.wheelDelta) {\n        normalized = (event.wheelDelta % 120 - 0) == -0 ? event.wheelDelta / 120 : event.wheelDelta / 12;\n    } else {\n        var rawAmmount = event.deltaY ? event.deltaY : event.detail;\n        normalized = -(rawAmmount % 3 ? rawAmmount * 10 : rawAmmount / 3);\n    }\n    return normalized;\n}\n</code></pre>\n\n<p>Table for <code>mousewheel</code>, <code>wheel</code> and <code>DOMMouseScroll</code> events:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>| mousewheel        | Chrome (win) | Chrome (mac) | Firefox (win) | Firefox (mac) | Safari 7 (mac) | Opera 22 (mac) | Opera 22 (win) | IE11      | IE 9 &amp; 10   | IE 7 &amp; 8  |\n|-------------------|--------------|--------------|---------------|---------------|----------------|----------------|----------------|-----------|-------------|-----------|\n| event.detail      | 0            | 0            | -             | -             | 0              | 0              | 0              | 0         | 0           | undefined |\n| event.wheelDelta  | 120          | 120          | -             | -             | 12             | 120            | 120            | 120       | 120         | 120       |\n| event.wheelDeltaY | 120          | 120          | -             | -             | 12             | 120            | 120            | undefined | undefined   | undefined |\n| event.wheelDeltaX | 0            | 0            | -             | -             | 0              | 0              | 0              | undefined | undefined   | undefined |\n| event.delta       | undefined    | undefined    | -             | -             | undefined      | undefined      | undefined      | undefined | undefined   | undefined |\n| event.deltaY      | -100         | -4           | -             | -             | undefined      | -4             | -100           | undefined | undefined   | undefined |\n| event.deltaX      | 0            | 0            | -             | -             | undefined      | 0              | 0              | undefined | undefined   | undefined |\n|                   |              |              |               |               |                |                |                |           |             |           |\n| wheel             | Chrome (win) | Chrome (mac) | Firefox (win) | Firefox (mac) | Safari 7 (mac) | Opera 22 (mac) | Opera 22 (win) | IE11      | IE 10 &amp; 9   | IE 7 &amp; 8  |\n| event.detail      | 0            | 0            | 0             | 0             | -              | 0              | 0              | 0         | 0           | -         |\n| event.wheelDelta  | 120          | 120          | undefined     | undefined     | -              | 120            | 120            | undefined | undefined   | -         |\n| event.wheelDeltaY | 120          | 120          | undefined     | undefined     | -              | 120            | 120            | undefined | undefined   | -         |\n| event.wheelDeltaX | 0            | 0            | undefined     | undefined     | -              | 0              | 0              | undefined | undefined   | -         |\n| event.delta       | undefined    | undefined    | undefined     | undefined     | -              | undefined      | undefined      | undefined | undefined   | -         |\n| event.deltaY      | -100         | -4           | -3            | -0,1          | -              | -4             | -100           | -99,56    | -68,4 | -53 | -         |\n| event.deltaX      | 0            | 0            | 0             | 0             | -              | 0              | 0              | 0         | 0           | -         |\n|                   |              |              |               |               |                |                |                |           |             |           |\n|                   |              |              |               |               |                |                |                |           |             |           |\n| DOMMouseScroll    |              |              | Firefox (win) | Firefox (mac) |                |                |                |           |             |           |\n| event.detail      |              |              | -3            | -1            |                |                |                |           |             |           |\n| event.wheelDelta  |              |              | undefined     | undefined     |                |                |                |           |             |           |\n| event.wheelDeltaY |              |              | undefined     | undefined     |                |                |                |           |             |           |\n| event.wheelDeltaX |              |              | undefined     | undefined     |                |                |                |           |             |           |\n| event.delta       |              |              | undefined     | undefined     |                |                |                |           |             |           |\n| event.deltaY      |              |              | undefined     | undefined     |                |                |                |           |             |           |\n| event.deltaX      |              |              | undefined     | undefined     |                |                |                |           |             |           |\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>For <a href=\"http://stackoverflow.com/q/5189968/405017\">a different question</a> I composed <a href=\"http://stackoverflow.com/questions/5189968/zoom-to-cursor-calculations/5526721#5526721\">this answer</a>, including <a href=\"http://phrogz.net/tmp/canvas_zoom_to_cursor.html\">this sample code</a>.</p>\n\n<p>In that code I use the mouse wheel to zoom in/out of an HTML5 Canvas. I found some code that normalizes speed differences between Chrome and Firefox. However, the zoom handling in Safari is much, much faster than in either of those.</p>\n\n<p>Here's the code I currently have:</p>\n\n<pre><code>var handleScroll = function(e){\n  var delta = e.wheelDelta ? e.wheelDelta/40 : e.detail ? -e.detail/3 : 0;\n  if (delta) ...\n  return e.preventDefault() &amp;&amp; false;\n};\ncanvas.addEventListener('DOMMouseScroll',handleScroll,false); // For Firefox\ncanvas.addEventListener('mousewheel',handleScroll,false);     // Everyone else\n</code></pre>\n\n<p>What code can I use to get the same 'delta' value for the same amount of mouse wheel rolling across Chrome v10/11, Firefox v4, Safari v5, Opera v11 and IE9?</p>\n\n<p><em><a href=\"http://stackoverflow.com/questions/4338214/javascript-scrollbar-class-and-mousewheel-speed-in-different-browsers\">This question</a> is related, but has no good answer.</em></p>\n\n<p><strong>Edit</strong>: Further investigation shows that one scroll event 'up' is:</p>\n\n<pre>\n                  | evt.wheelDelta | evt.detail\n------------------+----------------+------------\n  Safari v5/Win7  |       120      |      0\n  Safari v5/OS X  |       120      |      0\n  Safari v7/OS X  |        12      |      0\n Chrome v11/Win7  |       120      |      0\n Chrome v37/Win7  |       120      |      0\n Chrome v11/OS X  |         3 (!)  |      0      (possibly wrong)\n Chrome v37/OS X  |       120      |      0\n        IE9/Win7  |       120      |  undefined\n  Opera v11/OS X  |        40      |     -1\n  Opera v24/OS X  |       120      |      0\n  Opera v11/Win7  |       120      |     -3\n Firefox v4/Win7  |    undefined   |     -3\n Firefox v4/OS X  |    undefined   |     -1\nFirefox v30/OS X  |    undefined   |     -1\n</pre>\n\n<p>Further, using the MacBook trackpad on OS X gives different results even when moving slowly:</p>\n\n<ul>\n<li>On Safari and Chrome, the <code>wheelDelta</code> is a value of 3 instead of 120 for mouse wheel.</li>\n<li>On Firefox the <code>detail</code> is usually <code>2</code>, sometimes <code>1</code>, but when scrolling very slowly <strong>NO EVENT HANDLER FIRES AT ALL</strong>.</li>\n</ul>\n\n<p>So the question is:</p>\n\n<p>What is the best way to differentiate this behavior (ideally without any user agent or OS sniffing)?</p>\n",
            "last_activity_date": 1421169381,
            "question_id": 5527601,
            "score": 67,
            "tags": [
                "javascript",
                "mousewheel"
            ],
            "title": "Normalizing mousewheel speed across browsers"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>Update 6/4/14</strong></p>\n\n<p>See also <a href=\"http://stackoverflow.com/a/17976205/380487\">Mike Bostock's answer here</a> for changes in D3 v.3 and the <a href=\"http://bl.ocks.org/mbostock/6123708\" rel=\"nofollow\">related example</a>. I think this probably supersedes the answer below.</p>\n\n<p><strong>Update 2/18/2014</strong></p>\n\n<p>I think @ahaarnos's answer is preferable if you want the entire SVG to pan and zoom. The nested <code>g</code> elements in my answer below are really only necessary if you have non-zooming elements in the same SVG (not the case in the original question). If you <em>do</em> apply the behavior to a <code>g</code> element, then a background <code>rect</code> or similar element is required to ensure that the <code>g</code> receives pointer events.</p>\n\n<p><strong>Original Answer</strong></p>\n\n<p>I got this working based on the <a href=\"http://bl.ocks.org/4062045\" rel=\"nofollow\">zoom-pan-transform</a> example - you can see my jsFiddle here: <a href=\"http://jsfiddle.net/nrabinowitz/QMKm3/\" rel=\"nofollow\">http://jsfiddle.net/nrabinowitz/QMKm3/</a></p>\n\n<p>It was a bit more complex than I had hoped - you have to nest several <code>g</code> elements to get it to work, set the SVG's <code>pointer-events</code> attribute to <code>all</code>, and then append a background rectangle to receive the pointer events (otherwise it only works when the pointer is over a node or link). The <code>redraw</code> function is comparatively simple, just setting a transform on the innermost <code>g</code>:</p>\n\n<pre><code>var vis = d3.select(\"#chart\")\n  .append(\"svg:svg\")\n    .attr(\"width\", w)\n    .attr(\"height\", h)\n    .attr(\"pointer-events\", \"all\")\n  .append('svg:g')\n    .call(d3.behavior.zoom().on(\"zoom\", redraw))\n  .append('svg:g');\n\nvis.append('svg:rect')\n    .attr('width', w)\n    .attr('height', h)\n    .attr('fill', 'white');\n\nfunction redraw() {\n  console.log(\"here\", d3.event.translate, d3.event.scale);\n  vis.attr(\"transform\",\n      \"translate(\" + d3.event.translate + \")\"\n      + \" scale(\" + d3.event.scale + \")\");\n}\n</code></pre>\n\n<p>This effectively scales the entire SVG, so it scales stroke width as well, like zooming in on an image.</p>\n\n<p>There is another <a href=\"http://jsfiddle.net/56RDx/2\" rel=\"nofollow\">example</a> that illustrates a similar technique.</p>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>Why the nested <code>&lt;g&gt;</code>'s?</p>\n\n<p>This code below worked well for me (only one <code>&lt;g&gt;</code>, with no random large white <code>&lt;rect&gt;</code>:</p>\n\n<pre><code>var svg = d3.select(\"body\")\n    .append(\"svg\")\n      .attr({\n        \"width\": \"100%\",\n        \"height\": \"100%\"\n      })\n      .attr(\"viewBox\", \"0 0 \" + width + \" \" + height )\n      .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n      .attr(\"pointer-events\", \"all\")\n    .call(d3.behavior.zoom().on(\"zoom\", redraw));\n\nvar vis = svg\n    .append('svg:g');\n\nfunction redraw() {\n  vis.attr(\"transform\",\n      \"translate(\" + d3.event.translate + \")\"\n      + \" scale(\" + d3.event.scale + \")\");\n}\n</code></pre>\n\n<p>Where all the elements in your svg are then appended to the <code>vis</code> element.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I got my graph to work without the second \"svg:g\" append.</p>\n\n<pre><code>[...].attr(\"pointer-events\", \"all\")\n     .attr(\"width\", width2)\n     .attr(\"height\", height2)\n     .append('svg:g')\n     .call(d3.behavior.zoom().on(\"zoom\", redraw));\n</code></pre>\n\n<p>The rest is the same.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I got a solution for D3 force directed graph with zooming option.</p>\n\n<pre><code>    var m = [40, 240, 40, 240],\n    width = 960,\n    height = 700,\n    root;\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"class\", \"svg_container\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .style(\"overflow\", \"scroll\")\n    .style(\"background-color\", \"#EEEEEE\")\n    .append(\"svg:g\")\n    .attr(\"class\", \"drawarea\")\n    .append(\"svg:g\")\n    .attr(\"transform\", \"translate(\" + m[3] + \",\" + m[0] + \")\");\n\n//applying zoom in&amp;out for svg\nd3.select(\"svg\") \n.call(d3.behavior.zoom()\n    .scaleExtent([0.5, 5])\n    .on(\"zoom\", zoom));\n\n//zooming \nfunction zoom() { //zoom in&amp;out function \n    var scale = d3.event.scale,\n        translation = d3.event.translate,\n        tbound = -height * scale,\n        bbound = height * scale,\n        lbound = (-width + m[1]) * scale,\n        rbound = (width - m[3]) * scale;\n    // limit translation to thresholds\n    translation = [\n        Math.max(Math.min(translation[0], rbound), lbound),\n        Math.max(Math.min(translation[1], bbound), tbound)\n    ];\n    d3.select(\".drawarea\")\n        .attr(\"transform\", \"translate(\" + translation + \")\" +\n            \" scale(\" + scale + \")\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The provided answers work in D3 v2 but not in v3. I've synthesized the responses into a clean solution and resolved the v3 issue using the answer provided here: <a href=\"http://stackoverflow.com/questions/17953106/why-does-d3-js-v3-break-my-force-graph-when-implementing-zooming-when-v2-doesnt\">Why does d3.js v3 break my force graph when implementing zooming when v2 doesn&#39;t?</a></p>\n\n<p>First the main code. This is a cleaned up version of @ahaarnos' answer:</p>\n\n<pre><code>    var svg = d3.select(\"body\")\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n            .call(d3.behavior.zoom().on(\"zoom\", redraw))\n        .append('g');\n\n    function redraw() {\n      svg.attr(\"transform\",\n          \"translate(\" + d3.event.translate + \")\"\n          + \" scale(\" + d3.event.scale + \")\");\n    }   \n</code></pre>\n\n<p>Now you have pan and zoom, but you won't be able to drag nodes because the pan functionality will override the drag functionality. So we need to do this:</p>\n\n<pre><code>var drag = force.stop().drag()\n.on(\"dragstart\", function(d) {\n    d3.event.sourceEvent.stopPropagation(); // to prevent pan functionality from \n                                            //overriding node drag functionality.\n    // put any other 'dragstart' actions here\n});\n</code></pre>\n\n<p>Here's @nrabinowitz' fiddle modified to use this cleaner zoom implementation, but illustrating how D3v3 breaks node drag: <a href=\"http://jsfiddle.net/QMKm3/718/\">http://jsfiddle.net/QMKm3/718/</a></p>\n\n<p>And here's the same fiddle modified to work with D3v3: <a href=\"http://jsfiddle.net/QMKm3/719/\">http://jsfiddle.net/QMKm3/719/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you want to zoom and pan force layout without changing node-size, try below.\nYou can also drag nodes without trembling. \nThis code is based on original force layout example. As for nodes and links data, please refer to original sample data. <a href=\"http://bl.ocks.org/mbostock/4062045\" rel=\"nofollow\">http://bl.ocks.org/mbostock/4062045</a></p>\n\n<p>Plz note the variables xScale and yScale, the functions dragstarted(), dragged(), and dragended().\nFunction tick() was changed as well.</p>\n\n<p>You can see the result at <a href=\"http://steelblue.tistory.com/9\" rel=\"nofollow\">http://steelblue.tistory.com/9</a>\nThe language on the site is Korean. However you can easily find the result at the third example on the page.</p>\n\n<p></p>\n\n<pre><code>var graph = {\n    \"nodes\": [\n      { \"name\": \"Myriel\", \"group\": 1 },\n      { \"name\": \"Napoleon\", \"group\": 1 },\n      // ......\n      { \"name\": \"Mme.Hucheloup\", \"group\": 8 }\n    ],\n    \"links\": [\n      { \"source\": 1, \"target\": 0, \"value\": 1 },\n      { \"source\": 2, \"target\": 0, \"value\": 8 },\n    // .......\n      { \"source\": 76, \"target\": 58, \"value\": 1 }\n    ]\n};\nvar width = 640,\n    height = 400;\n var color = d3.scale.category20();\n\n\n\nvar xScale = d3.scale.linear()\n        .domain([0, width])\n         .range([0, width]);\n\nvar yScale = d3.scale.linear()\n    .domain([0, height])\n   .range([0, height]);\nvar zoomer = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([0.1, 8]).on(\"zoom\", zoom);\nfunction zoom() {\n\n    tick(); \n};\n\nvar drag = d3.behavior.drag()\n        .origin(function (d) { return d; })\n         .on(\"dragstart\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"dragend\", dragended);\n\nfunction dragstarted(d) {\n    d3.event.sourceEvent.stopPropagation();\n\n    d.fixed |= 2;         \n}\nfunction dragged(d) {\n\n    var mouse = d3.mouse(svg.node());\n    d.x = xScale.invert(mouse[0]);\n    d.y = yScale.invert(mouse[1]);\n    d.px = d.x;         \n    d.py = d.y;\n    force.resume();\n}\n\nfunction dragended(d) {\n\n    d.fixed &amp;= ~6;           }\n\nvar force = d3.layout.force()\n    .charge(-120)\n    .linkDistance(30)\n    .size([width, height]);\n\nvar svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\nsvg.call(zoomer);\n\n    force\n        .nodes(graph.nodes)\n        .links(graph.links)\n        .start();\n\n    var link = svg.selectAll(\".link\")\n        .data(graph.links)\n      .enter().append(\"line\")\n        .attr(\"class\", \"link\")\n        .style(\"stroke-width\", function (d) { return Math.sqrt(d.value); });\n\n    var node = svg.selectAll(\".node\")\n        .data(graph.nodes)\n      .enter().append(\"circle\")\n        .attr(\"class\", \"node\")\n        .attr(\"r\", 5)\n        .style(\"fill\", function (d) { return color(d.group); })\n        .call(drag);\n\n    node.append(\"title\")\n        .text(function (d) { return d.name; });\n\n    force.on(\"tick\",tick);\n\nfunction tick(){            \n        link.attr(\"x1\", function (d) { return  xScale(d.source.x); })\n            .attr(\"y1\", function (d) { return yScale(d.source.y);  })\n            .attr(\"x2\", function (d) { return xScale(d.target.x); })\n            .attr(\"y2\", function (d) { return yScale(d.target.y); });\n\n        node.attr(\"transform\", function (d) {\n            return \"translate(\" + xScale(d.x) + \",\" + yScale(d.y) + \")\";\n        });\n\n\n    };\n</code></pre>\n\n<p></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>D3 has a force directed layout <a href=\"http://mbostock.github.com/d3/ex/force.html\">here</a>. Is there a way to add zooming to this graph? Currently, I was able to capture the mouse wheel event but am not really sure how to write the redraw function itself. Any suggestions?</p>\n\n<pre><code>    var vis = d3.select(\"#graph\")\n        .append(\"svg:svg\")\n        .call(d3.behavior.zoom().on(\"zoom\", redraw)) // &lt;-- redraw function\n        .attr(\"width\", w)\n        .attr(\"height\", h);\n</code></pre>\n",
            "last_activity_date": 1417111992,
            "question_id": 7871425,
            "score": 52,
            "tags": [
                "javascript",
                "jquery",
                "d3.js",
                "zoom",
                "force-layout"
            ],
            "title": "Is there a way to zoom into a D3 force layout graph?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You can use <code>debugger;</code> within your code.  If the developer console is open, execution will break.  It works in firebug as well.</p>\n",
                    "is_accepted": true,
                    "score": 437
                },
                {
                    "body": "<p>On the \"Scripts\" tab, go to where your code is. At the left of the line number, click. This will set a breakpoint.</p>\n\n<p>Screenshot:</p>\n\n<p><img src=\"http://i.imgur.com/duwP8.png\" alt=\"screenshot of breakpoint in chrome\"></p>\n\n<p>You will then be able to track your breakpoints within the right tab (as shown in the screenshot).</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It is possible and there are many reasons you might want to do this. For example debugging a javascript infinite loop close to the start of the page loading, that stops the chrome developer toolset (or firebug) from loading correctly.</p>\n\n<p>See section 2 of  </p>\n\n<p><a href=\"http://www.laurencegellert.com/2012/05/the-three-ways-of-setting-breakpoints-in-javascript/\" rel=\"nofollow\">http://www.laurencegellert.com/2012/05/the-three-ways-of-setting-breakpoints-in-javascript/</a></p>\n\n<p>or just add a line containing the word debugger to your code at  the required test point.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As other have already said, <code>debugger;</code> is the way to go.\nI have wrote a small script that you can use from command line in browser to set and remove breakpoint right before function call: \n<a href=\"http://andrijac.github.io/blog/2014/01/31/javascript-breakpoint/\" rel=\"nofollow\">http://andrijac.github.io/blog/2014/01/31/javascript-breakpoint/</a></p>\n\n<p>HTH</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Set up a button click listener and call the <code>debugger;</code></p>\n\n<p><strong>Example</strong></p>\n\n<pre><code>$(\"#myBtn\").click(function() {\n debugger;   \n});\n</code></pre>\n\n<p><strong>Demo</strong></p>\n\n<p><a href=\"http://jsfiddle.net/hBCH5/\">http://jsfiddle.net/hBCH5/</a></p>\n\n<p><strong>Resources on debugging in JavaScript</strong></p>\n\n<ul>\n<li><a href=\"http://www.laurencegellert.com/2012/05/the-three-ways-of-setting-breakpoints-in-javascript/\">http://www.laurencegellert.com/2012/05/the-three-ways-of-setting-breakpoints-in-javascript/</a></li>\n<li><a href=\"http://berzniz.com/post/78260747646/5-javascript-debugging-tips-youll-start-using-today\">http://berzniz.com/post/78260747646/5-javascript-debugging-tips-youll-start-using-today</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I want to force the chrome debugger to break on a line <em>via code</em>, or else using some sort of comment tag such as something like <code>console.break()</code>.</p>\n\n<p>Is there a way to do this?</p>\n",
            "last_activity_date": 1399224789,
            "question_id": 10050465,
            "score": 218,
            "tags": [
                "javascript",
                "debugging",
                "google-chrome",
                "breakpoints"
            ],
            "title": "Set a javascript breakpoint in code - in chrome?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could make your own plugins.</p>\n\n<pre><code>jQuery.fn.visible = function() {\n    return this.css('visibility', 'visible');\n};\n\njQuery.fn.invisible = function() {\n    return this.css('visibility', 'hidden');\n};\n\njQuery.fn.visibilityToggle = function() {\n    return this.css('visibility', function(i, visibility) {\n        return (visibility == 'visible') ? 'hidden' : 'visible';\n    });\n};\n</code></pre>\n\n<p>If you want to overload the original jQuery <code>toggle()</code>, which I don't recommend...</p>\n\n<pre><code>!(function($) {\n    var toggle = $.fn.toggle;\n    $.fn.toggle = function() {\n        var args = $.makeArray(arguments),\n            lastArg = args.pop();\n\n        if (lastArg == 'visibility') {\n            return this.visibilityToggle();\n        }\n\n        return toggle.apply(this, arguments);\n    };\n})(jQuery);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/uxTeU/\">jsFiddle</a>.</p>\n",
                    "is_accepted": true,
                    "score": 202
                },
                {
                    "body": "<p>There isn't one built in but you could write your own quite easily:</p>\n\n<pre><code>(function($) {\n    $.fn.invisible = function() {\n        return this.each(function() {\n            $(this).css(\"visibility\", \"hidden\");\n        });\n    };\n    $.fn.visible = function() {\n        return this.each(function() {\n            $(this).css(\"visibility\", \"visible\");\n        });\n    };\n}(jQuery));\n</code></pre>\n\n<p>You can then call this like so:</p>\n\n<pre><code>$(\"#someElem\").invisible();\n$(\"#someOther\").visible();\n</code></pre>\n\n<p>Here's a <a href=\"http://jsfiddle.net/nGhjQ/\">working example</a>.</p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>If you only need the standard functionality of hide only with visibility:hidden to keep the current layout you can use the callback function of hide to alter the css in the tag. <a href=\"http://api.jquery.com/hide/\">Hide docs in jquery</a></p>\n\n<p>An example :</p>\n\n<pre><code>$('#subs_selection_box').fadeOut('slow', function() {\n      $(this).css({\"visibility\":\"hidden\"});\n      $(this).css({\"display\":\"block\"});\n});\n</code></pre>\n\n<p>This will use the normal cool animation to hide the div, but after the animation finish you set the visibility to hidden and display to block.</p>\n\n<p>An example : <a href=\"http://jsfiddle.net/bTkKG/1/\">http://jsfiddle.net/bTkKG/1/</a></p>\n\n<p>I know you didnt want the $(\"#aa\").css() solution, but you did not specify if it was because using only the css() method you lose the animation.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>An even simpler way to do this is to use jQuery's <a href=\"http://jqueryui.com/toggleClass/\">toggleClass()</a> method</p>\n\n<p>CSS</p>\n\n<pre><code>.newClass{visibility: hidden}\n</code></pre>\n\n<p>HTML</p>\n\n<pre><code>&lt;a href=\"#\" class=trigger&gt;Trigger Element &lt;/a&gt;\n&lt;div class=\"hidden_element\"&gt;Some Content&lt;/div&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code>$(document).ready(function(){\n    $(\".trigger\").click(function(){\n        $(\".hidden_element\").toggleClass(\"newClass\");\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 22
                }
            ],
            "body": "<p>In jQuery, there are <code>.hide()</code> and <code>.show()</code> methods which sets the CSS <code>display: none</code> setting. </p>\n\n<p>Is there an equivalent function which would set the <code>visibility: hidden</code> setting? </p>\n\n<p>I know I can use <code>.css()</code> but I prefer some function like <code>.hide()</code> or so. Thanks.</p>\n",
            "last_activity_date": 1385674763,
            "question_id": 9614622,
            "score": 138,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "visibility"
            ],
            "title": "Equivalent of jQuery .hide() to set visibility: hidden"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<hr>\n\n<pre><code>(function( $ ){\n\n})( jQuery );\n</code></pre>\n\n<p>That is self-executing anonymous function that uses <code>$</code> in argument so that you can use it (<code>$</code>) instead of <code>jQuery</code> inside that function and without the fear of conflicting with other libraries because in other libraries too <code>$</code> has special meaning. That pattern is especially useful when writing jQuery plugins.</p>\n\n<p>You can write any character there instead of <code>$</code> too:</p>\n\n<pre><code>(function(j){\n  // can do something like \n  j.fn.function_name = function(x){};\n\n})(jQuery);\n</code></pre>\n\n<p>Here <code>j</code> will automatically catch up jQuery specified at the end <code>(jQuery)</code>. Or you can leave out the argument completely but then you will have to use <code>jQuery</code> keyword all around instead of <code>$</code> with no fear of collision still. So <code>$</code> is wrapped in the argument for short-hand so that you can write <code>$</code> instead of <code>jQuery</code> all around inside that function.</p>\n\n<p>If you even look at the source code of jQuery, you will see that everything is wrapped in between:</p>\n\n<pre><code>(function( window, undefined ) {\n  // jQuery code\n})(window);\n</code></pre>\n\n<p>That is as can be seen also a self-executing anonymous function with arguments. A <code>window</code> (and <code>undefined</code>) argument is created and is mapped with global <code>window</code> object at the bottom <code>(window)</code>. This is popular pattern these days and has little speed gain because here <code>window</code> is will be looked into from the argument rather than global <code>window</code> object which is mapped below.</p>\n\n<hr>\n\n<p>The <code>$.fn</code> is jQuery's object where you create your new function (which is also an object) or the plugin itself so that jQuery wraps your plugin in its <code>$.fn</code> object and make it available.</p>\n\n<hr>\n\n<p>Interestingly, I had answered similar question here:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/4472528/javascript-jquery-closure-function-syntax\">JavaScript / jQuery closure function syntax</a></p>\n\n<p>You can also check out this article to know more about self-executing functions that I had written:</p>\n\n<p><a href=\"http://webupon.com/audio/javascript-self-executing-functions/\">Javascript Self-executing Functions</a></p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>The basic plugin syntax allows you to use <code>$</code> to refer to <code>jQuery</code> in the body of your plugin, regardless of the identify of <code>$</code> at the time the plugin is loaded. This prevents naming conflicts with other libraries, most notably Prototype.</p>\n\n<p>The syntax defines a function that accepts a parameter known as <code>$</code> so you can refer to it as <code>$</code> in the function body, and then immediately invokes that function, putting <code>jQuery</code> in as the argument.</p>\n\n<p>This also helps not pollute the global namespace (so declaring <code>var myvar = 123;</code> in your plugin body won't suddenly define <code>window.myvar</code>), but the main ostensible purpose is to allow you to use <code>$</code> where <code>$</code> may have since been redefined.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The jQuery at the end passes itself (jQuery) over to the function, so that you can use the $ symbol within your plugin. You ccould also do</p>\n\n<pre><code>(function(foo){\n\n  foo.fn.myPlugin = function() {\n\n\n    this.fadeIn('normal', function(){\n\n\n    });\n\n  };\n})( jQuery );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You're dealing with a self-invoking anonymous function there. It's like \"best practice\" to wrap a jQuery plugin within such a function to make sure, that the <code>$</code> sign is bound to the <code>jQuery</code> object.</p>\n\n<p>Example:</p>\n\n<pre><code>(function(foo) {\n    alert(foo);\n}('BAR'));\n</code></pre>\n\n<p>This would alert <code>BAR</code> when put into a <code>&lt;script&gt;</code> block. The parameter <code>BAR</code> is passed to the function which calls itself.</p>\n\n<p>The same principle is happening in your code, the <code>jQuery</code> object is passed to the function, so <code>$</code> will refer to the jQuery object for sure.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function(x){ \n    x...\n}\n</code></pre>\n\n<p>is just a function without a name, that takes one argument, \"x\", and does things with x.</p>\n\n<p>Instead of 'x', which is a common variable name, you can use $, which is a less common variable name, but still legal.</p>\n\n<pre><code>function($){ \n    $...\n}\n</code></pre>\n\n<p>I'll put it in parentheses to make sure it parses as an expression:</p>\n\n<pre><code>(function($){\n    $....\n})\n</code></pre>\n\n<p>To call a function, you put () after it with a list of arguments. For example, if we wanted to call this function passing in 3 for the value of <code>$</code> we would do this:</p>\n\n<pre><code>(function($){\n    $...\n})(3);\n</code></pre>\n\n<p>Just for kicks, let's call this function and pass in jQuery as a variable:</p>\n\n<pre><code>(function($){\n     $....\n})(jQuery);\n</code></pre>\n\n<p>This creates a new function that takes one argument and then calls that function, passing in jQuery as the value.</p>\n\n<p>WHY?</p>\n\n<ul>\n<li>Because writing jQuery every time you want to do something with jQuery is tedious.</li>\n</ul>\n\n<p>WHY NOT JUST WRITE <code>$ = jQuery</code>?</p>\n\n<ul>\n<li>Because someone else might have defined $ to mean something else. This guarantees that any other meanings of $ are shadowed by this one.</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 118
                },
                {
                    "body": "<p>To find a clear explanation of this and other modern javascript tricks and common practices, I recommend reading Javascript Garden.</p>\n\n<p><a href=\"http://bonsaiden.github.com/JavaScript-Garden/\" rel=\"nofollow\">http://bonsaiden.github.com/JavaScript-Garden/</a></p>\n\n<p>It's especially useful, because many of these patterns are widely used in many libraries but not really explained.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The other answers here are great, but there is one important point that hasn't been addressed. You say:</p>\n\n<blockquote>\n  <p>So it's creating a function, that as far as I can tell will never be run, with the parameter of $, which is already defined?</p>\n</blockquote>\n\n<p><strong>There is no guarantee that the global variable <code>$</code> is available</strong>. By default, jQuery creates two variables in the global scope: <code>$</code> and <code>jQuery</code> (where the two are aliases for the same object). However, <strong><a href=\"http://api.jquery.com/jQuery.noConflict/\" rel=\"nofollow\">jQuery can also be run in noConflict mode</a></strong>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n  jQuery.noConflict();\n&lt;/script&gt;\n</code></pre>\n\n<p>When you call <code>jQuery.noConflict()</code>, the global variable <code>$</code> is set back to whatever it was before the jQuery library was included. This allows jQuery to be used with other Javascript libraries that also use <code>$</code> as a global variable.</p>\n\n<p><strong>If you wrote a plugin that relied on <code>$</code> being an alias for jQuery, then your plugin would not work for users running in noConflict mode.</strong></p>\n\n<p>As others have already explained, the code you posted creates an anonymous function that is called immediately. The global variable <code>jQuery</code> is then passed in to this anonymous function, which is safely aliased as the <em>local</em> variable <code>$</code> within the function.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>The jQuery site lists the basic plugin syntax for jQuery as this:</p>\n\n<pre><code>(function( $ ){    \n  $.fn.myPlugin = function() {      \n    // there's no need to do $(this) because\n    // \"this\" is already a jquery object\n\n    // $(this) would be the same as $($('#element'));\n\n    this.fadeIn('normal', function(){    \n      // the this keyword is a DOM element    \n    });    \n  };\n})( jQuery );\n</code></pre>\n\n<p>I'd just like to understand what is going on there from Javascript's point of view, because it doesn't look like it follows any syntax I've seen JS do before.  So here's my list of questions:</p>\n\n<ol>\n<li><p>If you replace function($)... with a variable, say \"the_function\", the syntax looks like this:</p>\n\n<pre><code> (the_function)( jQuery );\n</code></pre>\n\n<p>What is \"( jQuery );\" doing?  Are the parenthesis around the_function really necessary?  Why are they there?  Is there another piece of code you can give that is similar?</p></li>\n<li><p>It begins with function( $ ).  So it's creating a function, that as far as I can tell will never be run, with the parameter of $, which is already defined?  What is going on there?</p></li>\n</ol>\n\n<p>Thanks for the help!</p>\n",
            "last_activity_date": 1346497182,
            "question_id": 4484289,
            "score": 80,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins"
            ],
            "title": "I&#39;d like to understand the jQuery plugin syntax"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Redefine the console.log function in your script. </p>\n\n<pre><code>console.log = function() {}\n</code></pre>\n\n<p>That's it, no more messages to console.</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Expanding on Cide's idea. A custom logger which you can use to toggle logging on/off from your code.</p>\n\n<p><a href=\"http://jsbin.com/azeze\">Working Demo &rarr;</a></p>\n\n<p>From my Firefox console:</p>\n\n<p><img src=\"http://imgur.com/JXLvK.png\" /></p>\n\n<pre><code>var logger = function()\n{\n    var oldConsoleLog = null;\n    var pub = {};\n\n    pub.enableLogger =  function enableLogger() \n                        {\n                            if(oldConsoleLog == null)\n                                return;\n\n                            window['console']['log'] = oldConsoleLog;\n                        };\n\n    pub.disableLogger = function disableLogger()\n                        {\n                            oldConsoleLog = console.log;\n                            window['console']['log'] = function() {};\n                        };\n\n    return pub;\n}();\n\n$(document).ready(\n    function()\n    {\n        console.log('hello');\n\n        logger.disableLogger();\n        console.log('hi', 'hiya');\n        console.log('this wont show up in console');\n\n        logger.enableLogger();\n        console.log('This will show up!');\n    }\n );\n</code></pre>\n\n<p>How to use the above 'logger'? In your ready event, call logger.disableLogger so that console messages are not logged. Add calls to logger.enableLogger and logger.disableLogger inside the method for which you want to log messages to the console. </p>\n",
                    "is_accepted": true,
                    "score": 95
                },
                {
                    "body": "<p>As far as I can tell from the <a href=\"http://getfirebug.com/console.html\">documentation</a>, Firebug doesn't supply any variable to toggle debug state. Instead, wrap console.log() in a wrapper that conditionally calls it, i.e.:</p>\n\n<pre><code>DEBUG = true; // set to false to disable debugging\nfunction debug_log() {\n    if ( DEBUG ) {\n        console.log.apply(this, arguments);\n    }\n}\n</code></pre>\n\n<p>To not have to change all the existing calls, you can use this instead:</p>\n\n<pre><code>DEBUG = true; // set to false to disable debugging\nold_console_log = console.log;\nconsole.log = function() {\n    if ( DEBUG ) {\n        old_console_log.apply(this, arguments);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>The following is more thorough:</p>\n\n<pre><code>var DEBUG = false;\nif(!DEBUG){\n    if(!window.console) window.console = {};\n    var methods = [\"log\", \"debug\", \"warn\", \"info\"];\n    for(var i=0;i&lt;methods.length;i++){\n    \tconsole[methods[i]] = function(){};\n    }\n}\n</code></pre>\n\n<p>This will zero out the common methods in the console if it exists, and they can be called without error and virtually no performance overhead. In the case of a browser like IE6 with no console, the dummy methods will be created to prevent errors. Of course there are many more functions in Firebug, like trace, profile, time, etc. They can be added to the list if you use them in your code. </p>\n\n<p>You can also check if the debugger has those special methods or not (ie, IE) and zero out the ones it does not support:</p>\n\n<pre><code>if(window.console &amp;&amp; !console.dir){\nvar methods = [\"dir\", \"dirxml\", \"trace\", \"profile\"]; //etc etc\n    for(var i=0;i&lt;methods.length;i++){\n    \tconsole[methods[i]] = function(){};\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>If you're using IE7, console won't be defined. So a more IE friendly version would be:</p>\n\n<pre><code>if (typeof console == \"undefined\" || typeof console.log == \"undefined\") \n{\n   var console = { log: function() {} }; \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I know you asked how to disable console.log, but this might be what you're really after.  This way you don't have to explicitly enable or disable the console.  It simply prevents those pesky console errors for people who don't have it open or installed.</p>\n\n<pre><code>if(typeof(console) === 'undefined') {\n    var console = {};\n    console.log = console.error = console.info = console.debug = console.warn = console.trace = console.dir = console.dirxml = console.group = console.groupEnd = console.time = console.timeEnd = console.assert = console.profile = function() {};\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Warning: Shameless plug!</p>\n\n<p>You could also use something like my JsTrace object to have modular tracing with module-level \"switching\" capability to only turn on what you want to see at the time.</p>\n\n<p><a href=\"http://jstrace.codeplex.com\" rel=\"nofollow\">http://jstrace.codeplex.com</a></p>\n\n<p>(Also has a NuGet package, for those who care)</p>\n\n<p>All levels default to \"error\", though you can shut them \"off\".\nThough, I can't think of why you would NOT want to see errors</p>\n\n<p>You can change them like this:</p>\n\n<pre><code>Trace.traceLevel('ModuleName1', Trace.Levels.log);\nTrace.traceLevel('ModuleName2', Trace.Levels.info);\n</code></pre>\n\n<p>Fore more docs, check out <a href=\"http://jstrace.codeplex.com/documentation\" rel=\"nofollow\">the Documentation</a></p>\n\n<p>T</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>All these answer can prevenmt user script from outputting logs but won't prevent chrome to output it's own errors/logs.</p>\n\n<p>I know there are command line switches to disable logs but I wonder if there are javascript instructions to do the same.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use javascript AOP (e.g. <a href=\"http://code.google.com/p/jquery-aop/wiki/Reference#Add_an_advice_around_a_method\" rel=\"nofollow\">jquery-aop</a>) to intercept all calls to console.debug/log (around) and do not proceed with the actual invocation if some global variable is set to false. </p>\n\n<p>You could even do an ajax call (now and then) so you can change the log enabled/disabled behavior on the server which can be very interesting to enable debugging when facing an issue in a staging environment or such.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This a hybrid of answers from <em>SolutionYogi</em> and <em>Chris S.</em> It maintains the console.log line numbers and file name. <a href=\"http://jsfiddle.net/ZggW9/\" rel=\"nofollow\">Example jsFiddle</a>. </p>\n\n<pre><code>// Avoid global functions via a self calling anonymous one (uses jQuery)\n(function(MYAPP, $, undefined) {\n    // Prevent errors in browsers without console.log\n    if (!window.console) window.console = {};\n    if (!window.console.log) window.console.log = function(){};\n\n    //Private var\n    var console_log = console.log;  \n\n    //Public methods\n    MYAPP.enableLog = function enableLogger() { console.log = console_log; };   \n    MYAPP.disableLog = function disableLogger() { console.log = function() {}; };\n\n}(window.MYAPP = window.MYAPP || {}, jQuery));\n\n\n// Example Usage:\n$(function() {    \n    MYAPP.disableLog();    \n    console.log('this should not show');\n\n    MYAPP.enableLog();\n    console.log('This will show');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I found a little more advanced piece of code in this url <a href=\"http://digitalize.ca/2011/02/javascript-tip-bust-and-disable-console-log/\" rel=\"nofollow\">JavaScript Tip: Bust and Disable console.log</a>:</p>\n\n<pre><code>var DEBUG_MODE = true; // Set this value to false for production\n\nif(typeof(console) === 'undefined') {\n   console = {}\n}\n\nif(!DEBUG_MODE || typeof(console.log) === 'undefined') {\n   // FYI: Firebug might get cranky...\n   console.log = console.error = console.info = console.debug = console.warn = console.trace = console.dir = console.dirxml = console.group = console.groupEnd = console.time =    console.timeEnd = console.assert = console.profile = function() {};\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I realize this is an old post but it still pops up at the top of Google results, so here is a more elegant non-jQuery solution that works in the latest Chrome, FF, and IE.</p>\n\n<pre><code>(function (original) {\n    console.enableLogging = function () {\n        console.log = original;\n    };\n    console.disableLogging = function () {\n        console.log = function () {};\n    };\n})(console.log);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you use Grunt you can add a task in order to remove/comment the console.log statements. Therefore the console.log are no longer called.</p>\n\n<p><a href=\"https://www.npmjs.org/package/grunt-remove-logging-calls\" rel=\"nofollow\">https://www.npmjs.org/package/grunt-remove-logging-calls</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just change the flag <code>DEBUG</code> to override the console.log function. This should do the trick. </p>\n\n<pre><code>var DEBUG = false;\n// ENABLE/DISABLE Console Logs\nif(!DEBUG){\n  console.log = function() {}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h3>You should not!</h3>\n\n<p>It is not a good practice to overwrite built-in functions. There is also no guarantee that you will suppress all output, other libraries you use may revert your changes and there are other functions that may write to the console; <code>.dir()</code>, <code>.warning()</code>, <code>.error()</code>, <code>.debug()</code>, <code>.assert()</code> etc.</p>\n\n<p>As some suggested, you could define a <code>DEBUG_MODE</code> variable and log conditionally. Depending on the complexity and nature of your code, it may be a good idea to write your own logger object/function that wraps around the console object and has this capability built-in. That would be the right place to do deal with <strong>instrumentation</strong>.</p>\n\n<p>That said, for 'testing' purposes you can write <strong>tests</strong> instead of printing to the console. If you are not doing any testing, and those <code>console.log()</code> lines were just an aid to write your code, <strong>simply delete them</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any way to turn off all <code>console.log</code> statements in my JavaScript code, for testing purposes?</p>\n",
            "last_activity_date": 1420545856,
            "question_id": 1215392,
            "score": 55,
            "tags": [
                "javascript",
                "debugging",
                "console",
                "firebug"
            ],
            "title": "How to quickly and conveniently disable all console.log statements in my code?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The relevant css would include:</p>\n\n<pre><code>position: fixed;\ntop: 0;\nwidth: 100%;\n</code></pre>\n\n<p><a href=\"http://www.w3schools.com/Css/pr%5Fclass%5Fposition.asp\" rel=\"nofollow\">More information about <code>position:fixed</code></a>:</p>\n\n<blockquote>\n  <p>An element with position: fixed is positioned at the specified coordinates relative to the browser window. The element's position is specified with the \"left\", \"top\", \"right\", and \"bottom\" properties. The element remains at that position regardless of scrolling. Works in IE7 (strict mode)</p>\n</blockquote>\n\n<p>If IE6 support is important to you, you may wish to <a href=\"http://www.google.com/search?hl=en&amp;safe=off&amp;rlz=1C1GGLS%5FenUS291US304&amp;q=position%2Bfixed%2Bie6&amp;btnG=Search\" rel=\"nofollow\">research workarounds</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Quick pure JavaScript implementation:</p>\n\n<pre><code>function MessageBar() {\n    // CSS styling:\n    var css = function(el,s) {\n        for (var i in s) {\n            el.style[i] = s[i];\n        }\n        return el;\n    },\n    // Create the element:\n    bar = css(document.createElement('div'), {\n        top: 0,\n        left: 0,\n        position: 'fixed',\n        background: 'orange',\n        width: '100%',\n        padding: '10px',\n        textAlign: 'center'\n    });\n    // Inject it:\n    document.body.appendChild(bar);\n    // Provide a way to set the message:\n    this.setMessage = function(message) {\n        // Clear contents:\n        while(bar.firstChild) {\n            bar.removeChild(bar.firstChild);\n        }\n        // Append new message:\n        bar.appendChild(document.createTextNode(message));\n    };\n    // Provide a way to toggle visibility:\n    this.toggleVisibility = function() {\n        bar.style.display = bar.style.display === 'none' ? 'block' : 'none';\n    };\n}\n</code></pre>\n\n<p>How to use it:</p>\n\n<pre><code>var myMessageBar = new MessageBar();\nmyMessageBar.setMessage('hello');\n// Toggling visibility is simple:\nmyMessageBar.toggleVisibility();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Here is an alternative method using jQuery which would also slide up/down on show/hide.</p>\n\n<p>Add the following HTML right after the <code>&lt;body&gt;</code> tag in your page:</p>\n\n<pre><code>&lt;div id=\"msgBox\"&gt;\n    &lt;span id=\"msgText\"&gt;My Message&lt;/span&gt;           \n    &lt;a id=\"msgCloseButton\" href='#'&gt;close&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Add this CSS to your stylesheet</p>\n\n<pre><code>#msgBox {\n    padding:10px; \n    background-color:Orange; \n    text-align:center; \n    display:none; \n    font:bold 1.4em Verdana;\n}\n#msgCloseButton{\n    float:right;    \n}\n</code></pre>\n\n<p>And finally here is the javascript to setup the close button and functions to show and hide the message bar:</p>\n\n<pre><code>/* Document Ready */\n$(function () {\n    SetupNotifications();\n});\n\nSetupNotifications = function () {\n    //setup close button in msgBox\n    $(\"#msgCloseButton\").click(function (e) {\n        e.preventDefault();\n        CloseMsg();\n    });\n}\n\nDisplayMsg = function (sMsg) {\n    //set the message text\n    $(\"#msgText\").text(sMsg);\n    //show the message\n    $('#msgBox').slideDown();\n}\n\nCloseMsg = function () {\n    //hide the message\n    $('#msgBox').slideUp();\n    //clear msg text\n    $(\"#msgtText\").val(\"\");\n}\n</code></pre>\n\n<p>To perform a simple test you could try this:</p>\n\n<pre><code>&lt;a href='#' onclick=\"javascript: DisplayMsg('Testing');\"&gt;Show Message!&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<h1>Update:</h1>\n\n<hr>\n\n<h1><a href=\"http://jsbin.com/apiri4/3\" rel=\"nofollow\">Check out the DEMO</a></h1>\n\n<p><strong>Code Used:</strong></p>\n\n<pre><code>$(function(){\n  $('#smsg_link').click(function(){\n  showMessage('#9BED87', 'black', 'This is sample success message');\n  return false;\n});\n\n$('#imsg_link').click(function(){\n  showMessage('#FFE16B', 'black', 'This is sample info message');\n  return false;\n});\n\n$('#emsg_link').click(function(){\n  showMessage('#ED869B', 'black', 'This is sample error message');\n  return false;\n});\n});\n\n\n\n/*\nshowMessage function by Sarfraz:\n-------------------------\nShows fancy message on top of the window\n\nparams:\n  - bgcolor:     The background color for the message box\n  - color:     The text color of the message box\n  - msg:       The message text\n*/\nvar interval = null;\n\nfunction showMessage(bgcolor, color, msg)\n{\n    $('#smsg').remove();\n    clearInterval(interval);\n\n    if (!$('#smsg').is(':visible'))\n    {\n        if (!$('#smsg').length)\n        {\n            $('&lt;div id=\"smsg\"&gt;'+msg+'&lt;/div&gt;').appendTo($('body')).css({\n                position:'fixed',\n                top:0,\n                left:0,\n                width:'98%',\n                height:'30px',\n                lineHeight:'30px',\n                background:bgcolor,\n                color:color,\n                zIndex:1000,\n                padding:'10px',\n                fontWeight:'bold',\n                fontSize:'18px',\n                textAlign:'center',\n                opacity:0.8,\n                margin:'auto',\n                display:'none'\n            }).slideDown('show');\n\n            interval = setTimeout(function(){\n                $('#smsg').animate({'width':'hide'}, function(){\n                    $('#smsg').remove();\n                });\n            }, 3000);\n        }\n    }\n}\n</code></pre>\n\n<hr>\n\n<p>If you want to create your own, check out the <a href=\"http://api.jquery.com/slideToggle/\" rel=\"nofollow\"><code>slideToggle</code></a> function of jQuery.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Something like this?</p>\n\n<pre><code>$(\"#bar\").slideUp();\n</code></pre>\n\n<p>However, here I think they fade out first the bar then they bring the main container up, so that'd be something like that:</p>\n\n<pre><code>$(\"#bar\").fadeOut(function(){\n    $(\"#container\").animate({\"top\":\"0px\"});\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This is the first time I visited stack overflow and I saw a beautiful header message which displays a text and a close button.</p>\n\n<p>The header bar is fixed one and is great to get the attention of the visitor. I was wondering if anyone of you guys know the code to get the same kind of header bar.</p>\n",
            "last_activity_date": 1352529505,
            "question_id": 605291,
            "score": 42,
            "tags": [
                "javascript",
                "html",
                "css",
                "header"
            ],
            "title": "Header message just like at Stack Overflow"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You need interfaces in Java since it is statically typed and the contract between classes should be known during compilation. In JavaScript it is different. JavaScript is dynamically typed; it means that when you get the object you can just check if it has a specific method and call it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It can be done. View some of the articles:</p>\n\n<ul>\n<li><em><a href=\"http://knol.google.com/k/programming-to-the-interface-in-javascript-yes-it-can-be-done-er-i-mean-faked\" rel=\"nofollow\">Programming to the interface in JavaScript. Yes, it can be done, er, I mean faked</a></em></li>\n<li><em><a href=\"http://ajaxian.com/archives/interfaces-in-javascript\" rel=\"nofollow\">Interfaces in JavaScript</a></em></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There's no notion of \"this class must have these functions\" (that is, no interfaces per se), because:</p>\n\n<ol>\n<li>JavaScript inheritance is based on objects, not classes.  That's not a big deal until you realize:</li>\n<li>JavaScript is an <em>extremely</em> dynamically typed language -- you can create an object with the proper methods, which would make it conform to the interface, <em>and then undefine all the stuff that made it conform</em>. It'd be so easy to subvert the type system -- even accidentally! -- that it wouldn't be worth it to try and make a type system in the first place.</li>\n</ol>\n\n<p>Instead, JavaScript uses what's called <a href=\"http://en.wikipedia.org/wiki/Duck_typing\">duck typing</a>. (If it walks like a duck, and quacks like a duck, as far as JS cares, it's a duck.) If your object has quack(), walk(), and fly() methods, code can use it wherever it expects an object that can walk, quack, and fly, without requiring the implementation of some \"Duckable\" interface. The interface is exactly the set of functions that the code uses (and the return values from those functions), and with duck typing, you get that for free.</p>\n\n<p>Now, that's not to say your code won't fail halfway through, if you try to call <code>some_dog.quack()</code>; you'll get a TypeError.  Frankly, if you're telling dogs to quack, you have slightly bigger problems; duck typing works best when you keep all your ducks in a row, so to speak, and aren't letting dogs and ducks mingle together unless you're treating them as generic animals.  In other words, even though the interface is fluid, it's still there; it's often an error to pass a dog to code that expects it to quack and fly in the first place.</p>\n\n<p>But if you're sure you're doing the right thing, you can work around the quacking-dog problem by testing for the existence of a particular method before trying to use it. Something like</p>\n\n<pre><code>if (typeof(someObject.quack) == \"function\")\n{\n    // This thing can quack\n}\n</code></pre>\n\n<p>So you can check for all the methods you can use before you use them. The syntax is kind of ugly, though. There's a slightly prettier way:</p>\n\n<pre><code>Object.prototype.can = function(methodName)\n{\n     return ((typeof this[methodName]) == \"function\");\n};\n\nif (someObject.can(\"quack\"))\n{\n    someObject.quack();\n}\n</code></pre>\n\n<p>This is standard JavaScript, so it should work in any JS interpreter worth using.  It has the added benefit of reading like English.</p>\n\n<p>For modern browsers (that is, pretty much any browser other than IE 6-8), there's even a way to keep the property from showing up in <code>for...in</code>:</p>\n\n<pre><code>Object.defineProperty(Object.prototype, 'can', {\n    enumerable: false,\n    value: function(method) {\n        return (typeof this[method] === 'function');\n    }\n}\n</code></pre>\n\n<p>The problem is that IE7 objects don't have <code>.defineProperty</code> at all, and in IE8, it allegedly only works on host objects (that is, DOM elements and such).  If compatibility is an issue, you can't use <code>.defineProperty</code>.  (I won't even mention IE6, because it's rather irrelevant anymore outside of China.)</p>\n\n<p>Another issue is that some coding styles like to assume that everyone writes bad code, and prohibit modifying <code>Object.prototype</code> in case someone wants to blindly use <code>for...in</code>. If you care about that, or are using (IMO <em>broken</em>) code that does, try a slightly different version:</p>\n\n<pre><code>function can(obj, methodName)\n{\n     return ((typeof obj[methodName]) == \"function\");\n}\n\nif (can(someObject, \"quack\"))\n{\n    someObject.quack();\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 196
                },
                {
                    "body": "<p>Pick up a copy of '<a href=\"http://rads.stackoverflow.com/amzn/click/159059908X\">JavaScript design patterns</a>' by <a href=\"http://www.dustindiaz.com/\">Dustin Diaz</a>. There's a few chapters dedicated to implementing JavaScript interfaces through Duck Typing. It's a nice read as well. But no, there's no language native implementation of an interface, you have to <a href=\"http://en.wikipedia.org/wiki/Duck_typing\">Duck Type</a>.</p>\n\n<pre><code>// example duck typing method\nvar hasMethods = function(obj /*, method list as strings */){\n    var i = 1, methodName;\n    while((methodName = arguments[i++])){\n        if(typeof obj[methodName] != 'function') {\n            return false;\n        }\n    }\n    return true;\n}\n\n// in your code\nif(hasMethods(obj, 'quak', 'flapWings','waggle')) {\n    //  IT'S A DUCK, do your duck thang\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p>JavaScript (ECMAScript edition 3) has an <code>implements</code> reserved word <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Reserved_Words\">saved up for future use</a>. I think this is intended exactly for this purpose, however, in a rush to get the specification out the door they didn't have time to define what to do with it, so, at the present time, browsers don't do anything besides let it sit there and occasionally complain if you try to use it for something.</p>\n\n<p>It is possible and indeed easy enough to create your own <code>Object.implement(Interface)</code> method with logic that baulks whenever a particular set of properties/functions are not implemented in a given object.</p>\n\n<p>I wrote an article on <a href=\"http://en.wikipedia.org/wiki/Object-orientation\">object-orientation</a> <strong><a href=\"http://desalasworks.com/object-oriented-javascript-inheritance/\">where use my own notation as follows</a></strong>:</p>\n\n<pre><code>// Create a 'Dog' class that inherits from 'Animal'\n// and implements the 'Mammal' interface\nvar Dog = Object.extend(Animal, {\n    constructor: function(name) {\n        Dog.superClass.call(this, name);\n    },\n    bark: function() {\n        alert('woof');\n    }\n}).implement(Mammal);\n</code></pre>\n\n<p>There are many ways to skin this particular cat, but this is the logic I used for my own Interface implementation. I find I prefer this approach, and it is easy to read and use (as you can see above). It does mean adding an 'implement' method to <code>Function.prototype</code> which some people may have a problem with, but I find it works beautifully.</p>\n\n<pre><code>Function.prototype.implement = function() {\n    // Loop through each interface passed in and then check \n    // that its members are implemented in the context object (this).\n    for(var i = 0; i &lt; arguments.length; i++) {\n       // .. Check member's logic ..\n    }\n    // Remember to return the class being tested\n    return this;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>There's also jQuery.isFunction(method), if you'd rather that than cHao's code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.bobjs.com\" rel=\"nofollow\">bob.js</a> supports some sort of interfaces.</p>\n\n<p><strong>1. Check if an object implements an interface:</strong></p>\n\n<pre><code>var iFace = { say: function () { }, write: function () { } };  \nvar obj1 = { say: function() { }, write: function () { }, read: function () { } }; \nvar obj2 = { say: function () { }, read: function () { } }; \nconsole.log('1: ' + bob.obj.canExtractInterface(obj1, iFace)); \nconsole.log('2: ' + bob.obj.canExtractInterface(obj2, iFace)); \n// Output: \n// 1: true \n// 2: false\n</code></pre>\n\n<p><strong>2. Extract interface from an object:</strong></p>\n\n<pre><code>var obj = {  \n    msgCount: 0, \n    say: function (msg) { console.log(++this.msgCount + ': ' + msg); }, \n    sum: function (a, b) { console.log(a + b); } \n}; \nvar iFace = { say: function () { } }; \nobj = bob.obj.extractInterface(obj, iFace); \nobj.say('Hello!'); \nobj.say('How is your day?'); \nobj.say('Good bye!'); \n// Output: \n// 1: Hello! \n// 2: How is your day? \n// 3: Good bye! \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>JavaScript Interfaces:</h2>\n\n<p>Though JavaScript does <em>not</em> have the <code>interface</code> type, it is often times needed. For reasons relating to JavaScript's dynamic nature and use of Prototypical-Inheritance, it is difficult to ensure consistent interfaces across classes -- however, it is possible to do so; and frequently emulated.</p>\n\n<p>At this point, there are handfuls of particular ways to emulate Interfaces in JavaScript; variance on approaches usually satisfies some needs, while others are left unaddressed. Often times, the most robust approach is overly cumbersome and stymies the implementor (developer).</p>\n\n<p>Here is an approach to Interfaces / Abstract Classes that is not very cumbersome, is explicative, keeps implementations inside of Abstractions to a minimum, and leaves enough room for dynamic or custom methodologies:</p>\n\n<pre><code>function resolvePrecept(interfaceName) {\n    var interfaceName = interfaceName;\n    return function curry(value) {\n        /*      throw new Error(interfaceName + ' requires an implementation for ...');     */\n        console.warn('%s requires an implementation for ...', interfaceName);\n        return value;\n    };\n}\n\nvar iAbstractClass = function AbstractClass() {\n    var defaultTo = resolvePrecept('iAbstractClass');\n\n    this.datum1 = this.datum1 || defaultTo(new Number());\n    this.datum2 = this.datum2 || defaultTo(new String());\n\n    this.method1 = this.method1 || defaultTo(new Function('return new Boolean();'));\n    this.method2 = this.method2 || defaultTo(new Function('return new Object();'));\n\n};\n\nvar ConcreteImplementation = function ConcreteImplementation() {\n\n    this.datum1 = 1;\n    this.datum2 = 'str';\n\n    this.method1 = function method1() {\n        return true;\n    };\n    this.method2 = function method2() {\n        return {};\n    };\n\n    //Applies Interface (Implement iAbstractClass Interface)\n    iAbstractClass.apply(this);  // .call / .apply after precept definitions\n};\n</code></pre>\n\n<h2>Participants</h2>\n\n<p><strong><em>Precept Resolver</em></strong></p>\n\n<p>The <code>resolvePrecept</code> function is a utility &amp; helper function to use inside of your <em>Abstract Class</em>. Its job is to allow for customized implementation-handling of encapsulated <em>Precepts (data &amp; behavior)</em>. It can throw errors or warn -- AND -- assign a default value to the Implementor class.</p>\n\n<p><strong><em>iAbstractClass</em></strong></p>\n\n<p>The <code>iAbstractClass</code> defines the interface to be used. Its approach entails a tacit agreement with its Implementor class. This interface assigns each <em>precept</em> to the same exact precept namespace -- OR -- to whatever the <em>Precept Resolver</em> function returns. However, the tacit agreement resolves to a <em>context</em> -- a provision of Implementor.</p>\n\n<p><strong><em>Implementor</em></strong></p>\n\n<p>The Implementor simply 'agrees' with an Interface (<em>iAbstractClass</em> in this case) and applies it by the use of <em>Constructor-Hijacking</em>: <code>iAbstractClass.apply(this)</code>. By defining the data &amp; behavior above, and then <em>hijacking</em> the Interface's constructor -- passing Implementor's context to the Interface constructor -- we can ensure that Implementor's overrides will be added, and that Interface will explicate warnings and default values.</p>\n\n<p>This is a very non-cumbersome approach which has served my team &amp; I very well for the course of time and different projects. However, it does have some caveats &amp; drawbacks.</p>\n\n<p><strong>Drawbacks</strong></p>\n\n<p>Though this helps implement consistency throughout your software to a significant degree, it <strong><em>does not implement true interfaces</em></strong> -- but emulates them. Though definitions, defaults, and warnings or errors <em>are</em> explicated, the explication of use is <em>enforced &amp; asserted</em> by the developer (as with much of JavaScript development).</p>\n\n<p>This is seemingly the best approach to <em>\"Interfaces in JavaScript\"</em>, however, I would love to see the following resolved:</p>\n\n<ul>\n<li><em>Assertions of return types</em></li>\n<li><em>Assertions of signatures</em></li>\n<li><em>Freeze objects from <code>delete</code> actions</em></li>\n<li>Assertions of anything else prevalent or needed in the specificity of the JavaScript community</li>\n</ul>\n\n<p>That said, I hope this helps you as much as it has my team and I.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I know this is an old one, but I've recently found myself needing more and more to have a handy API for checking objects against interfaces. So I wrote this: <a href=\"https://github.com/tomhicks/methodical\" rel=\"nofollow\">https://github.com/tomhicks/methodical</a></p>\n\n<p>It's also available via NPM: <code>npm install methodical</code></p>\n\n<p>It basically does everything suggested above, with some options for being a bit more strict, and all without having to do loads of <code>if (typeof x.method === 'function')</code> boilerplate.</p>\n\n<p>Hopefully someone finds it useful.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Javascript does not have interfaces. But it can be duck-typed, an example can be found here:</p>\n\n<p><a href=\"http://reinsbrain.blogspot.com/2008/10/interface-in-javascript.html\" rel=\"nofollow\">http://reinsbrain.blogspot.com/2008/10/interface-in-javascript.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm learning <a href=\"http://www.crockford.com/javascript/private.html\">how to make OOP with JavaScript</a>. Does it have the interface concept (such as Java's <code>interface</code>)? </p>\n\n<p>So I would be able to create a listener...</p>\n",
            "last_activity_date": 1425566552,
            "question_id": 3710275,
            "score": 91,
            "tags": [
                "javascript",
                "oop"
            ],
            "title": "Does JavaScript have the interface type (such as Java&#39;s &#39;interface&#39;)?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><strong>Update September 2014: iOS 8 has removed the <code>minimal-ui</code> feature</strong>\nThere's again no way to remove/hide navigation bars other than to rely on the default browser behavior (bars will be hidden when scrolling, but only if the scrolling element is the <code>BODY</code> of the page). The only \"workaround\" is to save the app to the homescreen and have the proper meta tags set (see below).</p>\n\n<p><strong>Update August 2014: iOS 8 (beta) no longer supports <code>minimal-ui</code></strong>.\nThere's no workaround. (The reason for this is likely due to abuse by websites that used it to try to prevent people from navigating away, tho there may be new features in iOS 8 Safari that have not been made public yet that replace <code>minimal-ui</code>.)</p>\n\n<p><strong>iOS 7.1 added a new API to solve this problem:</strong></p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"minimal-ui\"&gt;\n</code></pre>\n\n<p>This new viewport flag hides the Safari UI by default (only a small title bar with URL and SSL indicator are shown). To access the Safari UI, users must actively tap this title bar.</p>\n\n<p>Note that <strong>on iOS 7.0.x, there's no API or known workaround</strong> for this. In those versions, if you want to hide Safari's browser chrome permanently you need to either get the user to add the web app to the home screen (with the appropriate meta tags set <code>&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\"&gt;</code>) or use some sort of native app wrapper like Phonegap and distribute via the App Store.</p>\n\n<p>Personally, I wish they hadn't removed the \"full screen\" button they introduced in landscape mode on iOS 6 Mobile Safari, which was a great solution that made developers and users happy.</p>\n\n<p>A perfect candidate for this to be solved more permanently would be for Mobile Safari to support the HTML5 full screen API (which is supported on Safari on OS X!). Alas, there's no support right now and historically iOS point releases didn't add new Safari features, so maybe that's something for iOS 8.</p>\n",
                    "is_accepted": false,
                    "score": 96
                },
                {
                    "body": "<p>Update: iOS7.1 has now been released so the NDA has lifted.</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"minimal-ui\"&gt;\n</code></pre>\n\n<p>Is indeed the correct tag and works in the live release. Remember that \"viewport\" can support a comma separated list if you require.</p>\n\n<p>I combine it with other mobile variables to make the website feel like an app:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimal-ui\"&gt;\n</code></pre>\n\n<p>-</p>\n\n<p>We have been struggling with this one too. We have a TabBar on our site and every time you attempt to click a tab safari controls pop up.</p>\n\n<p>Today hope. If you are a member of the apple developer program, I would strongly suggest visiting this forum: <a href=\"https://devforums.apple.com/message/927476\" rel=\"nofollow\">https://devforums.apple.com/message/927476</a></p>\n\n<p>W</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><strong>UPDATE</strong>: There is a meta property for fixing this currently in iOS7.1 Beta according to <a href=\"https://forums.whirlpool.net.au/archive/2194915\">this forum post</a> on the release notes.</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"minimal-ui\"&gt;\n</code></pre>\n\n<p>I have run a test and can confirm this feature is currently in Beta 2.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p><strong>NOTE</strong>: The new minimal-ui option is a great solution but it needs to be part of the HTML response. \nI tried on iOS7.1 beta3 to append the viewport meta tag with JS </p>\n\n<p><code>$('head').append('&lt;meta name=\"viewport\" content=\"width=device-width, user-scalable=0, minimal-ui\"&gt;');</code></p>\n\n<p>the value \"minimal-ui\" is ignored by the browser. </p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strong>EDIT 2:</strong></p>\n\n<p>Does not work since iOS 7.1</p>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Some games have adopted an overlay that <a href=\"http://s9.postimg.org/6skiciszz/pic.gif\" rel=\"nofollow\">hints the player to scroll away the bars</a> and then locks scrolling until bars pop out again. In this case <code>position: fixed</code> helps a lot, as it stabilizes the movement (can't explain it better, just have to try it for yourself). This game is a good example of such approach:<br><br>www.paf.com/mobile/launch/flowers.html (sorry, can't post more than 2 links)<br>\n<br>Recently I have also stumbled upon a hack that deactivates navigation bar triggering for the top area. All you have to do is add a random element to your DOM with following styles:<br></p>\n\n<pre><code>z-index: 100000; /* should be bigger than everything else */\nposition: fixed;\noverflow: scroll;\n-webkit-overflow-scrolling: touch;\n</code></pre>\n\n<p><br>\nRead more about it <a href=\"http://mihhaillapushkin.wordpress.com/2014/01/20/stop-navigation-bars-from-appearing-in-iphone-ios7-safari/\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Hopefully this helps someone, but I didn't want to set my viewport width=device-width.. because its 480px on iphone 4.. and I want my game to be at 800px for all devices.</p>\n\n<p>And if you don't set it, then minimal-ui doesn't register.</p>\n\n<p>My work around is doing:</p>\n\n<p><code>&lt;meta name=\"viewport\" content=\"width=device-width, minimal-ui\"&gt;</code></p>\n\n<p>And then changing the viewport once the page is loaded:</p>\n\n<pre><code>  $(window).load(function(){\n    $('meta[name=viewport]').attr('content','width=800, maximum-scale=1')\n  });\n</code></pre>\n\n<p>I'm pretty shocked it works.  The address bar and lower UI buttons only appear if the user clicks the top/bottom of the screen. Love it now.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I don't believe there is any solution to hide bars programmatically using javascript/css/html, but let me try to describe a problem. We are the team of mobile game developers and we have been developing a game for one year. </p>\n\n<p>After iOS 7 announcement we have faced the problem that it is IMPOSSIBLE to hide the navigation bars. Once user taps in the upper or lower part of the Safari browser, navigation bars are appearing again and hide all controls of the game.</p>\n\n<p>The only solution we have found so far is forcing user to:</p>\n\n<ol>\n<li>Rotate device</li>\n<li>Scroll the page</li>\n<li>Add application to Home-screen</li>\n</ol>\n\n<p>None of these alternatives is acceptable. It looks like Apple is aware of this problem, but keeps ignoring it. They have closed a reported bug as a duplicate of the bug #14076889.</p>\n\n<p>I believe that we are not the only team who experience the same problem. Does anyone know the solution?</p>\n",
            "last_activity_date": 1413537227,
            "question_id": 18793072,
            "score": 64,
            "tags": [
                "javascript",
                "ios",
                "html5",
                "ios7",
                "safari"
            ],
            "title": "Impossible to hide navigation bars in Safari iOS 7 for iPhone/iPod touch"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p><a href=\"http://oreilly.com/catalog/9780596101992/\" rel=\"nofollow\">JavaScript: The Definitive Guide</a>. See also <a href=\"http://www.davidflanagan.com/\" rel=\"nofollow\">David Flanagan's web site</a> as well as <a href=\"http://video.google.com/videosearch?q=javascript%20crockford\" rel=\"nofollow\">Douglas Crockford's videos</a> and <a href=\"http://www.crockford.com/javascript/\" rel=\"nofollow\">his essays on JavaScript</a> ... Thanks <a href=\"http://stackoverflow.com/users/123582/rich-seller\">Rich</a>.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p><a href=\"http://oreilly.com/catalog/9780596517748/\">JavaScript the good parts.</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>i would recommend \"<a href=\"http://rads.stackoverflow.com/amzn/click/0596527748\" rel=\"nofollow\">Head First JavaScript</a>\" it is nice to read, with good illustrations. I love the books from this publisher. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>after the basics, every Javascript developer <strong>must</strong> read this: <br />\n<a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">Douglas Crockford: JavaScript: The Good Parts</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>JavaScript: The Good Parts </p>\n\n<p><a href=\"http://rads.stackoverflow.com/amzn/click/0596517742\" rel=\"nofollow\">http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://rads.stackoverflow.com/amzn/click/1847194141\" rel=\"nofollow\">Object-Oriented JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm a believer in Sinan's recommendation of JavaScript: The Definitive Guide for a good reference type book.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/11246/best-resources-to-learn-javascript\">Previous SO Question</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/74884/good-javascript-books\">Another previous SO Question</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://rads.stackoverflow.com/amzn/click/0321423305\" rel=\"nofollow\">ppk on JavaScript</a> was really great. His <a href=\"http://www.quirksmode.org/\" rel=\"nofollow\">website</a> is also filled with tons of useful information including lots on browser incompatibilities.</p>\n\n<p><img src=\"http://www.quirksmode.org/pix/book.jpg\" alt=\"alt text\" /></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think I've read them all. Here's the dark sheep. This one came out of left field. I was surprised at how good it is.</p>\n\n<p><a href=\"http://rads.stackoverflow.com/amzn/click/0596515898\">JavaScript: The Missing Manual</a></p>\n\n<p><img src=\"http://ecx.images-amazon.com/images/I/51cPJ2k%2BOGL.%5FBO2,204,203,200%5FPIsitb-sticker-arrow-click,TopRight,35,-76%5FAA240%5FSH20%5FOU01%5F.jpg\" alt=\"alt text\" /></p>\n\n<p>The other books are great. But for actually <em>learning</em> the language, I think this one wins hands down.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Sams TEach yourself JavaScript Fourth Edition.\n<a href=\"http://www.amazon.com/s/ref=nb%5Fss%5Fb?url=search-alias%3Dstripbooks&amp;field-keywords=0672328798&amp;x=20&amp;y=25\" rel=\"nofollow\">Buy it really CHEAP here.</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'd recommend <a href=\"http://jspro.org/\" rel=\"nofollow\">Pro JavaScript Techniques: The Ultimate JavaScript book for the modern Web Developer</a> by By John Resig, the author of jQuery framework.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Learning Javascript: <a href=\"http://rads.stackoverflow.com/amzn/click/0596527462\" rel=\"nofollow\">http://www.amazon.com/Learning-JavaScript-Shelley-Powers/dp/0596527462/ref=sr_1_16?ie=UTF8&amp;s=books&amp;qid=1247773699&amp;sr=8-16</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>After you've tried out some of the books, read them through, make sure you try many things and ideas out on your own. The only way to really learn a language is to write programs in it. After you have a good understanding, answer some questions on SO. This can really help you learn stuff and have fun talking code with other people. An SO technique I use is to find a user with 20k + rep who has a lot of posts in the javascript tag, then look at some of their most upvoted javascript answers. Good luck! :D</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I like this one too much \"<a href=\"http://oreilly.com/catalog/9780596101992/\" rel=\"nofollow\">OReilly.JavaScript.The.Definitive.Guide.5th.Edition.Aug.2006</a>\"</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What's the best and most efficient book to learn JavaScript?</p>\n",
            "last_activity_date": 1364395335,
            "question_id": 1139780,
            "score": 23,
            "tags": [
                "javascript"
            ],
            "title": "What&#39;s the best and most efficient book to learn JavaScript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>A few years back (not exactly the stone age), I was using a signed java applet that would query its server for syncing/updating requirements, download appropriate files from the server and save them on the user's filesystem (not a database). That solution might work for you, although you will need someone to write the applet and sign it. For database solutions, such an applet can use the jdbc available for most databases using localhost on a suitable port (e.g., 3306 for MySQL). I believe the applet tag is deprecated in Html5 but it still works. No experience on Android tablets, so can't comment on that part.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For your requirements I suggest that developing a new polyfill based on two others: \n<em><a href=\"https://github.com/ebidel/idb.filesystem.js\" rel=\"nofollow\">FileSystem API to IndexedDB</a></em> and <em>IndexedDB to WebSQL</em> \u2014 is the best option. </p>\n\n<p>The former one will enable support for storing blobs in Chrome (FileSystem API) and Firefox (IndexedDB), while the latter should provide the support for Android and iOS (<a href=\"http://caniuse.com/sql-storage\" rel=\"nofollow\">WebSQL</a>). What is needed is just making these polyfills work together, and I suppose it's not hard.</p>\n\n<p><strong>NB:</strong> Since I couldn't find any information on the web about this, you should test if storing blobs using the WebSQL polyfill will work on iOS and Android. It looks like it should work though:</p>\n\n<pre><code>var sql = [\"CREATE TABLE\", idbModules.util.quote(storeName), \"(key BLOB\", createOptions.autoIncrement ? \", inc INTEGER PRIMARY KEY AUTOINCREMENT\" : \"PRIMARY KEY\", \", value BLOB)\"].join(\" \")\n</code></pre>\n\n<p><a href=\"https://github.com/axemclion/IndexedDBShim/blob/master/src/IDBDatabase.js\" rel=\"nofollow\">Source</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Results Offline blob cache for PNG slippy maps</p>\n\n<p><strong>Testing</strong></p>\n\n<ul>\n<li>171 PNG files (total of 3.2MB)</li>\n<li>Platforms tested: Chrome v24, FireFox 18, IE 10</li>\n<li>Should also work with Chrome &amp; FF for Android</li>\n</ul>\n\n<p><strong>Fetch from web server</strong></p>\n\n<ul>\n<li>using XHR2 (supported on almost all browsers) for blob download from web server</li>\n<li>I went with XHR2-Lib by Phil Parsons, which is very much like JQUERY .ajax() \n<ul>\n<li><a href=\"https://github.com/p-m-p/xhr2-lib\">https://github.com/p-m-p/xhr2-lib</a> </li>\n</ul></li>\n</ul>\n\n<p><strong>Storage</strong></p>\n\n<ul>\n<li>IndexedDB for IE and FireFox</li>\n<li>Chrome: Polyfill (blob stored using FileSystem API, reference kept in IndexedDB) polyfill</li>\n<li>A Must read article on \"How the browsers store IndexedDB data\"\n<ul>\n<li><a href=\"http://www.aaron-powell.com/web/indexeddb-storage\">http://www.aaron-powell.com/web/indexeddb-storage</a></li>\n</ul></li>\n<li>Note: FireFox uses SQLlite for the NOSQL IndexedDB. That might be the reason for the slow performance. (blobs stored separately)</li>\n<li>Note: Microsoft IE uses the extensible storage engine: \n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/Extensible_Storage_Engine\">http://en.wikipedia.org/wiki/Extensible_Storage_Engine</a></li>\n</ul></li>\n<li>Note: Chrome uses LevelDB <a href=\"http://code.google.com/p/leveldb/\">http://code.google.com/p/leveldb/</a></li>\n</ul>\n\n<p><strong>Display</strong></p>\n\n<ul>\n<li>I am using Leaflet <a href=\"http://leafletjs.com/\">http://leafletjs.com/</a> to show the map tiles</li>\n<li>I used the functional tile layer plugin by Ishmael Smyrnow for fetching the tile layer from the DB\n<ul>\n<li><a href=\"https://github.com/ismyrnow/Leaflet.functionaltilelayer\">https://github.com/ismyrnow/Leaflet.functionaltilelayer</a></li>\n</ul></li>\n<li>I compared the DB-based tiles layer with a purely local (localhost://) storage</li>\n<li><strong>There is no noticeable difference in performance! between using IndexedDB and local files!</strong></li>\n</ul>\n\n<p><strong>Results</strong></p>\n\n<ul>\n<li>Chrome: Fetch (6.551s), Store (8.247s), Total Elapsed Time: (13.714s)</li>\n<li>FireFox: Fetch (0.422s), Store (31.519s), Total Elapsed Time: (32.836s)</li>\n<li>IE 10: Fetch (0.668s), Store: (0.896s), Total Elapsed Time: (3.758s)</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I have map caching examples: <a href=\"https://github.com/tbicr/OfflineMap\" rel=\"nofollow\">https://github.com/tbicr/OfflineMap</a> (open example, discover regions and zooms, switch offline and discovered regions will availible).\nThere are <code>map.js</code> - map layer for offline tiles, <code>storage.js</code> - storage implementation based on IndexedDb and WebSQL (but this just test implementation with poor performance).</p>\n\n<ul>\n<li>For site files (html, css, js and etc.) I prefer use application cache.</li>\n<li>For storage I prefer use Indexed DB (support blob), Web SQL (only base64), FileWriter (support blob, but only chrome). Frankly storage is big issue for this. You need the fastest key value solution that will mix them all. I think is good decision to use exist solution.</li>\n<li>For fetching I used canvas with CORS. But I thinking about WebWorkers and XHR2 and this can be better instead canvas because canvas have some troubles with CORS in different browsers and other (for example <a href=\"http://tile.openstreetmap.org/14/9445/5267.png\" rel=\"nofollow\">this title</a> was stored <a href=\"http://habrastorage.org/storage2/d7a/129/0b9/d7a1290b9987e3703ce7f4c3f10d573e.png\" rel=\"nofollow\">bad in opera</a>).</li>\n</ul>\n\n<p>Additional information about sizes for 2 billion city (<a href=\"http://www.openstreetmap.org/index.html?lat=53.902&amp;lon=27.555&amp;zoom=11\" rel=\"nofollow\">Minsk</a>):</p>\n\n<ul>\n<li>Zoom - 9, tiles - 2, size - 52 kb, with previous - 52 kb;</li>\n<li>Zoom - 10, tiles - 3, size - 72 kb, with previous - 124 kb;</li>\n<li>Zoom - 11, tiles - 7, size - 204 kb, with previous - 328 kb;</li>\n<li>Zoom - 12, tiles - 17, size - 348 kb, with previous - 676 kb;</li>\n<li>Zoom - 13, tiles - 48, size - 820 kb, with previous -  1.5 mb;</li>\n<li>Zoom - 14, tiles - 158, size - 2.2 mb, with previous - 3.7 mb;</li>\n<li>Zoom - 15, tiles - 586, size - 5.5 mb, with previous - 9.3 mb;</li>\n<li>Zoom - 16, tiles - 2264, size - 15 mb, with previous - 24.3 mb;</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This a very interesting thread and I've been asking to myself to very same questions! I've ended up by implementing the solution I've described here: <a href=\"http://blogs.msdn.com/b/davrous/archive/2013/09/24/using-indexeddb-to-handle-your-3d-webgl-assets-sharing-feedbacks-amp-tips-of-babylon-js.aspx\" rel=\"nofollow\">http://blogs.msdn.com/b/davrous/archive/2013/09/24/using-indexeddb-to-handle-your-3d-webgl-assets-sharing-feedbacks-amp-tips-of-babylon-js.aspx</a> for storing the textures and 3d meshes of our 3D WebL engine. I'm referecing this stackoverflow thread inside this article.</p>\n\n<p>I hope that this article will be useful to some of you and I hope that Chrome will soon support storing blob into IndexedDB. I didn't really look to the available polyfills using FileSystem API. Did anybody try such polyfills?</p>\n\n<p>Bye,</p>\n\n<p>David</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have an offline web application using appcaching. I need to provide it about 10MB - 20MB of data that it will save (client-side) consisting mainly of PNG image files. The operation is as follows:</p>\n\n<ol>\n<li>Web application downloads and installs in appcache (uses manifest)</li>\n<li>Web app requests from server PNG data files (how? - see alternatives below)</li>\n<li>Occasionally web app resyncs with server, and does small partial updates/deletes/additions to PNG database</li>\n<li>FYI: Server is a JSON REST server, that can place files in wwwroot for pickup</li>\n</ol>\n\n<p>Here is my current analysis of client-based \"databases\" that handle binary blob storage</p>\n\n<h1>SEE UPDATE at Bottom</h1>\n\n<ul>\n<li><strong>AppCache</strong> (via manifest add all the PNG and then update on demand)\n<ul>\n<li>CON: any change of a PNG database item will mean complete download of all items in manifest (Really bad news!)</li>\n</ul></li>\n<li><strong>WebStorage</strong>\n<ul>\n<li>CON: Designed for JSON storage</li>\n<li>CON: can only store blobs via base64 encoding (probably fatal flaw due to cost of de-encoding)</li>\n<li>CON: Hard limit of 5MB for webStorage <a href=\"http://htmlui.com/blog/2011-08-23-5-obscure-facts-about-html5-localstorage.html\">http://htmlui.com/blog/2011-08-23-5-obscure-facts-about-html5-localstorage.html</a></li>\n</ul></li>\n<li><strong>PhoneGap &amp; SQLLite</strong>\n<ul>\n<li>CON: Sponsor will reject it as a native app requiring certification</li>\n</ul></li>\n<li><strong>ZIP file</strong>\n<ul>\n<li>Server creates a zip file, places it in wwwroot, and notifies client</li>\n<li>user has to manually unzip (At least that is how I see it) and save to client file system</li>\n<li>Web app uses FileSystem API to reference files</li>\n<li>CON: ZIP might be too large (zip64?), long time to create</li>\n<li>CON: Not sure if FileSystem API can always read out of the sandbox (I think so)</li>\n</ul></li>\n<li><strong>USB or SD card</strong> (back to the stone age....)\n<ul>\n<li>The user will be local to the server before going offline</li>\n<li>So we could have him insert a SD card, let the server fill it with PNG files</li>\n<li>Then the user will plug it into the laptop, tablet</li>\n<li>Web app will use FileSystem API to read the files </li>\n<li>CON: Not sure if FileSystem API can always read out of the sandbox (I think so)</li>\n</ul></li>\n<li><strong>WebSQL</strong>\n<ul>\n<li>CON: w3c has abandoned it (pretty bad)</li>\n<li>I might consider a Javascript wrapper that uses IndexedDB and WebSQL as a fall-back</li>\n</ul></li>\n<li><strong>FileSystem API</strong>\n<ul>\n<li>Chrome supports read/write of blobs </li>\n<li>CON: not clear about IE and FireFox (IE10, has non-standard msSave)</li>\n<li>caniuse.com reports IOS and Android support (but again, is this just r/w of JSON, or does it include the full blob API for writing?</li>\n<li>CON: FireFox folks dislike FileSystem API &amp; not clear if they are supporting saving blobs: <a href=\"https://hacks.mozilla.org/2012/07/why-no-filesystem-api-in-firefox/\">https://hacks.mozilla.org/2012/07/why-no-filesystem-api-in-firefox/</a></li>\n<li>PRO: <em>Much</em> faster than IndexedDB for blobs according to jsperf <a href=\"http://jsperf.com/indexeddb-vs-localstorage/15\">http://jsperf.com/indexeddb-vs-localstorage/15</a> (page 2)</li>\n</ul></li>\n<li><strong>IndexedDB</strong>\n<ul>\n<li>Good support in IE10, FireFox (save, read blobs)</li>\n<li>Good speed and easier management than a file system (deletes, updates) </li>\n<li>PRO: see speed tests: <a href=\"http://jsperf.com/indexeddb-vs-localstorage/15\">http://jsperf.com/indexeddb-vs-localstorage/15</a></li>\n<li>See this article on storing and display of images in IndexedDB: <a href=\"https://hacks.mozilla.org/2012/02/storing-images-and-files-in-indexeddb/\">https://hacks.mozilla.org/2012/02/storing-images-and-files-in-indexeddb/</a></li>\n<li>CON: I confirmed that Chrome does not yet support blob writing (current bug, but not clear when it will be fixed)</li>\n<li>UPDATE: Chrome developers confirm they are working on this for both desktop and android! no timeline yet.</li>\n</ul></li>\n<li><strong>LawnChair</strong> JavaScript wrapper <a href=\"http://brian.io/lawnchair/\">http://brian.io/lawnchair/</a>\n<ul>\n<li>PRO: very clean wrapper for IndexedDB, WebSQL or whatever database you have (think polyfill)</li>\n<li>CON: cannot store binary blobs, only data:uri (base64 encoding) (probably fatal flaw due to cost of de-encoding)</li>\n</ul></li>\n<li><strong>IndexedDB JQUERY</strong> polyFill <a href=\"https://github.com/axemclion/jquery-indexeddb\">https://github.com/axemclion/jquery-indexeddb</a>\n<ul>\n<li>Parashuram has writtent a nice JQUERY wrapper for the raw IndexedDB interface</li>\n<li>PRO: greatly simplifies using IndexedDB, I was hoping to add a shim/polyfill for Chrome FileSystemAPI</li>\n<li>CON: It should handle blobs, but I was unable to get it to work</li>\n</ul></li>\n<li><strong>idb.filesystem.js</strong> <a href=\"http://ericbidelman.tumblr.com/post/21649963613/idb-filesystem-js-bringing-the-html5-filesystem-api\">http://ericbidelman.tumblr.com/post/21649963613/idb-filesystem-js-bringing-the-html5-filesystem-api</a>\n<ul>\n<li>Eric Bidelman @ Google has written a well tested PolyFill the FileSystem API that uses Indexed DB as a fall back</li>\n<li>PRO: FileSystem API is well suited for storing blobs</li>\n<li>PRO: works great on FireFox and Chrome\n<ul>\n<li>PRO: great for synchronizing with cloud based CouchDB</li>\n</ul></li>\n<li>CON: no clear why, but it is not working on IE10</li>\n</ul></li>\n<li><strong>PouchDB</strong> JavaScript Library <a href=\"http://pouchdb.com/\">http://pouchdb.com/</a>\n<ul>\n<li>great for syncing a CouchDB with a local DB (uses either WebSQL or IndexedDB (not my problem though)</li>\n<li>CON: NO CONS, PouchDB now supports binary blobs for all recent browsers (IE, Chrome, Firefox, Chrome on mobile, etc.) as well as many older browsers. That was not the case when I first did this post.</li>\n</ul></li>\n</ul>\n\n<p>NOTE: to see a data:uri encoding of PNG I created an example at: <a href=\"http://jsbin.com/ivefak/1/edit\">http://jsbin.com/ivefak/1/edit</a></p>\n\n<p><strong>Desired/Usefull/Uneeded Features</strong></p>\n\n<ul>\n<li>No native (EXE, PhoneGap, ObjectiveC, etc) app on client (pure web application)</li>\n<li>Only needs to run on latest Chrome, FireFox, IE10 for laptops</li>\n<li>Strongly want same solution for Android Tablet (IOS would be nice too) but only need one browser to work (FF, Chrome, etc.)</li>\n<li>Fast initial DB population</li>\n<li>REQUIREMENT: Very fast retrieval of images by web application from storage (DB, file)</li>\n<li>Not meant for consumers. We can restrict browsers, and ask user to do special setup &amp; tasks, but let's minimize that</li>\n</ul>\n\n<p><strong>IndexedDB Implementations</strong></p>\n\n<ul>\n<li>There is an excellent article on how IE,FF,and Chrome internally implement this at: <a href=\"http://www.aaron-powell.com/web/indexeddb-storage\">http://www.aaron-powell.com/web/indexeddb-storage</a></li>\n<li>In short:\n<ul>\n<li>IE uses the same database format as Exchange and Active Directory for IndexedDB</li>\n<li>Firefox is using SQLite so are kind of implementing a NoSQL database in to SQL database</li>\n<li>Chrome (and WebKit) are using a Key/ Value store which has heritage in BigTable</li>\n</ul></li>\n</ul>\n\n<p><strong>My Current Results</strong></p>\n\n<ul>\n<li>I chose to use an IndexedDB approach (and polyfill with FileSystemAPI for Chrome until they ship blob support)</li>\n<li>For fetching the tiles, I had a dilemna since the JQUERY folks are kvetching about adding this to AJAX</li>\n<li>I went with XHR2-Lib by Phil Parsons, which is very much like JQUERY .ajax() <a href=\"https://github.com/p-m-p/xhr2-lib\">https://github.com/p-m-p/xhr2-lib</a></li>\n<li>Performance for 100MB downloads (IE10 4s, Chrome 6s, FireFox 7s). </li>\n<li>I could not get any of the IndexedDB wrappers to work for blobs (lawnchair, PouchDB, jquery-indexeddb, etc.)</li>\n<li>I rolled my own wrapper, and performance is (IE10 2s, Chrome 3s, FireFox 10s)</li>\n<li>With FF, I assume we are seeing the performance issue of using a relational DB (sqllite) for a non-sql storage</li>\n<li>NOTE, Chrome has outstanding debug tools (developer tab, resources) for inspecting the state of the IndexedDB.</li>\n</ul>\n\n<p><strong>FINAL Results posted below as answer</strong></p>\n\n<h1>Update</h1>\n\n<p>PouchDB now supports binary blobs for all recent browsers (IE, Chrome, Firefox, Chrome on mobile, etc.) as well as many older browsers. That was not the case when I first did this post.</p>\n",
            "last_activity_date": 1409236806,
            "question_id": 14113278,
            "score": 58,
            "tags": [
                "javascript",
                "html5",
                "web-applications",
                "indexeddb",
                "leaflet"
            ],
            "title": "Storing Image Data for offline web application (client-side storage database)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is a JS client implementation for OAuth here:\n<a href=\"http://oauth.googlecode.com/svn/code/javascript/\">http://oauth.googlecode.com/svn/code/javascript/</a></p>\n\n<p>It contains example code to get you running. Basically, what you do is this:</p>\n\n<pre><code>var url = \"...\";\nvar accessor = {\n  token: \"...\",\n  tokenSecret: \"...\",\n  consumerKey : \"...\",\n  consumerSecret: \"...\"\n};\n\nvar message = {\n  action: url,\n  method: \"GET\",\n  parameters: {...}\n};\n\nOAuth.completeRequest(message, accessor);        \nOAuth.SignatureMethod.sign(message, accessor);\nurl = url + '?' + OAuth.formEncode(message.parameters);\n\n// send request to 'url'\n...\n</code></pre>\n\n<p>Cheers,\nMatthias</p>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>The mentioned security problems can be solved via YQL: <a href=\"http://derek.io/blog/2010/how-to-secure-oauth-in-javascript/\">http://derek.io/blog/2010/how-to-secure-oauth-in-javascript/</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>If you're writing a Firefox (or other Mozilla) addon, consider <a href=\"https://github.com/mozilla/oauthorizer/blob/develop/README.md\" rel=\"nofollow\">oauthorizer</a>.  I'm using this for the <a href=\"https://addons.mozilla.org/en-US/firefox/addon/googl-lite/versions/1.9\" rel=\"nofollow\">latest version</a> of goo.gl lite.  However, I did hit some issues getting this approved for the Mozilla Add-Ons site, which I'm currently working through.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've written a generic OAuth 2.0 javascript library.</p>\n\n<ul>\n<li><a href=\"https://github.com/andreassolberg/jso\" rel=\"nofollow\">JSO Javascript OAuth 2.0 Library</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am planning to create an app that uses JavaScript and it needs to use OAuth to authenticate user for a website.\nCan anyone help me out please? Any sample code? I know about the Google Code Javascript OAuth library but I am not sure how to implement that..</p>\n",
            "last_activity_date": 1347897522,
            "question_id": 1221371,
            "score": 44,
            "tags": [
                "javascript",
                "oauth"
            ],
            "title": "application that uses OAuth and javascript"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Currently, it's not possible to obtain an iPhone's GPS position using just JavaScript APIs. There's been talk that this would be nice, but of course Apple won't comment on future improvements in public.</p>\n",
                    "is_accepted": false,
                    "score": -2
                },
                {
                    "body": "<p>It is possible to get the GPS information in JavaScript on the iPhone.  The QuickConnectiPhone framework exposes this for you as well as acceleration information.  </p>\n\n<p>To get this information you will have to install the application on the device however.  This framework will soon be available for Android installed applications as well as Nokia.</p>\n\n<p>You can put your application into the framework for each of these devices, compile, and ship.</p>\n\n<p>QuickConnectiPhone is available at https://sourceforge.net/projects/quickconnect/</p>\n\n<p>and if you contact me I can give you pre-release versions for Android and Nokia.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><a href=\"http://rhomobile.com/products/rhodes\" rel=\"nofollow\">Rhodes</a> is promising a \"develop-once-run-everywhere\" solution. Haven't tried them myself.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This gap is why I developed the Locatable application -- it's essentially a plug-in for iPhone Safari.  Currently it's only available for jailbroken phones.</p>\n\n<p>See <a href=\"http://lbs.tralfamadore.com/\" rel=\"nofollow\">http://lbs.tralfamadore.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can now get location from Javascript APIs in the safari browser following the iPhone 3.0 release - we've created a working example @ <a href=\"http://blog.bemoko.com/2009/06/17/iphone-30-geolocation-javascript-api/\">http://blog.bemoko.com/2009/06/17/iphone-30-geolocation-javascript-api/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>This code worked for me -- on the iPhone web browser <strong>Safari</strong> <em>and</em> as an added bonus it even worked with <strong>FireFox 3.5</strong> on my laptop! The Geolocation API Specification is part of the W3 Consortium\u2019s standards <strong>But be warned: it hasn\u2019t been finalized as yet.</strong></p>\n\n<p><img src=\"http://blog.bemoko.com/wp-content/uploads/2009/06/iphone-geo-300-1-150x150.jpg\" alt=\"alt text\"> <img src=\"http://blog.bemoko.com/wp-content/uploads/2009/06/iphone-geo-300-2-150x150.jpg\" alt=\"alt text\"></p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.0//EN\" \"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;title&gt;Geolocation API Demo&lt;/title&gt;\n&lt;meta content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\" name=\"viewport\"/&gt;\n&lt;script&gt;\nfunction successHandler(location) {\n    var message = document.getElementById(\"message\"), html = [];\n    html.push(\"&lt;img width='256' height='256' src='http://maps.google.com/maps/api/staticmap?center=\", location.coords.latitude, \",\", location.coords.longitude, \"&amp;markers=size:small|color:blue|\", location.coords.latitude, \",\", location.coords.longitude, \"&amp;zoom=14&amp;size=256x256&amp;sensor=false' /&gt;\");\n    html.push(\"&lt;p&gt;Longitude: \", location.coords.longitude, \"&lt;/p&gt;\");\n    html.push(\"&lt;p&gt;Latitude: \", location.coords.latitude, \"&lt;/p&gt;\");\n    html.push(\"&lt;p&gt;Accuracy: \", location.coords.accuracy, \" meters&lt;/p&gt;\");\n    message.innerHTML = html.join(\"\");\n}\nfunction errorHandler(error) {\n    alert('Attempt to get location failed: ' + error.message);\n}\nnavigator.geolocation.getCurrentPosition(successHandler, errorHandler);\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"message\"&gt;Location unknown&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>Since iPhone OS 3.0 Safari supports getting geo location. See: <a href=\"http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/GettingGeographicalLocations/GettingGeographicalLocations.html\" rel=\"nofollow\">Safari Reference Library:Getting Geographic Locations</a> On the other side W3C Geo API specification is still in draft.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I updated MyWhirledView's code. Works great on my iOS 4.3 device.\nGoogle no longer requires an API key to access their static map library.</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!DOCTYPE html PUBLIC \"-//WAPFORUM//DTD XHTML Mobile 1.0//EN\" \"http://www.wapforum.org/DTD/xhtml-mobile10.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;title&gt;iPhone 4.0 geolocation demo&lt;/title&gt;\n&lt;meta content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;\" name=\"viewport\"/&gt;\n&lt;script&gt;\nfunction handler(location) {\nvar message = document.getElementById(\"message\");\nmessage.innerHTML =\"&lt;img src='http://maps.google.com/maps/api/staticmap?center=\" + location.coords.latitude + \",\" + location.coords.longitude + \"&amp;zoom=14&amp;size=256x256&amp;maptype=roadmap&amp;sensor=false&amp;markers=color:blue%7Clabel:ABC%7C\" + location.coords.latitude + \",\" + location.coords.longitude + \"' /&gt;\";\n\n\n\nmessage.innerHTML+=\"&lt;p&gt;Longitude: \" + location.coords.longitude + \"&lt;/p&gt;\";\nmessage.innerHTML+=\"&lt;p&gt;Accuracy: \" + location.coords.accuracy + \"&lt;/p&gt;\";\nmessage.innerHTML+=\"&lt;p&gt;Latitude: \" + location.coords.latitude + \"&lt;/p&gt;\";\n\n\n\n}\nnavigator.geolocation.getCurrentPosition(handler);\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=\"message\"&gt;Location unknown&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This small javascript library is <strong>cross-platform</strong> and supports all modern smartphones out of the box:</p>\n\n<blockquote>\n  <blockquote>\n    <p><a href=\"http://code.google.com/p/geo-location-javascript/\" rel=\"nofollow\">http://code.google.com/p/geo-location-javascript/</a></p>\n  </blockquote>\n</blockquote>\n\n<p>Here is how you use it:</p>\n\n<pre><code>//determine if the handset has client side geo location capabilities\nif(geo_position_js.init()){\n   geo_position_js.getCurrentPosition(success_callback,error_callback);\n}else{\n   alert(\"Functionality not available\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Does anyone know whether the iPhone supports or will soon support the <a href=\"http://dev.w3.org/geo/api/spec-source.html\">W3C Geolocation specification</a>?</p>\n\n<p>I'm looking to build an app for mobile users, but rather than spend the time developing apps for every different platform (iPhone, Android, etc...), I'd much prefer to create a web app that makes use of the W3C Standard.</p>\n",
            "last_activity_date": 1327142469,
            "question_id": 221592,
            "score": 35,
            "tags": [
                "javascript",
                "iphone",
                "geolocation",
                "gps"
            ],
            "title": "Geolocation API on the iPhone"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>I don't know for sure, but I remember Dion Almaer said something about this in <a href=\"http://www.youtube.com/watch?v=Ps6GBLlSGLs\">a Google IO presentation</a> about <a href=\"https://bespin.mozilla.com/\">Mozilla Bespin</a>. It was something about flipping the M letter and then measuring its width. But I may be wrong.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The canvas spec doesn't give us a method for measuring the height of a string.  However, you can set the size of your text in pixels and you can usually figure out what the vertical bounds are relatively easily.</p>\n\n<p>If you need something more precise then you could throw text onto the canvas and then get pixel data and figure out how many pixels are used vertically.  This would be relatively simple, but not very efficient.  You could do something like this (it works, but draws some text onto your canvas that you would want to remove):</p>\n\n<pre><code>function measureTextHeight(ctx, left, top, width, height) {\n\n    // Draw the text in the specified area\n    ctx.save();\n    ctx.translate(left, top + Math.round(height * 0.8));\n    ctx.mozDrawText('gM'); // This seems like tall text...  Doesn't it?\n    ctx.restore();\n\n    // Get the pixel data from the canvas\n    var data = ctx.getImageData(left, top, width, height).data,\n        first = false, \n        last = false,\n        r = height,\n        c = 0;\n\n    // Find the last line with a non-white pixel\n    while(!last &amp;&amp; r) {\n        r--;\n        for(c = 0; c &lt; width; c++) {\n            if(data[r * width * 4 + c * 4 + 3]) {\n                last = r;\n                break;\n            }\n        }\n    }\n\n    // Find the first line with a non-white pixel\n    while(r) {\n        r--;\n        for(c = 0; c &lt; width; c++) {\n            if(data[r * width * 4 + c * 4 + 3]) {\n                first = r;\n                break;\n            }\n        }\n\n        // If we've got it then return the height\n        if(first != r) return last - first;\n    }\n\n    // We screwed something up...  What do you expect from free code?\n    return 0;\n}\n\n// Set the font\ncontext.mozTextStyle = '32px Arial';\n\n// Specify a context and a rect that is safe to draw in when calling measureTextHeight\nvar height = measureTextHeight(context, 0, 0, 50, 50);\nconsole.log(height);\n</code></pre>\n\n<p>For Bespin they do fake a height by measuring the width of a lowercase 'm'...  I don't know how this is used, and I would not recommend this method.  Here is the relevant Bespin method:</p>\n\n<pre><code>var fixCanvas = function(ctx) {\n    // upgrade Firefox 3.0.x text rendering to HTML 5 standard\n    if (!ctx.fillText &amp;&amp; ctx.mozDrawText) {\n        ctx.fillText = function(textToDraw, x, y, maxWidth) {\n            ctx.translate(x, y);\n            ctx.mozTextStyle = ctx.font;\n            ctx.mozDrawText(textToDraw);\n            ctx.translate(-x, -y);\n        }\n    }\n\n    if (!ctx.measureText &amp;&amp; ctx.mozMeasureText) {\n        ctx.measureText = function(text) {\n            ctx.mozTextStyle = ctx.font;\n            var width = ctx.mozMeasureText(text);\n            return { width: width };\n        }\n    }\n\n    if (ctx.measureText &amp;&amp; !ctx.html5MeasureText) {\n        ctx.html5MeasureText = ctx.measureText;\n        ctx.measureText = function(text) {\n            var textMetrics = ctx.html5MeasureText(text);\n\n            // fake it 'til you make it\n            textMetrics.ascent = ctx.html5MeasureText(\"m\").width;\n\n            return textMetrics;\n        }\n    }\n\n    // for other browsers\n    if (!ctx.fillText) {\n        ctx.fillText = function() {}\n    }\n\n    if (!ctx.measureText) {\n        ctx.measureText = function() { return 10; }\n    }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>setting the font size might not be practical though, since setting</p>\n\n<p>ctx.font = ''</p>\n\n<p>will use the one defined by CSS as well as any embedded font tags.  If you use the CSS font you have no idea what the height is from a programmatic way, using the measureText method, which is very short sighted.  On another note though, IE8 DOES return the width and height.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>EDIT: <strong>Are you using canvas transforms?</strong>  If so, you'll have to track the transformation matrix.  The following method should measure the height of text with the initial transform.</p>\n\n<p>The canvas uses fonts as defined by CSS, so in theory we can just add an appropriately styled chunk of text to the document and measure its height.  I think this is significantly easier than rendering text and then checking pixel data and it should also respect ascenders and descenders.  Check out the following:</p>\n\n<pre><code>var determineFontHeight = function(fontStyle) {\n  var body = document.getElementsByTagName(\"body\")[0];\n  var dummy = document.createElement(\"div\");\n  var dummyText = document.createTextNode(\"M\");\n  dummy.appendChild(dummyText);\n  dummy.setAttribute(\"style\", fontStyle);\n  body.appendChild(dummy);\n  var result = dummy.offsetHeight;\n  body.removeChild(dummy);\n  return result;\n};\n\n//A little test...\nvar exampleFamilies = [\"Helvetica\", \"Verdana\", \"Times New Roman\", \"Courier New\"];\nvar exampleSizes = [8, 10, 12, 16, 24, 36, 48, 96];\nfor(var i = 0; i &lt; exampleFamilies.length; i++) {\n  var family = exampleFamilies[i];\n  for(var j = 0; j &lt; exampleSizes.length; j++) {\n    var size = exampleSizes[j] + \"pt\";\n    var style = \"font-family: \" + family + \"; font-size: \" + size + \";\";\n    var pixelHeight = determineFontHeight(style);\n    console.log(family + \" \" + size + \" ==&gt; \" + pixelHeight + \" pixels high.\");\n  }\n}\n</code></pre>\n\n<p>You'll have to make sure you get the font style correct on the DOM element that you measure the height of but that's pretty straightforward; really you should use something like</p>\n\n<pre><code>var canvas = /* ... */\nvar context = canvas.getContext(\"2d\");\nvar canvasFont = \" ... \";\nvar fontHeight = determineFontHeight(\"font: \" + canvasFont + \";\");\ncontext.font = canvasFont;\n/*\n  do your stuff with your font and its height here.\n*/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I'm writing a terminal emulator so I needed to draw rectangles around characters.</p>\n\n<pre><code>var size = 10\nvar lineHeight = 1.2 // CSS \"line-height: normal\" is between 1 and 1.2\ncontext.font = size+'px/'+lineHeight+'em monospace'\nwidth = context.measureText('m').width\nheight = size * lineHeight\n</code></pre>\n\n<p>Obviously if you want the exact amount of space the character takes up, it won't help. But it'll give you a good approximation for certain uses.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Funny that TextMetrics has width only and no height:</p>\n\n<p><a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#textmetrics\" rel=\"nofollow\">http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#textmetrics</a></p>\n\n<p>Can you use a Span as on this example?</p>\n\n<p><a href=\"http://mudcu.be/journal/2011/01/html5-typographic-metrics/#alignFix\" rel=\"nofollow\">http://mudcu.be/journal/2011/01/html5-typographic-metrics/#alignFix</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Following on from ellisbben's answer, here is an enhanced version to get the ascent and descent from the baseline, i.e. same as <code>tmAscent</code> and <code>tmDescent</code> returned by Win32's <a href=\"http://msdn.microsoft.com/en-us/library/dd144941%28v=vs.85%29.aspx\">GetTextMetric</a> API. This is needed if you want to do a word-wrapped run of text with spans in different fonts/sizes.</p>\n\n<p><img src=\"http://i.stack.imgur.com/h7tRn.png\" alt=\"Big Text on canvas with metric lines\"></p>\n\n<p>The above image was generated on a canvas in Safari, red being the top line where the canvas was told to draw the text, green being the baseline and blue being the bottom (so red to blue is the full height).</p>\n\n<p>Using jQuery for succinctness:</p>\n\n<pre><code>var getTextHeight = function(font) {\n\n  var text = $('&lt;span&gt;Hg&lt;/span&gt;').css({ fontFamily: font });\n  var block = $('&lt;div style=\"display: inline-block; width: 1px; height: 0px;\"&gt;&lt;/div&gt;');\n\n  var div = $('&lt;div&gt;&lt;/div&gt;');\n  div.append(text, block);\n\n  var body = $('body');\n  body.append(div);\n\n  try {\n\n    var result = {};\n\n    block.css({ verticalAlign: 'baseline' });\n    result.ascent = block.offset().top - text.offset().top;\n\n    block.css({ verticalAlign: 'bottom' });\n    result.height = block.offset().top - text.offset().top;\n\n    result.descent = result.height - result.ascent;\n\n  } finally {\n    div.remove();\n  }\n\n  return result;\n};\n</code></pre>\n\n<p>In addition to a text element, I add a div with <code>display: inline-block</code> so I can set its <code>vertical-align</code> style, and then find out where the browser has put it.</p>\n\n<p>So you get back an object with <code>ascent</code>, <code>descent</code> and <code>height</code> (which is just <code>ascent</code> + <code>descent</code> for convenience). To test it, it's worth having a function that draws a horizontal line:</p>\n\n<pre><code>var testLine = function(ctx, x, y, len, style) {\n  ctx.strokeStyle = style; \n  ctx.beginPath();\n  ctx.moveTo(x, y);\n  ctx.lineTo(x + len, y);\n  ctx.closePath();\n  ctx.stroke();\n};\n</code></pre>\n\n<p>Then you can see how the text is positioned on the canvas relative to the top, baseline and bottom:</p>\n\n<pre><code>var font = '36pt Times';\nvar message = 'Big Text';\n\nctx.fillStyle = 'black';\nctx.textAlign = 'left';\nctx.textBaseline = 'top'; // important!\nctx.font = font;\nctx.fillText(message, x, y);\n\n// Canvas can tell us the width\nvar w = ctx.measureText(message).width;\n\n// New function gets the other info we need\nvar h = getTextHeight(font);\n\ntestLine(ctx, x, y, w, 'red');\ntestLine(ctx, x, y + h.ascent, w, 'green');\ntestLine(ctx, x, y + h.height, w, 'blue');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<p>As JJ Stiff suggests, you can add your text to a span and then measure the offsetHeight of the span.</p>\n\n<pre><code>var d = document.createElement(\"span\");\nd.font = \"20px arial\";\nd.textContent = \"Hello world!\";\ndocument.body.appendChild(d);\nvar emHeight = d.offsetHeight;\ndocument.body.removeChild(d);\n</code></pre>\n\n<p>As shown on <a href=\"http://www.html5rocks.com/en/tutorials/canvas/texteffects/#toc-text-shadow-clipping\" rel=\"nofollow\">HTML5Rocks</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Isn't the height of the text in pixels equal to the font size (in pts) if you define the font using context.font ?</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can get a very close approximation of the vertical height by checking the length of a capital M.</p>\n\n<pre><code>ctx.font='bold 10px Arial';\n\nlineHeight=ctx.measureText('M').width;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I solved this problem straitforward - using pixel manipulation.</p>\n\n<p>Here is graphical answer:</p>\n\n<p><img src=\"http://i.stack.imgur.com/mSH1c.png\" alt=\"\"></p>\n\n<p>Here is code:</p>\n\n<pre><code>    function textHeight (text, font) {\n\n    var fontDraw = document.createElement(\"canvas\");\n\n    var height = 100;\n    var width = 100;\n\n    // here we expect that font size will be less canvas geometry\n    fontDraw.setAttribute(\"height\", height);\n    fontDraw.setAttribute(\"width\", width);\n\n    var ctx = fontDraw.getContext('2d');\n    // black is default\n    ctx.fillRect(0, 0, width, height);\n    ctx.textBaseline = 'top';\n    ctx.fillStyle = 'white';\n    ctx.font = font;\n    ctx.fillText(text/*'Eg'*/, 0, 0);\n\n    var pixels = ctx.getImageData(0, 0, width, height).data;\n\n    // row numbers where we first find letter end where it ends \n    var start = -1;\n    var end = -1;\n\n    for (var row = 0; row &lt; height; row++) {\n        for (var column = 0; column &lt; width; column++) {\n\n            var index = (row * width + column) * 4;\n\n            // if pixel is not white (background color)\n            if (pixels[index] == 0) {\n                // we havent met white (font color) pixel\n                // on the row and the letters was detected\n                if (column == width - 1 &amp;&amp; start != -1) {\n                    end = row;\n                    row = height;\n                    break;\n                }\n                continue;\n            }\n            else {\n                // we find top of letter\n                if (start == -1) {\n                    start = row;\n                }\n                // ..letters body\n                break;\n            }\n\n        }\n\n    }\n   /*\n    document.body.appendChild(fontDraw);\n    fontDraw.style.pixelLeft = 400;\n    fontDraw.style.pixelTop = 400;\n    fontDraw.style.position = \"absolute\";\n   */\n\n    return end - start;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is madding... The height of the text is the font size.. Didn't any of you read the documentation?</p>\n\n<pre><code>context.font = \"22px arial\";\n</code></pre>\n\n<p>this will set the height to 22px.</p>\n\n<p>the only reason there is a..</p>\n\n<pre><code>context.measureText(string).width\n</code></pre>\n\n<p>is because that the width of the string can not be determined unless it knows the string you want the width of but for all the strings drawn with the font.. the height will be 22px.</p>\n\n<p>if you use another measurement than px then the height will still be the same but with that measurement so at most all you would have to do is convert the measurement.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>Just to add to Daniel's answer (which is great! and absolutely right!), version without JQuery:</p>\n\n<pre><code>function objOff(obj)\n{\n    var currleft = currtop = 0;\n    if( obj.offsetParent )\n    { do { currleft += obj.offsetLeft; currtop += obj.offsetTop; }\n      while( obj = obj.offsetParent ); }\n    else { currleft += obj.offsetLeft; currtop += obj.offsetTop; }\n    return [currleft,currtop];\n}\nfunction FontMetric(fontName,fontSize) \n{\n    var text = document.createElement(\"span\");\n    text.style.fontFamily = fontName;\n    text.style.fontSize = fontSize + \"px\";\n    text.innerHTML = \"ABCjgq|\"; \n    // if you will use some weird fonts, like handwriting or symbols, then you need to edit this test string for chars that will have most extreme accend/descend values\n\n    var block = document.createElement(\"div\");\n    block.style.display = \"inline-block\";\n    block.style.width = \"1px\";\n    block.style.height = \"0px\";\n\n    var div = document.createElement(\"div\");\n    div.appendChild(text);\n    div.appendChild(block);\n\n    // this test div must be visible otherwise offsetLeft/offsetTop will return 0\n    // but still let's try to avoid any potential glitches in various browsers\n    // by making it's height 0px, and overflow hidden\n    div.style.height = \"0px\";\n    div.style.overflow = \"hidden\";\n\n    // I tried without adding it to body - won't work. So we gotta do this one.\n    document.body.appendChild(div);\n\n    block.style.verticalAlign = \"baseline\";\n    var bp = objOff(block);\n    var tp = objOff(text);\n    var taccent = bp[1] - tp[1];\n    block.style.verticalAlign = \"bottom\";\n    bp = objOff(block);\n    tp = objOff(text);\n    var theight = bp[1] - tp[1];\n    var tdescent = theight - taccent;\n\n    // now take it off :-)\n    document.body.removeChild(div);\n\n    // return text accent, descent and total height\n    return [taccent,theight,tdescent];\n}\n</code></pre>\n\n<p>I've just tested the code above and works great on latest Chrome, FF and Safari on Mac.</p>\n\n<p><strong>EDIT:</strong> I have added font size as well and tested with webfont instead of system font - works awesome.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In normal situations the following should work:</p>\n\n<pre><code>var can = CanvasElement.getContext('2d');          //get context\nvar lineHeight = /[0-9]+(?=pt|px)/.exec(can.font); //get height from font variable\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>The spec has a context.measureText(text) function that will tell you how much width it would require to print that text, but I can't find a way to find out how tall it is. I know it's based on the font, but I don't know to convert a font string to a text height.</p>\n",
            "last_activity_date": 1410974194,
            "question_id": 1134586,
            "score": 64,
            "tags": [
                "javascript",
                "text",
                "canvas"
            ],
            "title": "How can you find the height of text on an HTML canvas?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Since you are not worried about IE, why not just use css transitions to provide the animation and jQuery to change the classes. Live example: <a href=\"http://jsfiddle.net/tw16/JfK6N/\">http://jsfiddle.net/tw16/JfK6N/</a></p>\n\n<pre><code>#someDiv{\n    -webkit-transition: all 0.5s ease;\n    -moz-transition: all 0.5s ease;\n    -o-transition: all 0.5s ease;\n    transition: all 0.5s ease;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 118
                },
                {
                    "body": "<p>Another solution (but it requires jQueryUI as pointed out by Richard Neil Ilagan in comments) :-</p>\n\n<p>addClass, removeClass and toggleClass also accepts a second argument; the time duration to go from one state to the other.</p>\n\n<pre><code>$(this).addClass('abc',1000);\n</code></pre>\n\n<p>See jsfiddle:- <a href=\"http://jsfiddle.net/6hvZT/1/\">http://jsfiddle.net/6hvZT/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 33
                },
                {
                    "body": "<p>You just need the <strong>jQuery UI effects-core</strong> (13KB), to enable the duration of the adding (just like Omar Tariq it pointed out)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You could use jquery ui's <a href=\"http://api.jqueryui.com/switchclass/\"><code>switchClass</code></a>, Heres an example:</p>\n\n<pre><code>$( \"selector\" ).switchClass( \"oldClass\", \"newClass\", 1000, \"easeInOutQuad\" );\n</code></pre>\n\n<p>Or see this <a href=\"http://jsfiddle.net/y9nzz/1/\">jsfiddle</a>. </p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Although, the question is fairly old, I'm adding info not present in other answers.</p>\n\n<p>The OP is using stop() to stop the current animation as soon as the event completes. However, using the right mix of parameters with the function should help. eg. stop(true,true) or stop(true,false) as this affects the queued animations well.</p>\n\n<p>The following link illustrates a demo that shows the different parameters available with stop() and how they differ from finish().</p>\n\n<p><a href=\"http://api.jquery.com/finish/\" rel=\"nofollow\">http://api.jquery.com/finish/</a> </p>\n\n<p>Although the OP had no issues using JqueryUI, this is for other users who may come across similar scenarios but cannot use JqueryUI/need to support IE7 and 8 too.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was looking into this but wanted to have a different transition rate for in and out. </p>\n\n<p>This is what I ended up doing:</p>\n\n<pre><code>//css\n.addedClass {\n    background: #5eb4fc;\n}\n\n// js\nfunction setParentTransition(id, prop, delay, style, callback) {\n    $(id).css({'-webkit-transition' : prop + ' ' + delay + ' ' + style});\n    $(id).css({'-moz-transition' : prop + ' ' + delay + ' ' + style});\n    $(id).css({'-o-transition' : prop + ' ' + delay + ' ' + style});\n    $(id).css({'transition' : prop + ' ' + delay + ' ' + style});\n    callback();\n}\nsetParentTransition(id, 'background', '0s', 'ease', function() {\n    $('#elementID').addClass('addedClass');\n});\n\nsetTimeout(function() {\n    setParentTransition(id, 'background', '2s', 'ease', function() {\n        $('#elementID').removeClass('addedClass');\n    });\n});\n</code></pre>\n\n<p>This instantly turns the background color to #5eb4fc and then slowly fades back to normal over 2 seconds.</p>\n\n<p>Here's a <a href=\"http://jsfiddle.net/60a7qh1t/4/\" rel=\"nofollow\">fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using jQuery and jQuery-ui and want to animate various attributes on various objects. </p>\n\n<p>For the sake of explaining the issue here I've simplified it to one div that changes from blue to red when the user mouses over it.</p>\n\n<p>I am able to get the behavior I want when using <code>animate()</code>, however when doing so the styles I am animating have to be in the animation code and so are separate from my style sheet. (see <strong>example 1</strong>)</p>\n\n<p>An alternative is using <code>addClass()</code> and <code>removeClass()</code> but I have not been able to re-create the exact behavior that I can get with <code>animate()</code>. (see <strong>example 2</strong>)</p>\n\n<hr>\n\n<h2>Example 1</h2>\n\n<p>Let's take a look at the code I have with <code>animate()</code>:</p>\n\n<pre><code>$('#someDiv')\n  .mouseover(function(){\n    $(this).stop().animate( {backgroundColor:'blue'}, {duration:500});\n  })\n  .mouseout(function(){\n    $(this).stop().animate( {backgroundColor:'red'}, {duration:500});\n  });\n</code></pre>\n\n<p>it displays all the behaviors I am looking for:</p>\n\n<ol>\n<li>Animates smoothly between red and blue.</li>\n<li>No animation 'overqueue-ing' when the user moves their moue quickly in and out of the div.</li>\n<li>If the user moves their mouse out/in while the animation is still playing it eases correctly between the current 'halfway' state and the new 'goal' state.</li>\n</ol>\n\n<p>But since the style changes are defined in <code>animate()</code> I have to change the style values there, and can't just have it point to my stylesheet. This 'fragmenting' of where styles are defined is something that really bothers me.</p>\n\n<hr>\n\n<h2>Example 2</h2>\n\n<p>Here is my current best attempt using <code>addClass()</code> and <code>removeClass</code> (note that for the animation to work you need jQuery-ui): </p>\n\n<pre><code>//assume classes 'red' and 'blue' are defined\n\n$('#someDiv')\n  .addClass('blue')\n  .mouseover(function(){\n    $(this).stop(true,false).removeAttr('style').addClass('red', {duration:500});\n  })\n  .mouseout(function(){\n    $(this).stop(true,false).removeAttr('style').removeClass('red', {duration:500});\n  });\n</code></pre>\n\n<p>This exhibits both property 1. and 2. of my original requirements, however 3 does not work.</p>\n\n<p>I understand the reason for this:</p>\n\n<p>When animating <code>addClass()</code> and <code>removeClass()</code> jQuery adds a temporary style to the element, and then increments the appropriate values until they reach the values of the provided class, and only then does it actually add/remove the class.</p>\n\n<p>Because of this I have to remove the style attribute, otherwise if the animation is stopped halfway the style attribute would remain and would permanently overwrite any class values, since style attributes in a tag have higher importance than class styles.</p>\n\n<p>However when the animation is halfway done it hasn't yet added the new class, and so with this solution the color jumps to the previous color when the user moves their mouse before the animation is completed.</p>\n\n<hr>\n\n<p>What I want ideally is to be able to do something like this:</p>\n\n<pre><code>$('#someDiv')\n  .mouseover(function(){\n    $(this).stop().animate( getClassContent('blue'), {duration:500});\n  })\n  .mouseout(function(){\n    $(this).stop().animate( getClassContent('red'), {duration:500});\n  });\n</code></pre>\n\n<p>Where <code>getClassContent</code> would just return the contents of the provided class. The key point is that this way I don't have to keep my style definitions all over the place, but can keep them in classes in my stylesheet.</p>\n\n<p>Any help would be much appreciated.</p>\n",
            "last_activity_date": 1423246271,
            "question_id": 7302824,
            "score": 82,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "jquery-ui",
                "jquery-animate"
            ],
            "title": "animating addClass/removeClass with jquery"
        },
        {
            "answer_count": 14,
            "answers": [
                {
                    "body": "<p>Try the google closure compiler:</p>\n\n<p><a href=\"http://code.google.com/closure/compiler/docs/gettingstarted_ui.html\">http://code.google.com/closure/compiler/docs/gettingstarted_ui.html</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can use the Closure-compiler as orangutancloud suggests. It's worth pointing out that you don't actually <em>need</em> to compile/minify the JavaScript, it ought to be possible to simply concatenate the JavaScript text files into a single text file. Just join them in the order they're normally included in the page.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can do this via</p>\n\n<ul>\n<li><strong>a. Manually:</strong> copy of all the Javascript files into one, run a compressor on it (<em>optional but recommended</em>) and upload to the server and link to that file.</li>\n<li><strong>b. Use PHP:</strong> Just create an array of all JS files and <code>include</code> them all and output into a <code>&lt;script&gt;</code> tag</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Just combine the text files and then use something like the <a href=\"http://developer.yahoo.com/yui/compressor/\" rel=\"nofollow\">YUI Compressor</a>.</p>\n\n<p>Files can be easily combined using the command <code>cat *.js &gt; main.js</code> and main.js can then be run through the YUI compressor using <code>java -jar yuicompressor-x.y.z.jar -o main.min.js main.js</code>.  </p>\n\n<p><strong>Update Aug 2014</strong></p>\n\n<p>I've now migrated to using <a href=\"http://gulpjs.com/\" rel=\"nofollow\">Gulp</a> for javascript concatenation and compression as with various plugins and some minimal configuration you can do things like set up dependencies, compile coffeescript etc as well as compressing your JS.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This may be a bit of effort but you could download my open-source wiki project from codeplex:</p>\n\n<p><a href=\"http://shuttlewiki.codeplex.com\" rel=\"nofollow\">http://shuttlewiki.codeplex.com</a></p>\n\n<p>It contains a CompressJavascript project (and CompressCSS) that uses the <a href=\"http://yuicompressor.codeplex.com/\" rel=\"nofollow\">http://yuicompressor.codeplex.com/</a> project.</p>\n\n<p>The code should be self-explanatory but it makes combining and compressing the files a bit simnpler --- for me anyway :)</p>\n\n<p>The ShuttleWiki project shows how to use it in the post-build event.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Script grouping is counterproductive, you should load them in parallel using something like <a href=\"http://yepnopejs.com/\">http://yepnopejs.com/</a> or <a href=\"http://headjs.com\">http://headjs.com</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>On linux you can use simple shell script <a href=\"https://github.com/dfsq/compressJS.sh\">https://github.com/dfsq/compressJS.sh</a> to combine multiple javascript files into the single one. It makes use of the Closure Compiler online service so the resulting script is also effectively compressed.</p>\n\n<pre><code>$ ./compressJS.sh some-script.js another-sctipt.js onemore.js\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>If you're running PHP, I recommend <a href=\"https://github.com/mrclay/minify\" rel=\"nofollow\">Minify</a> because it does combines and minifies on the fly for both CSS and JS. Once you've configured it, just work as normal and it takes care of everything.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Copy this script to notepad and save as .vbs file.\nDrag&amp;Drop .js files on this script. </p>\n\n<p>ps.\nThis will work only on windows.</p>\n\n<pre><code>set objArgs = Wscript.Arguments\nset objFso = CreateObject(\"Scripting.FileSystemObject\")\ncontent = \"\"\n\n'Iterate through all the arguments passed\nfor i = 0 to objArgs.count  \n    on error resume next\n    'Try and treat the argument like a folder\n    Set folder = objFso.GetFolder(objArgs(i))\n    'If we get an error, we know it is a file\n    if err.number &lt;&gt; 0 then\n        'This is not a folder, treat as file\n        content = content &amp; ReadFile(objArgs(i))\n    else\n        'No error? This is a folder, process accordingly\n        for each file in folder.Files\n            content = content &amp; ReadFile(file.path)\n        next\n    end if\n    on error goto 0\nnext\n\n'Get system Temp folder path\nset tempFolderPath = objFso.GetSpecialFolder(2)\n'Generate a random filename to use for a temporary file\nstrTempFileName = objFso.GetTempName\n'Create temporary file in Temp folder\nset objTempFile = tempFolderPath.CreateTextFile(strTempFileName)\n'Write content from JavaScript files to temporary file\nobjTempFile.WriteLine(content)\nobjTempFile.Close\n\n'Open temporary file in Notepad\nset objShell = CreateObject(\"WScript.Shell\")\nobjShell.Run(\"Notepad.exe \" &amp; tempFolderPath &amp; \"\\\" &amp; strTempFileName)\n\n\nfunction ReadFile(strFilePath)\n    'If file path ends with \".js\", we know it is JavaScript file\n    if Right(strFilePath, 3) = \".js\" then       \n        set objFile = objFso.OpenTextFile(strFilePath, 1, false)\n        'Read entire contents of a JavaScript file and returns it as a string\n        ReadFile = objFile.ReadAll &amp; vbNewLine\n        objFile.Close\n    else\n        'Return empty string\n        ReadFile = \"\"\n    end if  \nend function\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I usually have it on a <code>Makefile</code>:</p>\n\n<pre><code># All .js compiled into a single one.\ncompiled=./path/of/js/main.js\n\ncompile:\n    @find ./path/of/js -type f -name \"*.js\" | xargs cat &gt; $(compiled)\n</code></pre>\n\n<p>Then you run:</p>\n\n<pre><code>make compile\n</code></pre>\n\n<p>I hope it helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use a script that I made. You need JRuby to run this though.\n<a href=\"https://bitbucket.org/ardee_aram/jscombiner\" rel=\"nofollow\">https://bitbucket.org/ardee_aram/jscombiner</a> (JSCombiner).</p>\n\n<p>What sets this apart is that it watches file changes in the javascript, and combines it automatically to the script of your choice. So there is no need to manually \"build\" your javascript each time you test it. Hope it helps you out, I am currently using this.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I use this shell script on Linux <a href=\"https://github.com/eloone/mergejs\">https://github.com/eloone/mergejs</a>. </p>\n\n<p>Compared to the above scripts it has the advantages of being very simple to use, and a big plus is that you can list the js files you want to merge in an input text file and not in the command line, so your list is reusable and you don't have to type it every time you want to merge your files. It's very handy since you will repeat this step every time you want to push into production. You can also comment files you don't want to merge in the list. The command line you would most likely type is :</p>\n\n<pre><code>$ mergejs js_files_list.txt output.js\n</code></pre>\n\n<p>And if you want to also compress the resulting merged file :</p>\n\n<pre><code>$ mergejs -c js_files_list.txt output.js\n</code></pre>\n\n<p>This will create <code>output-min.js</code> minified by Google's closure compiler. Or :</p>\n\n<pre><code>$ mergejs -c js_files_list.txt output.js output.minified.js\n</code></pre>\n\n<p>If you want a specific name for your minified file named <code>output.minified.js</code></p>\n\n<p>I find it really helpful for a simple website.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use KjsCompiler: <a href=\"https://github.com/knyga/kjscompiler\" rel=\"nofollow\">https://github.com/knyga/kjscompiler</a>\nCool dependency managment</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I have written my own solution to this problem:\n<a href=\"http://synodins.com/apps/mimport/\" rel=\"nofollow\">http://synodins.com/apps/mimport/</a></p>\n\n<p>Would be great to get a feedback on it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am using jquery in my web application and I need to load more jquery script files into a single page.</p>\n\n<p>Google suggested I combine all the jquery script files into a single file.</p>\n\n<p>How can I do this?</p>\n",
            "last_activity_date": 1407230559,
            "question_id": 5511989,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "Combine multiple JavaScript files into one JS file"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>If you're in a function you can exit it using <code>return;</code> but that doesn't stop execution of the parent function that called that function.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Something like this might work:</p>\n\n<pre><code>function javascript_abort()\n{\n   throw new Error('This is not an error. This is just to abort javascript');\n}\n</code></pre>\n\n<p>Taken from here:</p>\n\n<p><a href=\"http://vikku.info/codesnippets/javascript/forcing-javascript-to-abort-stop-javascript-execution-at-any-time/\">http://vikku.info/codesnippets/javascript/forcing-javascript-to-abort-stop-javascript-execution-at-any-time/</a></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Short answer:</p>\n\n<pre><code>throw new Error(\"Something went badly wrong!\");\n</code></pre>\n\n<p>If you want to know more, keep reading.</p>\n\n<hr>\n\n<h2>Do you want to stop JavaScript's execution for developing/debugging?</h2>\n\n<p>The expression <code>debugger;</code> in your code, will halt the page execution, and then your browser's developer tools will allow you to review the state of your page at the moment it was frozen.</p>\n\n<h2>Do you want to stop your application arbitrarily and by design?</h2>\n\n<h3>On error?</h3>\n\n<p>Instead of trying to stop everything, let your code handle the error. Read about <code>Exception</code>s by googling. They are a smart way to let your code \"jump\" to error handling procedures without using tedious if/else blocks.</p>\n\n<p>After reading about them, if you believe that interrupting the whole code is absolutely the only option, throwing an exception that is not going to be \"caught\" anywhere except in your application's \"root\" scope is the solution:</p>\n\n<pre><code>// creates a new exception type:\nfunction FatalError(){ Error.apply(this, arguments); this.name = \"FatalError\"; }\nFatalError.prototype = Object.create(Error.prototype);\n\n// and then, use this to trigger the error:\nthrow new FatalError(\"Something went badly wrong!\");\n</code></pre>\n\n<p><em>be sure you don't have <code>catch()</code> blocks that catch <strong>any</strong> exception; in this case modify them to rethrow your <code>\"FatalError\"</code> exception</em>:</p>\n\n<pre><code>catch(exc){ if(exc instanceof FatalError) throw exc; else /* current code here */ }\n</code></pre>\n\n<h3>When a task completes or an arbitrary event happens?</h3>\n\n<p><code>return;</code> will terminate the current function's execution flow.</p>\n\n<pre><code>if(someEventHappened) return; // Will prevent subsequent code from being executed\nalert(\"This alert will never be shown.\");\n</code></pre>\n\n<p>Note: <code>return;</code> works only within a function.</p>\n\n<h3>In both cases...</h3>\n\n<p>...you may want to know how to stop asynchronous code as well. It's done with <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.clearTimeout\"><code>clearTimeout</code></a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.clearInterval\"><code>clearInterval</code></a>. Finally, for to stop <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\">XHR</a> (<em><a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\">Ajax</a></em>) requests, you can use the <code>xhrObj.abort()</code> method (<em>which is available in <a href=\"http://en.wikipedia.org/wiki/JQuery\">jQuery</a> as well</em>).</p>\n",
                    "is_accepted": true,
                    "score": 128
                },
                {
                    "body": "<p>You can call <code>return</code> early in a function, and at least that function will stop running. You can also just use <code>throw ''</code> to cause an error and stop the current process. But these won't stop everything. <code>setTimeout</code> and <code>setInterval</code> can make delayed functions and functions that run on a time interval, respectively. Those will continue to run. Javascript events will also continue to work as usual.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The process is tedious, but in Firefox:</p>\n\n<ol>\n<li>Open a blank tab/window to create a new environment for the script\nfrom the current page</li>\n<li>Populate that new environment with the script to execute</li>\n<li>Activate the script in the new environment</li>\n<li>Close (that is, kill) that new environment to ...</li>\n</ol>\n\n<blockquote>\n  <p>stop or terminate JavaScript this [in a] way to [that it] prevent[s] any further\n  JavaScript-based execution from occuring, without reloading the browser</p>\n</blockquote>\n\n<p>Notes:  </p>\n\n<ul>\n<li>Step 4 only stops execution of JavaScript in that environment and not the scripts of any other windows</li>\n<li>The original page is not reloaded but a new tab/window is loaded with the script</li>\n<li>When a tab/window is closed, everything in that environment is gone: all remnants, partial results, code, etc.</li>\n<li>Results must migrate back to the parent or another window for preservation</li>\n<li>To rerun the code, the above steps must be repeated</li>\n</ul>\n\n<p>Other browsers have and use different conventions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No.</p>\n\n<p>Even if you throw an exception, it will only kill the current event loop. Callbacks passed to setTimeout or DOM/XMLHttpRequest event handlers will still run when their time comes.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Define a variable inside the JavaScript function, set this variable to 1 if you want ot execute the function and set it to 0 if you want to stop it</p>\n\n<pre><code>var execute;\nfunction do_something()\n{\nif (execute == 1)\n{\n// execute your function\n}\nelse\n{\n // do nothing\n}\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I found calling alert in browser console does the trick.</p>\n\n<pre><code>alert('')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -7
                },
                {
                    "body": "<p>I am using</p>\n\n<p><code>return false;</code></p>\n\n<p>if I want to abort from JavaScript from running further downwards.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can make a JavaScript typo :D (thinking outside the box here)</p>\n\n<pre><code>thisfunctiondoesnotexistandwascreatedwiththeonlypurposeofstopjavascriptexecutionofalltypesincludingcatchandanyarbitraryweirdscenario();\n</code></pre>\n\n<p>Or something like:</p>\n\n<pre><code>new new\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>In JavaScript i did not found any other way to do this than just throw error.</p>\n\n<pre><code>throw( \"No error, just exit in JS\" );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I know this is old, but I wanted to do this and I have found, in my opinion, a slightly improved solution of the throw answers. Just temporary supress the error messages and reactivate them later using setTimeout :</p>\n\n<pre><code>setTimeout(function() {\n    window.onerror = function(message, url, lineNumber) {  \n        return false;\n    };\n}, 50); // sets a slight delay and then restores normal error reporting\nwindow.onerror = function(message, url, lineNumber) {  \n    return true;\n};\nthrow new Error('controlledError');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible in some way to stop or terminate <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> in a way that it prevents any further JavaScript-based execution from occuring, without reloading the browser?</p>\n\n<p>I am thinking of a JavaScript equivalent of <code>exit()</code> in PHP.</p>\n",
            "last_activity_date": 1422000499,
            "question_id": 9298839,
            "score": 75,
            "tags": [
                "javascript"
            ],
            "title": "Is it possible to stop JavaScript execution?"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>One option for you is use a step size of one and reference an array containing your selected values.  Start at 0, go up to 20, get array[value_of_slider] to get your actual value.  I don't know sliders well enough to tell you whether or not there is a way to give it a custom set of values.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Based on the above answer and discussion from @Seburdis, and using the names from your example:</p>\n\n<pre><code>var prices_array = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 150, 200, 250, 500, 1000, 1500, 2000, 2500, 5000, 10000];\n\nfunction imSliding(event,ui)\n{\n    //update the amount by fetching the value in the value_array at index ui.value\n    $('#amount').val('$' + prices_arr[ui.value] + ' - $' + prices_arr[prices_arr.length - 1]); \n}\n\n$('#slider-interval').slider({ min:0, max:values_arr.length - 1, slide: imSliding});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Not sure if you want the slider scale to be in proportion to your values* but if so, I provided a solution to this for someone else who asked the same question. <a href=\"http://stackoverflow.com/questions/681303/is-there-a-plugin-or-example-of-a-jquery-slider-working-with-non-equably-divisibl\">You can find my solution here</a>. Basically I make use of the <code>slide</code> event that gets triggered when you move the slider to mimic the stepping, but based off a custom array defining the steps. This way it only allows you to \"step\" to your predefined values, even if they're not evenly spread.</p>\n\n<p>*In other words if you want your slider to look like this:</p>\n\n<pre><code>|----|----|----|----|----|----|----|\n0   10   20  100  1000 2000 10000 20000\n</code></pre>\n\n<p>then go with one of the other solutions here, but if you want your slider to look like this (diagram not to scale):</p>\n\n<pre><code>|--|--|-------|-----------|-----------|--------------------|--------------------|\n0 10 20     100         1000        2000               10000                20000\n</code></pre>\n\n<p>Then the solution I linked to may be more what you're after.</p>\n\n<hr>\n\n<p><b>Edit:</b> Ok, this version of the script should work with dual sliders:</p>\n\n<pre><code>$(function() {\n    var values = [0, 500, 750, 1000, 1250, 1500, 2000, 2500, 75000, 100000, 150000, 200000, 250000, 300000, 350000, 400000, 500000, 1000000];\n    var slider = $(\"#price-range\").slider({\n        orientation: 'horizontal',\n        range: true,\n        min: 0,\n        max: 1000000,\n        values: [0, 1000000],\n        slide: function(event, ui) {\n            var includeLeft = event.keyCode != $.ui.keyCode.RIGHT;\n            var includeRight = event.keyCode != $.ui.keyCode.LEFT;\n            var value = findNearest(includeLeft, includeRight, ui.value);\n            if (ui.value == ui.values[0]) {\n                slider.slider('values', 0, value);\n            }\n            else {\n                slider.slider('values', 1, value);\n            }\n            $(\"#price-amount\").html('$' + slider.slider('values', 0) + ' - $' + slider.slider('values', 1));\n            return false;\n        },\n        change: function(event, ui) { \n            getHomeListings();\n        }\n    });\n    function findNearest(includeLeft, includeRight, value) {\n        var nearest = null;\n        var diff = null;\n        for (var i = 0; i &lt; values.length; i++) {\n            if ((includeLeft &amp;&amp; values[i] &lt;= value) || (includeRight &amp;&amp; values[i] &gt;= value)) {\n                var newDiff = Math.abs(value - values[i]);\n                if (diff == null || newDiff &lt; diff) {\n                    nearest = values[i];\n                    diff = newDiff;\n                }\n            }\n        }\n        return nearest;\n    }\n});\n</code></pre>\n\n<p>Note that it looks a little funny down the far left end, since the jumps are so close together compared to the right hand end, but you can see its stepping as desired if you use your keyboard arrows to move the slider. Only way to get around that is to change your scale to not be quite so drastically exponential.</p>\n\n<hr>\n\n<p><b>Edit 2:</b>\nOk, if the spacing is too exaggerated when you use the true values, you could use a set of fake values for the slider &amp; then look up the real value this corresponds to when you need to use the real value (in a similar way to what the other solutions here suggested). Here's the code:</p>\n\n<pre><code>$(function() {\n    var trueValues = [0, 500, 750, 1000, 1250, 1500, 2000, 2500, 75000, 100000, 150000, 200000, 250000, 300000, 350000, 400000, 500000, 1000000];\n    var values =     [0,   1,   2,    3,    4,    5,    6,    7,    10,     15,     20,     25,     30,     40,     50,     60,     75,     100];\n    var slider = $(\"#price-range\").slider({\n        orientation: 'horizontal',\n        range: true,\n        min: 0,\n        max: 100,\n        values: [0, 100],\n        slide: function(event, ui) {\n            var includeLeft = event.keyCode != $.ui.keyCode.RIGHT;\n            var includeRight = event.keyCode != $.ui.keyCode.LEFT;\n            var value = findNearest(includeLeft, includeRight, ui.value);\n            if (ui.value == ui.values[0]) {\n                slider.slider('values', 0, value);\n            }\n            else {\n                slider.slider('values', 1, value);\n            }\n            $(\"#price-amount\").html('$' + getRealValue(slider.slider('values', 0)) + ' - $' + getRealValue(slider.slider('values', 1)));\n            return false;\n        },\n        change: function(event, ui) { \n            getHomeListings();\n        }\n    });\n    function findNearest(includeLeft, includeRight, value) {\n        var nearest = null;\n        var diff = null;\n        for (var i = 0; i &lt; values.length; i++) {\n            if ((includeLeft &amp;&amp; values[i] &lt;= value) || (includeRight &amp;&amp; values[i] &gt;= value)) {\n                var newDiff = Math.abs(value - values[i]);\n                if (diff == null || newDiff &lt; diff) {\n                    nearest = values[i];\n                    diff = newDiff;\n                }\n            }\n        }\n        return nearest;\n    }\n    function getRealValue(sliderValue) {\n        for (var i = 0; i &lt; values.length; i++) {\n            if (values[i] &gt;= sliderValue) {\n                return trueValues[i];\n            }\n        }\n        return 0;\n    }\n});\n</code></pre>\n\n<p>You can fiddle with the numbers in the <code>values</code> array (which represent the slider stop points) until you get them spaced out how you want. This way you can make it feel, from the user's perspective, like it's sliding proportionally to the values, but without being as exaggerated. Obviously if your true values are dynamically created, you may need to come up with an algorithm to generate the slider values instead of statically defining them...</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>if min and max value are the same, slider value don't change</p>\n\n<p>change this part</p>\n\n<pre><code>        if (ui.value == ui.values[0]) {\n            slider.slider('values', 0, value);\n        }\n        else {\n            slider.slider('values', 1, value);\n        }\n</code></pre>\n\n<p>into</p>\n\n<pre><code>        if ( ui.values[0] == ui.values[1] ) {\n            slider.slider('values', 0, value);\n            slider.slider('values', 1, value);\n        }else{\n            if (ui.value == ui.values[0]) {\n                slider.slider('values', 0, value);\n            }else {\n                slider.slider('values', 1, value);\n            }\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Somebody posted this on the jQuery website.  See:</p>\n\n<p><a href=\"http://forum.jquery.com/topic/non-linear-logarithmic-or-exponential-scale-for-slider\" rel=\"nofollow\">http://forum.jquery.com/topic/non-linear-logarithmic-or-exponential-scale-for-slider</a></p>\n\n<p>and</p>\n\n<p><a href=\"http://jsbin.com/ezema\" rel=\"nofollow\">http://jsbin.com/ezema</a></p>\n\n<p>It is exactly what yo have, but way simpler (like 1 line of code).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is my simple solution for a custom (non consistent \"step\" size) dual-slider (you can modify it to a single-slider if the idea becomes clear)\nmy slider is named \"slider-euro\", the text-area is named amount-euro as you can see in the code.\nThe idea is to have a slider from 0 to 100 and an array (\"realvalues\") with 101 places. The slider-value is understood as the place in that array. The only thing is that you have to reference the array when you get the slider values.\nHere is my Example:</p>\n\n<pre><code>    $(function() {\n    var realvalues = [0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 15000, 20000, 25000, 30000, 35000, 40000, 45000, 50000, 55000, 60000, 65000, 70000, 75000, 80000, 85000, 90000, 95000, 100000, 105000, 110000, 115000, 120000, 125000, 130000, 135000, 140000, 145000, 150000, 155000, 160000, 165000, 170000, 175000, 180000, 185000, 190000, 195000, 200000, 205000, 210000, 215000, 220000, 225000, 230000, 235000, 240000, 245000, 250000, 255000, 260000, 265000, 270000, 275000, 280000, 285000, 290000, 295000, 300000, 310000, 320000, 330000, 340000, 350000, 360000, 370000, 380000, 390000, 400000, 450000, 500000, 550000, 600000, 650000, 700000, 750000, 800000, 850000, 900000, 1000000, 1500000, 2000000];\n\n    $( \"#slider-euro\" ).slider({\n    range: true,\n    min: 0,\n    max: 100,\n    step: 1,\n    values: [ 25, 50 ],\n    slide: function( event, ui ) {\n    $( \"#amount-euro\" ).val( realvalues[ui.values[ 0 ]] + \" \u20ac - \" + realvalues[ui.values[ 1 ]] + \" \u20ac\");\n    }\n    });\n    $( \"#amount-euro\" ).val( realvalues[$( \"#slider-euro\" ).slider( \"values\", 0 )] + \" \u20ac - \" + realvalues[$( \"#slider-euro\" ).slider( \"values\", 1 )]+\" \u20ac\" );\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I had to do something similar and even though this is a late response, someone else may happen on to this thread just as I did, and find my solution useful. Here is the solution I created:</p>\n\n<p><a href=\"http://jsfiddle.net/YDWdu/\" rel=\"nofollow\">http://jsfiddle.net/YDWdu/</a></p>\n\n<pre><code>So apparently, postings containing links to jsfiddle \"must be accompanied by code\".\nOK - here ya go, stackoverflow... Some lovely \"code\" for you.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>here's how i did mine. \ndemo here - <a href=\"http://janpatricklara.com/web/extra/jQueryUISliderUnevenSteps.html\" rel=\"nofollow\">http://janpatricklara.com/web/extra/jQueryUISliderUnevenSteps.html</a></p>\n\n<p>have an array of your desired values</p>\n\n<pre><code>var amts=[50,100,150,200,225,250,300];\n</code></pre>\n\n<p>have the slider increment from 0 to the length of the array, with steps of 1.\noutput the value from the index of the array instead of using the slider's actual value.</p>\n\n<p>this way the increments and steps are evenly distributed. after that you can just grab the value of the label or save it to a var.</p>\n\n<pre><code>$('#amtslider').slider({\n    min:0,\n    max:amts.length-1,\n    step:1,\n    value:0,\n    change:function(event, ui){\n        //alert(amts[$(this).slider(\"value\")]);\n        //alert($(this).slider(\"value\"));\n        $('#lbl_amt').val(amts[$(this).slider(\"value\")]);\n    },\n    slide:function(event, ui){\n        $('#lbl_amt').val(amts[$(this).slider(\"value\")]);\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just change the values.</p>\n\n<pre><code>$( \"#price-range\" ).slider({\n        range: true,\n        min: 1000,\n        max: 300000000,\n        /*step:1,*/\n        values: [ 1000, 300000000 ],\n        slide: function( event, ui ) {\n            if(ui.values[0]&lt;=100000 &amp;&amp; ui.values[1]&lt;=100000){\n                $(\"#price-range\").slider({step:10000});\n            }else if(ui.values[0]&lt;=300000 &amp;&amp; ui.values[1]&lt;=300000){\n                $(\"#price-range\").slider({step:25000});\n            }else if(ui.values[0]&lt;=1000000 &amp;&amp; ui.values[1]&lt;=1000000){\n                $(\"#price-range\").slider({step:50000});\n            }else if(ui.values[0]&lt;=2000000 &amp;&amp; ui.values[1]&lt;=2000000){\n                $(\"#price-range\").slider({step:100000});\n            }else if(ui.values[0]&lt;=5000000 &amp;&amp; ui.values[1]&lt;=5000000){\n                $(\"#price-range\").slider({step:250000});\n            }else if(ui.values[0]&lt;=10000000 &amp;&amp; ui.values[1]&lt;=10000000){\n                $(\"#price-range\").slider({step:500000});\n            }else if(ui.values[0]&lt;=20000000 &amp;&amp; ui.values[1]&lt;=20000000){\n                $(\"#price-range\").slider({step:1000000});\n            }else if(ui.values[0]&lt;=50000000 &amp;&amp; ui.values[1]&lt;=50000000){\n                $(\"#price-range\").slider({step:5000000});\n            }else if(ui.values[0]&lt;=50000000 &amp;&amp; ui.values[1]&lt;=50000000){\n                $(\"#price-range\").slider({step:10000000});\n            }else if(ui.values[0]&lt;=200000000 &amp;&amp; ui.values[1]&lt;=200000000){\n                $(\"#price-range\").slider({step:25000000});\n            }else{\n                $(\"#price-range\").slider({step:100000000});\n            }\n\n            $(\"#mins\").val( ui.values[0] );\n            $(\"#maxs\").val( ui.values[1] );\n\n        }\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think I can offer a better solution:\nThe idea is to keep an array with my real values apart from the slider, then to set the <code>step</code> attribute always to 1 and let the slider work with the <code>index</code> of that array and then fetch the real value from my real data array. Hope this example Helps: <a href=\"http://jsfiddle.net/3B3tt/3/\" rel=\"nofollow\">http://jsfiddle.net/3B3tt/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>HTML:</p>\n\n<pre><code>&lt;body&gt;\n   &lt;p&gt;\n      Slider Value: &lt;span id=\"val\"&gt;&lt;/span&gt;&lt;br/&gt;\n      Nonlinear Value: &lt;span id=\"nlVal\"&gt;&lt;/span&gt;&lt;br/&gt;\n   &lt;/p&gt;\n   &lt;div id=\"slider\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>    $(function() {\n     var valMap = [0, 25,30,50,55,55,60,100];\n     $(\"#slider\").slider({\n        // min: 0,\n         max: valMap.length - 1,\n         slide: function(event, ui) {\n           $(\"#val\").text(ui.value);\n           $(\"#nlVal\").text(valMap[ui.value]);\n         }\n     });\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Further to @Broshi's jsfiddle above, here is the code for a custom slider with range disabled:</p>\n\n<p>jQuery:</p>\n\n<pre><code>var myData = [1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000,10000,20000,30000,50000,100000,200000,500000,1000000,20000000,30000000];\nslider_config = {\n        range: false,\n        min: 0,\n        max: myData.length - 1,\n        step: 1,\n        slide: function( event, ui ) {\n            // Set the real value into the inputs\n            console.log(ui);\n            $('#value').val( myData[ ui.value ] );\n        },\n        create: function() {\n            $(this).slider('value',0);\n        }\n    };\n\n$(\"#slider\").slider(slider_config);\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;input id=\"value\" /&gt;\n&lt;div id=\"slider\"&gt;&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to use the JQuery Slider (range slider / dual slider) to have non-linear (non consistent \"step\" size) values?</p>\n\n<p>I want to horizontal Slider to look like:</p>\n\n<pre><code>|----|----|----|----|----|--------|--------|-------------------------|--------------------------|...\n0   500  750  1000  1250 1500     2000     2500                      75000                      100000...\n</code></pre>\n\n<p>For example, I want to have the following JQuery code:</p>\n\n<pre><code>var values = [0, 500, 750, 1000, 1250, 1500, 2000, 2500, 75000, 100000, 150000, 200000, 250000, 300000, 350000, 400000, 500000, 1000000];\nvar slider = $(\"#price-range\").slider({\n\torientation: 'horizontal',\n\trange: true,\n\tmin: 0,\n\tmax: 1000000,\n\tvalues: [0, 1000000],\n\tslide: function(event, ui) {\n\t\t\tvar includeLeft = event.keyCode != $.ui.keyCode.RIGHT;\n\t\t\tvar includeRight = event.keyCode != $.ui.keyCode.LEFT;\n\t\t\tslider.slider('option', 'value', findNearest(includeLeft, includeRight, ui.value));\n\t\t\t$(\"#price-amount\").html('$' + ui.values[0] + ' - $' + ui.values[1]);\n\t\t\treturn false;\n\t},\n\tchange: function(event, ui) { \n\t\tgetHomeListings();\n\t}\n});\nfunction findNearest(includeLeft, includeRight, value) {\n\tvar nearest = null;\n\tvar diff = null;\n\tfor (var i = 0; i &lt; values.length; i++) {\n\t\t\tif ((includeLeft &amp;&amp; values[i] &lt;= value) || (includeRight &amp;&amp; values[i] &gt;= value)) {\n\t\t\t\t\tvar newDiff = Math.abs(value - values[i]);\n\t\t\t\t\tif (diff == null || newDiff &lt; diff) {\n\t\t\t\t\t\t\tnearest = values[i];\n\t\t\t\t\t\t\tdiff = newDiff;\n\t\t\t\t\t}\n\t\t\t}\n\t}\n\treturn nearest;\n}\n</code></pre>\n\n<p>The code above is not exactly working but the snap to grid functionality doesn't work.</p>\n",
            "last_activity_date": 1407924557,
            "question_id": 967372,
            "score": 49,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "user-interface",
                "slider"
            ],
            "title": "JQuery Slider, how to make &quot;step&quot; size change"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>var map = new Object(); // or var map = {};\nmap[myKey1] = myObj1;\nmap[myKey2] = myObj2;\n\nfunction get(k) {\n    return map[k];\n}\n\n//map[myKey1] == get(myKey1);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 149
                },
                {
                    "body": "<p>Just use plain objects:</p>\n\n<pre><code>var map = {\"key1\":\"value1\",\"key2\":\"value2\"}\nfunction get(k){\n  return map[k];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<pre><code>var map = {'myKey1':myObj1, 'mykey2':myObj2};\n// You don't need any get function\n// just use\n// map[[mykey1]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you're not restricted to JQuery, you can use the prototype.js framework.  It has a class called Hash:  You can even use JQuery &amp; prototype.js together.  Just type jQuery.noConflict();</p>\n\n<pre><code>var h = new Hash();\nh.set(\"key\", \"value\");\nh.get(\"key\");\nh.keys(); // returns an array of keys\nh.values(); // returns an array of values\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<pre><code>function Map() {\nthis.keys = new Array();\nthis.data = new Object();\n\nthis.put = function(key, value) {\n    if(this.data[key] == null){\n        this.keys.push(key);\n    }\n    this.data[key] = value;\n};\n\nthis.get = function(key) {\n    return this.data[key];\n};\n\nthis.remove = function(key) {\n    this.keys.remove(key);\n    this.data[key] = null;\n};\n\nthis.each = function(fn){\n    if(typeof fn != 'function'){\n        return;\n    }\n    var len = this.keys.length;\n    for(var i=0;i&lt;len;i++){\n        var k = this.keys[i];\n        fn(k,this.data[k],i);\n    }\n};\n\nthis.entrys = function() {\n    var len = this.keys.length;\n    var entrys = new Array(len);\n    for (var i = 0; i &lt; len; i++) {\n        entrys[i] = {\n            key : this.keys[i],\n            value : this.data[i]\n        };\n    }\n    return entrys;\n};\n\nthis.isEmpty = function() {\n    return this.keys.length == 0;\n};\n\nthis.size = function(){\n    return this.keys.length;\n};\n</code></pre>\n\n<p>}</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p><em>This is an old question, but because the existing answers could be very dangerous, I wanted to leave this answer for future folks who might stumble in here...</em></p>\n\n<p>The answers based on using an Object as a HashMap are broken and can cause extremely nasty consequences if you use anything other than a String as the key. The problem is that Object properties are coerced to Strings using the .toString method. This can lead to the following nastiness:</p>\n\n<pre><code>function MyObject(name) {\n  this.name = name;\n};\nvar key1 = new MyObject(\"one\");\nvar key2 = new MyObject(\"two\");\n\nvar map = {};\nmap[key1] = 1;\nmap[key2] = 2;\n</code></pre>\n\n<p>If you were expecting that Object would behave in the same way as a Java Map here, you would be rather miffed to discover that map only contains <em>one</em> entry with the String key <code>[object Object]</code>:</p>\n\n<pre><code>&gt; JSON.stringify(map);\n{\"[object Object]\": 2}\n</code></pre>\n\n<p>This is clearly <strong>not</strong> a replacement for Java's HashMap. Bizarrely, given it's age, Javascript does not currently have a general purpose map object. There is hope on the horizon, though: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map</a> although a glance at the Browser Compatability table there will show that this isn't ready to used in general purpose web apps yet.</p>\n\n<p>In the meantime, the best you can do is:</p>\n\n<ul>\n<li>Deliberately use Strings as keys. I.e. use explicit strings as keys rather than relying on the implicit .toString-ing of the keys you use.</li>\n<li>Ensure that the objects you are using as keys have a well-defined .toString() method that suits your understanding of uniqueness for these objects.</li>\n<li>If you cannot/don't want to change the .toString of the key Objects, when storing and retrieving the entries, convert the objects to a string which represents your understanding of uniqueness. E.g. <code>map[toUniqueString(key1)] = 1</code></li>\n</ul>\n\n<p>Sometimes, though, that is not possible. If you want to map data based on, for example File objects, there is no reliable way to do this because the attributes that the File object exposes are not enough to ensure its uniqueness. (You may have two File objects that represent different files on disk, but there is no way to distinguish between them in JS in the browser). In these cases, unfortunately, all that you can do is refactor your code to eliminate the need for storing these in a may; perhaps, by using an array instead and referencing them exclusively by index.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>How can you create the JavaScript/JQuery equivalent of this Java code:</p>\n\n<pre><code>Map map = new HashMap(); //Doesn't not have to be a hash map, any key/value map is fine\nmap.put(myKey1, myObj1);\nmap.put(myKey2, myObj2); //Repeat n times\n\nfunction Object get(k) {\n    return map.get(k);\n}\n</code></pre>\n",
            "last_activity_date": 1418775708,
            "question_id": 4246980,
            "score": 91,
            "tags": [
                "javascript",
                "jquery",
                "hashmap"
            ],
            "title": "How to create a simple map using JavaScript/JQuery"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>I wouldn't expect vertical tabs to need different Javascript from horizontal tabs.  The only thing that would be different is the CSS for presenting the tabs and content on the page. JS for tabs generally does no more than show/hide/maybe load content.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try here:</p>\n\n<p><a href=\"http://www.sunsean.com/idTabs/\">http://www.sunsean.com/idTabs/</a></p>\n\n<p>A look at the Freedom tab might have what you need.</p>\n\n<p>Let me know if you find something you like.  I worked on the exact same problem a few months ago and decided to implement myself.  I like what I did, but it might have been nice to use a standard library.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Have a look at <a href=\"http://css.maxdesign.com.au/listamatic/\" rel=\"nofollow\">Listamatic</a>.  Tabs are semantically just a list of items styled in a particular way.  You don't even necessarily need javascript to make vertical tabs work as the various examples at Listamatic show.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I had been done a menu vertical and tabs changing in the middle of the page</p>\n\n<p>I changed two words on the code source and I set apart two different Div's</p>\n\n<p>one it's the menu:</p>\n\n<pre><code>&lt;div class=\"arrowgreen\"&gt;\n  &lt;ul class=\"tabNavigation\"&gt; \n    &lt;li&gt; &lt;a href=\"#first\" title=\"Home\"&gt;Tab 1&lt;/a&gt;&lt;/li&gt;\n    &lt;li&gt; &lt;a href=\"#secund\" title=\"Home\"&gt;Tab 2&lt;/a&gt;&lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/div&gt; \n</code></pre>\n\n<p>And the other div it's the content.</p>\n\n<pre><code>&lt;div class=\"pages\"&gt;\n  &lt;div id=\"first\"&gt;\n    CONTENT 1\n  &lt;/div&gt;\n  &lt;div id=\"secund\"&gt;\n    CONTENT 2\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>the code works with the div apart </p>\n\n<pre><code>$(function () {\n    var tabContainers = $('div.pages &gt; div');\n\n    $('div.arrowgreen ul.tabNavigation a').click(function () {\n        tabContainers.hide().filter(this.hash).show();\n\n        $('div.arrowgreen ul.tabNavigation a').removeClass('selected');\n        $(this).addClass('selected');\n\n        return false;\n    }).filter(':first').click();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Have a look at <a href=\"http://jqueryui.com/tabs/#vertical\">the jQuery UI vertical Tabs Docu</a>.\nI try out it, it worked fine.</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n/* Vertical Tabs\n----------------------------------*/\n.ui-tabs-vertical { width: 55em; }\n.ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 12em; }\n.ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }\n.ui-tabs-vertical .ui-tabs-nav li a { display:block; }\n.ui-tabs-vertical .ui-tabs-nav li.ui-tabs-selected { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }\n.ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}\n&lt;/style&gt; \n\n&lt;script&gt;\n    $(document).ready(function() {\n        $(\"#tabs\").tabs().addClass('ui-tabs-vertical ui-helper-clearfix');\n        $(\"#tabs li\").removeClass('ui-corner-top').addClass('ui-corner-left');\n\n    });\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>Another options is Matteo Bicocchi's jQuery mb.extruder tabs plug-in: \n<a href=\"http://pupunzi.open-lab.com/mb-jquery-components/jquery-mb-extruder/\" rel=\"nofollow\">http://pupunzi.open-lab.com/mb-jquery-components/jquery-mb-extruder/</a></p>\n\n<p>See it in action at <a href=\"http://www.topomap.co.nz\" rel=\"nofollow\">http://www.topomap.co.nz</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>//o_O\\\\  (Poker Face) i know its late\n</code></pre>\n\n<p><strong>just add beloww css style</strong></p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n\n   /* Vertical Tabs ----------------------------------*/\n .ui-tabs-vertical { width: 55em; }\n .ui-tabs-vertical .ui-tabs-nav { padding: .2em .1em .2em .2em; float: left; width: 12em; }\n .ui-tabs-vertical .ui-tabs-nav li { clear: left; width: 100%; border-bottom-width: 1px !important; border-right-width: 0 !important; margin: 0 -1px .2em 0; }\n .ui-tabs-vertical .ui-tabs-nav li a { display:block; }\n .ui-tabs-vertical .ui-tabs-nav li.ui-tabs-selected { padding-bottom: 0; padding-right: .1em; border-right-width: 1px; border-right-width: 1px; }\n .ui-tabs-vertical .ui-tabs-panel { padding: 1em; float: right; width: 40em;}\n\n&lt;/style&gt;\n</code></pre>\n\n<p>UPDATED ! <a href=\"http://jqueryui.com/tabs/#vertical\" rel=\"nofollow\">http://jqueryui.com/tabs/#vertical</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>super simple function that will allow you to create your own tab / accordion structure here: <a href=\"http://jsfiddle.net/nabeezy/v36DF/\" rel=\"nofollow\">http://jsfiddle.net/nabeezy/v36DF/</a></p>\n\n<pre><code>bindSets = function (tabClass, tabClassActive, contentClass, contentClassHidden) {\n        //Dependent on jQuery\n        //PARAMETERS\n        //tabClass: 'the class name of the DOM elements that will be clicked',\n        //tabClassActive: 'the class name that will be applied to the active tabClass element when clicked (must write your own css)',\n        //contentClass: 'the class name of the DOM elements that will be modified when the corresponding tab is clicked',\n        //contentClassHidden: 'the class name that will be applied to all contentClass elements except the active one (must write your own css)',\n        //MUST call bindSets() after dom has rendered\n\n        var tabs = $('.' + tabClass);\n        var tabContent = $('.' + contentClass);\n        if(tabs.length !== tabContent.length){console.log('JS bindSets: sets contain a different number of elements')};\n        tabs.each(function (index) {\n            this.matchedElement = tabContent[index];\n            $(this).click(function () {\n                tabs.each(function () {\n                    this.classList.remove(tabClassActive);\n                });\n                tabContent.each(function () {\n                    this.classList.add(contentClassHidden);\n                });\n                this.classList.add(tabClassActive);\n                this.matchedElement.classList.remove(contentClassHidden);\n            });\n        })\n        tabContent.each(function () {\n            this.classList.add(contentClassHidden);\n        });\n\n        //tabs[0].click();\n    }\nbindSets('tabs','active','content','hidden');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I want tabs along the left side of the page instead of across the top.  I'm already loading JQuery for other reasons (effects), so I prefer using JQuery to another UI framework.  Searches on \"vertical tabs jquery\" yield links to works-in-progress.  </p>\n\n<p>Is getting Vertical Tabs to work across browsers fraught, or is it so trivial that, once you have a solution, it doesn't seem worthwhile to post example code?</p>\n",
            "last_activity_date": 1400110058,
            "question_id": 773074,
            "score": 73,
            "tags": [
                "javascript",
                "jquery",
                "jquery-ui"
            ],
            "title": "Vertical Tabs with JQuery?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>keyCodes are <em>different</em> from the ASCII values. For a complete keyCode reference, see <a href=\"http://unixpapa.com/js/key.html\">http://unixpapa.com/js/key.html</a></p>\n\n<p>For example, Numpad numbers have keyCodes 96 - 105, which corresponds to the beginning of lowercase alphabet in ASCII. This could lead to problems in validating numeric input.</p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>I needed something like this for a game's control configuration UI, so I compiled a list for the standard US keyboard layout keycodes and mapped them to their respective key names.</p>\n\n<p>Here's a fiddle that contains a map for code -> name and visi versa: <a href=\"http://jsfiddle.net/vWx8V/\">http://jsfiddle.net/vWx8V/</a></p>\n\n<p>If you want to support other key layouts you'll need to modify these maps to accommodate for them separately.</p>\n\n<p>That is unless you were looking for a list of keycode values that included the control characters and other special values that are not (or are rarely) possible to input using a keyboard and may be outside of the scope of the <code>keydown</code>/<code>keypress</code>/<code>keyup</code> events of Javascript. Many of them are control characters or special characters like <code>null</code> (<code>\\0</code>) and you most likely won't need them.</p>\n\n<p>Notice that the number of keys on a full keyboard is less than many of the keycode values.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Here are some useful links:</p>\n\n<ul>\n<li><a href=\"http://www.toolcase.org/charset.php?charset=UTF-8&amp;min=0&amp;per=512&amp;search=\" rel=\"nofollow\">http://www.toolcase.org/charset.php?charset=UTF-8&amp;min=0&amp;per=512&amp;search=</a></li>\n</ul>\n\n<p>The 2nd column is the keyCode and the html column shows how it will displayed.\nYou can test it <a href=\"http://jsbin.com/eruwoh/4/edit\" rel=\"nofollow\">here</a>.</p>\n\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/UTF-8\" rel=\"nofollow\">http://en.wikipedia.org/wiki/UTF-8</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Followed <a href=\"http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes#comment6380666_5603195\">@pimvdb's advice</a>, and created my own:</p>\n\n<p><a href=\"http://daniel-hug.github.io/characters/\">http://daniel-hug.github.io/characters/</a></p>\n\n<p>Be patient, as it takes 10-20 seconds to generate a table row for all 65536 characters that have a javascript keycode.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Here is a complete list--I believe: <a href=\"http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes\" rel=\"nofollow\">http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p><a href=\"http://keycodes.atjayjo.com/\" rel=\"nofollow\">http://keycodes.atjayjo.com/</a></p>\n\n<p>This app is just awesome. It is essentially a virtual keyboard that intermediately shows you the keycode pressed on a standard US keyboard. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One possible answer will be given when you run this snippet.</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>document.write('&lt;table&gt;')\r\nfor (var i = 0; i &lt; 250; i++) {\r\n  document.write('&lt;tr&gt;&lt;td&gt;' + i + '&lt;/td&gt;&lt;td&gt;' + String.fromCharCode(i) + '&lt;/td&gt;&lt;/tr&gt;')\r\n}\r\ndocument.write('&lt;/table&gt;')</code></pre>\r\n<pre class=\"snippet-code-css lang-css prettyprint-override\"><code>td {\r\n  border: solid 1px;\r\n  padding: 1px 12px;\r\n  text-align: right;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n}\r\n* {\r\n  font-family: monospace;\r\n  font-size: 1.1em;\r\n}</code></pre>\r\n</div>\r\n</div>\r\n</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>What keycodes are available for JavaScript? If they're not the same for all browsers, please list the keycodes for each browser.</p>\n",
            "last_activity_date": 1415376653,
            "question_id": 5603195,
            "score": 64,
            "tags": [
                "javascript",
                "keycode"
            ],
            "title": "What are the JavaScript KeyCodes?"
        },
        {
            "answer_count": 11,
            "answers": [
                {
                    "body": "<p>With a quick googling I found <a href=\"http://snipplr.com/view/16108/truncate-a-string-to-a-set-length-breaking-at-word-boundaries/\" rel=\"nofollow\">this</a>... Can do?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>String.prototype.trunc = String.prototype.trunc ||\n      function(n){\n          return this.length&gt;n ? this.substr(0,n-1)+'&amp;hellip;' : this;\n      };\n</code></pre>\n\n<p>Now you can do:</p>\n\n<pre><code>var s = 'not very long';\ns.trunc(25); //=&gt; not very long\ns.trunc(5); //=&gt; not ...\n</code></pre>\n\n<p>if with 'more sophisticated' you mean: truncating at the last word boundary of a string, then this may be what you want:</p>\n\n<pre><code>String.prototype.trunc =\n     function(n,useWordBoundary){\n         var toLong = this.length&gt;n,\n             s_ = toLong ? this.substr(0,n-1) : this;\n         s_ = useWordBoundary &amp;&amp; toLong ? s_.substr(0,s_.lastIndexOf(' ')) : s_;\n         return  toLong ? s_ + '&amp;hellip;' : s_;\n      };\n</code></pre>\n\n<p>now you can do:</p>\n\n<pre><code>s.trunc(11,true) //=&gt;not very...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 110
                },
                {
                    "body": "<p>Most modern Javascript frameworks (<a href=\"http://jquery.com/\" rel=\"nofollow\">JQuery</a>, <a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">Prototype</a>, <a href=\"http://www.ajaxline.com/10-most-popular-javascript-frameworks\" rel=\"nofollow\">etc</a>...) have a utility function tacked on to String that handles this.</p>\n\n<p>Here's an example in Prototype:</p>\n\n<pre><code>'Some random text'.truncate(10);\n// -&gt; 'Some ra...'\n</code></pre>\n\n<p>This seems like one of those functions you want someone else to deal with/maintain.  I'd let the framework handle it, rather than writing more code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's my solution, which has a few improvements over other suggestions:</p>\n\n<pre><code>String.prototype.truncate = function(){\n    var re = this.match(/^.{0,25}[\\S]*/);\n    var l = re[0].length;\n    var re = re[0].replace(/\\s$/,'');\n    if(l &lt; this.length)\n        re = re + \"&amp;hellip;\";\n    return re;\n}\n\n// \"This is a short string\".truncate();\n\"This is a short string\"\n\n// \"Thisstringismuchlongerthan25characters\".truncate();\n\"Thisstringismuchlongerthan25characters\"\n\n// \"This string is much longer than 25 characters and has spaces\".truncate();\n\"This string is much longer&amp;hellip;\"\n</code></pre>\n\n<p>It:</p>\n\n<ul>\n<li>Truncates on the first space after 25\ncharacters</li>\n<li>Extends the JavaScript String object,\nso it can be used on (and chained to)\nany string.</li>\n<li>Will trim the string if truncation\nresults in a trailing space;</li>\n<li>Will add the unicode hellip entity\n(ellipsis) if the truncated string is longer than 25 characters</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><strike>Note that this only needs to be done for Firefox.</strike></p>\n\n<p>All <strike>other</strike> browsers support a CSS solution (see <a href=\"http://caniuse.com/text-overflow\">support table</a>):</p>\n\n<pre><code>p {\n    white-space: nowrap;\n    width: 100%;                   /* IE6 needs any width */\n    overflow: hidden;              /* \"overflow\" value must be different from  visible\"*/ \n    -o-text-overflow: ellipsis;    /* Opera &lt; 11*/\n    text-overflow:    ellipsis;    /* IE, Safari (WebKit), Opera &gt;= 11, FF &gt; 6 */\n}\n</code></pre>\n\n<p>The irony is I got that code snippet from Mozilla MDC.</p>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p>Firefox now supports a CSS solution as well.</p>\n\n<pre><code>p {\n    width: 100%;\n    max-width: 100%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use the <a href=\"http://docs.sencha.com/ext-js/4-1/#!/api/Ext.util.Format-method-ellipsis\" rel=\"nofollow\">Ext.util.Format.ellipsis</a> function if you are using Ext.js.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>c_harm's answer is in my opinion the best. Please note that if you want to use </p>\n\n<pre><code>\"My string\".truncate(n)\n</code></pre>\n\n<p>you will have to use a regexp object constructor rather than a literal. Also you'll have to escape the <code>\\S</code> when converting it.</p>\n\n<pre><code>String.prototype.truncate =\n    function(n){\n        var p  = new RegExp(\"^.{0,\" + n + \"}[\\\\S]*\", 'g');\n        var re = this.match(p);\n        var l  = re[0].length;\n        var re = re[0].replace(/\\s$/,'');\n\n        if (l &lt; this.length) return re + '&amp;hellip;';\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I upvoted Kooilnc's solution. Really nice compact solution. There's one small edge case that I would like to address. If someone enters a really long character sequence for whatever reason, it won't get truncated:</p>\n\n<pre><code>function truncate(str, n, useWordBoundary) {\n    var singular, tooLong = str.length &gt; n;\n    useWordBoundary = useWordBoundary || true;\n\n    // Edge case where someone enters a ridiculously long string.\n    str = tooLong ? str.substr(0, n-1) : str;\n\n    singular = (str.search(/\\s/) === -1) ? true : false;\n    if(!singular) {\n      str = useWordBoundary &amp;&amp; tooLong ? str.substr(0, str.lastIndexOf(' ')) : str;\n    }\n\n    return  tooLong ? str + '&amp;hellip;' : str;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use following code</p>\n\n<pre><code> function trancateTitle (title) {\n    var length = 10;\n    if (title.length &gt; length) {\n       title = title.substring(0, length)+'...';\n    }\n    return title;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Correcting Kooilnc's solution:</p>\n\n<pre><code>String.prototype.trunc = String.prototype.trunc ||\n  function(n){\n      return this.length&gt;n ? this.substr(0,n-1)+'&amp;hellip;' : this.toString();\n  };\n</code></pre>\n\n<p>This returns the string value instead of the String object if it doesn't need to be truncated.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Does anyone have a more sophisticated solution/library for shortening strings with JavaScript, than the obvious one:</p>\n\n<pre><code>if(string.length &gt; 25) {\n    string = string.substring(0,24)+\"...\";\n}\n</code></pre>\n",
            "last_activity_date": 1416358454,
            "question_id": 1199352,
            "score": 51,
            "tags": [
                "javascript",
                "string"
            ],
            "title": "smart way to shorten long strings with javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Functions and variables declared in your GreaseMonkey scripts (and Chrome's user scripts) are kept separate from the ones declared by the web page, for obvious reasons.  For GM scripts in Firefox, you can access global variables via <a href=\"http://wiki.greasespot.net/UnsafeWindow\" rel=\"nofollow\"><code>unsafeWindow</code></a>.</p>\n\n<p>The best approach for safety and compatibility is to inject your functions into the page using a script element.\u2002I use the following snippet in my user scripts:</p>\n\n<pre><code>function addFunction(func, exec) {\n  var script = document.createElement(\"script\");\n  script.textContent = \"-\" + func + (exec ? \"()\" : \"\");\n  document.body.appendChild(script);\n}\n</code></pre>\n\n<p>The <code>\"-\"</code> here makes certain the function is parsed as an expression so that <code>exec</code> can be used to immediately execute upon adding it.\u2002You call the function like so:</p>\n\n<pre><code>function myFunction () {\n    return Grooveshark.playNextSong();\n}\n\n// Inject the function and execute it:\naddFunction(myFunction, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<h2>Background</h2>\n\n<blockquote>\n  <p>Doesn't Greasemonkey inject my extensions JavaScript already? Can someone clarify this for me please.</p>\n</blockquote>\n\n<p>Greasemonkey executes your scripts in a <a href=\"https://developer.mozilla.org/en/Components.utils.Sandbox\">sandbox</a>, which is a restricted environment without direct access to the JavaScript in the page. Earlier versions of Greasemonkey injected scripts directly into the page, but this introduced serious security vulnerabilities. In the old model, scripts ran with the elevated rights of the browser chrome, which allowed remote pages to access Greasemonkey's built-in functions using some <a href=\"http://www.oreillynet.com/pub/a/network/2005/11/01/avoid-common-greasemonkey-pitfalls.html\">clever JavaScript</a>. This was bad:</p>\n\n<blockquote>\n  <p>Greasemonkey scripts contained their own GM_xmlhttprequest object which, unlike a normal xmlttprequest object, could access any local files one one's computer or make arbitrary requests to arbitrary sites without regard for the same origin policy that typically applies to xmlhttprequest. <a href=\"http://wiki.greasespot.net/Security\">(source)</a></p>\n</blockquote>\n\n<p>When you access the <code>window</code> object from a Greasemonkey script today, what you get is a <a href=\"http://wiki.greasespot.net/XPCNativeWrapper\">wrapper object</a> that indirectly references the actual <code>window</code>'s properties. This wrapper object can be modified safely, but has <a href=\"http://wiki.greasespot.net/XPCNativeWrapper#Limitations_.2F_Problems\">important limitations</a>. Access to the actual window object is provided by <a href=\"http://wiki.greasespot.net/UnsafeWindow\"><code>unsafeWindow</code></a> (shorthand for <code>window.wrappedJSObject</code>). Use of <code>unsafeWindow</code> re-opens all of Greasemonkey's original security problems and isn't available in Chrome. It should be avoided wherever possible.</p>\n\n<p>The good news: there are at least two ways to work with Greasemonkey's new security model in a safe way.</p>\n\n<h2>Script Injection</h2>\n\n<p>Now that Greasemonkey scripts can safely access the DOM, it's trivial to <a href=\"http://wiki.greasespot.net/Content_Script_Injection\">inject a <code>&lt;script&gt;</code></a> tag into the <code>&lt;head&gt;</code> of the target document. Create a function like this:</p>\n\n<pre><code>function exec(fn) {\n    var script = document.createElement('script');\n    script.setAttribute(\"type\", \"application/javascript\");\n    script.textContent = '(' + fn + ')();';\n    document.body.appendChild(script); // run the script\n    document.body.removeChild(script); // clean up\n}\n</code></pre>\n\n<p>It's simple to use:</p>\n\n<pre><code>exec(function() {\n    return Grooveshark.playNextSong();\n});\n</code></pre>\n\n<h2>Location Hack</h2>\n\n<p>Script injection may be overkill in some cases, especially when all you need is to modify the value of a variable in the page or execute a single function. The <a href=\"http://wiki.greasespot.net/Location_hack\">Location Hack</a> leverages <code>javascript:</code> URLs to access code in the document's content. It's a lot like running a bookmarklet from within a Greasemonkey script. </p>\n\n<pre><code>location.assign(\"javascript:Grooveshark.playNextSong();void(0)\");\n</code></pre>\n\n<h2>Bonus Script</h2>\n\n<p>Here's a complete Greasemonkey script that demonstrates the examples above. You can run it on this page.</p>\n\n<pre><code>// ==UserScript==\n// @name           Content Function Test\n// @namespace      lwburk\n// @include        http://stackoverflow.com/questions/5006460/userscripts-greasemonkey-calling-a-websites-javascript-functions\n// ==/UserScript==\n\nfunction exec(fn) {\n    var script = document.createElement('script');\n    script.setAttribute(\"type\", \"application/javascript\");\n    script.textContent = '(' + fn + ')();';\n    document.body.appendChild(script); // run the script\n    document.body.removeChild(script); // clean up\n}\n\nwindow.addEventListener(\"load\", function() {\n    // script injection\n    exec(function() {\n        // alerts true if you're registered with Stack Overflow\n        alert('registered? ' + isRegistered);\n    });\n    // location hack\n    location.assign(\"javascript:alert('registered? ' + isRegistered);void(0)\");\n}, false);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 54
                }
            ],
            "body": "<p>I'm creating a UserScript extension for Firefox &amp; Chrome and I'm trying to use some of the code in the website's JavaScript, e.g.:</p>\n\n<pre><code>function: myFunction(){\n    return  Grooveshark.playNextSong();\n}\n</code></pre>\n\n<p>The problem is when I test this code,  <code>Grooveshark</code> is a null reference.</p>\n\n<p>I know there are other people who have done it:</p>\n\n<p><a href=\"http://userscripts.org/scripts/review/93354\" rel=\"nofollow\">see BetterGrooveshark</a></p>\n\n<p>But I don't know why my simple extension can't call Grooveshark's JavaScript functions.</p>\n\n<p>Do I need to 'append' my script to the document in order for this to work?:\n<code>document.document.body.appendChild(script);</code></p>\n\n<p>Doesn't Greasemonkey inject my extensions JavaScript already? Can someone clarify this for me please.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1412232951,
            "question_id": 5006460,
            "score": 26,
            "tags": [
                "javascript",
                "google-chrome-extension",
                "greasemonkey",
                "userscripts"
            ],
            "title": "UserScripts &amp; Greasemonkey: calling a website&#39;s JavaScript functions"
        },
        {
            "answer_count": 17,
            "answers": [
                {
                    "body": "<p>It is generally a better idea to detect if the mouseover function is supported rather than detecting the OS/browser type. You can do that simply by the following:</p>\n\n<pre><code>if (element.mouseover)\n{\n    //Supports the mouseover event\n}\n</code></pre>\n\n<p>Be sure that you <strong>don't</strong> do the following</p>\n\n<pre><code>if (element.mouseover())\n{\n    //Supports the mouseover event\n}\n</code></pre>\n\n<p>As the latter would actually call the method rather than check for it's existence.</p>\n\n<p>You can read up more here:\n<a href=\"http://www.quirksmode.org/js/support.html\" rel=\"nofollow\">http://www.quirksmode.org/js/support.html</a></p>\n",
                    "is_accepted": false,
                    "score": -5
                },
                {
                    "body": "<p>How about listening for a mousemove event on the document.  Then until you hear that event you assume that the device is touch or keyboard only.</p>\n\n<pre><code>var mouseDetected = false;\nfunction onMouseMove(e) {\n  unlisten('mousemove', onMouseMove, false);\n  mouseDetected = true;\n  // initializeMouseBehavior();\n}\nlisten('mousemove', onMouseMove, false);\n</code></pre>\n\n<p>(Where <code>listen</code> and <code>unlisten</code> delegate to <code>addEventListener</code> or <code>attachEvent</code> as appropriate.)</p>\n\n<p>Hopefully this wouldn't lead to too much visual jank, it would suck if you need massive re-layouts based on mode...</p>\n",
                    "is_accepted": false,
                    "score": 34
                },
                {
                    "body": "<p><a href=\"http://www.tera-wurfl.com/wiki/index.php/Main_Page\" rel=\"nofollow\">Tera-WURFL</a> can tell you the capabilities of the device that is visiting your site <em>by comparing the browser signature</em> against its database. Give it a look, its free!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'd strongly recommend against this approach. Consider touch-screen, desktop-sized devices, and you have a different set of problems to solve.</p>\n\n<p>Please make your app usable without a mouse (i.e. no hover preview).</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Since you're planning to offer a way to switch between the interfaces anyway, would it be feasible to simply ask the user to click a link or a button to \"enter\" the correct version of the application? Then you could remember their preference for future visits. It's not high-tech, but it's 100% reliable :-)</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>the main problem I see here is that most touch devices fire a mouse event along with the coresponding touch one (touchstart -> mousedown, touchmove -> mousemove, etc). \nFor the keyboard only ones, at last for the modern ones, they have a generic browser so you can't even detect the presence of the MouseEvent class.</p>\n\n<p>The less painfull solution here would be, in my opinion, to display a menu at launch (with 'alt' management for the keyboard only users) and maybe storing the choice with localStorage/cookies/serverside or else to keep the salme choice the next time the visitor come.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Why don't you just detect if it has the ability to sense touches and/or to react to mouse movements?</p>\n\n<pre><code>// This will also return false on\n// touch-enabled browsers like Chrome\nfunction has_touch() {\n  return !!('ontouchstart' in window);\n}\n\nfunction has_mouse() {\n  return !!('onmousemove' in window);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Have a look at modenizr one of its features is touch</p>\n\n<p><a href=\"http://modernizr.com/docs/#features-misc\" rel=\"nofollow\">http://modernizr.com/docs/#features-misc</a></p>\n\n<p>While I've not tested fully it seems to work very well </p>\n\n<p>Also this is linked from the modernizr page\n<a href=\"http://www.html5rocks.com/en/mobile/touchandmouse/\" rel=\"nofollow\">http://www.html5rocks.com/en/mobile/touchandmouse/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The main trouble is that you have the following different classes of devices/use cases:</p>\n\n<ol>\n<li>Mouse and keyboad (desktop)</li>\n<li>Touch only (phone/tablet)</li>\n<li>Mouse, keyboard, and touch (touch laptops)</li>\n<li>Touch and keyboard (bluetooth keyboard on tablet)</li>\n<li>Mouse only (Disabled user/browsing preference)</li>\n<li>Keyboard only (Disabled user/browsing preference)</li>\n<li>Touch and mouse  (ie hover events from Galaxy Note 2 pen)</li>\n</ol>\n\n<p>What's worse, is that one can transition from some of these classes to others (plugs in a mouse, connects to keyboard), or a user may APPEAR to be on a normal laptop until they reach out and touch the screen.</p>\n\n<p>You are correct in assuming that the presence of event constructors in the browser is not a good way to move forward (and it is somewhat inconsistent). Additionally, unless you are tracking a very specific event or only trying to rule out a few classes above, using events themselves isn't full proof.</p>\n\n<p>For example, say you've discovered that a user have emitted a real mousemove (not the false one from touch events, see <a href=\"http://www.html5rocks.com/en/mobile/touchandmouse/\">http://www.html5rocks.com/en/mobile/touchandmouse/</a>).</p>\n\n<p>Then what?</p>\n\n<p>You enable hover styles? You add more buttons?</p>\n\n<p>Either way you are increasing time to glass because you have to wait for an event to fire.</p>\n\n<p>But then what happens when your noble user decides wants to unplug his mouse and go full touch.. do you wait for him to touch your now crammed interface, then change it right after he's made the effort to pinpoint your now crowded UI?</p>\n\n<p>In bullet form, quoting stucox at <a href=\"https://github.com/Modernizr/Modernizr/issues/869#issuecomment-15264101\">https://github.com/Modernizr/Modernizr/issues/869#issuecomment-15264101</a></p>\n\n<blockquote>\n  <ul>\n  <li>We want to detect the presence of a mouse</li>\n  <li>Ae probably can't detect before an event is fired</li>\n  <li>As such, what we're detecting is if a mouse has been used in this session \u2014 it won't be  immediately from page load</li>\n  <li>We probably also can't detect that there isn't a mouse \u2014 it'd be undefined until true (I think this      makes more sense than setting\n  it false until proven)</li>\n  <li>And we probably can't detect if a mouse is disconnected mid-session \u2014 that'll be indistinguishable from the user just giving up with their\n  mouse</li>\n  </ul>\n</blockquote>\n\n<p>An aside: the browser DOES know when a user plugs in a mouse/connects to a keyboard, but doesn't expose it to JavaScript.. dang!</p>\n\n<p>This should lead you to the following:</p>\n\n<blockquote>\n  <p><em>Tracking the current capabilities of a given user is complex, unreliable, and of dubious merit</em></p>\n</blockquote>\n\n<p>The idea of progressive enhancement applies quite well here, though. Build an experience that works smoothly no matter the context of the user. Then make assumptions based on browser features/media queries to add functionality that will be relative in the assumed context. Presence of a mouse is just one of the multitudes of ways in which different users on different devices experience your website. Create something with merit at its kernel and don't worry too much about how people click the buttons.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>@SamuelRossille No browsers that I'm aware of expose the existence of (or lack thereof) a mouse, unfortunately.</p>\n\n<p>So, with that being said, we just have to try and do the best we can with our existing option... events.  I know it's not exactly what you're looking for... agreed it is currently far from ideal.</p>\n\n<p>We can do our best to figure out whether a user is using a mouse or touch at any given moment.  Here is a quick and dirty example using jQuery &amp; Knockout:</p>\n\n<pre><code>//namespace\nwindow.ns = {};\n\n// for starters, we'll briefly assume if touch exists, they are using it - default behavior\nns.usingTouch = ko.observable(Modernizr.touch); //using Modernizr here for brevity.  Substitute any touch detection method you desire\n\n// now, let's sort out the mouse\nns.usingMouse = ko.computed(function () {\n    //touch\n    if (ns.usingTouch()) {\n        //first, kill the base mousemove event\n        //I really wish browsers would stop trying to handle this within touch events in the first place\n        window.document.body.addEventListener('mousemove', function (e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }, true);\n\n        //remove mouse class from body\n        $('body').removeClass(\"mouse\");\n\n        //switch off touch listener\n        $(document).off(\".ns-touch\");\n\n        // switch on a mouse listener\n        $(document).on('mousemove.ns-mouse', function (e) {\n            if (Math.abs(window.lastX - e.clientX) &gt; 0 || window.lastY !== e.clientY) {\n                ns.usingTouch(false);  //this will trigger re-evaluation of ns.usingMouse() and result in ns.usingMouse() === true\n            }\n        });\n\n        return false;\n    }\n    //mouse\n    else {\n        //add mouse class to body for styling\n        $('body').addClass(\"mouse\");\n\n        //switch off mouse listener\n        $(document).off(\".ns-mouse\");\n\n        //switch on a touch listener\n        $(document).on('touchstart.ns-touch', function () { ns.usingTouch(true) });\n\n        return true;\n    }\n});\n\n//tests:\n//ns.usingMouse()\n//$('body').hasClass('mouse');\n</code></pre>\n\n<hr>\n\n<p>You can now <strong>bind/subscribe to usingMouse()</strong> &amp; <strong>usingTouch()</strong> and/or style your interface with the <strong>body.mouse</strong> class. The interface will switch back and forth as soon as a mouse cursor is detected and on touchstart.</p>\n\n<p>Hopefully we'll have some better options from the browser vendors soon.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>As others have pointed out, definitively detecting whether or not they have a mouse is unreliable. This can easily change, depending on the device. It's definitely something you cannot do reliably with a boolean true or false, at least on a document scale.</p>\n\n<p>Touch events and mouse events are exclusive. So this can help somewhat on taking different actions. The problem is the touch events are closer to the mouse up/down/move events, and also trigger a click event.</p>\n\n<p>From you question you say you want to have a hover to preview. Beyond that I don't know any other specifics about your interface. I'm <em>assuming</em> that with the lack of a mouse you want a tap to preview, while a click does a different action because of the hover preview.</p>\n\n<p>If that is the case you can take somewhat of a lazy approach to detection:</p>\n\n<p>An onclick event will always be preceded by an onmouseover event with a mouse. So make a note that the mouse is on top of the element that has been clicked.</p>\n\n<p>You could do this with a document-wide onmousemove event. You can use <code>event.target</code> to record which element the mouse is residing on. Then inside your onclick events you can check to see whether or not the mouse is actually over the element being clicked (or a child of the element).</p>\n\n<p>From there you can choose either to rely on the click event for both and take an A or B action depending on the result. The B action could be nothing if some touch devices don't emit a click event (instead you would have to rely on ontouch* events).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't think it's possible to identify touch-only device (to my knowledge of course). The main issue is all mouse and keyboard events are fired by touch devices too.\nSee the following example, both alerts return true for touch devices.</p>\n\n<pre><code>function is_touch_present() {\n  return ('ontouchstart' in window) || ('onmsgesturechange' in window);\n}\n\nfunction is_mouse_present() {\n  return (('onmousedown' in window) &amp;&amp; ('onmouseup' in window) &amp;&amp; ('onmousemove' in window) &amp;&amp; ('onclick' in window) &amp;&amp; ('ondblclick' in window) &amp;&amp; ('onmousemove' in window) &amp;&amp; ('onmouseover' in window) &amp;&amp; ('onmouseout' in window) &amp;&amp; ('oncontextmenu' in window));\n}\n\nalert(\"Touch Present: \" + is_touch_present());\nalert(\"Mouse Present: \" + is_mouse_present());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The best idea in my opinion is the <code>mousemove</code> listener (currently the top answer). I believe that this method needs to be tweaked a bit. It is true that touch-based browsers emulate even the mousemove event, as you can see in <a href=\"http://sitr.us/2011/07/28/how-mobile-safari-emulates-mouse-events.html\" rel=\"nofollow\">this iOS discussion</a>, so we should be a little careful.</p>\n\n<p>It makes sense that touch-based browsers will only emulate this event when the user taps the screen (the user's finger is down). This means we should add a test during our mousemove handler to see which mouse button is down (if any) during the event. If no mouse button is down, we can safely assume a real mouse is present. If a mouse button is down, the test remains inconclusive.</p>\n\n<p>So how would this be implemented? This <a href=\"http://stackoverflow.com/questions/4065992/jquery-detecting-pressed-mouse-button-during-mousemove-event\">question</a> shows that the most reliable method to examine which mouse button is down during a mousemove is to actually listen for 3 events in document level: mousemove, mousedown and mouseup. The up and down will only set a global boolean flag. The move will perform the test. If you have a move and the boolean is false, we can assume a mouse is present. See question for exact code examples.</p>\n\n<p>One final comment.. This test isn't ideal because it can't be performed in load time. Therefore, I would use a progressive enhancement method as previously suggested. By default show a version which does not support the mouse-specific hover interface. If a mouse is discovered, enable this mode in runtime using JS. This should appear as seamless as possible to the user.</p>\n\n<p>In order to support changes in the user's configuration (ie mouse has been disconnected), you can periodically re-test. Although I believe it will be better in this case to simply notify the user about the 2 modes and let users manually switch between them (much like the mobile/desktop choice which can always be reversed).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's only possible to detect if a browser is touch <em>capable</em>. There is no way to know if it actually has a touch screen or a mouse connected.</p>\n\n<p>One can prioritize the use though by listening to touch event instead of mouse event if touch capability is detected.</p>\n\n<p>To detect touch capability cross-browser:</p>\n\n<pre><code>function hasTouch() {\n    return (('ontouchstart' in window) ||       // html5 browsers\n            (navigator.maxTouchPoints &gt; 0) ||   // future IE\n            (navigator.msMaxTouchPoints &gt; 0));  // current IE10\n}\n</code></pre>\n\n<p>Then one can use this to check:</p>\n\n<pre><code>if (!hasTouch()) alert('Sorry, need touch!);\n</code></pre>\n\n<p>or to choose which event to listen to, either:</p>\n\n<pre><code>var eventName = hasTouch() ? 'touchend' : 'click';\nsomeElement.addEventListener(eventName , handlerFunction, false);\n</code></pre>\n\n<p>or use separate approaches for touch vs. non-touch:</p>\n\n<pre><code>if (hasTouch() === true) {\n    someElement.addEventListener('touchend' , touchHandler, false);\n\n} else {\n    someElement.addEventListener('click' , mouseHandler, false);\n\n}\nfunction touchHandler(e) {\n    /// stop event somehow\n    e.stopPropagation();\n    e.preventDefault();\n    window.event.cancelBubble = true;\n    // ...\n    return false; // :-)\n}\nfunction mouseHandler(e) {\n    // sorry, touch only - or - do something useful and non-restrictive for user\n}\n</code></pre>\n\n<p>For mouse one can only detect if the mouse is being used, not if it exists or not. One can setup a global flag to indicate that mouse was detected by usage (similar to an existing answer, but simplified a bit):</p>\n\n<pre><code>var hasMouse = false;\n\nwindow.onmousemove = function() {\n    hasMouse = true;\n}\n</code></pre>\n\n<p>(one cannot include <code>mouseup</code> or <code>mousedown</code> as these event can also be triggered by touch)</p>\n\n<p>Browsers restricts access to low-level system APIs which is needed to be able to detect features such as hardware capabilities of the system it's being used on.</p>\n\n<p>There is the possibility to perhaps write a plugin/extension to access these but via JavaScript and DOM such detection is limited for this purpose and one would have to write a plugin specific for the various OS platforms.</p>\n\n<p>So in conclusion: such detection can only be estimated by a \"good guess\".</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Ran some tests on various PC's, Linux's, iPhone, Android phones and tabs.  Weird that there is no easy bullet-proof solution.  Problem arises when some that have Touch and no mouse still present Touch and Mouse events to application.  Since do want to support mouse-only and touch-only instances, want to process both, but this causes double occurrences of user interactions.  If can know mouse is not present on device, then can know to ignore fake/inserted mouse events.  Tried setting flag if MouseMove is encountered, but some browsers throw fake MouseMove as well as MouseUp and MouseDown.  Tried examining timestamps but figured this was too risky.  Bottom line: I found the browsers that created the fake mouse events always inserted a single MouseMove just prior to the inserted MouseDown.  In 99.99% of my cases, when running on a system that has a real mouse, there are multiple consecutive MouseMove events - at least two.  So, keep track of whether system encounters two consecutive MouseMove events and declare there is no mouse present if this condition is never met.  This is probably too simple, but its working on all my test setups.  Think I'll stick with it until I find a better solution. - Jim W</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I had read and tried everything suggested, without sufficient results. Then I investigated some more, and found this code - <strong><a href=\"https://github.com/matthewhudson/device.js\" rel=\"nofollow\">device.js</a></strong></p>\n\n<p>I'm using in my client's website to detect mouse existence (<code>&lt;html&gt;</code> has <code>desktop</code> class) and it seems pretty good, and for <code>touch</code> support, i just do the regular check <code>'ontouchend' in document</code> and use information from both detections to assume a specific thing I need.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>@Wyatt's answer is great and gives us a lot to think about.</p>\n\n<p>On my case, I chose to listen for the first interaction, to only then set a behavior. So, even if the user has a mouse, I will treat as touch device if first interaction was a touch. </p>\n\n<p>Considering the <a href=\"http://www.html5rocks.com/en/mobile/touchandmouse/#toc-together\">given order in which events are processed</a>:</p>\n\n<ol>\n<li>touchstart</li>\n<li>touchmove</li>\n<li>touchend</li>\n<li>mouseover</li>\n<li>mousemove</li>\n<li>mousedown</li>\n<li>mouseup</li>\n<li>click</li>\n</ol>\n\n<p>We can assume that if mouse event gets triggered before touch, it is a real mouse event, not an emulated one. Example (using jQuery):</p>\n\n<pre><code>$(document).ready(function() {\n    var $body = $('body');\n    var detectMouse = function(e){\n        if (e.type === 'mousemove') {\n            alert('Mouse interaction!');\n        }\n        else if (e.type === 'touchstart') {\n            alert('Touch interaction!');\n        }\n        // remove event bindings, so it only runs once\n        $body.off('mousemove touchstart', detectMouse);\n    }\n    // attach both events to body\n    $body.on('mousemove touchstart', detectMouse);\n});\n</code></pre>\n\n<p>That worked for me</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I'm developing a webapp (not a website with pages of interesting text) with a very different interface for touch (your finger hides the screen when you click) and mouse (relies heavily on hover preview).\nHow can I detect that my user has no mouse to present him the right interface? I plan to leave a switch for people with both mouse and touch (like some notebooks). </p>\n\n<p>The touch event capability in the browser doesn't actually mean the user is using a touch device (for example, Modernizr doesn't cut it).  The code that correctly answers the question should return false if the device has a mouse, true otherwise. For devices with mouse and touch, it should return false (not touch only)</p>\n\n<p>As a side note, my touch interface might also be suitable for keyboard-only devices, so it's more the lack of mouse I'm looking to detect.</p>\n\n<p>To make the need more clear, here is the API that I'm looking to implement:</p>\n\n<pre><code>// Level 1\n\n\n// The current answers provide a way to do that.\nhasTouch();\n\n// Returns true if a mouse is expected.\n// Note: as explained by the OP, this is not !hasTouch()\n// I don't think we have this in the answers already, that why I offer a bounty\nhasMouse();\n\n// Level 2 (I don't think it's possible, but maybe I'm wrong, so why not asking)\n\n// callback is called when the result of \"hasTouch()\" changes.\nlistenHasTouchChanges(callback);\n\n// callback is called when the result of \"hasMouse()\" changes.\nlistenHasMouseChanges(callback);\n</code></pre>\n",
            "last_activity_date": 1409805839,
            "question_id": 7838680,
            "score": 72,
            "tags": [
                "javascript",
                "html5",
                "touch",
                "mouse"
            ],
            "title": "Detecting that the browser has no mouse and is touch-only"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>This is a shameless plug, but might I volunteer a <a href=\"https://github.com/vivin/regula\">framework</a> that I designed? I've built it based on annotations (a la Hibernate Validator). It has support for custom constraints and I feel that it is pretty powerful. <a href=\"http://stackoverflow.com/questions/3472996/javascript-form-validation-framework-request-for-review\">Here</a> is also a Stackoverflow question where I asked for a review of the framework.</p>\n\n<ul>\n<li><strong>Presentation</strong>: With custom validation-constraints, you can bind validation to the onChange element. Also, because Regula supports custom validators, you can have your custom validator update the value of a field (so change <code>5</code> to <code>5.00</code>).</li>\n<li><strong>Side effects</strong>: Regula supports side-effects via custom constraint-validators.</li>\n<li><strong>Groups</strong>: Regula supports validation groups. You can target specific groups for validation. By combining a custom validator and a group, you can control the behavior of the validator so that it validates <em>only</em> when all elements of that group are filled (you would have to perform this check via normal Javascript though).</li>\n<li><strong>Server-side validation</strong>: With custom-constraints, you can make an AJAX call to perform server-side validation. With the way the framework is structured currently, this necessarily has to be a blocking ajax-call. I plan on adding an asynchronous feature in the future.</li>\n<li><strong>Multiplee forms per page</strong>: Regula isn't limited to validating one form per page. It can handle multiple forms (not sure if I understood your requirement correctly - so I might not have answered this part correctly).</li>\n<li><strong>Customizable error display:</strong> Regula doesn't do anything to the UI of the page as far as validation is concerned. When you validate, you get a set of constraint violations that contain error messages and such. It is up to you, how to display them.</li>\n<li><strong>Snappiness:</strong> I haven't performed any benchmarks, so I cannot comment as to my framework's performance in this regard.</li>\n<li><strong>Submit buttons:</strong> This is something I have yet to solve (asynchronous vs. synchronous).</li>\n</ul>\n\n<p>Here are a few examples:</p>\n\n<p>The following shows standard validation, with built-in constraints:</p>\n\n<pre><code>&lt;input id = \"myInput\"\n       name = \"myInput\"\n       type = \"text\"\n       class = \"regula-validation\"\n       data-constraints = '@NotEmpty @IsNumeric @Between(min=1, max=5)' /&gt;\n\njQuery(document).ready(function() {\n    // must call regula.binnd() first. The best place would be in an\n    // onload handler. This function looks for elements with\n    // a class name of \"regula-validation\" and binds the\n    // appropriate constraints to the elements\n\n    regula.bind(); \n\n    jQuery(\"#myForm\").submit(function() {\n        // this function performs the actual validation\n        var validationResults = regula.validate();\n\n        for(var index in validationResults) {\n             var validationResult = validationResults[index];\n             alert(validationResult.message);\n        }\n    });\n});\n</code></pre>\n\n<p>As you can see, you're only working with constraint violations, and so the manner in which you display the error message is entirely up to you.</p>\n\n<p>Here's an example of a custom constraint:</p>\n\n<pre><code>regula.custom({\n   name: \"MustBe42\",\n   defaultMessage: \"The answer must be equal to 42\",\n   validator: function() {\n      return this.value == 42;\n   }\n});\n</code></pre>\n\n<p>And its use:</p>\n\n<pre><code>&lt;input id = \"theAnswerToLifeTheUniverseAndEverything\" \n       name = \"theAnswerToLifeTheUniverseAndEverything\" \n       value = \"\"\n       class = \"regula-validation\"\n       data-constraints = \"@MustBe42\" /&gt;\n</code></pre>\n\n<p>Since the validator is a Javascript function, you can have it do anything (so this addresses your question about side effects).</p>\n\n<p>Here is an example of another constraint that accepts parameters:</p>\n\n<pre><code>regula.custom({\n   name: \"DivisibleBy\",\n   defaultMessage: \"{label} must be divisible by {divisor}\",\n   params: [\"divisor\"],\n   validator: function(params) {\n      var divisor = params[\"divisor\"];\n      return (this.value % divisor) == 0;\n   }\n});\n</code></pre>\n\n<p>And usage:</p>\n\n<pre><code>&lt;input id = \"number\" \n       name = \"number\" \n       value = \"\"\n       class = \"regula-validation\"\n       data-constraints = \"@DivisibleBy(divisor=3, label='The Number')\" /&gt;\n</code></pre>\n\n<p>Here is an example of using validation groups:</p>\n\n<pre><code>&lt;input id = \"score\"\n       name = \"score\"\n       type = \"text\"\n       class = \"regula-validation\"\n       data-constraints = '@IsNumeric(label=\"Score\", \n                                      message=\"{label} needs to be a number!\"\n                                      groups=[FirstGroup, SecondGroup, ThirdGroup]' /&gt;\n\n&lt;input id = \"age\"\n       name = \"age\"\n       type = \"text\"\n       class = \"regula-validation\"\n       data-constraints = '@IsNumeric(label=\"Age\", \n                                      message=\"{label} needs to be a number!\"\n                                      groups=[SecondGroup]' /&gt;\n\n&lt;input id = \"name\"\n       name = \"name\"\n       type = \"text\"\n       class = \"regula-validation\"\n       data-constraints = '@NotEmpty(label=\"Name\", \n                                     message=\"{label} cannot be empty!\"\n                                     groups=[FirstGroup]' /&gt;\n</code></pre>\n\n<p>And a snippet that validates only <code>FirstGroup</code> (so only <code>score</code> and <code>name</code> are validated):</p>\n\n<pre><code>var constraintViolations = regula.validate({groups: [regula.Group.FirstGroup]});\nvar messages = \"\";\n\nfor(var index in constraintViolations) {\n      var constraintViolation = constraintViolations[index];\n      messages += constraintViolation.message + \"\\n\";\n}\n\nif(messages != \"\") {\n   alert(messages);\n}\n</code></pre>\n\n<p>If you're planning on trying it out, I recommend downloading version <strong>1.1.1</strong>. The current documentation matches that version specifically. In <strong>1.2.1</strong> I added support for compound constraints, but I haven't updated my documentation to reflect that.</p>\n\n<p>I understand if this doesn't address all your concerns, or if this is not what you are looking for. I thought I'd just put it out there. Also, if you do check it out then I will make sure to update the documentation to reflect version <strong>1.2.1</strong>. I've been busy with school and work and so I haven't had the time to do that.</p>\n\n<p><strong>UPDATE #1</strong></p>\n\n<p><a href=\"http://stackoverflow.com/users/75525/sohnee\">Sohnee</a> mentioned client-side validation. I'm actually working on an integration between Regula and Spring 3. Hopefully I should be able to release it sometime soon (depending again, on work and school). The integration works by translating Hibernate validation-constraints to Regula validation-constraints. This way, you only have to write validation code once (mostly). For custom constraints though, you will still have to write code on the Javascript side (the custom validator). But once you annotate code on the server-side with Hibernate validation-constraints, you don't need to do anything on the client-side; those constraints automatically get applied to form elements on the client-side.</p>\n\n<p><a href=\"http://stackoverflow.com/users/357693/matthew-abbott\">Matthew Abbott</a> has also been able to <a href=\"http://www.fidelitydesign.net/?p=180\">integrate Regula with ASP.NET MVC</a>.</p>\n\n<p><strong>UPDATE #2</strong></p>\n\n<p>I've got a demo webapp (mavenized) <a href=\"https://github.com/vivin/regula-spring\">on github</a> that showcases the integration between Regula and Spring 3.0.x Web MVC using Hibernate Validator. It's not really documented or anything, it's more proof-of-concept. I plan to add some documentation to the github page about the integration and how it works.</p>\n\n<p><strong>UPDATE #3</strong></p>\n\n<p>I've updated the documentation on the <a href=\"https://github.com/vivin/regula/wiki\">wiki</a>, and it now corresponds to the latest version, <strong>1.2.2</strong> (I made a little bugfix, which is why it is <strong>1.2.2</strong> now).</p>\n",
                    "is_accepted": false,
                    "score": 47
                },
                {
                    "body": "<p>I have used this <a href=\"https://github.com/posabsolute/jQuery-Validation-Engine\">jQuery formValidator</a> several times in conjunction with a whole bunch of different environments. I hope it helps as I've rarely spent more than an hour setting it up.</p>\n\n<p>Cheers!</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Server-side validation rocks.</p>\n\n<p>Supply the results of such validation via an AJAX request if you like... or use a server-side framework that will also add client-side validation - but don't write it twice.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would say the <a href=\"http://docs.jquery.com/Plugins/validation\">jQuery Validation</a> plugin does a good job.  I have it combined with the <a href=\"http://plugins.jquery.com/project/metadata\">metadata</a> plugin to pass the server-side validation parameters to the client.  I've also wrapped a few key points to all forms so that I can use a common pattern for validation, and a few exceptional/custom states.  This includes a custom alert message and display.</p>\n\n<p>It does not do everything you want out of the box, but it is the best option and the best default behavior I've seen.  Again, I do use the metadata (attribute \"data-meta\") with it.  And it can be bent to your will.  I'm also using metadata for control binding to input elements client-side.  This splits my client-side logic from server-side, but easier in the long run over trying to inject js from the server-side logic.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Answering this myself since someone on our team noticed <strong><a href=\"http://flowplayer.org/tools/validator/index.html\" rel=\"nofollow\">Validator from jQuery Tools</a></strong>  !</p>\n\n<ul>\n<li><strong>Presentation</strong> - Supports HTML5 input fields. <code>pattern</code> fields make sure the user can only input test in a certain pattern. </li>\n<li><strong>Side effects</strong> - Triggers events on the form and on individual fields: <code>onFail</code> and <code>onSuccess</code></li>\n<li><strong>Widget-driven elements</strong> - \"Custom input types\" are encouraged. The basic demo even includes a natural numbers-old \"age\" field.</li>\n<li><strong>Groups</strong> - Write a \"function matcher\" whose sole purpose is to filter which fields are to be validated.</li>\n<li><strong>Server-side validation</strong> - Does it and does it intelligently \u2014 depends on your validator calling a callback (so it's async-friendly) instead of a return value.</li>\n<li><strong>Multiple forms per page</strong> - jQuery Tools seems to be very well built and this shouldn't be a problem.</li>\n<li><strong>Customizable error display</strong> - Errors next to fields? All in one place? No problem. Still not good enough? Bind events on failure. Even uses tooltips by default.</li>\n<li><strong>Snappiness</strong> - Demos are very snappy</li>\n<li><strong>Submit buttons</strong> - No problem.</li>\n</ul>\n\n<p><strong>Update:</strong> Yep, just reimplemented a chunk of our site with jQuery Tools' validator tooltips. Fantastic!</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://parsleyjs.org/\" rel=\"nofollow\"><strong>Parsley.js</strong></a> looks to be a nice and popular choice at time of writing (august 2013).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Go with jQuery Validation plugins. It never failed me so far</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Our web forms are really complex. What's a great solution for extensible form validation, preferably one that works with jQuery?</p>\n\n<p><em>Background:</em></p>\n\n<p>Our site has a bit of Ajax, but the real focus is on user experience through about 20 multi-page forms or \"wizards.\" These forms are complicated.</p>\n\n<ul>\n<li><strong>Presentation:</strong> Some fields are floats or ints. Validation means stripping non-decimal characters, but we also want to make sure that, if a user enters <code>5</code> into a price field, the field is updated to <code>5.00</code>.</li>\n<li><strong>Side effects:</strong> Some fields have side effects when updated. E.g., updating the price or quantity of an item needs to update a subtotal field.</li>\n<li><strong>Widget-driven elements:</strong> Some fields are hidden and have values populated by widgets. E.g., a map widget lets you point to a location and a hidden field is updated with latitude-longitude coordinates, but the location must be within a certain region.</li>\n<li><strong>Groups:</strong> Some fields are groups, like address/city/state/zip, and should only be validated when all of the fields have bee populated.</li>\n<li><strong>Server-side validation:</strong> Validation of some fields requires back-end checking via Ajax requests</li>\n<li><strong>Multiple forms per page:</strong> Sometimes a user needs to fill out one form before a dialog opens with another form. A framework has to be more versatile than binding to <code>onSubmit</code> \u2014 we sometimes post multiple forms in order from the same page using Ajax. (E.g., we let users sign up and create a widget in one swoop but, due to legacy systems, that flow requires two POST requests.) </li>\n<li><strong>Customizable error display:</strong> Sometimes errors appear above fields, sometimes the field style changes, and our new designs call for tooltip-like popups (ala <a href=\"http://craigsworks.com/projects/qtip/\">qTip</a>) for some errors.</li>\n<li><strong>Snappiness:</strong> User experience is key and tactile feedback is important. Any solution</li>\n<li><strong>Submit buttons:</strong> Clicking the submit button needs to validate everything and then show a response \u2014 but since some of the validation happens asynchronously.</li>\n</ul>\n\n<p>We're currently using the <a href=\"http://docs.jquery.com/Plugins/validation\">jQuery Validation</a> library but our forms appear to be outgrowing its capability. I've been looking at things like <a href=\"http://www.angularjs.org/Main_Page\">&lt;angular/&gt;</a>, <a href=\"http://knockoutjs.com/\">Knockout</a> and <a href=\"http://documentcloud.github.com/backbone/\">Backbone.js</a>, but I'm worried that they're too heavyweight or that they would require us to rewrite our frontend. </p>\n\n<p>(This should be a community wiki.)</p>\n",
            "last_activity_date": 1400588191,
            "question_id": 4751780,
            "score": 44,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "validation",
                "forms"
            ],
            "title": "Best JavaScript solution for client-side form validation and interaction?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Ok, so it turns out that the default implementation of the <code>$.getScript()</code> function works differently depending on whether the referenced script file is on the same domain or not.  External references such as:</p>\n\n<pre><code>$.getScript(\"http://www.someothersite.com/script.js\")\n</code></pre>\n\n<p>will cause jQuery to create an external script reference, which can be debugged with no problems.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://www.someothersite.com/script.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>However, if you reference a local script file such as any of the following:</p>\n\n<pre><code>$.getScript(\"http://www.mysite.com/script.js\")\n$.getScript(\"script.js\")\n$.getScript(\"/Scripts/script.js\");\n</code></pre>\n\n<p>then jQuery will download the script content asynchronously and then add it as inline content:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;{your script here}&lt;/script&gt;\n</code></pre>\n\n<p>This latter approach does <em>not</em> work with any debugger that I tested (Visual Studio.net, Firebug, IE8 Debugger).</p>\n\n<p>The workaround is to override the <code>$.getScript()</code> function so that it always creates an external reference rather than inline content.  Here is the script to do that.  I have tested this in Firefox, Opera, Safari, and IE 8.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n// Replace the normal jQuery getScript function with one that supports\n// debugging and which references the script files as external resources\n// rather than inline.\njQuery.extend({\n   getScript: function(url, callback) {\n      var head = document.getElementsByTagName(\"head\")[0];\n      var script = document.createElement(\"script\");\n      script.src = url;\n\n      // Handle Script loading\n      {\n         var done = false;\n\n         // Attach handlers for all browsers\n         script.onload = script.onreadystatechange = function(){\n            if ( !done &amp;&amp; (!this.readyState ||\n                  this.readyState == \"loaded\" || this.readyState == \"complete\") ) {\n               done = true;\n               if (callback)\n                  callback();\n\n               // Handle memory leak in IE\n               script.onload = script.onreadystatechange = null;\n            }\n         };\n      }\n\n      head.appendChild(script);\n\n      // We handle everything using the script element injection\n      return undefined;\n   },\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 59
                },
                {
                    "body": "<p>Try this,</p>\n\n<pre><code>jQuery.extend({\ngetScript: function(url, callback) {\n    var head = document.getElementsByTagName(\"head\")[0];\n\n    var ext = url.replace(/.*\\.(\\w+)$/, \"$1\");\n\n    if(ext == 'js'){\n        var script = document.createElement(\"script\");\n        script.src = url;\n        script.type = 'text/javascript';\n    } else if(ext == 'css'){\n        var script = document.createElement(\"link\");\n        script.href = url;\n        script.type = 'text/css';\n        script.rel = 'stylesheet';\n    } else {\n        console.log(\"\u041d\u0435\u0438\u0437\u0432\u0435\u0442\u0441\u043d\u043e\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u043e\u0433\u043e \u0441\u043a\u0440\u0438\u043f\u0442\u0430\");\n        return false;\n    }\n\n\n\n    // Handle Script loading\n    {\n        var done = false;\n\n        // Attach handlers for all browsers\n        script.onload = script.onreadystatechange = function(){\n            if ( !done &amp;&amp; (!this.readyState ||\n            this.readyState == \"loaded\" || this.readyState == \"complete\") ) {\n                done = true;\n                if (callback)\n                callback();\n\n                // Handle memory leak in IE\n                script.onload = script.onreadystatechange = null;\n            }\n        };\n    }\n\n    head.appendChild(script);\n\n    // We handle everything using the script element injection\n    return undefined;\n\n} \n   });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>With JQuery 1.6(maybe 1.5) you could switch to not using getScript, but using jQuery.ajax(). Then set crossDomain:true and you'll get the same effect.</p>\n\n<p>The error callback will not work. So you might as well not set it up like below.</p>\n\n<p>However, I do setup a timer and clear it with the success. So say after 10 seconds if I don't hear anything I assume the file was bad.</p>\n\n<pre><code>        jQuery.ajax({\n            crossDomain: true,\n            dataType: \"script\",\n            url: url,\n            success: function(){\n                _success(_slot)\n            },\n            error: function(){\n                _fail(_slot);\n            }\n        })\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>For those who would like to debug scripts and use them with $.when (James Messinger's answer doesn't work well with $.when) I suggest to use this code:</p>\n\n<pre><code>var loadScript = function (path) {\n  var result = $.Deferred(),\n  script = document.createElement(\"script\");\n  script.async = \"async\";\n  script.type = \"text/javascript\";\n  script.src = path;\n  script.onload = script.onreadystatechange = function (_, isAbort) {\n      if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n         if (isAbort)\n             result.reject();\n         else\n            result.resolve();\n    }\n  };\n  script.onerror = function () { result.reject(); };\n  $(\"head\")[0].appendChild(script);\n  return result.promise();\n};\n</code></pre>\n\n<p>All credits and glory go to Benjamin Dumke-von der Ehe and his article: <a href=\"http://balpha.de/2011/10/jquery-script-insertion-and-its-consequences-for-debugging/\">jQuery script insertion and its consequences for debugging</a></p>\n\n<p><strong>This works well with $.when and the script is totally visible and debuggable.</strong>\nThanks.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have a page that dynamically adds script references via jQuery's <code>$.getScript</code> function.  The scripts load and execute fine, so I know the references are correct.  However, when I add a \"debugger\" statement to any of the scripts to allow me to step through the code in a debugger (such as VS.Net, Firebug, etc.), it doesn't work.  It appears that something about the way jQuery loads the scripts is preventing debuggers from finding the files.</p>\n\n<p>Does anybody have a work-around for this?</p>\n",
            "last_activity_date": 1391804855,
            "question_id": 690781,
            "score": 43,
            "tags": [
                "javascript",
                "jquery",
                "visual-studio",
                "debugging"
            ],
            "title": "Debugging scripts added via jQuery getScript function"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>Have you tried Raphael's <a href=\"http://raphaeljs.com/reference.html#animateAlong\" rel=\"nofollow\">animateAlong</a>? You can see it in action <a href=\"http://raphaeljs.com/gear.html\" rel=\"nofollow\">on a demo page</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Alright, here's my thoughts on this\u2026 The solution's too far from ideal.</p>\n\n<p>To gradually show the path mean we should show it, like, dot by dot. And vector paths consist not of dots, but of curves, so it appears to me there's no \u2018natural\u2019 way to gradually \u2018draw\u2019 the path in vector graphics. (Though I'm fairly new to this and may be mistaken.)</p>\n\n<p>The only way would be to somehow convert a path to a number of dots and show them one by one.</p>\n\n<p>Currently my workaround is to draw a path, make it invisible, break it into a number of subpaths, and show that subpaths one by one.</p>\n\n<p>This isn't hard to do with Raphael, but it's not elegant either, and quite slow on a large paths. Not accepting my answer, hoping there's a better way\u2026</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Unfortunately, as you seem to agree, you probably can't do this elegantly in Raphael.</p>\n\n<p><em>However</em>, if, by some stroke of <code>%deity%</code> you don't need to support IE for this particular feature, you could forgo the Raphael API and <a href=\"http://keith-wood.name/svg.html\" rel=\"nofollow\">manipulate the SVG directly</a>.  Then, perhaps, you could rig a <a href=\"http://www.w3.org/TR/SVG/masking.html#Masking\" rel=\"nofollow\">mask</a> to ride along the path and reveal the line at a natural pace. </p>\n\n<p>You could degrade gracefully in IE to simply show the path using Raphael, without animation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Eureka!  (Maybe - assuming you're comfortable stepping outside the friendly realm of Raphael into pure SVG land...)  </p>\n\n<p>You can use SVG <strong>keyTimes</strong> and <strong>keySplines</strong>.  </p>\n\n<p>Here's a working example:</p>\n\n<p><a href=\"http://www.carto.net/svg/samples/animated_bustrack.shtml\">http://www.carto.net/svg/samples/animated_bustrack.shtml</a></p>\n\n<p>...and here's some potentially useful explanation:</p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/ms533119(v=vs.85).aspx\">http://msdn.microsoft.com/en-us/library/ms533119(v=vs.85).aspx</a></p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Using \"<a href=\"http://www.w3.org/TR/2003/REC-SVG11-20030114/paths.html#PathLengthAttribute\">pathLength</a>\" attribute we can set virtual length to the path. From then we can use this virtual length in \"stroke-dasharray\".\nSo if we set \"pathLength\" to 100 units we then can set \"stroke-dasharray\" to \"50,50\" wich wuld be exactly 50%, 50% of the path!</p>\n\n<p>There is one problem with this approach: the only browser that supports this attribute is Opera 11.</p>\n\n<p><a href=\"https://bug643419.bugzilla.mozilla.org/attachment.cgi?id=520723\">Here</a> is example of smooth curve drawind animation without javascript or hardcoded length.(Works properly only in Opera 11)</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>i was just doing exactly this. The first thing i tried was Anton's solution but the performance sucks.</p>\n\n<p>In the end the easiest way to get the result i wanted was to use the alternative \"keyframe\" syntax for the animate function. </p>\n\n<p>draw the final path invisibly, then generate a whole bunch of key frames by using getSubpath in a loop.</p>\n\n<p>create a new path that is visible and equals the first keyframe.</p>\n\n<p>then do something like:</p>\n\n<p>path.anmimate({ keyFrameObject, timeframe });</p>\n\n<p>you shouldn't need a keyframe for every pixel that you want to draw. After playing around with the parameters, i found that a value of 100px per keyframe worked for the complexity/size of what i was trying to \"draw\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe someone is searching for an answer, like me for two days now:</p>\n\n<pre><code>// Draw a path and hide it:\nvar root = paper.path('M0 50L30 50Q100 100 50 50').hide();\nvar length = root.getTotalLength();\n\n// Setup your animation (in my case jQuery):\nelement.animate({ 'to': 1 }, {\n    duration: 500,\n    step: function(pos, fx) {\n        var offset = length * fx.pos;\n        var subpath = root.getSubpath(0, offset);\n        paper.clear();\n        paper.path(subpath);\n    }\n});\n</code></pre>\n\n<p>That did the trick for me, only by using RaphaelJS methods.</p>\n\n<p>Here is a jsFiddle example as requested in the comments, <a href=\"http://jsfiddle.net/eA8bj/\">http://jsfiddle.net/eA8bj/</a> </p>\n",
                    "is_accepted": false,
                    "score": 25
                },
                {
                    "body": "<p>Anton &amp; Peteorpeter's solution sadly breaks down in Chrome when paths get complicated. It's fine for the bus map in that linked demo. Check out this animated \"flower petals\" jsfiddle I created, which draws correctly in FF10 and Safari5, but flickers uncontrollably in Chrome:</p>\n\n<p><a href=\"http://jsfiddle.net/VjMvz/\" rel=\"nofollow\">http://jsfiddle.net/VjMvz/</a></p>\n\n<p>(This is all HTML and inline SVG, no javascript.)</p>\n\n<p>I'm still looking for a non-Flash solution for this. AnimateAlong obviously won't cut it for what I'm doing. Raphael.js could work, though it threatens to turn into callback spaghetti really fast.</p>\n\n<p>Davidenke, can you post a working jsfiddle with your solution? I just can't get it to work. I'm getting an error in Chrome 18 that nodes that are set to \"display: none\" with your \".hide\" have no method 'getTotalLength'.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'd like to offer an alternative, Raphael+JS-only solution that I have made substantial use of in my own work.  It has several advantages over davidenke's solution:</p>\n\n<ol>\n<li>Doesn't clear the paper with each cycle, allowing the animated path to coexist nicely with other elements; </li>\n<li>Reuses a single path with Raphael's own progressive animation, making for smoother animations;</li>\n<li>Substantially less resource intensive.</li>\n</ol>\n\n<p>Here's the method (which could quite easily be retooled into an extension):</p>\n\n<pre><code>function drawpath( canvas, pathstr, duration, attr, callback )\n{\n    var guide_path = canvas.path( pathstr ).attr( { stroke: \"none\", fill: \"none\" } );\n    var path = canvas.path( guide_path.getSubpath( 0, 1 ) ).attr( attr );\n    var total_length = guide_path.getTotalLength( guide_path );\n    var last_point = guide_path.getPointAtLength( 0 );\n    var start_time = new Date().getTime();\n    var interval_length = 50;\n    var result = path;        \n\n    var interval_id = setInterval( function()\n    {\n        var elapsed_time = new Date().getTime() - start_time;\n        var this_length = elapsed_time / duration * total_length;\n        var subpathstr = guide_path.getSubpath( 0, this_length );            \n        attr.path = subpathstr;\n\n        path.animate( attr, interval_length );\n        if ( elapsed_time &gt;= duration )\n        {\n            clearInterval( interval_id );\n            if ( callback != undefined ) callback();\n                guide_path.remove();\n        }                                       \n    }, interval_length );  \n    return result;\n}\n</code></pre>\n\n<p>And here are two samples of its usage on my site: one for <a href=\"http://voidblossom.com/tests/pathTransform.php\">Path Transformation</a>, and the other for <a href=\"http://voidblossom.com/tests/cursive.php\">Progressive Lettering</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Just an update to this, you could try <a href=\"http://lazylinepainter.info/\" rel=\"nofollow\">Lazy Line Painter</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><strong>How to animate a vector path like it's being drawn, progressively?</strong> In other words, slowly show the path pixel by pixel.</p>\n\n<p>I'm using <code>Rapha\u00ebl.js</code>, <em>but</em> if your answer is not library specific\u2014like maybe there's some general programming pattern for doing that kind of thing (I'm fairly new to vector animation)\u2014it's welcome!</p>\n\n<hr>\n\n<p>It's easy to do with straight paths, as easy as an example on <a href=\"http://irunmywebsite.com/raphael/additionalhelp.php?q=animate\">that page</a>::</p>\n\n<pre><code>path(\"M114 253\").animate({path: \"M114 253 L 234 253\"});\n</code></pre>\n\n<p>But try to change code on that page, say, this way::</p>\n\n<pre><code>path(\"M114 26\").animate({path: \"M114 26 C 24 23 234 253 234 253\"});\n</code></pre>\n\n<p>And you'll see what I mean. Path is certainly animated from it initial state (point \"M114 26\") to the end state (curve \"C 24 23 234 253 234 253\" starting on point \"M114 26\"), but not in a way specified in question, not like it's being drawn.</p>\n\n<p>I don't see how <code>animateAlong</code> can do that. It can animate an object along a path, but how can I make this path to gradually show itself while object is being animated along it?</p>\n\n<hr>\n\n<h2>The solution?</h2>\n\n<p>(Via <a href=\"http://stackoverflow.com/questions/4631019/how-to-draw-a-vector-path-progressively-raphael-js/5073832#5073832\">peteorpeter's answer</a>.)</p>\n\n<p>Seems like currently the best way to do it is via 'fake' dashes using raw SVG. For the explanation see <a href=\"http://www.carto.net/svg/samples/animated_bustrack.shtml\">this demo</a> or <a href=\"http://pilat.free.fr/svgopen/pdf/open_workshop.pdf\">this document</a>, page 4.</p>\n\n<blockquote>\n  <h3>How produce progressive drawing?</h3>\n  \n  <p>We have to use <code>stroke-dasharray</code> and <code>stroke-dashoffset</code> and know length of curve to draw.\n  This code draw nothing on screen for circle, ellipse, polyline, polygone or path:</p>\n\n<pre><code>&lt;[element] style=\"stroke-dasharray:[curve_length],[curve_length]; stroke-dashoffset:[curve_length]\"/&gt;\n</code></pre>\n  \n  <p>If in animate element stroke-dashoffset decrease to 0, we get progressive drawing of curve.</p>\n\n<pre><code>&lt;circle cx=\"200\" cy=\"200\" r=\"115\"\n    style=\"fill:none; stroke:blue; stroke-dasharray:723,723; stroke-dashoffset:723\"&gt;\n    &lt;animate begin=\"0\" attributeName=\"stroke-dashoffset\"\n        from=\"723\" to=\"0\" dur=\"5s\" fill=\"freeze\"/&gt;\n&lt;/circle&gt;\n</code></pre>\n</blockquote>\n\n<p>If you know a better way, please leave an answer.</p>\n\n<hr>\n\n<p><strong>Update</strong> (26 Apr. 2012): Found an example that illustrates the idea well, see <a href=\"http://www.jasondavies.com/animated-bezier/\">Animated B\u00e9zier Curves</a>.</p>\n",
            "last_activity_date": 1375460917,
            "question_id": 4631019,
            "score": 29,
            "tags": [
                "javascript",
                "animation",
                "vector",
                "svg",
                "bezier-curve"
            ],
            "title": "How to draw a vector path progressively? (Raphael.js)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Yeah, use <code>.match</code>, rather than <code>.search</code>. The result from the <code>.match</code> call will return the actual string that was matched itself, but it can still be used as a boolean value.</p>\n\n<pre><code>var string = \"Stackoverflow is the BEST\";\nvar result = string.match(/best/i);\n// result == 'BEST';\n\nif (result){\n    alert('Matched');\n}\n</code></pre>\n\n<p>Using a regular expression like that is probably the tidiest and most obvious way to do that in JavaScript, but bear in mind it <em>is</em> a regular expression, and thus can contain regex metacharacters. If you want to take the string from elsewhere (eg, user input), or if you want to avoid having to escape a lot of metacharacters, then you're probably best using <code>indexOf</code> like this:</p>\n\n<pre><code>matchString = 'best';\n// If the match string is coming from user input you could do\n// matchString = userInput.toLowerCase() here.\n\nif (string.toLowerCase().indexOf(matchString) != -1){\n    alert('Matched');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 151
                },
                {
                    "body": "<p>Replace</p>\n\n<pre><code>var result= string.search(/searchstring/i);\n</code></pre>\n\n<p>with</p>\n\n<pre><code>var result= string.search(new RegExp(searchstring, \"i\"));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 55
                },
                {
                    "body": "<p>If you're just searching for a string rather than a more complicated regular expression, you can use indexOf() - but remember to lowercase both strings first because indexOf is case sensitive:</p>\n\n<pre><code>var string=\"Stackoverflow is the BEST\"; \nvar searchstring=\"best\";\n\n// lowercase both strings\nvar lcString=string.toLowerCase();\nvar lcSearchString=searchstring.toLowerCase();\n\nvar result = lcString.indexOf(lcSearchString)&gt;=0;\nalert(result);\n</code></pre>\n\n<p>Or in a single line:</p>\n\n<pre><code>var result = string.toLowerCase().indexOf(searchstring.toLowerCase())&gt;=0;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 19
                },
                {
                    "body": "<p>If you are concerned about the \"unterminated character class\" case, removing all non-alphanumeric chars would be helpful:</p>\n\n<pre>searchstring = searchstring.replace(/[^a-zA-Z 0-9]+/g,'');</pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>just use string.toLowerCase() on both the source and the search string , if you want a global regex search.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I noticed that if the user enters a string of text but leaves the input without selecting any of the autocomplete options no value is set in the hidden input, even if the string coincides with one in the array.\nSo, with help of the other answers I made this:</p>\n\n<pre><code>var $local_source = [{\n        value: 1,\n        label: \"c++\"\n    }, {\n        value: 2,\n        label: \"java\"\n    }, {\n        value: 3,\n        label: \"php\"\n    }, {\n        value: 4,\n        label: \"coldfusion\"\n    }, {\n        value: 5,\n        label: \"javascript\"\n    }, {\n        value: 6,\n        label: \"asp\"\n    }, {\n        value: 7,\n        label: \"ruby\"\n    }];\n    $('#search-fld').autocomplete({\n        source: $local_source,\n        select: function (event, ui) {\n            $(\"#search-fld\").val(ui.item.label); // display the selected text\n            $(\"#search-fldID\").val(ui.item.value); // save selected id to hidden input\n            return false;\n        },\n        change: function( event, ui ) {\n\n            var isInArray = false;\n\n            $local_source.forEach(function(element, index){\n\n                if ($(\"#search-fld\").val().toUpperCase() == element.label.toUpperCase()) {\n                    isInArray = true;\n                    $(\"#search-fld\").val(element.label); // display the selected text\n                    $(\"#search-fldID\").val(element.value); // save selected id to hidden input\n                    console.log('inarray: '+isInArray+' label: '+element.label+' value: '+element.value);\n                };\n\n            });\n\n            if(!isInArray){\n\n                $(\"#search-fld\").val(''); // display the selected text\n                $( \"#search-fldID\" ).val( ui.item? ui.item.value : 0 );\n\n            }\n        } \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to get a case-insensitive search with two strings in JavaScript working.</p>\n\n<p>Normally it would be like this:</p>\n\n<pre><code>var string=\"Stackoverflow is the BEST\";\nvar result= string.search(/best/i);\nalert(result);\n</code></pre>\n\n<p>The <code>/i</code> flag would be for case-insensitive.</p>\n\n<p>But I need to search for a second string; without the flag it works perfect:</p>\n\n<pre><code>var string=\"Stackoverflow is the BEST\";\nvar searchstring=\"best\";\nvar result= string.search(searchstring);\nalert(result);\n</code></pre>\n\n<p>If I add the <code>/i</code> flag to the above example it would search for searchstring and not for what is in the variable \"searchstring\" (next example not working):</p>\n\n<pre><code>var string=\"Stackoverflow is the BEST\";\nvar searchstring=\"best\";\nvar result= string.search(/searchstring/i);\nalert(result);\n</code></pre>\n\n<p>How can I achieve this?</p>\n",
            "last_activity_date": 1417610887,
            "question_id": 177719,
            "score": 100,
            "tags": [
                "javascript",
                "search",
                "string-comparison",
                "case-insensitive"
            ],
            "title": "JavaScript: case-insensitive search"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Change to the <code>touchstart</code> event instead of <code>touchmove</code>.  Under <a href=\"http://developer.apple.com/safari/library/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html#//apple_ref/doc/uid/TP40006511-SW7\">One Finger Events</a> it says that no events are sent during a pan, so <code>touchmove</code> may be too late.</p>\n\n<p>I added the listener to document, not body.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>document.ontouchstart = function(e){ \n    e.preventDefault(); \n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>The page has to be launched from the Home screen for the meta tag to work.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This should work. No more gray areas at the top or bottom:)</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n   function blockMove() {\n      event.preventDefault() ;\n}\n&lt;/script&gt;\n\n&lt;body ontouchmove=\"blockMove()\"&gt;\n</code></pre>\n\n<p>But this also disables any scrollable areas. If you want to keep your scrollable areas and still remove the rubber band effect at the top and bottom, see here: <a href=\"https://github.com/joelambert/ScrollFix\" rel=\"nofollow\">https://github.com/joelambert/ScrollFix</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>If you are using jquery 1.7+, this works well:</p>\n\n<pre><code>$(\"donotscrollme\").on(\"touchmove\", false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<pre><code>document.ontouchmove = function(e){ \n    e.preventDefault(); \n}\n</code></pre>\n\n<p>is actually the best choice i found out it allows you to still be able to tap on input fields as well as drag things using jQuery UI draggable but it stops the page from scrolling.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Disable: </p>\n\n<pre><code>document.ontouchstart = function(e){ e.preventDefault(); }\n</code></pre>\n\n<p>Enable:</p>\n\n<pre><code>document.ontouchstart = function(e){ return true; }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use TouchSwipe plugin for this:</p>\n\n<h3>Codepen</h3>\n\n<p><a href=\"http://codepen.io/hayatbiralem/pen/EFamg\" rel=\"nofollow\">http://codepen.io/hayatbiralem/pen/EFamg</a></p>\n\n<h3>Code Sample</h3>\n\n<pre><code>$(\".fancybox\").fancybox({\n  closeClick: false,\n  helpers: {\n    overlay: {\n    closeClick: false\n    }\n  },\n  afterShow: function () {\n    $(document).swipe( {\n      //Generic swipe handler for all directions\n      swipe:function(event, direction, distance, duration, fingerCount) {\n        switch(direction){\n          case 'left':\n            $.fancybox.next();\n            break;\n          case 'right':\n            $.fancybox.prev();\n            break;\n        }\n      },\n      //default is 75px\n      threshold: 25\n    });\n  },\n  afterClose: function(){\n    $(document).swipe(\"destroy\");\n  }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>document.addEventListener('touchstart', function (e) {\n    e.preventDefault();\n});\n</code></pre>\n\n<p>Do not use the <code>ontouchmove</code> property to register the event handler as you are running at risk of overwriting an existing event handler(s). Use <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener\" rel=\"nofollow\">addEventListener</a> instead (see the note about IE on the MDN page).</p>\n\n<p>Beware that preventing default for the <code>touchstart</code> event on the <code>window</code> or <code>document</code> will disable scrolling of the descending areas.</p>\n\n<p>To prevent the scrolling of the document but leave all the other events intact prevent default for the first <code>touchmove</code> event following <code>touchstart</code>:</p>\n\n<pre><code>var firstMove;\n\nwindow.addEventListener('touchstart', function (e) {\n    firstMove = true;\n});\n\nwindow.addEventListener('touchmove', function (e) {\n    if (firstMove) {\n        e.preventDefault();\n\n        firstMove = false;\n    }\n});\n</code></pre>\n\n<p>The reason this works is that mobile Safari is using the first move to determine if body of the document is being scrolled. I have realised this while devising a more sophisticated solution.</p>\n\n<p>In case this would ever stop working, the more sophisticated solution is to inspect the <code>touchTarget</code> element and its parents and make a map of directions that can be scrolled to. Then use the first <code>touchmove</code> event to detect the scroll direction and see if it is going to scroll the document or the target element (or either of the target element parents):</p>\n\n<pre><code>var touchTarget,\n    touchScreenX,\n    touchScreenY,\n    conditionParentUntilTrue,\n    disableScroll;\n\nconditionParentUntilTrue = function (element, condition) {\n    var outcome;\n\n    if (element === document.body) {\n        return false;\n    }\n\n    outcome = condition(element);\n\n    if (outcome) {\n        return true;\n    } else {\n        return conditionParentUntilTrue(element.parentNode, condition);\n    }\n};\n\nwindow.addEventListener('touchstart', function (e) {\n    touchTarget = e.targetTouches[0].target;\n    // a boolean map indicating if the element (or either of element parents, excluding the document.body) can be scrolled to the X direction.\n    scrollMap = {}\n\n    scrollMap.left = conditionParentUntilTrue(touchTarget, function (element) {\n        return element.scrollLeft &gt; 0;\n    });\n\n    scrollMap.top = conditionParentUntilTrue(touchTarget, function (element) {\n        return element.scrollTop &gt; 0;\n    });\n\n    scrollMap.right = conditionParentUntilTrue(touchTarget, function (element) {\n        return element.scrollWidth &gt; element.clientWidth &amp;&amp;\n               element.scrollWidth - element.clientWidth &gt; element.scrollLeft;\n    });\n\n    scrollMap.bottom =conditionParentUntilTrue(touchTarget, function (element) {\n        return element.scrollHeight &gt; element.clientHeight &amp;&amp;\n               element.scrollHeight - element.clientHeight &gt; element.scrollTop;\n    });\n\n    touchScreenX = e.targetTouches[0].screenX;\n    touchScreenY = e.targetTouches[0].screenY;\n    disableScroll = false;\n});\n\nwindow.addEventListener('touchmove', function (e) {\n    var moveScreenX,\n        moveScreenY;\n\n    if (disableScroll) {\n        e.preventDefault();\n\n        return;\n    }\n\n    moveScreenX = e.targetTouches[0].screenX;\n    moveScreenY = e.targetTouches[0].screenY;\n\n    if (\n        moveScreenX &gt; touchScreenX &amp;&amp; scrollMap.left ||\n        moveScreenY &lt; touchScreenY &amp;&amp; scrollMap.bottom ||\n        moveScreenX &lt; touchScreenX &amp;&amp; scrollMap.right ||\n        moveScreenY &gt; touchScreenY &amp;&amp; scrollMap.top\n    ) {\n        // You are scrolling either the element or its parent.\n        // This will not affect document.body scroll.\n    } else {\n        // This will affect document.body scroll.\n\n        e.preventDefault();\n\n        disableScroll = true;\n    }\n});\n</code></pre>\n\n<p>The reason this works is that mobile Safari is using the first touch move to determine if the document body is being scrolled or the element (or either of the target element parents) and sticks to this decision.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any way to completely disable web page scrolling in an iPhone web app? I've tried numerous things posted on google, but none seem to work.</p>\n\n<p>Here's my current header setup:</p>\n\n<pre><code>&lt;meta name=\"viewport\" content=\"width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=no;\"/&gt;\n&lt;meta name=\"apple-mobile-web-app-capable\" content=\"yes\"/&gt;\n</code></pre>\n\n<p><code>document.body.addEventListener('touchmove', function(e){ e.preventDefault(); });</code></p>\n\n<p>doesn't seem to work.</p>\n",
            "last_activity_date": 1415664927,
            "question_id": 2890361,
            "score": 41,
            "tags": [
                "javascript",
                "iphone",
                "scroll"
            ],
            "title": "Disable scrolling in an iPhone web application?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It is a conditional statement.</p>\n\n<p>If browser supprts e.keyCode then take e.keyCode else e.charCode.</p>\n\n<p>It is similar to</p>\n\n<pre><code>var kCode;\n\nif ( e.keyCode )\n{\n    kCode = e.keyCode;\n}\nelse\n{\n    kCode = e.charCode;\n}\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/En/DOM/Event.keyCode\">event.keyCode</a>: Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/event.charCode\">event.charCode</a>: Returns the Unicode value of a character key pressed during a keypress event.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>keyCode and which represent the actual keyboard key pressed in the form of a numeric value.  The reason both exist is that keyCode is available within Internet Explorer while which is available in W3C browsers like FireFox.</p>\n\n<p>charCode is similar, but in this case you retrieve the Unicode value of the character pressed.  For example, the letter \"A.\"</p>\n\n<p>The JavaScript expression:</p>\n\n<pre><code>var keyCode = e.keyCode ? e.keyCode : e.charCode;\n</code></pre>\n\n<p>Essentially says the following:</p>\n\n<p>If the e.keyCode property exists, set variable keyCode to its value.  Otherwise, set variable keyCode to the value of the e.charCode property.</p>\n\n<p>Note that retrieving the keyCode or charCode properties typically involve figuring out differences between the event models in IE and in W3C.  Some entails writing code like the following:</p>\n\n<pre><code>/*\n get the event object: either window.event for IE \n or the parameter e for other browsers\n*/\nvar evt = window.event ? window.event : e;\n/*\n get the numeric value of the key pressed: either \n event.keyCode for IE for e.which for other browsers\n*/\nvar keyCode = evt.keyCode ? evt.keyCode : e.which;\n</code></pre>\n\n<p><strong>EDIT</strong>: Corrections to my explanation of charCode as per Tor Haugen's comments.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Handling key events consistently is not at all easy.</p>\n\n<p>Firstly, there are two different types of codes: keyboard codes (a number representing the key on the keyboard the user pressed) and character codes (a number representing a Unicode character). You can only reliably get character codes in the <code>keypress</code> event. Do not try to get character codes for <code>keyup</code> and <code>keydown</code> events.</p>\n\n<p>Secondly, you get different sets of values in a <code>keypress</code> event to what you get in a <code>keyup</code> or <code>keydown</code> event.</p>\n\n<p>I recommend <a href=\"http://unixpapa.com/js/key.html\">this page</a> as a useful resource. As a summary:</p>\n\n<p>If you're interested in detecting a user typing a character, use the <code>keypress</code> event. IE bizarrely only stores the character code in <code>keyCode</code> while all other browsers store it in <code>which</code>. Some (but not all) browsers also store it in <code>charCode</code> and/or <code>keyCode</code>. An example keypress handler:</p>\n\n<pre><code>function(evt) {\n  evt = evt || window.event;\n  var charCode = evt.which || evt.keyCode;\n  var charStr = String.fromCharCode(charCode);\n  alert(charStr);\n}\n</code></pre>\n\n<p>If you're interested in detecting a non-printable key (such as a cursor key), use the <code>keydown</code> event. Here <code>keyCode</code> is always the property to use. Note that <code>keyup</code> events have the same properties.</p>\n\n<pre><code>function(evt) {\n  evt = evt || window.event;\n  var keyCode = evt.keyCode;\n\n  // Check for left arrow key\n  if (keyCode == 37) {\n    alert(\"Left arrow\");\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 68
                },
                {
                    "body": "<p>The property <code>event.which</code> is added when using jQuery to avoid browser differences. <a href=\"http://api.jquery.com/event.which/\" rel=\"nofollow\">See docs</a>.</p>\n\n<p>The <code>which</code> property will be undefined if you are not using jQuery.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>Why do people write statement like</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>e.keyCode ? e.keyCode : e.charCode\n</code></pre>\n\n<p>Some people also use <code>e.which</code></p>\n\n<p>Could someone please explain?</p>\n",
            "last_activity_date": 1388041520,
            "question_id": 1444477,
            "score": 33,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "keycode and charcode"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p><em>I realize that this may not be an exact answer to your question, but I figured I would put my 2 cents worth in as I doubt to many people have tried this.</em></p>\n\n<p>I got it to work by created a managed wrapper using mixed mode C++. There are other ways to do it, but I was going to attempt to make a full wrapper that could be used from any .Net language.</p>\n\n<p>Getting the lib to compile in such a way that it could be included in a mixed mode project was a little bit of a challenge. I had to modify the runtime library (in the SConstruct file) used to /MD and /MDd so that it would be compatible with the /clr switch.</p>\n\n<p>So far I have only simple scripts running as I have not implemented callbacks, custom methods, objects and such.</p>\n\n<p>Here is a quick sample of what the usage looks like for one of my test apps:</p>\n\n<pre><code>V8DotNet.Shell shell = new V8DotNet.Shell();\n\nshell.ExecuteScript(@\"print('V8 version is: ' + version());\");\n</code></pre>\n\n<p>It runs more complicated scripts like a base64 encoder fine as well. But for now I can only add custom items from the c++ side.</p>\n\n<p>I am willing to provide more information + code if anyone is interested as I may not ever pick this project back up. But, I'm afraid it way to much code to go into a post here so we would have to find some other medium like google code or codePlex.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p><hr /></p>\n\n<p>OK, I've uploaded the code. I do have to put a disclaimer on this: <em>The project is very early and I am an amateur at C++ at best so don't get your hopes up to much. Also, this project was created/done just after chrome was released so the version of v8 included may be old.</em></p>\n\n<p>That said, here it is: <a href=\"http://ryanscook.com/Files/V8-DotNet.zip\">http://ryanscook.com/Files/V8-DotNet.zip</a> (21.5 MB)</p>\n\n<p>In the package you'll find the following items of interest:</p>\n\n<blockquote>\n  <p><strong>V8Net-Library\\V8.Net\\V8.Net.sln -</strong> This\n  is the solution that has the managed\n  C++ wrapper proj and a C# console app\n  for testing.</p>\n  \n  <p><strong>Dependencies\\V8 -</strong> This is my V8 code\n  that I used to build the V8 lib.</p>\n</blockquote>\n\n<p>Hope it helps!</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>From what I hear compiling it with IJW (Managed C++) should just work - but I may be really wrong, I have never touch MC++.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Microsoft <a href=\"http://blogs.msdn.com/hugunin/archive/2007/04/30/a-dynamic-language-runtime-dlr.aspx\" rel=\"nofollow\">are building a real javascript - not \"JScript\" - runtime</a> (along with IronPython, IronRuby, and VB10) on the CLR using the DLR, but I can't find any downloads or content for it. Perhaps this will arrive with C# 4?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Check out <a href=\"http://v8sharp.codeplex.com\">v8sharp</a>. It supports executing JS inside of a .NET application. It also allows you to register .NET types with the v8 engine so that your JS code can interact with your .NET code. I am in the process of adding support for hooking function/delegate support.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>You can try Javascript .NET:</p>\n\n<p><a href=\"http://javascriptdotnet.codeplex.com/\">http://javascriptdotnet.codeplex.com/</a></p>\n\n<p>It lets you create a V8 context from .NET and register CLI objects in it so you can manipulate them and call members from the Javascript code. It compiles the Javascript at runtime.</p>\n\n<p>Check it out.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>I guess gatapia has replaced <a href=\"http://stackoverflow.com/a/6210086/966\">js.net</a> with <a href=\"https://github.com/gatapia/jish\" rel=\"nofollow\">jish</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can try V8.NET as well.</p>\n\n<p><a href=\"http://v8dotnet.codeplex.com/\" rel=\"nofollow\">http://v8dotnet.codeplex.com/</a></p>\n\n<p>It allows you to easily integrate code with V8 at a lower level than many other wrappers.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm building a .NET 3.5 application and have the need to evaluate JS code on the server - basically a user provided rule set that can work within a browser or on the server. Managed JS is not an option, because the JS code would be provided at runtime. Aptana's Jaxer is also not an option. So I was looking into using a build of the V8 engine within my app.</p>\n\n<p>I built the source successfully into a DLL, but that DLL is not not a managed library and is not COM either. V8 is just plain C++.</p>\n\n<p>Any ideas as to how to interop with this type of DLL in C#? Also, I'm open to other suggestions for SpiderMonkey or another JS engine.</p>\n\n<p>Thanks in advance.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>I was able to use Ryan's solution. I just updated the references to the build for the latest from trunk. It worked great. Thanks Ryan.</p>\n",
            "last_activity_date": 1370116228,
            "question_id": 356948,
            "score": 33,
            "tags": [
                ".net",
                "javascript",
                "interop",
                "v8",
                "serverside-javascript"
            ],
            "title": "Referencing Google&#39;s V8 engine from a .NET app"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Just use good old HTML:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Submit\" /&gt;\n</code></pre>\n\n<p>Wrap it as the subject of a link, if you so desire:</p>\n\n<pre><code>&lt;a href=\"http://somewhere.com\"&gt;&lt;input type=\"button\" value=\"Submit\" /&gt;&lt;/a&gt;\n</code></pre>\n\n<p>Or if you decide you want javascript to provide some other functionality:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Cancel\" onclick=\"javascript: someFunctionThatCouldIncludeRedirect();\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The default value for the <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/the-button-element.html#attr-button-type\"><code>type</code> attribute of <code>button</code> elements</a> <em>is</em> \"submit\".</p>\n\n<pre><code>&lt;button type=\"button\"&gt;Submit&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 303
                },
                {
                    "body": "<p><a href=\"http://www.w3.org/TR/html401/interact/forms.html#h-17.5\">The <code>button</code> element</a> has a default type of <code>submit</code>.</p>\n\n<p>You can make it do nothing by setting a type of <code>button</code>:</p>\n\n<pre><code>&lt;button type=\"button\"&gt;Cancel changes&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 62
                },
                {
                    "body": "<p>Honestly, I like the answers above.  Easy and no need to get into JS.  But I noticed that you were asking about jQuery.  So for the sake of completeness, in jQuery if you return false with the .click() handler, it will negate the default action of the widget.</p>\n\n<p><a href=\"http://www.tvidesign.co.uk/blog/improve-your-jquery-25-excellent-tips.aspx#tip24\" rel=\"nofollow\">See here for an example</a> (and more goodies, too).  <a href=\"http://api.jquery.com/click/\" rel=\"nofollow\">Here's the documentation, too</a>.</p>\n\n<p>in a nutshell, with your sample code, do this:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    $('button[type!=submit]').click(function(){\n        // code to cancel changes\n        return false;\n    });\n&lt;/script&gt;\n\n&lt;a href=\"index.html\"&gt;&lt;button&gt;Cancel changes&lt;/button&gt;&lt;/a&gt;\n&lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n</code></pre>\n\n<p>As an added benefit, with this, you can get rid of the anchor tag and just use the button.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've got a form, with 2 buttons</p>\n\n<pre><code>&lt;a href=\"index.html\"&gt;&lt;button&gt;Cancel changes&lt;/button&gt;&lt;/a&gt;\n\n&lt;button type=\"submit\"&gt;Submit&lt;/button&gt;\n</code></pre>\n\n<p>I use jQuery UI's button on them too, simply like this</p>\n\n<pre><code>$('button').button();\n</code></pre>\n\n<p>However, the first button also submits the form. I would have thought that if it didn't have the <code>type=\"submit\"</code>, it wouldn't.</p>\n\n<p>Obviously I could do this</p>\n\n<pre><code>$('button[type!=submit]').click(function(event) { event.stopPropagation(); });\n</code></pre>\n\n<p>But is there a way I can stop that back button from submitting the form without JavaScript intervention?</p>\n\n<p>To be honest, I used a button only so I could style it with jQuery UI. I tried calling <code>button()</code> on the link and it didn't work as expected (looked quite ugly!).</p>\n",
            "last_activity_date": 1415838896,
            "question_id": 3314989,
            "score": 137,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-ui",
                "button"
            ],
            "title": "Can I make a &lt;button&gt; not submit a form?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You need to use javascript:</p>\n\n<pre><code>&lt;BODY onLoad=\"document.getElementById('myButton').focus();\"&gt;\n</code></pre>\n\n<p><hr /></p>\n\n<p>@Ben notes that you should not add event handlers like this. While that is another question, he recommends that you use this function:</p>\n\n<pre><code>function addLoadEvent(func) {\n  var oldonload = window.onload;\n  if (typeof window.onload != 'function') {\n    window.onload = func;\n  } else {\n    window.onload = function() {\n      if (oldonload) {\n        oldonload();\n      }\n      func();\n    }\n  }\n}\n</code></pre>\n\n<p>And then put a call to addLoadEvent on your page and reference a function the sets the focus to you desired textbox.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<pre><code>&lt;html&gt;  \n&lt;head&gt;  \n&lt;script language=\"javascript\" type=\"text/javascript\"&gt;  \nfunction SetFocus(InputID)  \n{  \n   document.getElementById(InputID).focus();  \n}  \n&lt;/script&gt;  \n&lt;/head&gt;  \n&lt;body onload=\"SetFocus('Box2')\"&gt;  \n&lt;input id=\"Box1\" size=\"30\" /&gt;&lt;br/&gt;  \n&lt;input id=\"Box2\" size=\"30\" /&gt;  \n&lt;/body&gt;  \n&lt;/html&gt;  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Any javascript book will tell you not to put handlers on the body element like that.</p>\n\n<p>I'f you're using jquery:</p>\n\n<pre><code>$(function() {\n  $(\"#Box1\").focus();\n});\n</code></pre>\n\n<p>or prototype:</p>\n\n<pre><code>Event.observe(window, 'load', function() {\n  $(\"Box1\").focus();\n});\n</code></pre>\n\n<p>or plain javascript:</p>\n\n<pre><code>window.onload = function() {\n  document.getElementById(\"Box1\").focus();\n};\n</code></pre>\n\n<p>though keep in mind that this will replace other on load handlers, so look up addLoadEvent() in google for a safe way to append onload handlers rather than replacing.</p>\n",
                    "is_accepted": true,
                    "score": 135
                },
                {
                    "body": "<p>Using plain vanilla html and javascript</p>\n\n<pre><code>&lt;input type='text' id='txtMyInputBox' /&gt;\n\n\n&lt;script language='javascript' type='text/javascript'&gt;\nfunction SetFocus()\n{\n    // safety check, make sure its a post 1999 browser\n    if (!document.getElementById)\n    {\n        return;\n    }\n\n    var txtMyInputBoxElement = document.getElementById(\"txtMyInputBox\");\n\n    if (txtMyInputBoxElement != null)\n    {\n        txtMyInputBoxElement.focus();\n    }\n}\nSetFocus();\n&lt;/script&gt;\n</code></pre>\n\n<p>For those out there using the .net framework and asp.net 2.0 or above, its trivial.  If you are using older versions of the framework, you'd need to write some javascript similar to above.</p>\n\n<p>In your OnLoad handler (generally page_load if you are using the stock page template supplied with visual studio) you can use:</p>\n\n<p>C#</p>\n\n<pre><code>protected void PageLoad(object sender, EventArgs e)\n{\n    Page.SetFocus(txtMyInputBox);\n}\n</code></pre>\n\n<p>VB.NET</p>\n\n<pre><code>Protected Sub PageLoad(sender as Object, e as EventArgs)\n\n    Page.SetFocus(txtMyInputBox)\n\nEnd Sub\n</code></pre>\n\n<p>(* Note I removed the underscore character from the function name that is generally Page_Load since in a code block it refused to render properly!  I could not see in the markup documentation how to get underscores to render unescaped.)</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>As a general advice, I would recommend not stealing the focus from the address bar. (<a href=\"http://www.codinghorror.com/blog/archives/001011.html\" rel=\"nofollow\">Jeff already talked about that.</a>)</p>\n\n<p>Web page can take some time to load, which means that your focus change can occur some long time after the user typed the pae URL. Then he could have changed his mind and be back to url typing while you will be loading your page and stealing the focus to put it in your textbox.</p>\n\n<p>That's the one and only reason that made me remove Google as my start page.</p>\n\n<p>Of course, if you control the network (local network) or if the focus change is to solve an important usability issue, forget all I just said :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>In HTML there's an <a href=\"http://www.whatwg.org/specs/web-apps/current-work/multipage/forms.html#autofocusing-a-form-control\"><code>autofocus</code> attribute</a> to all form fields. There's a good tutorial on it in <a href=\"http://diveintohtml5.info/forms.html#autofocus\">Dive Into HTML 5</a>. Unfortunately it's currently not <a href=\"http://www.wufoo.com/html5/attributes/02-autofocus.html\">supported</a> by IE versions less than 10.</p>\n\n<p>To use the HTML 5 attribute and fall back to a JS option:</p>\n\n<pre><code>&lt;input id=\"my-input\" autofocus=\"autofocus\" /&gt;\n&lt;script&gt;\n  if (!(\"autofocus\" in document.createElement(\"input\"))) {\n    document.getElementById(\"my-input\").focus();\n  }\n&lt;/script&gt;\n</code></pre>\n\n<p>No jQuery, onload or event handlers are required, because the JS is below the HTML element.</p>\n\n<p>Edit: another advantage is that it works with JavaScript off in some browsers and you can remove the JavaScript when you don't want to support older browsers.</p>\n\n<p>Edit 2: Firefox 4 now supports the <code>autofocus</code> attribute, just leaving IE without support.</p>\n",
                    "is_accepted": false,
                    "score": 45
                },
                {
                    "body": "<p>IMHO, the 'cleanest' way to select the First, visible, enabled text field on the page, is to use jQuery and do something like this:</p>\n\n<pre><code>$(document).ready(function() {\n  $('input:text[value=\"\"]:visible:enabled:first').focus();\n});\n</code></pre>\n\n<p>Hope that helps...</p>\n\n<p>Thanks...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can do it easily by using jquery in this way:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n    $(document).ready(function () {\n        $(\"#myTextBoxId\").focus();\n    });\n\n&lt;/script&gt;\n</code></pre>\n\n<p>by calling this function in <code>$(document).ready()</code>. </p>\n\n<p>It means this function will execute when the DOM is ready.</p>\n\n<p>For more information about the READY function, refer to : <a href=\"http://api.jquery.com/ready/\" rel=\"nofollow\">http://api.jquery.com/ready/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Use the below code. For me it is working</p>\n\n<pre><code>jQuery(\"[id$='hfSpecialty_ids']\").focus()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>refer this link . This will help you </p>\n\n<p><a href=\"http://www.codeproject.com/Questions/206777/Set-Focus-on-Textbox-using-Javascript\" rel=\"nofollow\">Set Focus on Textbox using Javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>OK, this has to be insanely easy but I honestly don't know how to do it.  How do you automatically set the focus to a textbox when a web page loads?</p>\n\n<p>Is there an HTML tag to do it or does it have to be done via javascript?</p>\n",
            "last_activity_date": 1386131917,
            "question_id": 45827,
            "score": 94,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "How do you automatically set the focus to a textbox when a web page loads?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>You could have the value of the input field copied to a hidden field whenever focus leaves the input field (which should do what you want).  See code below:</p>\n\n<pre><code>&lt;script&gt;\n    $(document).ready(function(){\n        $('#myInputElement').bind('change', function(){\n            var newvalue = $(this).val();\n        });\n        $('#myInputElement').blur(function(){\n            $('#myHiddenInput').val($(this).val());\n        });\n    });\n&lt;/script&gt;\n&lt;input id=\"myInputElement\" type=\"text\"&gt;\n</code></pre>\n\n<p>(untested, but it should work).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In Russ answer he binds the focus event. I don't think it is necessary.</p>\n\n<p>You can store the old value in the change event.</p>\n\n<pre><code>&lt;script&gt;\n    $(document).ready(function(){\n\n        var newValue = $('#myInputElement').val();\n        var oldValue;\n\n        $('#myInputElement').change(function(){\n            oldValue = newValue;\n            newValue = $(this).val();\n        });\n    });\n&lt;/script&gt;\n&lt;input id=\"myInputElement\" type=\"text\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A better approach is to store the old value using .data. This spares the creation of a global var which you should stay away from and keeps the information encapsulated within the element. A real world example as to why Global Vars are bad is documented <a href=\"http://web.archive.org/web/20091030191126/http://billyreisinger.com/blog/2009/01/real-world-example-of-why-global-variables-are-bad/\">here</a></p>\n\n<p>e.g</p>\n\n<pre><code>&lt;script&gt;\n    //look no global needed:)\n\n    $(document).ready(function(){\n        // Get the initial value\n       var $el = $('#myInputElement');\n       $el.data('oldVal',  $el.val() );\n\n\n       $el.change(function(){\n            //store new value\n            var $this = $(this);\n            var newValue = $this.data('newVal', $this.val());\n       })\n       .focus(function(){\n            // Get the value when input gains focus\n            var oldValue = $(this).data('oldVal');\n       });\n    });\n&lt;/script&gt;\n&lt;input id=\"myInputElement\" type=\"text\"&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 83
                },
                {
                    "body": "<p>Every DOM element has an attribute called defaultValue. You can use that to get the default value if you just want to compare the first changing of data.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Some points.</p>\n\n<p><strong>Use $.data Instead of $.fn.data</strong></p>\n\n<pre><code>// regular\n$(elem).data(key,value);\n// 10x faster\n$.data(elem,key,value);\n</code></pre>\n\n<p>Then, You can get the previous value through the event object, without complicating your life:</p>\n\n<pre><code>    $('#myInputElement').change(function(event){\n        var defaultValue = event.target.defaultValue;\n        var newValue = event.target.value;\n    });\n</code></pre>\n\n<p>Be warned that defaultValue is NOT the last set value. It's the value the field was initialized with. But you can use $.data to keep track of the \"oldValue\"</p>\n\n<p>I recomend you always declare the \"event\" object in your event handler functions and inspect them with firebug (console.log(event)) or something. You will find a lot of useful things there that will save you from creating/accessing jquery objects (which are great, but if you can be faster...)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This might do the trick:</p>\n\n<pre><code>$(document).ready(function() {\n    $(\"input[type=text]\").change(function() {\n        $(this).data(\"old\", $(this).data(\"new\") || \"\");\n        $(this).data(\"new\", $(this).val());\n        console.log($(this).data(\"old\"));\n        console.log($(this).data(\"new\"));\n    });\n});\n</code></pre>\n\n<h1><a href=\"http://jsfiddle.net/salman/t26g4/\">Demo here</a></h1>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I found a dirty trick but it works, you could use the hover function to get the value before change!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I created these functions based on Joey Guerra's suggestion, thank you for that. I'm elaborating a little bit, perhaps someone can use it. The first function checkDefaults() is called when an input changes, the second is called when the form is submitted using jQuery.post. div.updatesubmit is my submit button, and class 'needsupdate' is an indicator that an update is made but not yet submitted.</p>\n\n<pre><code>function checkDefaults() {\n    var changed = false;\n        jQuery('input').each(function(){\n            if(this.defaultValue != this.value) {\n                changed = true;\n            }\n        });\n        if(changed === true) {\n            jQuery('div.updatesubmit').addClass(\"needsupdate\");\n        } else {\n            jQuery('div.updatesubmit').removeClass(\"needsupdate\");\n        }\n}\n\nfunction renewDefaults() {\n        jQuery('input').each(function(){\n            this.defaultValue = this.value;\n        });\n        jQuery('div.updatesubmit').removeClass(\"needsupdate\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$('#element').on('change', function() {\n    $(this).val($(this).prop(\"defaultValue\"));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I've been searching around this morning and I'm not finding any simple solutions... basically, I want to capture a change in an input element, but also know the previous value. </p>\n\n<p>Here's a change event and an input element in its simplest form. Clearly, I can get the new value with $(elem).val(), but is there a sneaky method I'm missing for getting the previous value? I don't see anything in the jQuery API to do this, but maybe someone's already done this and has some tips?</p>\n\n<pre><code>&lt;script&gt;\n    $(document).ready(function(){\n        $('#myInputElement').bind('change', function(){\n            //var oldvalue = ???\n            var newvalue = $(this).val();\n        });\n    });\n&lt;/script&gt;\n&lt;input id=\"myInputElement\" type=\"text\"&gt;\n</code></pre>\n\n<p>I'm not against writing my own solution, I just want to make sure I'm not recreating the wheel here.  </p>\n",
            "last_activity_date": 1397816355,
            "question_id": 1159046,
            "score": 58,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "events",
                "forms"
            ],
            "title": "jQuery Change event on an &lt;input&gt; element - any way to retain previous value?"
        }
    ]
}
