{
    "items": [
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>The best way to address IE only are <em>conditional comments</em>. You don't even need to use JavaScript. See for example <a href=\"http://www.positioniseverything.net/articles/ie7-dehacker.html\" rel=\"nofollow\">http://www.positioniseverything.net/articles/ie7-dehacker.html</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Like Sergey Kirienko said: use conditional comments. The code below will only be executed by internet explorer. Microsoft has good information on <a href=\"http://msdn.microsoft.com/en-us/library/ms537512(VS.85).aspx\" rel=\"nofollow\">this</a> page.</p>\n\n<pre><code>&lt;!--[if IE]&gt;\n&lt;script type=\"text/javascript\"&gt; \n showDialog('\u00a1Aviso Importante!','message','warning',10);\n &lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>If you want a specific version you can test for that too:</p>\n\n<pre><code>&lt;!--[if lte IE 7]&gt;\n    &lt;script type=\"text/javascript\"&gt; \n     showDialog('\u00a1Aviso Importante!','Your are using a too old version of Internet explorer. Please upgrade','warning',10);\n    &lt;/script&gt;\n&lt;![endif]--&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Browser sniffing is a kludge that should be avoided when possible. It's best to sniff for the <em>capability</em> you want to use. Say you want to execute an XPath expression using document.evaluate(), but you don't know whether it's supported. Instead of sniffing for supported browsers, do this:</p>\n\n<pre><code>if (document.evaluate) {\n    // go ahead and use it\n} else {\n    // browser doesn't support it; do something else\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You're modifying document while it's being loaded (when browser hasn't \"seen\" closing tag for this element) . This causes very tricky situation in the parser and in IE it's not allowed.</p>\n\n<p><a href=\"http://blogs.msdn.com/ie/archive/2008/04/23/what-happened-to-operation-aborted.aspx\">IE blog</a> has explanation of this.</p>\n\n<p>The solution is to modify another element that's earlier in the document and has been loaded completely (where browser already saw closing tag for it).</p>\n\n<p><br></p>\n\n<p>BTW: The string <code>&lt;/</code> is not allowed in <code>&lt;script&gt;</code> element. Use <code>&lt;\\/</code> which is a safe equivalent in JS strings.</p>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>I had this same problem.  My issue was that I was calling a Javascript function before the containing <code>div</code> was closed.  </p>\n\n<p>To fix the problem, I call the Javascript function within the jQuery <code>ready</code> event handler:</p>\n\n<pre><code>$(document).ready(function(){\n    some_random_javascript_function();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Maybe a little late, but this error also pops up if you are using SWFObject and have 2 divs with the same id.</p>\n\n<p>I had duplicate divs, [with id=\"flashcontent\", thanks to copy&amp;paste].</p>\n\n<p>Solved by renaming the divs with unique ids.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://support.microsoft.com/kb/927917\" rel=\"nofollow\">http://support.microsoft.com/kb/927917</a></p>\n\n<p>There are some examples there.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Reading the <a href=\"http://blogs.msdn.com/ie/archive/2008/04/23/what-happened-to-operation-aborted.aspx\">doc</a> linked by porneL, I found a simple workaround for this problem: Adding a parameter 'defer' to the script, all works fine.</p>\n\n<pre><code>&lt;script defer=true&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>javascript works very easy with navigator.appName. (see <a href=\"http://de.selfhtml.org/javascript/objekte/navigator.htm\" rel=\"nofollow\">http://de.selfhtml.org/javascript/objekte/navigator.htm</a>)\nYou can create an if-query with this. Very easy, just try it!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A current version of <a href=\"https://apis.google.com/js/plusone.js\" rel=\"nofollow\">https://apis.google.com/js/plusone.js</a> caused this bug on IE8 in one of my sites. </p>\n\n<p>Easiest solution - remove google+. </p>\n\n<p>Easy solution - wrap the code in jquery's document.ready -function or similar:</p>\n\n<pre><code>$(document).ready(function(){\n     var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;\n     po.src = 'https://apis.google.com/js/plusone.js';\n     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to create a dialog box that will appear only if the browser selected is IE (any version) however I get this error:</p>\n\n<blockquote>\n  <p>Message: HTML Parsing Error: Unable to modify the parent container element before the child element is closed (KB927917)</p>\n</blockquote>\n\n<p>That's all in \"Line/Char/Code\" 0 so I do not know where is the error. The code I'm using is this:</p>\n\n<pre><code> &lt;script type=\"text/javascript\"&gt; \n  &lt;!--  \n  if(BrowserDetect.browser.contains(\"Explorer\"))\n  {     \n    var Nachricht = 'Hemos detectado que est\u00e1 utilizando ' + BrowserDetect.browser + ' ' +\n  BrowserDetect.version + '. Puede que algunas funciones no est\u00e9n habilitadas. &lt;p&gt;&lt;/p&gt; Si desea experimentar todo el potencial del portal, por favor intente desde otro navegador (browser). &lt;p&gt;&lt;/p&gt;Gracias\n showDialog('\u00a1Aviso Importante!',Nachricht,'warning',10);\n } \n &lt;/script&gt;\n</code></pre>\n\n<p>I've noticed if I remove the \"BrowserDetect.browser\" and .version it removes the error, but I need those to check =/...any ideas will be appreciated =).</p>\n",
            "last_activity_date": 1385333354,
            "question_id": 301484,
            "score": 34,
            "tags": [
                "javascript",
                "html-parsing"
            ],
            "title": "Problem with HTML Parser in IE"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>To retrieve all cookies for the current document open in the browser, you again use the <code>document.cookie</code> property.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You cannot. By design, for security purpose, you can access only the cookies set by your site. StackOverflow can't see the cookies set by UserVoice nor those set by Amazon.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<ol>\n<li>You can't see cookies for other sites.</li>\n<li>You can't see http-only cookies.</li>\n<li>All the cookies you can see are in the <a href=\"http://msdn.microsoft.com/en-us/magazine/ms533693.aspx\"><code>document.cookie</code></a> property, which contains a semicolon separated list of name=value pairs.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can only access cookies for a specific site. Using <strong><code>document.cookie</code></strong> you will get a list of escaped key=value pairs seperated by a semicolon.</p>\n\n<pre><code>secret=do%20not%20tell%you;last_visit=1225445171794\n</code></pre>\n\n<p>To simplify the access, you have to parse the string and unescape all entries:</p>\n\n<pre><code>var getCookies = function(){\n  var pairs = document.cookie.split(\";\");\n  var cookies = {};\n  for (var i=0; i&lt;pairs.length; i++){\n    var pair = pairs[i].split(\"=\");\n    cookies[pair[0]] = unescape(pair[1]);\n  }\n  return cookies;\n}\n</code></pre>\n\n<p>So you might later write: </p>\n\n<pre><code>var myCookies = getCookies();\nalert(myCookies.secret); // \"do not tell you\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 27
                },
                {
                    "body": "<p>Since the title didn't specify that it has to be programmatic I'll assume that it was a genuine debugging/privacy management issue and solution is browser dependent and requires a browser with built in detailed cookie management toll and/or a debugging module or a plug-in/extension. I'm going to list one and ask other people to write up on browsers they know in detail and please be precise with versions.</p>\n\n<p><strong>Chromium, Iron build (SRWare Iron 4.0.280)</strong></p>\n\n<blockquote>\n  <p>The wrench(tool) menu: Options / Under The Hood / [Show cookies and website permissions]</p>\n  \n  <blockquote>\n    <p>For related domains/sites type the suffix into the search box (like .foo.tv). Caveat: when you have  a node (site or cookie) click-highlighted only use [Remove] to kill specific subtrees. Using [Remove All] will still delete cookies for all sites selected by search and waste your debugging session.</p>\n  </blockquote>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you're indeed not looking for a programmatic method the <a href=\"http://www.hotcleaner.com/cookies.html\" rel=\"nofollow\">cookies</a> chrome plugin is great despite the icon which for some reason weirds me out...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I need to get all the cookies stored in my browser using javascript.\nHow can it be done? </p>\n",
            "last_activity_date": 1395008333,
            "question_id": 252665,
            "score": 33,
            "tags": [
                "javascript"
            ],
            "title": "I need to get all the cookies from the browser"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>I just use something like <code>&lt;input type=\"number\" name=\"job_order_id\" maxlength=\"7\" size=\"10px\" value=\"\" /&gt;</code> and I get the keyboard with numbers and not the telephone keypad.  You could also put the leading values into value, and they would already be there.</p>\n",
                    "is_accepted": false,
                    "score": -3
                },
                {
                    "body": "<p>Why not put the $ outside the input field (as a label).  Or the percent sign to the right of the input field?  Seems like that'd solve your issue and you'd be able to use input type=\"number\" and it'd just work.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<h2>Styling the field to contain symbols</h2>\n\n<p>When it comes to including the symbols within this <code>number</code> field, you can use some walkaround like that:</p>\n\n<p>HTML:</p>\n\n<pre><code>&lt;span id=\"number-container\"&gt;\n    &lt;input type=\"number\" name=\"number\" id=\"number-field\" value=\"500\" /&gt;\n    &lt;span id=\"number-container-symbol\"&gt;$&lt;/span&gt;\n&lt;/span&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>#number-container {\n    position: relative;\n}\n#number-container-symbol {\n    left: 5pt;\n    position: absolute;\n    top: 0px;\n}\n#number-field {\n    background-color: transparent;\n    padding-left: 10pt;\n}\n</code></pre>\n\n<p>Treat it as a proof of concept. See <a href=\"http://jsfiddle.net/xeTyA/\">this jsfiddle</a> for a live example. It looks like that in Chrome:</p>\n\n<p><img src=\"http://i.stack.imgur.com/sdtXD.png\" alt=\"enter image description here\"></p>\n\n<h2>Defining smaller granularity</h2>\n\n<p>Based on <a href=\"http://dev.w3.org/html5/markup/input.number.html\">the documentation on number input (Editor's Draft)</a>, to <strong>define granularity</strong> you need to add <code>step=\"&lt;some-floating-point-number&gt;\"</code> attribute to the <code>&lt;input&gt;</code> tag:</p>\n\n<pre><code>&lt;input type=\"number\" name=\"number\" value=\"500.01\" step=\"0.01\" /&gt;\n</code></pre>\n\n<p>and it will work in many modern browsers. See <a href=\"http://jsfiddle.net/xeTyA/1/\">this jsfiddle</a> for tests.</p>\n\n<h2>Conclusion</h2>\n\n<p>You should be able to style it to contain symbols you need. There is also a feature that, according to documentation, enables support for floating-point numbers.</p>\n\n<h2>Alternative solution - empty field in front of something else</h2>\n\n<p>You can also <strong>trick someone into believing he is seeing content of the input field</strong>, but show him something else behind the field (this is some extension of my original solution). Then if someone taps the field, you can propagate proper value etc., then go back to the previous state on blur. See this code (<a href=\"http://jsfiddle.net/n8w7n/3/\">live example on jsfiddle</a> - blue color means you are looking at something that is not within the field):</p>\n\n<pre><code>// store original value from INPUT tag in jQuery's .data()\nvar input_field = jQuery('#number-field');\nvar display_span = jQuery('#number-container-value');\nvar base_val = parseFloat(input_field.val());\ninput_field.data('storedVal', base_val);\ninput_field.val('');\ndisplay_span.html(base_val);\n\n// react to field gaining and losing focus\njQuery('#number-field').on('focus', function(event){\n    var el = jQuery(this);\n    var display = jQuery('#number-container-value');\n    if (typeof el.data('storedVal') != 'undefined'){\n        el.val(el.data('storedVal'));\n    };\n    display.html('');\n}).on('blur', function(event){\n    var el = jQuery(this);\n    var display = jQuery('#number-container-value');\n    var new_val = parseFloat(el.val());\n    el.data('storedVal', new_val);\n    display.html(new_val);\n    el.val('');\n});\n</code></pre>\n\n<p>(the full code with styling is on the mentioned jsfiddle). The code needs shortening &amp; cleaning up, but it is a <strong>proof of concept</strong>. Try it and share your findings, please.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>You're stuck between a rock and a hard place. Until there's a place in the HTML spec for <code>type=\"currency\"</code> (and that'll probably never happen cos of the different ways different countries write currency), you're going to have to use some JS magic to get around the problem. </p>\n\n<p>Of course number nor telephone won't be the best idea, however by using a bit of JS cunning I've come up with this solution:</p>\n\n<pre><code>var i   = document.getElementById( 'input' );\n\ni.onblur    = function()\n{\n    i.type  = 'text';\n\n    i.value = number_format( i.value );\n}\n\ni.onfocus   = function()\n{\n    var v   = Number( i.value.replace( /\\D/, '' ) );\n\n    i.type  = 'number';\n\n    i.value = v &gt; 0 ? v : '';\n}\n</code></pre>\n\n<p>Simply I swap the type of the input depending on focus/blur, this means that once the user has left the text field, we can format its ass. When the user returns, we take the value, if there's one that's > 0 and we stick it back in as a number. Here's the working test, I hope it helps: <a href=\"http://jsfiddle.net/ahmednuaman/uzYQA/\">http://jsfiddle.net/ahmednuaman/uzYQA/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The following pops up the numeric keyboard for iPad with iOS5, allows <em>any</em> character to be typed, and allows <em>any</em> value to be set:</p>\n\n<pre><code>&lt;input type=\"text\" pattern=\"\\d*\"&gt;\n</code></pre>\n\n<p>However it is ugly, fragile (probably will break in future ...), and doesn't work on iPhone (iPhone shows the numeric keypad that only allows 0 to 9). The solution only seems to work using the pattern <code>\\d*</code> or its equivalent <code>[0-9]*</code>.</p>\n\n<p>Maybe better to use <code>type=\"tel\"</code> which seems to act the same.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is potentially another way around the issue for the iPhone:</p>\n\n<pre><code>&lt;input id=\"test\" TYPE=\"text\" value=\"5.50\" ontouchstart=\"this.type='number'\" onfocus=\"this.type='text'\" /&gt;\n</code></pre>\n\n<p>This changes the type to number <em>before</em> the input gets focus when touched (so that the numeric keyboard shows) and then changes the type to text so that the correct value can be edited.</p>\n\n<p>Getting it working reliably might be hard though e.g. currently touch input but then slide finger off control leaves it as type=number, and I can't think of a way to detect the Next button on keyboard, amongst other issues.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This solution works on iPad and iPhone, and even Next/Previous work. Try <a href=\"http://fiddle.jshell.net/L77Cq/2/show/\" rel=\"nofollow\">http://fiddle.jshell.net/L77Cq/2/show/</a> (or <a href=\"http://jsfiddle.net/L77Cq/\" rel=\"nofollow\">http://jsfiddle.net/L77Cq/</a> to edit).</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;head&gt;\n&lt;style&gt;\n    .riggedinput::-webkit-input-placeholder {\n    margin: 0em;\n    font: -webkit-small-control;\n    color: initial;\n    letter-spacing: normal;\n    word-spacing: normal;\n    line-height: normal;\n    text-transform: none;\n    text-indent: 0px;\n    text-shadow: none;\n}\n&lt;/style&gt;\n&lt;script&gt;\n    function focused() {\n        var test = document.getElementById('test');\n        setTimeout(function() { // timeout needed so that keyboard changes to numeric when using Next/Previous keyboard navigation buttons\n            if (document.activeElement === test) {\n                test.type = 'text';\n                test.value = test.placeholder;\n                test.placeholder = '';\n            }\n        }, 1);\n    }\n    function blurred() {\n        var test = document.getElementById('test');\n        var value = test.value;\n        test.placeholder = value;\n        test.value = '';\n        test.type = 'number';\n    }\n    if (!/^(iPhone|iPad|iPod)$/.test(navigator.platform)) alert ('Code specific to Mobile Safari');\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;input&gt;\n    &lt;input id=\"test\" type=\"number\" class=\"riggedinput\" placeholder=\"$100.10USD\" onfocus=\"focused()\" onblur=\"blurred()\"&gt;\n    &lt;input&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>It still has the following issues:\n * If using forms, needs to copy value to a hidden field.\n * For some reason the page scrolls funny (iPhone address bar hides, iPad Debug Console hides).</p>\n\n<p>PS: I found this technique independently of Ahmed Nuaman's comment above (I had tried it in the past, and noticed his comment just now - arrrgh!).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<h2>Working solution: Tested on iPhone 5, Android 2.3, 4</h2>\n\n<p>Tadeck's solution (bounty winner) of using a <code>&lt;span&gt;</code> to contain the input field symbols and place a formatted <code>&lt;span&gt;</code> on top of the currency input is essentially what I ended up doing.</p>\n\n<p>My final code is different and shorter however so I'm posting it here. This solution resolves the iOS5 validation issue of $ , % symbols inside input fields and so <code>input type=\"number\"</code> can be used by default.</p>\n\n<h2>Symbol field eg. \"xx %\" \"xx years\"</h2>\n\n<pre><code>&lt;input name=\"interest-rate\" value=\"6.4\" maxlength=\"4\" min=\"1\" max=\"20\" /&gt;\n&lt;span class=\"symbol\"&gt;%&lt;/span&gt;\n</code></pre>\n\n<ul>\n<li>Simply use a number input field and a span outside the input to display the symbol.</li>\n</ul>\n\n<h2>Currency field eg. \"$xxx,xxx\"</h2>\n\n<pre><code>&lt;span id=\"formatted-currency\"&gt;$500,000&lt;/span&gt;\n&lt;input id=\"currency-field\" type=\"number\" name=\"loan-amount\" value=\"500000\" maxlength=\"8\" min=\"15000\" max=\"10000000\" /&gt;\n</code></pre>\n\n<ul>\n<li>Position the span on top of the currency input and set the input to\ndisplay:none</li>\n<li>When a user clicks/taps on the span, hide the span and show the\ninput. If you position the span perfectly the transition is seamless.</li>\n<li>The number input type takes care of the validation.</li>\n<li>On blur and submit of the input, set the span html to be the input's\nvalue. Format the span. Hide the input and show the span with the\nformatted value.</li>\n</ul>\n\n<p></p>\n\n<pre><code>$('#formatted-currency').click(function(){\n    $(this).hide();\n    $('#currency-field').show().focus();\n});\n$('#currency-field').blur(function(){\n    $('#formatted-currency').html(this.value);\n    $('#formatted-currency').formatCurrency({\n        roundToDecimalPlace : -2\n    });\n    $(this).hide();\n    $('#formatted-currency').show();\n});\n// on submit\n$('#formatted-currency').html($('#currency-field').val());\n$('#formatted-currency').formatCurrency({\n    roundToDecimalPlace : -2\n});\n$('#currency-field').hide();\n$('#formatted-currency').show();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>I had a similar problem, and came up with this dead-ugly js solution, forcing the iPad to popup the numeric keypad.</p>\n\n<p>My problem was that safari filter away everything except digits when the form is posted, and I need various extra characters, for example \"3/7\", or \"65$\".</p>\n\n<pre><code>var elem = document.getElementById('MathAnswer');\nelem.type = 'number';\n\nelem.onfocus = function() {\n  setTimeout(function() {\n    elem.type = 'text'; \n  }, 1);\n};\n</code></pre>\n\n<p>It simply set the input type back to 'text' <em>after</em> iPad has shown the numeric keypad, and voila, safari no longer removes any non-digits. </p>\n\n<p>Hope it helps someone!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your problem would be solved if Safari would support the HTML5 'inputmode' attribute for input elements. Nobody knows if, or when that is going to happen.\nIn the meantime <a href=\"http://danielfriesen.name/blog/2013/09/19/input-type-number-and-ios-numeric-keypad/\" rel=\"nofollow\">this link</a> provides some interesting reading.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>With the release of iOS5, Apple has added their own validation to input type=\"number\" form fields. This is causing some issues; see this question below which sums it up:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/7833257/input-type-number-new-validation-removes-leading-zeros-and-formats-number-in-s\">Input type=&#39;number&#39; new validation removes leading zeros and formats number in Safari for iPhone iOS5 and latest Safari for Mac</a></p>\n\n<p>Although input type=\"tel\" works to bring up a numeric keypad on the iphone, it's the <strong>telephone keypad</strong> which has no decimal points.</p>\n\n<p>Is there a way to set the numeric keypad as default using html/js? This not an iphone app. At minimum I need numbers and a decimal point in the keypad.</p>\n\n<p><strong>Update</strong></p>\n\n<p>Number input fields in Safari 5.1/iOS 5 only accept digits and decimal points. The default value for one of my inputs is <strong>$500,000</strong>. This is resulting in Safari showing a blank input field because $ , % are invalid characters.</p>\n\n<p>Furthermore, when I run my own validation <code>onblur</code>, Safari clears the input field because I'm adding a $ to the value.</p>\n\n<p>Thus Safari 5.1/iOS5's implementation of input type=\"number\" has rendered it unusable.</p>\n\n<p><strong>jsfiddle</strong></p>\n\n<p>Try it here - <a href=\"http://jsfiddle.net/mjcookson/4ePeE/\">http://jsfiddle.net/mjcookson/4ePeE/</a> The default value of $500,000 won't appear in Safari 5.1, but if you remove the $ and , symbols, it will. Frustrating.</p>\n",
            "last_activity_date": 1408107377,
            "question_id": 8222528,
            "score": 32,
            "tags": [
                "javascript",
                "iphone",
                "html5",
                "ios5",
                "input"
            ],
            "title": "iOS5 show numeric keypad by default without using type=&quot;number&quot; or type=&quot;tel&quot;"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Some linux distributions install nodejs not as \"node\" executable but as \"nodejs\".</p>\n\n<p>In this case you have to manually link to \"node\" as many packages are programmed after the \"node\" binary. Something similar also occurs with \"python2\" not linked to \"python\".</p>\n\n<p>In this case you can do an easy symlink. For linux distributions which install package binaries to <code>/usr/bin</code> you can do</p>\n\n<pre><code>ln -s /usr/bin/nodejs /usr/bin/node\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 104
                },
                {
                    "body": "<p>Run <code>apt-get install nodejs-legacy</code>.</p>\n\n<p>Certain linux distributions have changed node.js binary name making it uncompatible with a lot of node.js packages. Package <code>nodejs-legacy</code> provides a symlink to resolve this.</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<p>You have to call \"nodejs\" and not \"node\". To verify this, type <code>node -v</code> on the shell: if nothing is found try <code>nodejs -v</code>. If that displays a version number, then the command you should be using is <code>nodejs</code> and not <code>node</code>. Therefore, you have to change the call to browserify in your script from <code>node</code> to <code>nodejs</code> (as shown below): replace</p>\n\n<pre><code>#!/usr/bin/env node\n</code></pre>\n\n<p>with</p>\n\n<pre><code>#!/usr/bin/env nodejs\n</code></pre>\n\n<p>You might also have to open the script as the superuser.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I seem the same problem when I build atom in Linux.</p>\n\n<pre><code>sudo apt-get install nodejs-dev\n</code></pre>\n\n<p>Fix my question.hope helpful to you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Any talk of creating symlinks or installing some other node-package are spurious and not sustainable.</p>\n\n<p>The correct way to solve this is to :</p>\n\n<ol>\n<li>simple install the nodejs package with apt-get like you already have</li>\n<li>use <code>update-alternatives</code> to indicate your nodejs binary is responsible for <code>#!/usr/bin/env node</code></li>\n</ol>\n\n<p>Like so : </p>\n\n<pre><code>sudo apt-get install nodejs\nsudo update-alternatives --install /usr/bin/node nodejs /usr/bin/nodejs 100\n</code></pre>\n\n<p>This now becomes sustainable throughout package upgrades, dist-upgrades and so forth.</p>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I installed node js and npm via apt-get install and all of the dependencies, then I installed browserify </p>\n\n<pre><code>npm install browserify -g\n</code></pre>\n\n<p>it goes through the process and it seems like it installed correctly, but when I try to do a simple bundle per this <a href=\"http://blakeembrey.com/articles/introduction-to-browserify/\">walkthrough</a></p>\n\n<p>I get the error:</p>\n\n<p>/usr/bin/env: node: No such file or directory </p>\n\n<p><img src=\"http://i.stack.imgur.com/XsFs9.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1404615520,
            "question_id": 20886217,
            "score": 31,
            "tags": [
                "javascript",
                "node.js",
                "browserify"
            ],
            "title": "browserify error /usr/bin/env: node: No such file or directory"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Promises also rely on callbacks behind the scene, so it's not really one vs. the other.</p>\n\n<p>The benefit of callbacks is that they are easy to implement with plain JavaScript (for example in ajax calls).</p>\n\n<p>Promises require an additional abstraction layer, which usually means that you'll rely on a library (not an issue in your case as you are already using jQuery). They are perfect when you deal with multiple async calls in parallel.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>From reading the <a href=\"http://api.jquery.com/jQuery.ajax/#jqXHR\" rel=\"nofollow\">jQuery docs</a> that @Pointy linked to, it sounds like the difference is that the Deferred API allows you to specify more than one function to be called when your request completes:</p>\n\n<blockquote>\n  <p>As of jQuery 1.5, the error (fail), success (done), and complete (always, as of jQuery 1.6) callback hooks are first-in, first-out managed queues. This means you can assign more than one callback for each hook. See Deferred object methods, which are implemented internally for these $.ajax() callback hooks.</p>\n</blockquote>\n\n<p>See also: <a href=\"http://api.jquery.com/deferred.then/\" rel=\"nofollow\">deferred.then()</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/6801283/what-are-the-differences-between-deferred-promise-and-future-in-javascript\">What are the differences between Deferred, Promise and Future in Javascript?</a>  </p>\n</blockquote>\n\n\n\n<p>Lately I've been making an effort to improve the quality of my JavaScript applications.</p>\n\n<p>One pattern I've adopted is to use a separate \"data context\" object to load data for my application (previously I was doing this directly in my view models).</p>\n\n<p>The following example returns data that is initialized on the client:</p>\n\n<pre><code>var mockData = (function($, undefined) {\n\n    var fruit = [\n        \"apple\",\n        \"orange\",\n        \"banana\",\n        \"pear\"\n        ];\n\n    var getFruit = function() {\n        return fruit;\n    };\n\n    return {\n        getFruit: getFruit\n    }\n})(jQuery);\n</code></pre>\n\n<p>In most cases we'll be loading data from the server so we can't return an immediate response. It seems I have two options for how we handle this in our API:</p>\n\n<ol>\n<li>Using a callback</li>\n<li>Returning a <a href=\"http://api.jquery.com/promise/\">promise</a>.</li>\n</ol>\n\n<p>Previously I'd always used the callback approach:</p>\n\n<pre><code>var getFruit = function(onFruitReady) {\n    onFruitReady(fruit);\n};\n\n// ...\n\nvar FruitModel = function(dataContext, $) {\n    return {\n        render: function() {\n            dataContext.getFruit(function(fruit) {\n                // do something with fruit\n            });\n        }\n    };\n};\n</code></pre>\n\n<p>However, I can see how it's possible to end up in callback hell, especially when building complex JavaScript applications.</p>\n\n<p>Then I came across the Promises design pattern. Instead of requiring the caller to supply a callback, I instead return a \"promise\" that can be observed:</p>\n\n<pre><code>var getFruit = function() {\n    return $.Deferred().resolve(fruit).promise();\n};\n\n// ...\ndataContext.getFruit().then(function(fruit) {\n    // do something with fruit\n});\n</code></pre>\n\n<p>I can see obvious benefits of using this pattern, especially since I can <code>wait</code> on multiple deferred objects which could be very useful when loading initialization data for a single page application.</p>\n\n<p>However, I'm keen to understand the pros and cons of each pattern before I start to use either in anger. I'm also interested in whether this is the direction other libraries are going in. It seems to be the case with jQuery.</p>\n\n<p>Here's a <a href=\"http://jsfiddle.net/benfosterdev/yenGc/3/\">link</a> to the fiddle I'm using for testing.</p>\n",
            "last_activity_date": 1357155401,
            "question_id": 14127703,
            "score": 31,
            "tags": [
                "javascript",
                "jquery-deferred",
                "commonjs"
            ],
            "title": "Asynchronous JavaScript - Callbacks vs Deferred/Promise"
        },
        {
            "answer_count": 13,
            "answers": [
                {
                    "body": "<p>Try not outputting the numbers as a single piece of text. Instead of</p>\n\n<pre><code>&lt;span&gt;888-555-1212&lt;/span&gt;\n</code></pre>\n\n<p>try</p>\n\n<pre><code>&lt;span&gt;888-&lt;/span&gt;&lt;span&gt;555-1212&lt;/span&gt;\n</code></pre>\n\n<p>and it will disable skype</p>\n",
                    "is_accepted": true,
                    "score": 33
                },
                {
                    "body": "<p>You can also leave the number alone and remove it with JS.</p>\n\n<pre><code>jQuery(document).ready(function(){jQuery('.skype_pnh_container').parent().html('(555) 222 - 3333');\njQuery('.skype_pnh_container').remove()}\n</code></pre>\n\n<p>It is harder to do in normal HTML, but Skype doesn't remove the parent container, so put the number in something with an ID, you can do a \"getElementById\" on it, set the innerHTML to the phone number.</p>\n\n<p><code>document.getElementById('phoneNumberContainer').innerHTML='(555) 222 - 4444';</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Update</strong></p>\n\n<p>This answer is no longer accurate - see <a href=\"http://stackoverflow.com/a/13141557/3765\">Daniel Byrne's answer</a> for more information.</p>\n\n<hr>\n\n<p><del>Using CSS only, it can be removed by overriding the styles used by Skype. Try adding these two lines to your stylesheet:</del></p>\n\n<pre><code>span.skype_pnh_container {display:none !important;}\nspan.skype_pnh_print_container {display:inline !important;} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 37
                },
                {
                    "body": "<p><code>&lt;meta name=\"SKYPE_TOOLBAR\" content=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" /&gt;</code></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Try this. It substitutes spaces in the phone number with an invisible span + the original space char. So skype cannot understand it is a number and our beloved phone number stays the same :) I had to use this approach since I usually let the content administrator change phone numbers at his will therefore I could not use a hard coded number inside javascript. Of course your markup should look like <code>&lt;span class=\"phone_number\"&gt;your number with some spaces inside it&lt;span&gt;</code>.</p>\n\n<pre><code>$(document).ready(function() {\n\n    if ($(\".phone_number\").length&gt;0) {\n\n        $(\".phone_number\").each(function() {\n\n            $(this).html($(this).html().replace(/\\s/g,\"&lt;span style=\\\"display:none\\\"&gt;_&lt;/span&gt;&amp;nbsp;\"));\n\n\n        });\n\n\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I saw over the interweb a lot of possible solutions javascript solutions, meta tags, css and maybe I found an hack actually working for my websites, I tested on some computers and it work and I think it will work until skype don't change something in their code.</p>\n\n<p>I was looking  what is the skype exactly doing on our pages, and it creates some span around the phone numbers, as you already said, but it even add an  tag at the end of the document, just after the body closed tag. </p>\n\n<p>And here I saw the trick! Just before that object there is a configuration tag:</p>\n\n<pre><code>&lt;span id=\"skype_highlighting_settings\" display=\"none\" autoextractnumbers=\"1\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p>This is added dynamically by the plugin! but here the solution become obvious, to finalle stop skype messing with your design and avoid changing phone number the solution is to insert very early in the document the following tag:</p>\n\n<pre><code>&lt;span id=\"skype_highlighting_settings\" display=\"none\" autoextractnumbers=\"0\"&gt;&lt;/span&gt;\n</code></pre>\n\n<p>notice the autoextractnumbers=\"0\", here is the trick. The document will not validate anyway with that tag because there is no attribute \"autoextractnumbers\" but i noticed that it works even if commented:</p>\n\n<pre><code>&lt;!-- &lt;span id=\"skype_highlighting_settings\" display=\"none\" autoextractnumbers=\"0\"&gt;&lt;/span&gt; --&gt;\n</code></pre>\n\n<p>And that's it! Enjoy your webpages free from messy plugins! And your web page will still validate correctly. Hope it works for you too! I have tested on a couple of computer 3 different browsers and 2 different skype versions, for now it works for me, let me know if it works for you too and if it works share it :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I added a space in the first term of the number.</p>\n\n<p>Instead of (888) 222-3333 I entered ( 888 ) 222-3333</p>\n\n<p>Granted: may look weird, but it works and it is simple.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you are using PhoneGap on iOS this can be a UIWebView issue (separate from Skype).</p>\n\n<p>The following line fixes the problem if you don't want automatic links generated in UIWebView:</p>\n\n<pre><code>self.viewController.webView.dataDetectorTypes = UIDataDetectorTypeNone;\n</code></pre>\n\n<p>inside AppDelegate.m in <code>-(BOOL)application:(UIApplication*)application didFinishLaunchingWithOptions:(NSDictionary*)launchOptions</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>EDIT: Sorry, I just discovered that IE9 has issues with this solution as it does not support soft hyphens.</strong></p>\n\n<p>There is an alternative solution to this problem:</p>\n\n<p>You can use a soft-hyphen character (<code>&amp;shy;</code>) inside the phone number to address the issue. For example, given the number </p>\n\n<pre><code>&lt;span&gt;0664 111 222 3&lt;/span&gt;\n</code></pre>\n\n<p>change to</p>\n\n<pre><code>&lt;span&gt;0664&amp;shy; 111 222 3&lt;/span&gt;\n</code></pre>\n\n<p>and be happy :)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I added a hyphen in a span before the number and then set display:none on the span style, which worked. </p>\n\n<pre><code>    &lt;span class=\"anti-skype-hyphen\"&gt;-&lt;span&gt;01273 200 ***\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Skype has taken to adding a randomly generated string of numbers to the end of their span tag, so the above response from Groo is not entirely accurate anymore.  To correctly select all Skype tags on a page, use CSS3 wildcard selectors like such :</p>\n\n<pre><code>span[class^='skype_pnh_container'] {display:none !important;}\nspan[class^='skype_pnh_print_container'] {display:inline !important;}\n</code></pre>\n\n<p>the <code>^=</code> operator causes an attribute selector to mach elements that have an class containing a value that STARTS WITH   'skype_pnh_container' and 'skype_pnh_print_container'</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Needed this for 2 projects in a row now, So at our office we made a quick plugin that can be used to solve most cases of it.</p>\n\n<p><a href=\"http://owenmelbz.github.com/noSkype/\" rel=\"nofollow\">http://owenmelbz.github.com/noSkype/</a></p>\n\n<p>Download it from here and you should be away!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>All you need to do is insure your CSS selector is more specific than the selector Skype uses. In the current skype style sheet they use:</p>\n\n<pre><code>span.skype_pnh_container span.skype_pnh_highlighting_inactive_common span.skype_pnh_text_span {...}\n</code></pre>\n\n<p>You will need to add an extra class \u2014 your own website context \u2014 to this selector, i.e.</p>\n\n<pre><code>.myclass span.skype_pnh_container span.skype_pnh_highlighting_inactive_common span.skype_pnh_text_span {...}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>On those Windows machines with <a href=\"http://www.skype.com\">Skype</a> installed, it tends to convert all phone-formatted numbers to Skype links so you can click it in order to make a call on Skype.</p>\n\n<p>The question is how do you prevent that to happen for a certain number on page?</p>\n",
            "last_activity_date": 1388184196,
            "question_id": 3032427,
            "score": 30,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "skype"
            ],
            "title": "How to prevent phone numbers to be converted into Skype links?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try:</p>\n\n<pre><code>return DateTime.Now.Subtract(new DateTime(1970, 1,1)).TotalMilliseconds\n</code></pre>\n\n<p><strong>Edit:</strong> true UTC is better, but then we need to be consistent</p>\n\n<pre><code>return DateTime.UtcNow\n               .Subtract(new DateTime(1970,1,1,0,0,0,DateTimeKind.Utc))\n               .TotalMilliseconds;\n</code></pre>\n\n<p>Although, on second thoughts it does not matter, as long as both dates are in the same time zone.</p>\n",
                    "is_accepted": true,
                    "score": 43
                },
                {
                    "body": "<p>This should do the  trick:</p>\n\n<pre><code>date.Subtract(new DateTime(1970, 1,1)).TotalMilliseconds\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>JavaScript Date constructor accepts number of milliseconds since Unix epoch (1 January 1970 00:00:00 UTC). Here\u2019s C# extension method that converts .Net DateTime object to JavaScript date:</p>\n\n<pre><code>public static class DateTimeJavaScript\n{\n   private static readonly long DatetimeMinTimeTicks =\n      (new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).Ticks;\n\n   public static long ToJavaScriptMilliseconds(this DateTime dt)\n   {\n      return (long)((dt.ToUniversalTime().Ticks - DatetimeMinTimeTicks) / 10000);\n   }\n}\n</code></pre>\n\n<p>JavaScript Usage:</p>\n\n<pre><code>var dt = new Date(&lt;%= DateTime.Today.ToJavaScriptMilliseconds() %&gt;);\nalert(dt);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>From another answer on Stackoverflow is a conversion from Javascript date to .net DateTime:</p>\n\n<pre><code>long msSinceEpoch = 1260402952906; // Value from Date.getTime() in JavaScript\nreturn new DateTime(1970, 1, 1) + new TimeSpan(msSinceEpoch * 10000);\n</code></pre>\n\n<p>But how to do the reverse? DateTime to Javascript Date ?</p>\n\n<p>Thanks,</p>\n\n<p>AJ</p>\n",
            "last_activity_date": 1365120094,
            "question_id": 2404247,
            "score": 30,
            "tags": [
                "c#",
                ".net",
                "javascript"
            ],
            "title": "DateTime to javascript date"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>var chart1; // globally available\n$(document).ready(function() {\n      chart1 = new Highcharts.Chart({\n         chart: {\n            renderTo: 'container',\n            type: 'bar'\n         },\n         title: {\n            text: 'Fruit Consumption'\n         },\n         xAxis: {\n            categories: ['Apples', 'Bananas', 'Oranges']\n         },\n         yAxis: {\n            title: {\n               text: 'Fruit eaten'\n            }\n         },\n         series: [{\n            name: 'Jane',\n            data: [1, 0, 4]\n         }, {\n            name: 'John',\n            data: [5, 7, 3]\n         }]\n      });\n   });\n</code></pre>\n\n<p>The var chart1 is global so you can use to access de highchart object  doesnt matter wich is the container</p>\n\n<pre><code>chart1.redraw();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h2>Highcharts 3.0.1</h2>\n\n<p>Users can use the highcharts plugin</p>\n\n<pre><code>var chart=$(\"#container\").highcharts();\n</code></pre>\n\n<h2>Highcharts 2.3.4</h2>\n\n<p>Read from the <a href=\"http://api.highcharts.com/highstock#Highcharts.charts\">Highcharts.charts</a> array, for version 2.3.4 and later, the index of the chart can be found from the data on the div</p>\n\n<pre><code> var index=$(\"#container\").data('highchartsChart');\n var chart=Highcharts.charts[index];\n</code></pre>\n\n<h2>All versions</h2>\n\n<p>Track charts in a global objec/map by container id</p>\n\n<pre><code>var window.charts={}; \nfunction foo(){\n  new Highcharts.Chart({...},function(chart){  \n      window.charts[chart.options.chart.renderTo] = chart;\n  });\n}\n\nfunction bar(){\n  var chart=window.charts[\"containerId\"];\n}\n</code></pre>\n\n<p>Read Mode @ <a href=\"http://ahumbleopinion.com/highcharts-tips-accessing-chart-object-from-container-id/\">http://ahumbleopinion.com/highcharts-tips-accessing-chart-object-from-container-id/</a> </p>\n\n<h2>P.S.</h2>\n\n<p>Some additions were made in the newer versions of Highcharts since writing this answer and have been <strong>taken from answers from @davertron, @Moes and @Przy, please upvote their comments/answers as they deserve the credit</strong> for these. Adding them here as this accepted answer would be incomplete without these</p>\n",
                    "is_accepted": true,
                    "score": 45
                },
                {
                    "body": "<p>you can do this <code>var chart = $('#testDivId').highcharts();</code></p>\n\n<p><a href=\"http://jsfiddle.net/gh/get/jquery/1.7.2/highslide-software/highcharts.com/tree/master/samples/highcharts/members/axis-setcategories/\">check example on fiddler</a></p>\n",
                    "is_accepted": false,
                    "score": 29
                },
                {
                    "body": "<pre><code>var $chartCont = $('#container').highcharts({...}),\n    chartObj = Highcharts.charts[$chartCont.data('highchartsChart')];\n</code></pre>\n\n<p>chartCont is jQuery Object.\nchartObj is Highchart Chart Object.</p>\n\n<p>This is using Highcharts 3.01</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I found another way of doing it... mainly because I'm using Highcharts that are embedded in OutSystems Platform, and I don't have a way to control the way charts are created.</p>\n\n<p>The way that I found was the following:</p>\n\n<ol>\n<li><p>Give an identifying class to the chart using <code>className</code> attribute</p>\n\n<pre><code>chart: {\n    className: 'LifeCycleMasterChart'\n}\n</code></pre></li>\n<li><p>Define an auxiliary function to get the chart by class name</p>\n\n<pre><code>function getChartReferenceByClassName(className) {\nvar cssClassName = className;\nvar foundChart = null;\n\n$(Highcharts.charts).each(function(i,chart){    \n    if(chart.container.classList.contains(cssClassName)){\n        foundChart = chart;\n        return;\n    }\n});\n\nreturn foundChart;\n</code></pre>\n\n<p>}</p></li>\n<li><p>Use the auxiliary function wherever you need it</p>\n\n<pre><code>var detailChart = getChartReferenceByClassName('LifeCycleDetailChart');\n</code></pre></li>\n</ol>\n\n<p>Hope it helps you!</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>... and with the help of a colleague... a better way to do it is... </p>\n\n<pre><code>getChartReferenceByClassName(className) {\n    var foundChart = $('.' + className + '').eq(0).parent().highcharts();\n\n    return foundChart;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>When i render a highcharts-chart to a div container, how can i get access to the chart object through the div-Container?\ni dont want to make the chart variable global.</p>\n\n<pre><code>        var chart = new Highcharts.Chart({\n            chart: {\n                renderTo: \"testDivId\",\n                                ...\n</code></pre>\n\n<p>I want to access the chart outside of the context above like this (pseudocode), to call functions:</p>\n\n<pre><code>var chart = Highcharts.Chart(\"testDivId\"); //access from id\nchart.redraw();\n</code></pre>\n",
            "last_activity_date": 1419171860,
            "question_id": 13049977,
            "score": 29,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom",
                "highcharts"
            ],
            "title": "How can i get access to a Highcharts chart through a DOM-Container"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Here you can set hidden's value at onchange event of dropdown list : </p>\n\n<pre><code>$('#myDropDown').bind('change', function () {\n  $('#myHidden').val('setted value');\n});\n</code></pre>\n\n<p>your hidden and drop down list : </p>\n\n<pre><code>&lt;input type=\"hidden\" id=\"myHidden\" /&gt;\n\n&lt;select id=\"myDropDown\"&gt;\n   &lt;option value=\"opt 1\"&gt;Option 1&lt;/option&gt;\n   &lt;option value=\"opt 2\"&gt;Option 2&lt;/option&gt;\n   &lt;option value=\"opt 3\"&gt;Option 3&lt;/option&gt;\n&lt;/ select&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is with jQuery.</p>\n\n<pre><code>$('#selectFormElement').change( function() {\n    $('#hiddenFormElement').val('newValue');\n} );\n</code></pre>\n\n<p><strong>In the html</strong></p>\n\n<pre><code>&lt;select id=\"selectFormElement\" name=\"...\"&gt; ... &lt;/select&gt;\n&lt;input type=\"hidden\" name=\"...\" id=\"hiddenFormElement\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just to be different, changed my answer so that this question doesn't have 5 answers with the same code.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n   &lt;title&gt;Page&lt;/title&gt;  \n   &lt;script src=\"jquery-1.3.2.min.js\"&gt;&lt;/script&gt;\n   &lt;script&gt;\n       $(function() {\n           var select = $(\"body\").append('&lt;form&gt;&lt;/form&gt;').children('form')\n                .append('&lt;input type=\"hidden\" value=\"\" /&gt;').children('input[type=hidden]')\n                .attr('id', 'hiddenValue').end()\n                .append('&lt;select&gt;&lt;/select&gt;').children('select')\n                .attr('id', 'dropdown')\n                .change(function() {\n                    alert($(this).val());\n                });\n\n           $.each({ one: 1, two: 2, three: 3, four: 4, five: 5 }, function(txt, val) {\n               select.append('&lt;option value=\"' + val + '\"&gt;' + txt + '&lt;/option&gt;');\n           });\n       });\n&lt;/script&gt;\n&lt;/head&gt;\n   &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you have HTML like this, for example:</p>\n\n<pre><code>&lt;select id='myselect'&gt;\n    &lt;option value='1'&gt;A&lt;/option&gt;\n    &lt;option value='2'&gt;B&lt;/option&gt;\n    &lt;option value='3'&gt;C&lt;/option&gt;\n    &lt;option value='4'&gt;D&lt;/option&gt;\n&lt;/select&gt;\n&lt;input type='hidden' id='myhidden' value=''&gt;\n</code></pre>\n\n<p>All you have to do is <a href=\"http://docs.jquery.com/Events/change#fn\">bind a function to the <code>change</code> event of the select</a>, and do what you need there:</p>\n\n<pre><code>&lt;script type='text/javascript'&gt;\n$(function() {\n    $('#myselect').change(function() {\n        // if changed to, for example, the last option, then\n        // $(this).find('option:selected').text() == D\n        // $(this).val() == 4\n        // get whatever value you want into a variable\n        var x = $(this).val();\n        // and update the hidden input's value\n        $('#myhidden').val(x);\n    });\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>All things considered, if you're going to be doing a lot of jQuery programming, always have the <a href=\"http://docs.jquery.com/Main%5FPage\">documentation</a> open. It is very easy to find what you need there if you give it a chance.</p>\n",
                    "is_accepted": true,
                    "score": 52
                },
                {
                    "body": "<pre><code>&lt;form&gt;\n  &lt;input type=\"hidden\" name=\"selval\"&gt;\n  &lt;select onchange=\"this.form.selval.value=this.selectedIndex\"&gt;\n    &lt;option&gt;val1&lt;/option&gt;\n    &lt;option&gt;val2&lt;/option&gt;\n  &lt;/select&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>pure javascript from within a form</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Plain old Javascript:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\nfunction changeHiddenInput (objDropDown)\n{\n    var objHidden = document.getElementById(\"hiddenInput\");\n    objHidden.value = objDropDown.value; \n}\n\n&lt;/script&gt;\n&lt;form&gt;\n    &lt;select id=\"dropdown\" name=\"dropdown\" onchange=\"changeHiddenInput(this)\"&gt;\n    \t&lt;option value=\"1\"&gt;One&lt;/option&gt;\n    \t&lt;option value=\"2\"&gt;Two&lt;/option&gt;\n    \t&lt;option value=\"3\"&gt;Three&lt;/option&gt;\n    &lt;/select&gt;\n\n    &lt;input type=\"hidden\" name=\"hiddenInput\" id=\"hiddenInput\" value=\"\" /&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I'd fought with this a long time -- $('#myelement').val(x) just wasn't working ... until I realized the # construction requires an ID, not a NAME.  So if \".val(x) doesn't work!\" is your problem, check your element and be sure it has an ID!</p>\n\n<p>It's an embarrassing gotcha, but I felt I had to share to save others much hair-tearing.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>$(function() {\n$('#myselect').change(function() {\n   $('#myhidden').val =$(\"#myselect option:selected\").text();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>New to javascript, but I'm sure this is easy.  Unfortunately, most of the google results haven't been helpful.</p>\n\n<p>Anyway, I want to set the value of a hidden form element through javascript when a drop down selection changes.</p>\n\n<p>I can use jQuery, if it makes it simpler to get or set the values.</p>\n",
            "last_activity_date": 1374889377,
            "question_id": 815687,
            "score": 28,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Javascript to set hidden form value on drop down change"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Not sure if it will be any faster but you could do a multi-update.  Just say <code>update where _id &gt; 0</code> (this will be true for every object) and then set the 'multi' flag to true and it should do the same without having to iterate through the entire collection.</p>\n\n<p>Check this out:\n<a href=\"http://www.mongodb.org/display/DOCS/Server-side+Code+Execution\" rel=\"nofollow\">MongoDB - Server Side Code Execution</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There are two things that you can do.</p>\n\n<ol>\n<li>Send an update with the 'multi' flag set to true.</li>\n<li>Store the function server-side and try using <a href=\"http://www.mongodb.org/display/DOCS/Server-side+Code+Execution\">server-side code execution</a>.</li>\n</ol>\n\n<p>That link also contains the following advice:</p>\n\n<blockquote>\n  <p>This is a good technique for performing batch administrative work. Run mongo on the server, connecting via the localhost interface. The connection is then very fast and low latency. This is friendlier than db.eval() as db.eval() blocks other operations.</p>\n</blockquote>\n\n<p>This is probably the fastest you'll get. You have to realize that issuing 9M updates on a single server is going to be a heavy operation. Let's say that you could get 3k updates / second, you're still talking about running for nearly an hour.</p>\n\n<p>And that's not really a \"mongo problem\", that's going to be a hardware limitation.</p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>I am using the: <a href=\"http://docs.mongodb.org/manual/applications/update/#crud-update-update\">db.collection.update method</a></p>\n\n<pre><code>// db.collection.update( criteria, objNew, upsert, multi ) // --&gt; for reference\ndb.collection.update( { \"_id\" : { $exists : true } }, objNew, upsert, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                }
            ],
            "body": "<p>I have a collection with 9 million records.  I am currently using the following script to update the entire collection:</p>\n\n<p><b>simple_update.js</b></p>\n\n<pre><code>db.mydata.find().forEach(function(data) {\n  db.mydata.update({_id:data._id},{$set:{pid:(2571 - data.Y + (data.X * 2572))}});\n});\n</code></pre>\n\n<p>This is run from the command line as follows:</p>\n\n<pre><code>mongo my_test simple_update.js\n</code></pre>\n\n<p>So all I am doing is adding a new field <b>pid</b> based upon a simple calculation.</p>\n\n<p>Is there a faster way?   This takes a significant amount of time.</p>\n",
            "last_activity_date": 1400946497,
            "question_id": 4146452,
            "score": 27,
            "tags": [
                "javascript",
                "performance",
                "mongodb"
            ],
            "title": "MongoDB - what is the fastest way to update all records in a collection?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Check out node-supervisor.  You can give it a collection of files to watch for changes, and it restarts your server if any of them change.  It also restarts it if it crashes for some other reason.</p>\n\n<p><a href=\"http://github.com/isaacs/node-supervisor\">http://github.com/isaacs/node-supervisor</a></p>\n\n<p>\"Hot-swapping\" code is not enabled in NodeJS because it is so easy to accidentally end up with memory leaks or multiple copies of objects that aren't being garbage collected.  Node is about making your programs accidentally fast, not accidentally leaky.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Nodules is a module loader for Node that handles auto-reloading of modules <em>without</em> restarting the server (since that is what you were asking about):</p>\n\n<p><a href=\"http://github.com/kriszyp/nodules\">http://github.com/kriszyp/nodules</a></p>\n\n<p>Nodules does intelligent dependency tracking so the appropriate module factories are re-executed to preserve correct references when modules are reloaded without requiring a full restart.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>Use this: \n<a href=\"https://github.com/remy/nodemon\" rel=\"nofollow\">https://github.com/remy/nodemon</a></p>\n\n<p>Just run your app like this: <code>nodemon yourApp.js</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>What's \u201cLive Coding\u201d?</p>\n  \n  <p>In essence, it's a way to alter the program while it runs, without\n  restarting it. The goal, however, is to end up with a program that\n  works properly when we (re)start it. To be useful, it helps to have an\n  editor that can be customized to send code to the server.</p>\n</blockquote>\n\n<p>Take a look: <a href=\"http://lisperator.net/blog/livenode-live-code-your-nodejs-application/\" rel=\"nofollow\">http://lisperator.net/blog/livenode-live-code-your-nodejs-application/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to setup my own nodejs server, but I'm having a problem. I can't figure out how to see changes to my application without restarting it. Is there a way to edit the application and see changes live with node.js?</p>\n",
            "last_activity_date": 1367824159,
            "question_id": 2925940,
            "score": 27,
            "tags": [
                "javascript",
                "node.js"
            ],
            "title": "How can I edit on my server files without restarting nodejs when i want to see the changes?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Personally I think the <a href=\"http://json.codeplex.com/\">JSON.NET</a> solution is the best simply because it imposes less on the client.  All the other solutions require additional client parsing or additional client code.</p>\n\n<p>I have switched over to using JSON.NET for all of my ASP .NET code that uses JSON because its a much more customizable library.  </p>\n\n<p>For example I have had to implement JSON data in MVC that conformed to <a href=\"http://code.google.com/apis/chart/interactive/docs/reference.html#DataTable_toJSON\">Google's Chart API</a> (used in combination with Knockout for paging, etc.) and the default <code>JavascriptSerializer</code> simply cannot do it.</p>\n\n<p>In addition with JSON.NET you can customize it to actually spit out full Knockout view models so you don't even need to employ the mapping plugin.</p>\n\n<p>I wrote a sample library called <a href=\"https://github.com/paultyng/FluentJson.NET\">FluentJson.NET</a> which lets you do things in Razor like:</p>\n\n<pre><code>var viewModel = @JsonObject.Create()\n    .AddProperty(\"name\", \"value\")\n    .AddObservable(\"knockoutProperty\", 123)\n</code></pre>\n\n<p>And get:</p>\n\n<pre><code>var viewModel = {\"name\":\"value\",\"knockoutProperty\":ko.observable(123)}\n</code></pre>\n\n<p>So you can get a Knockout view model without any client side hoops to jump through.</p>\n\n<p>You could easily extend something like that to handle date values however you would prefer.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I would suggest a middle man approach through  <code>ko.mapping.fromJS( data, mapping )</code> this would allow you to customize even with a user defined object. </p>\n\n<pre><code>var $data = { _ID : '1', _Created : someDate };  \nvar $mapping = {\n    '_Created' : {\n       update: function (options) {\n           return convertdata( options.data );\n       }\n    }\n}\nvar viewDataModel = ko.mapping( data, mapping );  \nko.applyBindings( viewDataModel );\n</code></pre>\n\n<p>mapping parameter allows you handle changes easily and can easily be leveraged with arrays also. </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'm using the following code to generate short date strings.  I use it for my date strings and jQueryUi Date Picker.  </p>\n\n<pre><code>class T\n    {\n        public DateTime d { get; set; }\n    }\n\nstatic void Main(string[] args)\n    {\n        var k = new T { d = DateTime.Now };\n\n        var formatter = new IsoDateTimeConverter();\n        formatter.DateTimeFormat = \"d\";\n        var s = JsonConvert.SerializeObject(k, formatter);\n    }\n</code></pre>\n\n<p>This generates the following JSON</p>\n\n<pre><code>\"{\"d\":\"4/21/2012\"}\"\n</code></pre>\n\n<p>This results clean JavaScript code for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Just came up on this question because we also started using knockout.js on our MVC3 app.\nSince we already have jQuery datepicker and we need to format dates differently by locale (portal has different languages and different formats are presented per language), so maybe this mashup of technological requirements arise somewhere else and will be useful:</p>\n\n<pre><code>var jsDateFormat = \"@CultureHelper.JsDateFormat\"; // can be something like yy-mm-dd\n\n//...\n\n ko.bindingHandlers.date = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n        var value = valueAccessor();\n        if (value != null) {\n            var jsonDate = new Date(parseInt(valueAccessor().substr(6)));\n            element.innerHTML = jQuery.datepicker.formatDate(jsDateFormat, jsonDate);\n        }\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n    }\n};\n</code></pre>\n\n<p>And in the view then for example:</p>\n\n<pre><code>&lt;p&gt;&lt;label&gt;Date&lt;/label&gt;: &lt;span data-bind=\"date: SentDate\"&gt;&lt;/span&gt;&lt;/p&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A cleaner alternative to @photo_tom's answer is to decorate the property with the IsoDateTimeConverter via the JsonConverter attribute, like so:</p>\n\n<pre><code>public class MyClass\n{\n    [JsonConverter(typeof(IsoDateTimeConverter))]\n    public DateTime Timestamp { get; set; }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The better way to handle dates in knockoutjs is to use moment library and handle dates like boss.\nYou can easily deal with dates like /Date(-62135578800000)/. No need to bother of how your serialize date in controller. </p>\n\n<p><strong>Approach 1 : Directly in view:</strong></p>\n\n<p>Lets say your knockout model gets such date in a observable called sentDate and now it has value /Date(-62135578800000)/. To bind it in view you can do : </p>\n\n<pre><code>&lt;p&gt;&lt;label&gt;Date&lt;/label&gt;: &lt;span data-bind=\"moment(sentDate).format('MM/DD/YYYY')\"&gt;&lt;/span&gt;&lt;/p&gt;\n</code></pre>\n\n<p><strong>Approach 2 : In custom binding</strong> </p>\n\n<pre><code>ko.bindingHandlers.date = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n        var jsonDate = valueAccessor();     \n        var ret = moment(jsonDate).format('MM/DD/YYYY');\n        element.innerHTML = ret;\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel) {\n\n    }\n};\n</code></pre>\n\n<p>Usage same as you had said : </p>\n\n<pre><code>&lt;td data-bind=\"date: sentDate\"&gt;\n&lt;/td&gt;\n</code></pre>\n\n<p><a href=\"http://momentjs.com/\" rel=\"nofollow\">momentjs</a> supports lots of date time formats and utility functions on dates.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I recently started working with KnockoutJs and quickly realized using the default <code>Json(myModelWithADate)</code> resulted in the default json encoding of <code>\\/Date(-62135578800000)\\/</code>  With a bit of research I located four potential ways to handle the display of my dates in dom elements.</p>\n\n<p><em>1) Create a binding that handles the conversion from the Json date to the format you desire</em></p>\n\n<pre><code>ko.bindingHandlers.date = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n        var jsonDate = valueAccessor();\n        var value = new Date(parseInt(jsonDate.substr(6)));\n        var ret = value.getMonth() + 1 + \"/\" + value.getDate() + \"/\" + value.getFullYear();\n        element.innerHTML = ret;\n    },\n    update: function(element, valueAccessor, allBindingsAccessor, viewModel) {\n\n    }\n};\n</code></pre>\n\n<p>Usage</p>\n\n<pre><code>&lt;td data-bind=\"date: DueDate\"&gt;\n&lt;/td&gt;\n</code></pre>\n\n<p><em>2) Return \u201cstrings\u201d from your Controller</em></p>\n\n<pre><code>return Json(new {MyDate = DateTime.Now.ToShortDateString()});\n</code></pre>\n\n<p><em>3) Use the JSON.NET to specify a Date Time format seen over at <a href=\"http://james.newtonking.com/archive/2009/02/20/good-date-times-with-json-net.aspx\">james.newtonking.com</a></em></p>\n\n<p>Example</p>\n\n<pre><code>string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter());\n// {\"Details\":\"Application started.\",\"LogDate\":\"2009-02-15T00:00:00Z\"}\n</code></pre>\n\n<p><em>4) use JSON.parse to handle your dates as seen in this <a href=\"http://stackoverflow.com/a/5954367/181776\">stackoverflow answer.</a></em></p>\n\n<pre><code>JSON.parse(jsonText, function(key, value) {\n    // Check for the /Date(x)/ pattern\n    var match = /\\/Date\\((\\d+)\\)\\//.exec(value);\n    if (match) {\n        var date = new Date(+match[1]); // Convert the ticks to a Date object\n        return humanReadable(date); // Format the date how you want it\n    }\n\n    // Not a date, so return the original value\n    return value;\n});\n</code></pre>\n\n<p>They all appear to work, but I am still struggling with which one feels \u201cright\u201d.  Right now my gut is going with a mix with the binding and returning strings.  As I could see myself extending the binding to handle input with jQuery UI datepicker controls. </p>\n\n<p><em>Is there an accepted practice when handling displaying dates or other types such as currency? Is there another option I am missing that solves this problem?</em></p>\n",
            "last_activity_date": 1404655035,
            "question_id": 8735617,
            "score": 26,
            "tags": [
                "javascript",
                "asp.net",
                "asp.net-mvc",
                "json",
                "knockout.js"
            ],
            "title": "Handling dates with Asp.Net MVC and KnockoutJS"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The <a href=\"http://www.google.com/codesearch#W9JxUuHYyMg/trunk/src/v8natives.js&amp;type=cs&amp;l=1559\" rel=\"nofollow\">V8 source code for bind</a> is implemented in JS.</p>\n\n<p>The OP doesn't emulate <code>bind</code> because it doesn't curry arguments the way <code>bind</code> does.  Here is a fully featured <code>bind</code>:</p>\n\n<pre><code>var emulatebind = function (f, context) {\n  var curriedArgs = Array.prototype.slice.call(arguments, 2);\n  return function () {\n    var allArgs = curriedArgs.slice(0);\n    for (var i = 0, n = arguments.length; i &lt; n; ++i) {\n      allArgs.push(arguments[i]);\n    }\n    return f.apply(context, allArgs);\n  };\n};\n</code></pre>\n\n<p>Obviously, a quick optimization would be to do</p>\n\n<pre><code>return f.apply(context, arguments);\n</code></pre>\n\n<p>instead if <code>curriedArgs.length == 0</code>, because otherwise you have two unnecessary array creations, and an unnecessary copy, but perhaps the native version is really implemented in JS and does not do that optimization.</p>\n\n<p>Caveat: This fully featured <code>bind</code> does not correctly handle some <a href=\"http://www.google.com/codesearch#W9JxUuHYyMg/trunk/test/mjsunit/function-bind.js&amp;q=bind%20package%3ahttp://v8%5C.googlecode%5C.com&amp;type=cs&amp;l=246\" rel=\"nofollow\">corner cases</a> around <code>this</code> argument coercion in strict mode.  That might be another source of overhead.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It's impossible to implement a fully-featured <code>bind</code> in ES5 alone. In particular sections <a href=\"http://es5.github.com/#x15.3.4.5.1\">15.3.4.5.1</a> through 15.3.4.5.3 of the spec cannot be emulated.</p>\n\n<p>15.3.4.5.1, in particular, seems like a possible performance burden: in short bound functions have different  <code>[[Call]]</code> internal properties, so calling them is likely to take an unusual and possibly more complicated code path.</p>\n\n<p>Various other specific un-emulatable features of a bound function (such as <code>arguments</code>/<code>caller</code> poisoning, and possibly the custom <code>length</code> independent of original signature) could possibly add overhead to each call, although I admit it's a bit unlikely. Although it looks like V8 doesn't even implement the poisoning at the moment.</p>\n\n<p><strong>EDIT</strong> this answer is speculation, but my other answer has something more approaching evidence. I still think this is valid speculation, but it's a separate answer, so I'll leave it as such and just refer you to the other one.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Based on <a href=\"http://jsperf.com/bind-vs-emulate/6\">http://jsperf.com/bind-vs-emulate/6</a>, which adds the es5-shim version for comparison, it looks like the culprit is the extra branch and <code>instanceof</code> that the bound version has to perform to test if it's being called as a constructor.</p>\n\n<p>Each time the bound version is run, the code that gets executed is essentially:</p>\n\n<pre><code>if (this instanceof bound) {\n    // Never reached, but the `instanceof` check and branch presumably has a cost\n} else {\n    return target.apply(\n     that,\n     args.concat(slice.call(arguments))\n    );\n\n    // args is [] in your case.\n    // So the cost is:\n    // * Converting (empty) Arguments object to (empty) array.\n    // * Concating two empty arrays.\n}\n</code></pre>\n\n<p><a href=\"http://www.google.com/codesearch#W9JxUuHYyMg/trunk/src/v8natives.js&amp;type=cs&amp;l=1559\">In the V8 source code</a>, this check appears (inside <code>boundFunction</code>) as</p>\n\n<pre><code>if (%_IsConstructCall()) {\n    return %NewObjectFromBound(boundFunction);\n}\n</code></pre>\n\n<p>(<a href=\"http://v8.googlecode.com/svn/trunk/src/v8natives.js\">Plaintext link to v8natives.js</a> for when Google Code Search dies.)</p>\n\n<p>It is a bit puzzling that, for Chrome 16 at least, the es5-shim version is still faster than the native version. And that other browsers have rather varying results for es5-shim vs. native. Speculation: maybe <code>%_IsConstructCall()</code> is even slower than <code>this instanceof bound</code>, perhaps due to crossing native/JS code boundaries. And perhaps other browsers have a much faster way of checking for a <code>[[Construct]]</code> call.</p>\n",
                    "is_accepted": true,
                    "score": 20
                }
            ],
            "body": "<p>When comparing <a href=\"http://jsperf.com/bind-vs-emulate\">this benchmark</a> with chrome 16 vs opera 11.6 we find that</p>\n\n<ul>\n<li>in chrome native bind is almost 5 times slower then an emulated version of bind</li>\n<li>in opera native bind is almost 4 times faster then an emulated version of bind</li>\n</ul>\n\n<p>Where an emulated version of bind in this case is</p>\n\n<pre><code>var emulatebind = function (f, context) {\n    return function () {\n        f.apply(context, arguments);\n    };\n};\n</code></pre>\n\n<p>Are there good reasons why there is such a difference or is this just a matter of v8 not optimizing enough?</p>\n\n<p>Note: that <code>emulatebind</code> only implements a subset but that isn't really relevant. If you have a fully featured and optimised emulated bind the <a href=\"http://jsperf.com/bind-vs-emulate/4\">performance difference in the benchmark</a> still exists.</p>\n",
            "last_activity_date": 1325884210,
            "question_id": 8656106,
            "score": 26,
            "tags": [
                "javascript",
                "google-chrome",
                "v8"
            ],
            "title": "Why is Function.prototype.bind slow?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The best way to find out something like this is to use a tool like <a href=\"http://www.fiddler2.com/fiddler2/\" rel=\"nofollow\">fiddler</a> With this tool you can examine a web request and see exactly what is going on. As Nick says above different browsers may act differently, but at least this will let you know for sure.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Some testing (on Ubuntu 10.04) so far yields</p>\n\n<ul>\n<li><strong>Opera</strong>: <strong>doesn't download</strong> (disabled JS in preferences)</li>\n<li><strong>Firefox</strong>: <strong>doesn't download</strong> (disabled JS in preferences or with NoScript)</li>\n<li><strong>Google Chrome/Chromium</strong>: <strong>downloads</strong> (disabled JS via -disable-javascript parameter)</li>\n<li><strong>SRWare Iron</strong> (Chrome without the nonsense): <strong>doesn't download</strong> (disabled JS via \"Options\" - \"Under The Hood\" - \"Content Settings\" - \"JavaScript\" - \"Content Settings\" - \"Do not allow any site to run JavaScript\")</li>\n<li><strong>IE 8</strong>: <strong>doesn't download</strong></li>\n<li><strong>IE 7</strong>: <strong>downloads</strong></li>\n</ul>\n\n<p><strong>Edit:</strong> Made this a community wiki, so feel free to add your results.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>Does a browser download JS files if the user has JS disabled?</p>\n\n<p>I'm wondering if the browser downloads the JS files and ignores them or ignores the download all together.</p>\n\n<p>Do different browsers act differently in this case?</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>I asked a follow up question to this question <a href=\"http://stackoverflow.com/questions/3411232/alternative-method-to-include-js-files\">here</a>.</p>\n",
            "last_activity_date": 1336573880,
            "question_id": 3401887,
            "score": 25,
            "tags": [
                "javascript",
                "browser",
                "download"
            ],
            "title": "Does a browser download JS files if the user has JS disabled?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Put it inside the <code>client</code> folder such that it is only loaded on the client, no need for jQuery on server.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You are putting jquery plugin javascript file in app folder directly,so that javascript file will be be loaded for client as well as server.  </p>\n\n<p><strong>As per Meteor documentation:</strong><br>\nClient loads javascript from: project/public and project/client<br>\nServer loads javascript from: project/public and project/server folders.</p>\n\n<p>As of v1.0, Meteor is using jQuery internally in the client, so you can use your library directly without adding jQuery. However, it's recommended that you add jQuery to your Meteor project explicitly:</p>\n\n<blockquote>\n  <p>meteor add  jquery</p>\n</blockquote>\n\n<p>The Meteor docs explain in depth <a href=\"http://docs.meteor.com/#structuringyourapp\">how JavaScript files are loaded and where static assets should go</a> (CSS, images).</p>\n\n<p>See also <strong><a href=\"https://github.com/raix/Meteor-community-discussions/issues/14\">how to repackage an existing library for Meteor</a></strong>.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>As of November 2012, the unanimous consensus in the Meteor community is that the best way to use 3rd party libraries is to use the official integration packages from Atmosphere (do a search on <a href=\"http://atmospherejs.com\" rel=\"nofollow\">http://atmospherejs.com</a> for your library name and look for those marked \"official\").</p>\n\n<p>If there is no official integration, you can help contribute one, based on this <a href=\"https://github.com/MeteorCommunity/discussions/issues/14\" rel=\"nofollow\">easy template</a>.</p>\n\n<p><strong>Feb 2015 update</strong>: See <a href=\"http://autopublish.meteor.com\" rel=\"nofollow\">http://autopublish.meteor.com</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to a JavaScript front-end plugin, like jquery.center.js, to a meteor app.</p>\n\n<p>If I put it in my <code>app/</code> directory and refresh the page, I get this error:</p>\n\n<pre><code>Your app is crashing. Here's the latest log.\n\n\nnode.js:201\n    throw e; // process.nextTick error, or 'error' event on first tick\n          ^\nReferenceError: jQuery is not defined\nat app/jquery.center.js:43:1\nat /Users/crapthings/Desktop/app/.meteor/local/build/server/server.js:111:21\nat Array.forEach (native)\nat Function.&lt;anonymous&gt; (/Users/crapthings/Desktop/app/.meteor/local/build/server/underscore.js:76:11)\nat /Users/crapthings/Desktop/app/.meteor/local/build/server/server.js:97:7\nExited with code: 1\nYour application is crashing. Waiting for file change.\n</code></pre>\n",
            "last_activity_date": 1425389817,
            "question_id": 11009971,
            "score": 24,
            "tags": [
                "javascript",
                "meteor"
            ],
            "title": "How can I add third-party JavaScript libraries to a Meteor application?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>are you using jquery and prototype on the same page by any chance?</p>\n\n<p>If so, use jquery noConflict mode, otherwise you are overwriting prototypes $ function</p>\n",
                    "is_accepted": false,
                    "score": 53
                },
                {
                    "body": "<p>thanks man.. I had the same problem and Its now solved.. It works for me ..\nhere is the small guide : <a href=\"http://docs.jquery.com/Using%5FjQuery%5Fwith%5FOther%5FLibraries\" rel=\"nofollow\">http://docs.jquery.com/Using%5FjQuery%5Fwith%5FOther%5FLibraries</a> </p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>You have to add </p>\n\n<p><code>&lt;script&gt;jQuery.noConflict();</code> </p>\n\n<p>after </p>\n\n<pre><code>&lt;script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>After all the Jquery script tag's add</p>\n\n<pre><code>&lt;script&gt;jQuery.noConflict();&lt;/script&gt;\n</code></pre>\n\n<p>to avoid the conflict between Prototype and Jquery. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>i am getting the following error while loading my index page in FF3.0. Sorry, i am unable to paste the script here as it is 2030 lines of code.</p>\n\n<blockquote>\n  <p>element.dispatchEvent is not a function</p>\n</blockquote>\n\n<p>On expansion it gives me below things,</p>\n\n<blockquote>\n  <p>fire()()prototype.js?1 (line 3972)</p>\n  \n  <p>_methodized()()prototype.js?1 (line 246)</p>\n  \n  <p>fireContentLoadedEvent()prototype.js?1 (line 4006)</p>\n  \n  <p>[Break on this error] element.dispatchEvent(event);</p>\n</blockquote>\n\n<p><code>element.dispatchEvent(event);</code> is in line 3972 of prototype.js. I am including prototype.js along with 10s of other js files in my index page.</p>\n\n<p>Has anybody came across this kind of error? Please somebody explain me why this error is showing up.</p>\n",
            "last_activity_date": 1398347329,
            "question_id": 980697,
            "score": 24,
            "tags": [
                "javascript",
                "firebug",
                "element",
                "dispatchevent"
            ],
            "title": "&quot;element.dispatchEvent is not a function&quot; js error caught in firebug of FF3.0"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>To implement lazy loading of controllers in simple way, you have to do the following:</p>\n\n<p>Save <code>$controllerProvider.register</code> (which is the only method to add a controller into already bootstrapped AngularJS app) to variable in your app (<strong>main.js</strong>):</p>\n\n<pre><code>var app = angular.module('app',[\"ngRoute\"]);\napp.config(['$routeProvider', '$controllerProvider',\n    function($routeProvider, $controllerProvider) {\n        // remember mentioned function for later use\n        app.registerCtrl = $controllerProvider.register;\n        //your routes\n        $routeProvider.when('/', {templateUrl: 'partials/home.html'});\n        $routeProvider.when('/process1', {templateUrl: 'partials/process1.html'});\n        $routeProvider.otherwise({redirectTo: '/'});\n    }\n]);\n</code></pre>\n\n<p><strong>process1.html</strong>:</p>\n\n<pre><code>&lt;script src=\"js/process1.js\"&gt;&lt;/script&gt;\n&lt;div ng-controller=\"P1Ctrl\"&gt;\n    {{content}}\n&lt;/div&gt;\n</code></pre>\n\n<p>And now, in <strong>process1.js</strong> you use our <code>registerCtrl</code>:</p>\n\n<pre><code>app.registerCtrl('P1Ctrl', function($scope)\n{\n   $scope.content = '...'; \n});\n</code></pre>\n\n<p><strong>index.html</strong> probably remains the same. Check if your <code>process1.js</code> is being loaded (simply using <code>console.log()</code> right in the body of <code>process1.js</code>, not in <code>P1Ctrl</code> controller). If it isn't, include jQuery before Angular:</p>\n\n<pre><code>&lt;script src=\"lib/jquery/jquery.js\"&gt;&lt;/script&gt;\n&lt;script src=\"lib/angular/angular.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p><strong>IMPORTANT:</strong> This method doesn't work with angular 1.2.0-rc.2 and 1.2.0-rc.3, because this little trick with jQuery doesn't work.</p>\n\n<p>For more complex (and prettier) solution, with <code>.js</code> files as dependencies in route definitions, check that article: <a href=\"http://ify.io/lazy-loading-in-angularjs/\">http://ify.io/lazy-loading-in-angularjs/</a> - it also works with rc.2 and rc.3. Here is plunk implementing described method: <a href=\"http://plnkr.co/edit/ukWikO5TVDtQ1l9WlrGD\">http://plnkr.co/edit/ukWikO5TVDtQ1l9WlrGD</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>Very new to AngularJS, I am guessing the term for what I am trying to do is lazy load. I have looked at several different blogs and I have not found a complete working solution that is purely using AngularJS. </p>\n\n<p>I understand that if I put the <code>&lt;script src=\"js/process1.js\"&gt;&lt;/script&gt;</code> in index.html, all works fine, I am trying to cut down on the amount of js that is pulled down on the initial load.</p>\n\n<p>With the script tag sitting in the partial, it is never loaded so the P1Ctrl is never created. So currently, if a user go into the application and never goes to process55, the user still has the code there for process55 even though it was never used. </p>\n\n<p>Is there a way to load the file and inject the objects created in the process1.js into the app defined in main, at the time process1 route is executed?</p>\n\n<p>index.html:</p>\n\n<pre><code>    &lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"&gt;\n&lt;title&gt;Large Angular App&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"lib/foundation/css/foundation.min.css\" /&gt;\n&lt;/head&gt;\n&lt;body ng-app=\"largeApp\" ng-controller=\"LargeAppController\"&gt;\n\n    &lt;div&gt;\n        &lt;a href=\"#/home\"&gt;Home&lt;/a&gt; | &lt;a href=\"#/process1\"&gt;Process1&lt;/a&gt;\n    &lt;/div&gt;\n    &lt;br/&gt;\n    &lt;br/&gt;\n    &lt;br/&gt;\n\n    &lt;ng-view&gt;Test&lt;/ng-view&gt;\n\n\n    &lt;script type=\"text/javascript\" src=\"lib/jquery/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"lib/angular/angular.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"lib/angular/angular-route.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/main.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>js/main.js:</p>\n\n<pre><code>var app = angular.module(\"largeApp\", ['ngRoute']);\n\nvar appCtrl = app.controller(\"LargeAppController\", function(){});\n\n\napp.config(function ($routeProvider, $controllerProvider) {\n    // save references to the providers\n\n    app.registerCtrl = $controllerProvider.register,\n\n    $routeProvider.when('/', {templateUrl: 'partials/home.html'});\n      //Thinking I need to set up a resolve to fire off a script loader to load js.\n    $routeProvider.when('/process1', {templateUrl: 'partials/process1/process1.html'});\n    $routeProvider.otherwise({redirectTo: '/'});\n});\n</code></pre>\n\n<p>partials/home.html:</p>\n\n<pre><code>   &lt;div&gt;\n    Home Page\n   &lt;/div&gt;\n</code></pre>\n\n<p>partials/process1.html:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/process1/Process1Controller.js\"&gt;&lt;/script&gt;\nProcess 1 {{process1data}}\n</code></pre>\n\n<p>js/process1.js:</p>\n\n<pre><code>console.log(\"I made it here\");\n\napp.registerCtrl('Process1Controller',function($scope){\n            $scope.process1data = \"Hello!\";\n        }\n]);\n</code></pre>\n",
            "last_activity_date": 1386779676,
            "question_id": 19434249,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "angularjs"
            ],
            "title": "Angular JS: How to load js files in partials"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>A more complex solution involve using XHR but it is not supported by all browser.\nYou get the image data from XHR and then you could build a base64 <a href=\"https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Using_XMLHttpRequest?redirectlocale=en-US&amp;redirectslug=Using_XMLHttpRequest#Handling_binary_data\" rel=\"nofollow\"><strong>url</strong></a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try to use the approach described in this <a href=\"http://blogs.adobe.com/webplatform/2012/01/13/html5-image-progress-events/\" rel=\"nofollow\">article</a>\nAlso there is a <a href=\"http://blogs.adobe.com/webplatform/files/ImgProgressSample.html?file=ImgProgressSample.html\" rel=\"nofollow\">live sample</a>. As I understand that is you were looking for.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>With this, you add 2 new functions on the Image() object: </p>\n\n<pre><code> Image.prototype.load = function(url){\n        var thisImg = this;\n        var xmlHTTP = new XMLHttpRequest();\n        xmlHTTP.open('GET', url,true);\n        xmlHTTP.responseType = 'arraybuffer';\n        xmlHTTP.onload = function(e) {\n            var blob = new Blob([this.response]);\n            thisImg.src = window.URL.createObjectURL(blob);\n        };\n        xmlHTTP.onprogress = function(e) {\n            parseInt(thisImg.completedPercentage = (e.loaded / e.total) * 100);\n        };\n        xmlHTTP.onloadstart = function() {\n            thisImg.completedPercentage = 0;\n        };\n        xmlHTTP.send();\n    };\n\n    Image.prototype.completedPercentage = 0;\n</code></pre>\n\n<p>And here you use the load function and append the image on a div.</p>\n\n<pre><code>var img = new Image();\nimg.load(\"url\");\ndocument.getElementById(\"myDiv\").appendChild(img);\n</code></pre>\n\n<p>During the loading state you can check the progress percentage using <code>img.completedPercentage</code>, hope it helps.</p>\n\n<p>Me engrish so bad</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Sebastian's answer is excellent, the best I've seen to this question. There are, however, a few possible improvements. I use his code modified like this:</p>\n\n<pre><code>Image.prototype.load = function( url, callback ) {\n    var thisImg = this,\n        xmlHTTP = new XMLHttpRequest();\n\n    thisImg.completedPercentage = 0;\n\n    xmlHTTP.open( 'GET', url , true );\n    xmlHTTP.responseType = 'arraybuffer';\n\n    xmlHTTP.onload = function( e ) {\n        var h = xmlHTTP.getAllResponseHeaders(),\n            m = h.match( /^Content-Type\\:\\s*(.*?)$/mi ),\n            mimeType = m[ 1 ] || 'image/png';\n            // Remove your progress bar or whatever here. Load is done.\n\n        var blob = new Blob( [ this.response ], { type: mimeType } );\n        thisImg.src = window.URL.createObjectURL( blob );\n        if ( callback ) callback( this );\n    };\n\n    xmlHTTP.onprogress = function( e ) {\n        if ( e.lengthComputable )\n            thisImg.completedPercentage = parseInt( ( e.loaded / e.total ) * 100 );\n        // Update your progress bar here. Make sure to check if the progress value\n        // has changed to avoid spamming the DOM.\n        // Something like: \n        // if ( prevValue != thisImage completedPercentage ) display_progress();\n    };\n\n    xmlHTTP.onloadstart = function() {\n        // Display your progress bar here, starting at 0\n        thisImg.completedPercentage = 0;\n    };\n\n    xmlHTTP.onloadend = function() {\n        // You can also remove your progress bar here, if you like.\n        thisImg.completedPercentage = 100;\n    }\n\n    xmlHTTP.send();\n};\n</code></pre>\n\n<p>Mainly I added a mime-type and some minor details. Use as Sebastian describes. Works well.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>for xmlhttpreq v2 check, use:</p>\n\n<pre><code>var xmlHTTP = new XMLHttpRequest();\nif ('onprogress' in xmlHTTP) {\n // supported \n} else {\n // don't supported\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a way in JS to get the progress of a loading image while the image is being loaded?\nI want to use the new Progress tag of HTML5 to show the progress of loading images.</p>\n\n<p>I wish there was something like:</p>\n\n<pre><code>var someImage = new Image()\nsomeImage.onloadprogress = function(e) { progressBar.value = e.loaded / e.total };\nsomeImage.src = \"image.jpg\";\n</code></pre>\n",
            "last_activity_date": 1412145334,
            "question_id": 14218607,
            "score": 22,
            "tags": [
                "javascript",
                "image",
                "html5",
                "progress"
            ],
            "title": "JavaScript loading progress of an image"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Check out the <a href=\"http://jqueryui.com/demos/autocomplete/#method-search\" rel=\"nofollow\"><code>search</code></a> method documentation:</p>\n\n<blockquote>\n  <p>Triggers a search event, which, when\n  data is available, then will display\n  the suggestions; can be used by a\n  selectbox-like button to open the\n  suggestions when clicked. If no value\n  argument is specified, the current\n  input's value is used. <strong>Can be called\n  with an empty string and minLength: 0\n  to display all items.</strong></p>\n</blockquote>\n\n<p>This does it:</p>\n\n<pre><code>&lt;input id=\"autocomplete\"/&gt;&amp;nbsp;&lt;input id=\"submit\" type=\"submit\"/&gt;\n\nvar source = ['One', 'Two', 'Three', 'Four'];\n\nvar firstVal = source[0];\n\n$(\"input#autocomplete\").autocomplete({\n    minLength: 0,\n    source: source\n}).focus(function() {\n    $(this).autocomplete(\"search\", $(this).val());\n});\n</code></pre>\n\n<p>Try it out: <a href=\"http://jsfiddle.net/karim79/fYVrD/\" rel=\"nofollow\">http://jsfiddle.net/karim79/fYVrD/</a></p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>the suggestion menu shows up for the second time because clicking on an item in suggestion menu causes text box to regain focus, however the text value is not updated when the focus is fired again.After the textbox regains focus, the suggestion menu is fired.</p>\n\n<p>I dont know how we could fix this, but let me know if anyone of you are facing the similar problem</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I had the same problem, and solved it this way.  I think the code below makes it much clearer what is the text that is sent to the autocompletion service when the field gets focus.  In particular, it is clear why it works when the field already contains something.</p>\n\n<pre><code>$(function() {\n$(\"input#autocomplete\").autocomplete({\n        source: \"completion.html\",\n        minLength: 0,\n        select: function( event, ui ) {}\n    });\n});\n$(\"input#autocomplete\").focus(function() {\n    $(this).autocomplete(\"search\", $(this).val());\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This actually works! Tested on IE, FireFox</p>\n\n<pre><code>$(\"input#autocomplete\").autocomplete({\nminLength: 0,\nsource: source,\n}).focus(function() {\n        setTimeout( \"if ($('#input#autocomplete').val().length == 0) $('#input#autocomplete').autocomplete(\\\"search\\\", \\\"\\\"); \",1);\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I understand through experiment why the accepted answer (I up-voted) can be considered slightly incomplete. I've added a little bit of intent to make the UX more combo-box-like:</p>\n\n<pre><code>$('#Carrier').autocomplete(\n{\n    source: '@Url.Action(\"AutocompleteCarrier\", \"Client\")',\n    minLength: 0,\n    select: function (event, data) {\n        $(this).autocomplete('disable');\n    }\n})\n.blur(function(){\n    $(this).autocomplete('enable');\n})\n.focus(function () {\n    $(this).autocomplete('search', '');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I had the same problem and I got how to workaround this issue.<br><br></p>\n\n<p>The problem is that when an option has been selected the input will be focused, this will run <code>search</code> without any filter and will show the <code>autocomplete</code> again.<br><br>\nThis problem doesn't happen when you select by keyboard because the <code>input</code> is already in focus, so the code which is inside <code>focus</code> will not run again.<br><br>\nSo to workaround this issue we have to know when the focus is triggered by any mouse/keyboar event.<br></p>\n\n<pre><code>jQuery(\"input#autocomplete\").focus(function(e) {\n    if(!e.isTrigger) {\n        jQuery(this).autocomplete(\"search\", \"\");\n    }\n    e.stopPropagation();\n});\n</code></pre>\n\n<p><code>e.isTrigger</code> is used by <code>jQuery</code> to identify when <code>event</code> has been triggered automatically or by user.</p>\n\n<p><a href=\"http://jsfiddle.net/ricardolohmann/SdLaP/\" rel=\"nofollow\"><strong>working demo</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using a JQuery UI auto-complete. I am specifying the min length. If I specify <code>minLength:2</code> I need to type 2 characters before the service fires. If I specify <code>minLength:1</code> then I only need to type one character before the source service fires.</p>\n\n<p>However, when I specify <code>minLength:0</code> I still need to type one character. So whats the point of <code>0</code>? how is it any different than <code>1</code>? The expected, and desired, behavior would be for it to fire as soon as the input has focus...?</p>\n\n<p>Ideas?</p>\n\n<p><strong>Update:</strong> For the most part karim's solution below works, however when clicking on the input the options come up and when one is clicked the source is resubmitted the <em>empty string</em> rather than the <em>new option</em> that was just selected, so the auto-complete options that come up after selecting an option are than <em>same as if the box had been empty</em>.</p>\n",
            "last_activity_date": 1421390720,
            "question_id": 4604216,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jquery-ui",
                "autocomplete"
            ],
            "title": "Jquery UI autocomplete; minLength:0 issue"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><code>strtotime(\"dateString\");</code> gets it into the native PHP date format, then you can work with the <code>date()</code> function to get it printed out how you'd like it.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Javascript. As @Andy pointed out, is going to be a bitch when it comes to IE. So it's best to rely on a library that does it consistently. <a href=\"http://www.datejs.com/\" rel=\"nofollow\">DateJS</a> seems like a nice library.</p>\n\n<p>Once the library is added, you would parse and format it as:</p>\n\n<pre><code>var date = Date.parse(\"Fri Apr 09 12:53:54 +0000 2010\");\nvar formatted = date.toString(\"dd-MM-yyyy\");\n</code></pre>\n\n<p>In PHP you can use the date functions or the DateTime class to do the same (available since PHP 5.2.0):</p>\n\n<pre><code>$date = new DateTime(\"Fri Apr 09 12:53:54 +0000 2010\");\necho $date-&gt;format(\"d-m-Y\"); // 09-04-2010\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>JavaScript can parse that date if you remove the <code>+0000</code> from the string:</p>\n\n<pre><code>var dStr = \"Fri Apr 09 12:53:54 +0000 2010\";\ndStr = dStr.replace(\"+0000 \", \"\") + \" UTC\";\nvar d = new Date(dStr);\n</code></pre>\n\n<p>Chrome -- and I suspect some other non IE browsers -- can actually parse it with the <code>+0000</code> present in the string, but you may as well remove it for interoperability.</p>\n\n<p>PHP can parse the date with strtotime:</p>\n\n<pre><code>strtotime(\"Fri Apr 09 12:53:54 +0000 2010\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Cross-browser, time-zone-aware parsing via JavaScript:</p>\n\n<pre><code>var s = \"Fri Apr 09 12:53:54 +0000 2010\";\n\nvar date = new Date(\n    s.replace(/^\\w+ (\\w+) (\\d+) ([\\d:]+) \\+0000 (\\d+)$/,\n        \"$1 $2 $4 $3 UTC\"));\n</code></pre>\n\n<p>Tested on IE, Firefox, Safari, Chrome and Opera.</p>\n",
                    "is_accepted": false,
                    "score": 36
                }
            ],
            "body": "<p>I'm using the twitter API to return a list of status updates and the times they were created. It's returning the creation date in the following format:</p>\n\n<blockquote>\n  <p>Fri Apr 09 12:53:54 +0000 2010</p>\n</blockquote>\n\n<p>What's the simplest way (with PHP or Javascript) to format this like 09-04-2010?</p>\n",
            "last_activity_date": 1411356183,
            "question_id": 2611415,
            "score": 22,
            "tags": [
                "php",
                "javascript",
                "time",
                "twitter",
                "parsing"
            ],
            "title": "Parsing Twitter API Datestamp"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>According to the <a href=\"http://docs.meteor.com/#collections\">docs</a> \"Minimongo currently doesn't have indexes. This will come soon.\"  And looking at the methods available on a Collection, there's no <code>ensureIndex</code>.</p>\n\n<p>You can run <code>meteor mongo</code> for a mongo shell and enable the indexes server-side, but the Collection object still won't know about them.  So the app will let you add multiple instances to the Collection cache, while on the server-side the additional inserts will fail silently (errors get written to the output).  When you do a hard page refresh, the app will re-sync with server</p>\n\n<p>So your best bet for now is probably to do something like:</p>\n\n<pre><code>var count = MyCollection.find({first_id: 'foo', another_id: 'bar'}).count()\nif (count === 0)\n    MyCollection.insert({first_id: 'foo', another_id: 'bar'});\n</code></pre>\n\n<p>Which is obviously not ideal, but works ok.  You could also enable indexing in mongodb on the server, so even in the case of a race condition you won't actually get duplicate records.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>Actually why not use upsert on the server with a Meteor.method and you could also send also track it with a ts:\n// Server Only</p>\n\n<pre><code>Meteor.methods({\n add_only_once = function(id1,id2){\n   SomeCollection.update(\n     {first_id:id1,another_id:id2},{$set:{ts:Date.now()}},{upsert:True});\n }\n});\n</code></pre>\n\n<p>// Client</p>\n\n<pre><code>Meteor.call('add_only_once',doc1._id, doc2._id);\n</code></pre>\n\n<p>// actual code running on server</p>\n\n<pre><code>if(Meteor.is_server) {\n    Meteor.methods({\n        register_code: function (key,monitor) {\n             Codes.update({key:key},{$set:{ts:Date.now()}},{upsert:true});\n        }\n     ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h1>Collection._ensureIndex(index, options)</h1>\n\n<p>Searching inside Meteor source code, I found a bind to <em>ensureIndex</em> called <code>_ensureIndex</code>.\nFor single-key basic indexes, you can follow the example of <code>packages/accounts-base/accounts_server.js</code>, that forces unique usernames on Meteor:</p>\n\n<pre><code>Meteor.users._ensureIndex('username', {unique: 1, sparse: 1});\n</code></pre>\n\n<p>For multi-key \"compound\" indexes:</p>\n\n<pre><code>(function () {\n  Collection._ensureIndex({first_id:1, another_id:1}, {unique: 1});\n}) ();\n</code></pre>\n\n<p>The previous code, placed on server, ensures that indexes were set, whenever you need them.</p>\n\n<h1>Warning</h1>\n\n<p>Notice _ensureIndex implementation warning:</p>\n\n<blockquote>\n  <p>We'll actually design an index API later. For now, we just pass\n  through to Mongo's, but make it synchronous.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>The Smartpackage <a href=\"https://github.com/aldeed/meteor-collection2\" rel=\"nofollow\">aldeed:collection2</a> supports unique indices, as well as schema-validation. Validation will both occure on server and client (reactivly), so you can react on errors on the client.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to create a two column unique index on the underlying mongodb in a meteor app and having trouble.  I can't find anything in the meteor docs.  I have tried from the chrome console.  I have tried from term and even tried to point mongod at the /db/ dir inside .meteor .  I have tried </p>\n\n<p><code>Collection.ensureIndex({first_id: 1, another_id: 1}, {unique: true});</code> variations.</p>\n\n<p>I want to be able to prevent duplicate entries on a meteor app mongo collection.</p>\n\n<p>Wondering if anyone has figured this out?</p>\n\n<p>I answered my own question, what a noob.</p>\n\n<p>I figured it out.  </p>\n\n<ol>\n<li><p>Start meteor server</p></li>\n<li><p>Open 2nd terminal and type <code>meteor mongo</code></p></li>\n</ol>\n\n<p>Then create your index...for example I did these for records of thumbsup and thumbsdown type system.</p>\n\n<pre><code>db.thumbsup.ensureIndex({item_id: 1, user_id: 1}, {unique: true})\ndb.thumbsdown.ensureIndex({item_id: 1, user_id: 1}, {unique: true})\n</code></pre>\n\n<p>Now, just gotta figure out a bootstrap install setup that creates these when pushed to prod instead of manually.</p>\n",
            "last_activity_date": 1415705538,
            "question_id": 10167604,
            "score": 21,
            "tags": [
                "javascript",
                "mongodb",
                "meteor"
            ],
            "title": "How can I add a two column unique id to the mongodb in a meteor app?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>In short:</p>\n\n<ul>\n<li>Read the files using the HTML5 FileReader API with .readAsArrayBuffer</li>\n<li>Create e Blob with the file data and get its url with <a href=\"http://updates.html5rocks.com/2012/06/Don-t-Build-Blobs-Construct-Them\">window.URL.createObjectURL(blob)</a></li>\n<li>Create new Image element and set it's src to the file blob url  </li>\n<li>Send the image to the canvas. The canvas size is set to desired output size</li>\n<li>Get the scaled-down data back from canvas via canvas.toDataURL(\"image/jpeg\",0.7) (set your own output format and quality)</li>\n<li>Attach new hidden inputs to the original form and transfer the dataURI images basically as normal text</li>\n<li>On backend, read the dataURI, decode from Base64, and save it</li>\n</ul>\n\n<p>Source: <a href=\"https://github.com/josefrichter/resize/blob/master/public/preprocess.js\">code</a>.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>As far as i know, you cannot compress images using canvas, you can just resize her. Using canvas.toDataURL will not let you choose the compression ratio to use. You can take a look at canimage that does exactly what you want : <a href=\"https://github.com/nfroidure/CanImage/blob/master/chrome/canimage/content/canimage.js\" rel=\"nofollow\">https://github.com/nfroidure/CanImage/blob/master/chrome/canimage/content/canimage.js</a></p>\n\n<p>In fact, it's often sufficient to just resize the image to decrease it's size but if you want to go more far, you'll have to use newly introduced method file.readAsArrayBuffer to get a buffer containing the image data.</p>\n\n<p>Then, just use a DataView to read it's content according to the image format specification (<a href=\"http://en.wikipedia.org/wiki/JPEG\" rel=\"nofollow\">http://en.wikipedia.org/wiki/JPEG</a> or <a href=\"http://en.wikipedia.org/wiki/Portable_Network_Graphics\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Portable_Network_Graphics</a>).</p>\n\n<p>It'll be hard to deal with image data compression, but it worse a try. In the other hand, you can try to delete the PNG headers or the JPEG exif datas to make your image smaller, it should be easyer to do.</p>\n\n<p>You'll have to create another DataWiew on another buffer and fill it with the filtered image content. Then, you'll just have to encode you're image content to DataURI using window.btoa.</p>\n\n<p>Let me know if you implement something similar, will be interesting to read the code.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p><strong>TL;DR;</strong></p>\n\n<p>Is there a way to compress an image (mostly jpeg, png and gif) directly browser-side, before uploading it ? I'm pretty sure JavaScript can do this, but I can't find a way to achieve it.</p>\n\n<p><br />\nHere's the full scenario I would like to implement:</p>\n\n<ul>\n<li>the user goes to my website, and choose an image via an <code>input type=\"file\"</code> element,</li>\n<li>this image is retrieved via JavaScript, we do some verification such as correct file format, maximum file size etc,</li>\n<li>if every thing is OK, a preview of the image is displayed on the page,</li>\n<li>the user can do some basic operations such as rotate the image by 90\u00b0/-90\u00b0, crop it following a pre-defined ratio, etc, or the user can upload another image and return to step 1,</li>\n<li>when the user is satisfied, the edited image is then compressed and \"saved\" locally (not saved to a file, but in the browser memory/page),-</li>\n<li>the user fill a form with data like name, age etc,</li>\n<li>the user click on the \"Finish\" button, then the form containing datas + compressed image is sent to the server (without AJAX),</li>\n</ul>\n\n<p>The full process up to the last step should be done client side, and should be compatible on latest Chrome and Firefox, Safari 5+ and <strong>IE 8+</strong>. If possible, only JavaScript should be used (but I'm pretty sure this is not possible).</p>\n\n<p>I've not code anything right now, but I've thought about it already. File reading locally is possible via <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/\">File API</a>, image previewing and editing could be done using <a href=\"http://www.html5rocks.com/en/tutorials/canvas/integrating/\">Canvas</a> element, but <strong>I can't find a way to do the image compression part</strong>.</p>\n\n<p>According to <a href=\"http://html5please.com/\">html5please.com</a> and <a href=\"http://caniuse.com/\">caniuse.com</a>, supporting those browser is quite hard (thanks to IE), but could be done using polyfill such as <a href=\"http://flashcanvas.net/\">FlashCanvas</a> and <a href=\"https://github.com/Jahdrien/FileReader\">FileReader</a>.</p>\n\n<p>Actually, the goal is to reduce file size, so I see image compression as a solution. But, I know that uploaded images are going to be displayed on my website, every time at the same place, and I know the dimension of this display area (eg. 200x400). So, I could resize the image to fit those dimensions, thus reducing file size. I have no idea what would be the compression ratio for this technique.</p>\n\n<p>What do you think ? Do you have any advice to tell me ? Do you know any way to compress an image browser-side in JavaScript ? Thanks for your replies.</p>\n",
            "last_activity_date": 1415909209,
            "question_id": 14672746,
            "score": 20,
            "tags": [
                "javascript",
                "image",
                "cross-browser",
                "compression"
            ],
            "title": "How to compress an image via Javascript in the browser?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>To answer the question:</p>\n\n<ul>\n<li>Does anyone know how I can get back to the original settings of Google chrome console?</li>\n</ul>\n\n<p>There are no settings to get the former output of console.log(). You can either:</p>\n\n<ul>\n<li>downgrade the browser (use an older version of chrome or <a href=\"http://www.howtogeek.com/108384/6-alternative-browsers-based-on-google-chrome/\">chromium based alternatives</a>)</li>\n<li>overwrite <code>console.log()</code> by adding your own <code>function log()</code> </li>\n<li>use outerHTML in some cases or upgrade to chrome 25.0.1323.1 (dev channel) where console.log($(#Selector)[0]); returns outHMTL again (see below).</li>\n</ul>\n\n<h3>Chrome 23/24: Output of console.log() changed <strong><em>sometimes</em></strong></h3>\n\n<p>According to user916276 the output of console.log(jQuery-Object) has changed:</p>\n\n<pre><code>// output of console.log($jQuerObject) \n[&lt;div class='element'&gt;&lt;/div&gt;, ...] // in chrome &lt;= 23\n[&lt;div&gt;, context: &lt;div&gt;]            // in chrome 24\n</code></pre>\n\n<p>User <a href=\"http://stackoverflow.com/users/925897/brentonstrine\">brentonstrine</a> made me aware of the fact that my context.outerHTML does not always work.  </p>\n\n<p>I updated my code with <a href=\"http://jsfiddle.net/jXjb2/8/\">a new example</a>. It seems that the existence of <code>jqObject.context.outerHTML</code> depends how you pass the jQuery-Object to the function.\nI tested it with <a href=\"http://www.chromium.org/getting-involved/dev-channel\">chrome dev channel</a> (25.0.1323.1) and two chromium based versions (21, 22). </p>\n\n<pre><code>console.log($(this)); // old chrome versions \n// new chrome version &gt;23\n// if you pass this to the function see my getThis(_this) function\nconsole.log($(this).context.outerHTML); \n// if you use a jQuery selector\nconsole.log($(this)[0]);   // at least in chrome build 25.0.1323.1\n</code></pre>\n\n<p>To avoid misunderstandings. This answer is about the changed behaviour of writing a jQuery object to the <a href=\"http://paulirish.com/2011/a-re-introduction-to-the-chrome-developer-tools/\">inbuild console</a> of the recent  google chrome browsers (version 24, 25). </p>\n\n<h3>Chrome source code</h3>\n\n<p>I took a look into the chrome source code changes <a href=\"http://trac.webkit.org/changeset/133614/trunk/Source/WebCore/page/Console.cpp\">at the Console.cpp</a> and in the <a href=\"http://trac.webkit.org/timeline?from=2012-11-06T08:14:27-08:00&amp;precision=second\">timeline view</a> to find out about the changes in the <a href=\"http://trac.webkit.org/wiki/WebInspector\">WebInspector</a>. I could not find the exact change that is responsible for the changed behaviour of <code>console.log()</code>. I assume that it has to do with <a href=\"http://trac.webkit.org/changeset/133150/trunk/Source/WebCore/inspector/front-end/ConsoleView.js\">changes to ConsoleView.js</a>, <a href=\"http://trac.webkit.org/changeset/127412/trunk/Source/WebCore/inspector/front-end/ConsoleView.js\">2</a>, <a href=\"http://trac.webkit.org/changeset/126709/trunk/Source/WebCore/inspector/front-end/ConsoleView.js\">3</a>.  If anyone would like to initiate that <code>console.log()</code> returns the same output as in Chrome 21, 22 he could file a bug. This <a href=\"https://bugs.webkit.org/show_bug.cgi?id=101021\">two</a> <a href=\"https://bugs.webkit.org/show_bug.cgi?id=99941\">bugs</a> could be used as a template to place the change request.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>The output is correct as $(this) refers to jQuery selection object, not the underlying DOM object(s).</p>\n\n<p>If you wish to output the raw DOM element(s), you can try the following:</p>\n\n<pre><code> console.log( $( this ).get(0) ) \n // Or just \n console.log( this )\n</code></pre>\n\n<p>Or you can also do:</p>\n\n<pre><code> console.log( $( this ).html() )  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>By default , chrome now returns an object with all details pertaining to that element when u do a console.log($(element)). </p>\n\n<p>an example of what it actually returns </p>\n\n<pre><code>  console.log($('input:first'));\n  [&lt;input&gt;, prevObject: c.fn.c.init[1], context: #document, selector: \"input:first\"] \n  0: &lt;input&gt;\n  context: #document\n  length: 1\n  prevObject: c.fn.c.init[1]\n  selector: \"input:first\"\n  __proto__: Object[0]\n</code></pre>\n\n<p>so if u do  console.log($('input:first')[0]) u would get ur desired Result. </p>\n\n<p>hope this helps </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is my sollution, to wrap console.log in my own function, it has some shortcomings, like it doesn't tell you the line number the problem occured in but I make up by outputing significan log messages... if anyone want to improve on it feel free!</p>\n\n<p>Note: <code>underscore.js</code> is a dependency, I'm sure you can do it in pure JS, but I always depend on underscore.js :)</p>\n\n<pre><code>// wrap the console.log function\nvar log = function(data) {\n    // switch setting\n    var allowed = true;\n    if (allowed) {\n        console.log(\"LOG\");\n        console.log(typeof data);\n        if (typeof data == \"object\" || typeof data == \"array\") {\n            _.each(data, function(item) {\n                console.log(item);\n            });\n        } else {\n            console.log(data);\n        }\n    };\n</code></pre>\n\n<p>The take home message here is:</p>\n\n<pre><code>if (typeof data == \"object\" || typeof data == \"array\") {\n            _.each(data, function(item) {\n                console.log(item);\n            });\n        } else {\n            console.log(data);\n        }\n</code></pre>\n\n<p>Then you just do: <code>log($(\".some.class\"));</code> and get the elements as <code>old school</code> DOM objects in the console.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>console.log.apply(console, [].slice.call($('p'), 0))\n-&gt; \u25ba&lt;p&gt;\u2026&lt;/p&gt;, \u25ba&lt;p&gt;\u2026&lt;/p&gt;, &lt;p class=\"label-key\"&gt;viewed&lt;/p&gt;\n</code></pre>\n\n<p><strong>Update:</strong> <a href=\"http://stackoverflow.com/questions/13268015/console-log-not-outputting-html-of-jquery-selection-object/13594327#13594327\">Simpler solution</a>.</p>\n\n<hr>\n\n<p>Rationale behind the console output change:</p>\n\n<blockquote>\n  <p>What was the rationale behind the request to not include\n  attributes/textContent?</p>\n</blockquote>\n\n<p>Response from pfeldman, DevTools developer:</p>\n\n<blockquote>\n  <p>people that dump DOM lists appreciate the dense look.</p>\n</blockquote>\n\n<p><a href=\"https://code.google.com/p/chromium/issues/detail?id=50316#c37\" rel=\"nofollow\">crbug.com/50316</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>console.log.apply(console, $(this));</code></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>My edit to @brentonstrine's answer got rejected, so I'm going to make a new answer for it. But see <a href=\"http://stackoverflow.com/a/15802584/117471\">my other answer on this page</a> for an <strong>even better solution</strong>.</p>\n\n<p>This demo shows you why we care about logging this new way versus the normal way...</p>\n\n<pre><code>// paste this whole block into the console of THIS PAGE and see a working demo!\n\nvar domlog = function(obj){ console.log.apply(console, obj); };\n\ndomlog($('#answer-13594327'));\n\n// compare ^that^ to the normal element logging...\n\nvar normallog = function(obj){ console.log(obj); };\n\nnormallog($('#answer-13594327'));\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/4NO9U.png\" alt=\"Demo of the 2 different loggin metods\"></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is an even better solution than <code>console.log.apply(console, obj);</code> that I just discovered. Check out <code>console.dirxml(obj);</code> which gives nearly the same output when <code>obj</code> is a jQuery selector result set. However, only the latter works when <code>obj</code> is a specific element from a jQuery selector result set.</p>\n\n<p>Here is a demo you can do on this page...</p>\n\n<pre><code>var i=0\nconsole.log(++i);\nconsole.dirxml($$('.answer'));\nconsole.log(++i);\nconsole.dirxml($$('.answer')[0]);\nconsole.log(++i);\nconsole.log.apply(console, $$('.answer'));\nconsole.log(++i);\nconsole.log.apply(console, $$('.answer')[0]);\n</code></pre>\n\n<p>You'll see that #4 logs \"undefined\".</p>\n\n<p><img src=\"http://i.imgur.com/oBdOEN6.png\" alt=\"Performed at the console on this very page.\"></p>\n\n<p>So, from now on I'm going to use <code>console.dirxml</code> because it's simple, effective, and built in. Having to pass <code>console</code> as the first argument to <code>apply</code> never sat right with me anyway.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I got a problem when using <code>console.log</code> in Google Chrome. Suddenly when I was outputting a element like <code>$(this)</code> it was display like:</p>\n\n<pre><code>[&lt;div&gt;, context: &lt;div&gt;]\n</code></pre>\n\n<p>or</p>\n\n<pre><code>[jQuery.fn.jQuery.init[1]]\n</code></pre>\n\n<p>in the console. ( Both came from the same row: <code>console.log($(this))</code> )</p>\n\n<p>This problem arose yesterday from nowhere. There ain't a problem with the code. I logged the exact same thing on an other computer and there it is being displayed like:</p>\n\n<pre><code>[&lt;div class='element'&gt;&lt;/div&gt;, ...]\n</code></pre>\n\n<p><strong>Update:</strong> the new Chrome version changes the output of <code>console.log()</code></p>\n\n<p>Does anyone know how I can get back to the original settings of Google Chrome console?</p>\n",
            "last_activity_date": 1393003535,
            "question_id": 13268015,
            "score": 20,
            "tags": [
                "javascript",
                "google-chrome",
                "console"
            ],
            "title": "console.log() not outputting HTML of jQuery selection object"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>function sample() {\n    alert(\"This is sample function\");\n}\n\n$(function() {\n    $(\"#button\").click(function() {\n        setTimeout(sample, 2000);\n    });\n\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/alexdickson/nrqnY/\">jsFiddle</a>.</p>\n\n<p>If you want to encapsulate <code>sample()</code> there, wrap the whole thing in a self invoking function <code>(function() { ... })()</code>.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Since you declare <code>sample</code> inside the anonymous function you pass to <code>ready</code>, it is scoped to that function.</p>\n\n<p>You then pass a <em>string</em> to <code>setTimeout</code> which is <code>eval</code>ed after 2 seconds. This takes place outside the current scope, so it can't find the function.</p>\n\n<p><strong>Only pass <em>functions</em> to <code>setTimeout</code></strong>, using eval is inefficient and hard to debug.</p>\n\n<pre><code>setTimeout(sample,2000)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>Very easy, just call the function within a specific amount of milliseconds using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.setTimeout\" rel=\"nofollow\">setTimeout()</a></p>\n\n<pre><code>setTimeout(myFunction, 2000)\n\nfunction myFunction() {\n    alert('Was called after 2 seconds');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<h3>JavaScript:</h3>\n\n<pre><code>$(document).ready(function(){\n\n    function sample() {\n       alert(\"This is sample function\");\n    }\n\n    $(\"#button\").click(function(){\n        t = setTimeout(\"sample()\",2000);\n    });\n\n});\n</code></pre>\n\n<p><strong>HTML:</strong></p>\n\n<pre><code>&lt;input type=\"button\" id=\"button\" value=\"Call sample function with delay\"&gt;\n</code></pre>\n\n<p>Once I click the button, <code>sample()</code> function is not called with a delay of 2 seconds. I don't know what's wrong.</p>\n\n<p>How to call JavaScript function using <code>setTimeout()</code> via jQuery?</p>\n",
            "last_activity_date": 1403656683,
            "question_id": 5322344,
            "score": 19,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "To delay JavaScript function call using jQuery"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>One solution that should always work is to put your <code>X-UA-Compatible</code> in HTTP headers. Also, your <code>&lt;!DOCTYPE&gt;</code> should be specified at the top of your HTML document (<code>&lt;!DOCTYPE html&gt;</code> is the easiest one).</p>\n\n<p>If you put your <code>X-UA-Compatible</code> declaration inside the <code>meta</code> tag you can run into the following problems:</p>\n\n<ol>\n<li><a href=\"http://blogs.msdn.com/b/ieinternals/archive/2011/07/18/optimal-html-head-ordering-to-avoid-parser-restarts-redownloads-and-improve-performance.aspx\" rel=\"nofollow\"><code>X-UA-Compatible</code> is ignored unless it's present inside the first 4k of you page.</a> If you put it somewhere in the bottom of your <code>head</code> section (or in the <code>body</code>) move it to top. The best place for it is right after encoding and language declarations.</li>\n<li><p><code>X-UA-Compatible</code> is ignored if it's put inside IE conditional comments. For example:</p>\n\n<pre><code>&lt;!--[if IE]&gt;\n    &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"&gt;\n&lt;![endif]--&gt;\n</code></pre>\n\n<p>In this case you should remove conditional comments.</p></li>\n<li><p>Also, you shouldn't have any text before the <code>doctype</code> declaration. <a href=\"http://msdn.microsoft.com/en-us/library/community/history/cc288325%28v=vs.85%29.aspx?id=26\" rel=\"nofollow\">If you've got any HTML comments there, for example, the IE will switch to quirks mode.</a></p></li>\n<li><p>Finally, check if you're viewing this site from the intranet. By default Compatibility View is enabled for Intranet sites.</p></li>\n</ol>\n\n<p>I suggest set <code>X-UA-Compatible</code> header for you page and then see if your site is still switching to quirks mode. In that case you should check your markup and try to fix any <a href=\"http://validator.w3.org/nu/\" rel=\"nofollow\">HTML validator errors</a> until it's back to Standards Mode.</p>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<p>I have a problem with opening my website in IE9. When I try to open my site I get this error in dev tools:</p>\n\n<pre><code>HTML1113: Document mode restart from Quirks to IE9 Standards\n</code></pre>\n\n<p>I googled and found an answer that suggested to use this:</p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" /&gt;\n</code></pre>\n\n<p>or </p>\n\n<pre><code>&lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=IE9\" /&gt;\n</code></pre>\n\n<p>...but these do not work and I get the following message this time:</p>\n\n<pre><code>HTML1115: X-UA-Compatible META tag ('IE=Edge') ignored because document mode is already finalized.\n</code></pre>\n\n<p>What is my problem? I read several articles like <a href=\"http://blogs.msdn.com/b/ie/archive/2010/06/16/ie-s-compatibility-features-for-site-developers.aspx?Redirected=true\">IE\u2019s Compatibility Features for Site Developers</a> by Microsoft and traced my site with <a href=\"http://ieblog.members.winisp.net/misc/How%20IE9%20Determines%20Document%20Mode.svg\">Determining IE9\u2019s Document Mode</a> flowchart and use all suggestions relating to <strong>!doctype</strong> on these sites but no-one could solve my problem and my IE engine reset after the page opened. </p>\n\n<p>I develop my site with ASP.NET 4 on Windows Server 2008.\nHow can I fix this issue?</p>\n",
            "last_activity_date": 1418401159,
            "question_id": 11095319,
            "score": 18,
            "tags": [
                "javascript",
                "asp.net",
                "internet-explorer-9",
                "doctype"
            ],
            "title": "How to fix Document mode restart in IE 9"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>When dealing with performance of pages, there are a few important methods to keeping your page load times quick.</p>\n\n<h2>CSS Organization</h2>\n\n<p>Try to minimize inline CSS styles and keep commonly used CSS rules together in external stylesheets. This helps keep reusable styles for later, and the lack of style attributes makes your HTML page download faster.</p>\n\n<h2>Minification</h2>\n\n<p>Since your CSS and Javascript includes have to be downloaded from your server to the client, smaller is always better. Yahoo has a great tool called <a href=\"http://developer.yahoo.com/yui/compressor/\">YUI Compressor</a> which can be used to reduce the size of your CSS and JavaScript includes. Popular libraries such as JQuery will also have both minified and development versions of their libraries available. Just remember to keep a copy of the non-minified version for debugging purposes!</p>\n\n<h2>Image Compression</h2>\n\n<p>You may want to consider compressing your images. For JPG files, try setting around 80% compression, and seeing how the result looks. You can play around with the levels until you get a decent result. For PNG files, you may want to look at some of the <a href=\"http://www.olegkikin.com/png_optimizers/\">PNG compression tools available</a>.</p>\n\n<h2>CSS Sprites</h2>\n\n<p>An interesting tactic in saving HTTP requests is the usage of CSS Sprites. The basic theory is instead of downloading multiple images, you simply download one large image with all of your images contained within it. This means instead of making continuous requests for image files, the browser just needs to make a single request. The tutorial <a href=\"http://css-tricks.com/css-sprites/\">CSS Sprites: What They Are, Why They\u2019re Cool, and How To Use Them</a> has some good information on the process, including how to convert from an existing multi-image layout.</p>\n\n<h2>Resource Ordering</h2>\n\n<p>When it comes to ordering your CSS and Javascript, you want your CSS to come first. The reason is that the rendering thread has all the style information it needs to rendering the page. If the Javascript includes come first, the Javascript engine has to parse it all before continuing on to the next set of resources. This means the rendering thread can't completely show the page, since it doesn't have all the styles it needs. Here is an example:</p>\n\n\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"/css/global.css\" /&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"/css/forms.css\" /&gt;\n&lt;script type=\"text/javascript\" src=\"/js/formvalidation.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<h2>Tracking / Affiliate Script Locations</h2>\n\n<p>Many sites utilize tracking and/or affiliate scripts. If there is an issue with the remote host, and the scripts are included in the <code>&lt;head&gt;</code> tag, the browser has to wait for the downloads to occur before moving along. While such things are nice to have, they shouldn't slow down the user experience. It is recommended to move such scripts towards the bottom of the page, just before the <code>&lt;/body&gt;</code> tag:</p>\n\n\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;!-- HTML Here --&gt;\n&lt;script type=\"text/javascript\"&gt;\nvar gaJsHost = ((\"https:\" == document.location.protocol) ? \"https://ssl.\" : \"http://www.\");\ndocument.write(unescape(\"%3Cscript src='\" + gaJsHost + \"google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E\"));\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<h2>Missing Assets</h2>\n\n<p>Missing CSS and javascript files means the browser has to needlessly communicate with the server to grab files that don't exist. Depending on where the server is and how many files are missing, that could add up to slower page loads.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>To start off, you should use a tool such as YSlow (Firefox and Chrome extensions available) or <a href=\"http://pagespeed.googlelabs.com/\" rel=\"nofollow\">Googe Page Speed Online</a>. There are others are out there I'm sure. These tools will grade your sites performance in different areas and provide tips on how you can improve them.</p>\n\n<p>After using these tools for a while you'll start to change the way you build your pages and factor in these extra steps. </p>\n\n<p>You could also look at async script loaders for your JavaScript files. A popular one is head.js. A search on Google should give you tones more articles on more in depth techniques such as this.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>use PHP's flush function after your head tag</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;/head&gt;\n&lt;?php flush(); ?&gt;\n&lt;body&gt;\n&lt;/body&gt;\n&lt;html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The <a href=\"http://html5boilerplate.com/\" rel=\"nofollow\">HTML5 boilerplate</a> will get you far without any sweat.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Minify your HTML source, CSS source, and JS Source. Gzip if possible.</p>\n\n<p><a href=\"http://code.google.com/p/htmlcompressor/\" rel=\"nofollow\">http://code.google.com/p/htmlcompressor/</a></p>\n\n<p>For JavaScript try: <a href=\"http://code.google.com/closure/compiler/\" rel=\"nofollow\">http://code.google.com/closure/compiler/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Mandatory reference.</p>\n\n<p><a href=\"http://developer.yahoo.com/performance/rules.html\" rel=\"nofollow\">Best Practices for Speeding Up Your Web Site</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><em><strong>Note</em></strong>: This is meant to be a community wiki post</p>\n\n<p>To try and make user experience the best possible, what can I do to make the loading of my HTML pages more efficient?</p>\n\n\n",
            "last_activity_date": 1305456621,
            "question_id": 6005827,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "css",
                "performance"
            ],
            "title": "What can I do to decrease load times of HTML pages?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Well, that makes sense, since you are telling the browser that the HTML and script are both using UTF-8, but then you specify a character that is not UTF-8 encoded.  When you specify \"charset=UTF-8\", you are respoonsible for making sure the bytes transmitted to the browser are actually UTF-8.  The web server and and browser will not do it for you in this situation.</p>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>Could you just use <code>\\u2028</code>, instead of real character?, because U+2028 is <a href=\"http://www.fileformat.info/info/unicode/char/2028/index.htm\" rel=\"nofollow\">unicode line seperator</a>, browsers would think that as real line break character like <code>\\n</code>.</p>\n\n<p>We cannot do like </p>\n\n<pre><code>x = \"\n\n\"\n</code></pre>\n\n<p>Right? but we do <code>x = \"\\n\"</code>, so might be same concept.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Alright,to answer my own question.</p>\n\n<p>Normally a JSON parser strips out these problem characters, because I was retrieving JSONP I wasn't using a JSON parser, in stead the browser tried to parse the JSON itself as soon as the callback was called.</p>\n\n<p>The only way to fix it was to make sure the server never returns these characters when requesting a JSONP resource.</p>\n\n<p>p.s.\nMy question was about u2028, according to <a href=\"https://github.com/douglascrockford/JSON-js/blob/4982ffbecf8175f233b0c9626bc8629c70faf5a2/json2.js#L371\" rel=\"nofollow\">Douglas Crockford's json2 library</a> all of the following characters can cause these problems:</p>\n\n<p>'\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff'</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Yes, it's a feature of the JavaScript language, documented in the ECMAScript standard (3rd edition section 7.3), that the U+2028 and U+2029 characters count as line endings. Consequently a JavaScript parser will treat any unencoded U+2028/9 character in the same way as a newline. Since you can't put a newline inside a string literal, you get a syntax error.</p>\n\n<p>This is an unfortunate oversight in the design of JSON: it is not actually a proper subset of JavaScript. Raw U+2028/9 characters are valid in string literals in JSON, and will be accepted by <code>JSON.parse</code>, but not so in JavaScript itself.</p>\n\n<p>Hence it is only safe to generate JavaScript code using a JSON parser if you're sure it explicitly <code>\\u</code>-escapes those characters. Some do, some don't; many <code>\\u</code>-escape all non-ASCII characters, which avoids the problem.</p>\n",
                    "is_accepted": true,
                    "score": 31
                }
            ],
            "body": "<p>Whenever I use the \\u2028 character literal in my javascript source with the content type set to \"text/html; charset=utf-8\" I get a javascript parse errors.</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n   \"http://www.w3.org/TR/html4/strict.dtd\"&gt;\n\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n    &lt;title&gt;json&lt;/title&gt;\n\n    &lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n    var string = '\u2028    ';\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>If the <code>&lt;meta http-equiv&gt;</code> is left out everything works as expected. I've tested this on Safari and Firefox, both exhibit the same problem.</p>\n\n<p>Any ideas on why this is happening and how to properly fix this (without removing the encoding)?</p>\n\n<p>Edit:\nAfter some more research, the specific problem was that the problem character was returned using JSONP. This was then interpreted by the browser, which reads u2028 as a newline and throws an error about an invalid newline in a string.</p>\n",
            "last_activity_date": 1425069587,
            "question_id": 2965293,
            "score": 18,
            "tags": [
                "javascript",
                "unicode"
            ],
            "title": "Javascript parse error on &#39;\\u2028&#39; unicode character"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Decorate your [WebMethod] with another attribute:</p>\n\n<pre><code>[ScriptMethod(ResponseFormat = ResponseFormat.Json)]\n</code></pre>\n\n<p>I believe this is in System.Web.Services.Scripting...</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When using AJAX.NET I always make the input parameter just a plain old object and then use the javascript deserializer to covert it to whatever type I want. At least that way you can  debug and see what type of object the web method in is recieving.</p>\n\n<p>You need to convert your object to a string when using jQuery</p>\n\n<p>&lt;%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"WebForm1.aspx.cs\" Inherits=\"CustomEquip.WebForm1\" %></p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\" &gt;\n&lt;head runat=\"server\"&gt;\n    &lt;title&gt;&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form id=\"form1\" runat=\"server\"&gt;\n        &lt;asp:ScriptManager ID=\"sm\" runat=\"server\" EnablePageMethods=\"true\"&gt;\n            &lt;Scripts&gt;\n                &lt;asp:ScriptReference Path=\"~/js/jquery.js\" /&gt;\n            &lt;/Scripts&gt;\n        &lt;/asp:ScriptManager&gt;\n        &lt;div&gt;&lt;/div&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&lt;script type=\"text/javascript\" language=\"javascript\"&gt;\n    var items = [{ compId: \"1\", formId: \"531\" },\n        { compId: \"2\", formId: \"77\" },\n        { compId: \"3\", formId: \"99\" },\n        { status: \"2\", statusId: \"8\" },\n        { name: \"Value\", value: \"myValue\"}];\n\n        //Using Ajax.Net Method\n        PageMethods.SubmitItems(items,\n            function(response) { var results = response.d; },\n            function(msg) { alert(msg.d) },\n            null);\n\n        //using jQuery ajax Method\n        var options = { error: function(msg) { alert(msg.d); },\n                        type: \"POST\", url: \"WebForm1.aspx/SubmitItems\",\n                        data: {\"items\":items.toString()}, // array to string fixes it *\n                        contentType: \"application/json; charset=utf-8\",\n                        dataType: \"json\",\n                        async: false, \n                        success: function(response) { var results = response.d; } }; \n        jQuery.ajax(options);\n&lt;/script&gt;\n</code></pre>\n\n<p>And the Code Behind</p>\n\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Services;\nusing System.Web.Script.Serialization;\nusing System.Web.Script.Services;\nusing System.Web.UI;\nusing System.Web.UI.WebControls;\n\nnamespace CustomEquip\n{\n    [ScriptService]\n    public partial class WebForm1 : System.Web.UI.Page\n    {\n        protected void Page_Load(object sender, EventArgs e)\n        {\n\n        }\n        [WebMethod]\n        public static void SubmitItems(object items)\n        {\n            //break point here\n            List&lt;object&gt; lstItems = new JavaScriptSerializer().ConvertToType&lt;List&lt;object&gt;&gt;(items);\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>In your example, it should work if your data parameter is:</p>\n\n<pre><code>data: \"{'items':\" + JSON.stringify(items) + \"}\"\n</code></pre>\n\n<p>Keep in mind that you need to send a JSON string to ASP.NET AJAX.  If you specify an actual JSON object as jQuery's data parameter, it will serialize it as &amp;k=v?k=v pairs instead.</p>\n\n<p>It looks like you've read it already, but take another look at my <a href=\"http://encosia.com/2009/04/07/using-complex-types-to-make-calling-services-less-complex/\">example of using a JavaScript DTO with jQuery, JSON.stringify, and ASP.NET AJAX</a>.  It covers everything you need to make this work.</p>\n\n<p><em>Note:  You should never use JavaScriptSerializer to manually deserialize JSON in a \"ScriptService\" (as suggested by someone else).  It automatically does this for you, based on the specified types of the parameters to your method.  If you find yourself doing that, you are doing it wrong.</em></p>\n",
                    "is_accepted": false,
                    "score": 44
                },
                {
                    "body": "<p>see link <a href=\"http://www.andrewrowland.com/article/display/consume-dot-net-web-service-with-jquery\" rel=\"nofollow\">http://www.andrewrowland.com/article/display/consume-dot-net-web-service-with-jquery</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The following is a code snippet from our project - I had trouble with not wrapping the object as a string and also with Date values - hopefully this helps someone:</p>\n\n<pre><code>        // our JSON data has to be a STRING - need to send a JSON string to ASP.NET AJAX. \n        // if we specify an actual JSON object as jQuery's data parameter, it will serialize it as ?k=v&amp;k=v pairs instead\n        // we must also wrap the object we are sending with the name of the parameter on the server side \u2013 in this case, \"invoiceLine\"\n        var jsonString = \"{\\\"invoiceLine\\\":\" + JSON.stringify(selectedInvoiceLine) + \"}\";\n\n        // reformat the Date values so they are deserialized properly by ASP.NET JSON Deserializer            \n        jsonString = jsonString.replace(/\\/Date\\((-?[0-9]+)\\)\\//g, \"\\\\/Date($1)\\\\/\");\n\n        $.ajax({\n            type: \"POST\",\n            url: \"InvoiceDetails.aspx/SaveInvoiceLineItem\",\n            data: jsonString,\n            contentType: \"application/json; charset=utf-8\",\n            dataType: \"json\"\n        });\n</code></pre>\n\n<p>The server method signature looks like this:</p>\n\n<pre><code>    [WebMethod]\n    public static void SaveInvoiceLineItem(InvoiceLineBO invoiceLine)\n    {\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>This is the way you define your data (JSON)</p>\n\n<pre><code>data: { 'items': items },\n</code></pre>\n\n<p>and the this the way it should be</p>\n\n<pre><code>data: '{ items: \" '+items +' \"}',\n</code></pre>\n\n<p>basically you are serializing the parameter.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've been working on this for 3 hours and have given up.\ni am simply trying to send data to an asp.net web method, using jQuery.\nThe data is basically a bunch of key/value pairs. so i've tried to create an array and adding the pairs to that array.</p>\n\n<p>My WebMethod(aspx.cs) looks like this (this may be wrong for what i'm building in javascript, i just dont know):  </p>\n\n<pre><code>   [WebMethod]\n    public static string SaveRecord(List&lt;object&gt; items)\n    .....\n</code></pre>\n\n<p>Here is my sample javascript:</p>\n\n<blockquote>\n  <p>var items = new Array;</p>\n\n<pre><code>    var data1 = { compId: \"1\", formId: \"531\" };\n    var data2 = { compId: \"2\", formId: \"77\" };\n    var data3 = { compId: \"3\", formId: \"99\" };\n    var data4 = { status: \"2\", statusId: \"8\" };\n    var data5 = { name: \"Value\", value: \"myValue\" };\n\n    items[0] = data1;\n    items[1] = data2;\n    items[2] = data3;\n    items[3] = data4;\n    items[4] = data5;\n</code></pre>\n</blockquote>\n\n<pre><code>Here is my jQuery ajax call:\n\nvar options = {\n        error: function(msg) {\n            alert(msg.d);\n        },\n        type: \"POST\",\n        url: \"PackageList.aspx/SaveRecord\",\n        data: { 'items': items },\n        contentType: \"application/json; charset=utf-8\",\n        dataType: \"json\",\n        async: false,\n        success: function(response) {\n            var results = response.d;\n        }\n    };\n    jQuery.ajax(options);\n</code></pre>\n\n<p>i get the error -<code>Invalid JSON primitive: items.</code>-</p>\n\n<p>so...if i do this:</p>\n\n<blockquote>\n  <p>var DTO = { 'items': items };</p>\n</blockquote>\n\n<p>and set the data parameter like this: </p>\n\n<blockquote>\n  <p>data: JSON.stringify(DTO)</p>\n</blockquote>\n\n<p>then i get this error:</p>\n\n<pre><code>Cannot convert object of type \\u0027System.String\\u0027 to type \\u0027System.Collections.Generic.List`1[System.Object]\\u0027\n</code></pre>\n\n<p>I've been going in circles for hours.\nsomeone please help my small brain figure this out.</p>\n\n<p>thanks a ton.</p>\n",
            "last_activity_date": 1365730734,
            "question_id": 1146110,
            "score": 18,
            "tags": [
                "asp.net",
                "javascript",
                "jquery",
                "ajax",
                "json"
            ],
            "title": "Problem sending JSON object succesfully to asp.net WebMethod, using jQuery"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>you can use the <code>previousSibling</code> property to iterate back through the siblings until you get back <code>null</code> and count how many siblings you've encountered:</p>\n\n<pre><code>var i = 0;\nwhile( (child = child.previousSibling) != null ) \n  i++;\n//at the end i will contain the index.\n</code></pre>\n\n<p>Please note that in languages like Java, there is a <code>getPreviousSibling()</code> function, however in JS this has become a property -- <code>previousSibling</code>.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Use <a href=\"http://en.wikipedia.org/wiki/Binary_search_algorithm\" rel=\"nofollow\">binary search algorithm</a> to improve the performace when the node has large quantity siblings.</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function getChildrenIndex(ele){\n    //IE use Element.sourceIndex\n    if(ele.sourceIndex){\n        var eles = ele.parentNode.children;\n        var low = 0, high = eles.length-1, mid = 0;\n        var esi = ele.sourceIndex, nsi;\n        //use binary search algorithm\n        while (low &lt;= high) {\n            mid = (low + high) &gt;&gt; 1;\n            nsi = eles[mid].sourceIndex;\n            if (nsi &gt; esi) {\n                high = mid - 1;\n            } else if (nsi &lt; esi) {\n                low = mid + 1;\n            } else {\n                return mid;\n            }\n        }\n    }\n    //other browsers\n    var i=0;\n    while(ele = ele.previousElementSibling){\n        i++;\n    }\n    return i;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Adding a (prefixed for safety) element.getParentIndex():</p>\n\n<pre><code>Element.prototype.PREFIXgetParentIndex = function() {\n  return Array.prototype.indexOf.call(this.parentNode.children, this);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've become fond of using indexOf for this. Because indexOf is on Array.prototype and parent.children is a NodeList, you have to use call(); It's kind of ugly but it's a one liner and uses functions that any javascript dev should be familiar with anyhow.</p>\n\n<pre><code>var child = document.getElementById('my_element');\nvar parent = child.parentNode;\n// The equivalent of parent.children.indexOf(child)\nvar index = Array.prototype.indexOf.call(parent.children, child);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>In straight up javascript (i.e., no extensions such as jQuery, etc.), is there a way to determine a child node's index inside of its parent node without iterating over and comparing all children nodes?</p>\n\n<p>E.g.,</p>\n\n<pre><code>var child = document.getElementById('my_element');\nvar parent = child.parentNode;\nvar children = parent.children;\nvar count = children.length;\nvar child_index;\nfor (var i = 0; i &lt; count; i++) {\n  if (child === children[i]) {\n    child_index = i;\n    break;\n  }\n}\n</code></pre>\n\n<p>Is there a better way to determine the child's index? (in either Firefox or Chrome)</p>\n",
            "last_activity_date": 1408118885,
            "question_id": 5913927,
            "score": 16,
            "tags": [
                "javascript",
                "dom",
                "indexing",
                "element"
            ],
            "title": "Get child node index"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If a number is divisible by 16 and divisible by 25, it's divisible by four times 25 (100) as well as 16 times 25 (400).</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><code>year &amp; 3</code> is the same as <code>year % 4</code>. Not so tricky there, it just represents the usual 4-year cycle.</p>\n\n<p><code>year &amp; 15</code> is the same as <code>year % 16</code>.</p>\n\n<p>So, it's <em>not</em> a leap year if the year doesn't divide evenly by 4, or if it doesn't divide evenly by 16 but does divide evenly by 25. This means that every multiple of 25 is not a leap year unless it's also a multiple of 16. Since 16 and 25 don't have any common factors, the only time both conditions are met is when the year is a multiple of 16*25, or 400 years. The multiples of 4*25 will be considered not leap years, accounting for the 100 year cycle.</p>\n\n<p>1900 wasn't a leap year because it was divisible by 100, 2000 <em>was</em> a leap year because it was divisible by 400, and 2100 won't be a leap year.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>Someone on JSPerf dropped an amazingly fast implementation for checking leap years of the ISO calendar (link: <a href=\"http://jsperf.com/find-leap-year/4\">Odd bit manipulations</a>):</p>\n\n<pre><code>function isLeapYear(year) {\n  return !(year &amp; 3 || year &amp; 15 &amp;&amp; !(year % 25));\n}\n</code></pre>\n\n<p>Using Node.js, I quickly checked it against two other one-liner implementations I know.</p>\n\n<pre><code>function isLeapClassic(y) { return (y % 4 == 0) &amp;&amp; !(y % 100 == 0) || (y % 400 == 0); }\nfunction isLeapXOR(y) { return (y % 4 == 0) ^ (y % 100 == 0) ^ (y % 400 == 0); }\nfunction isLeapBitwise(y) { return !(y &amp; 3 || y &amp; 15 &amp;&amp; !(y % 25)); }\n\n//quick'n'dirty test on a small range!\n//works with negative integers too\nfor (var i = 1900; i &lt;= 2100; i++) {\n    console.log(\n        \"year = %d,\\t%d%d%d\",\n        i,\n        isLeapClassic(i),\n        isLeapXOR(i),\n        isLeapBitwise(i)\n    );\n}\n</code></pre>\n\n<p>It works as expected, but my problem is I can't figure how.\nI know <code>((a % b) == (a &amp; (b-1))</code> when b is power of two so <code>(year % 4) == (year &amp; 3)</code>, but <code>year &amp; 15 &amp;&amp; !(year % 25)</code> is quite hard to figure out. Can someone explain me how it works? Any reference about this implementation?</p>\n",
            "last_activity_date": 1332668588,
            "question_id": 9852837,
            "score": 15,
            "tags": [
                "javascript",
                "node.js",
                "calendar",
                "implementation",
                "leap-year"
            ],
            "title": "Leap year check using bitwise operators (amazing speed)"
        },
        {
            "answer_count": 12,
            "answers": [
                {
                    "body": "<p>Try something like this: </p>\n\n<pre><code>function add_commas(numStr)\n{\n    numStr += '';\n    var x = numStr.split('.');\n    var x1 = x[0];\n    var x2 = x.length &gt; 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think you would necessarily have to do multiple passes to achieve this with regular expressions. Try the following:</p>\n\n<ol>\n<li>Run a regex for one digit followed by 3 digits.</li>\n<li>If that regex matches, replace it with the first digit, then a comma, then the next 3 digits.</li>\n<li>Repeat until (1) finds no matches.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>First reverse a character array, then add commas after every third number unless it's just before the end of the string or before a - sign. Then reverse the character array again and make it a string again.</p>\n\n<pre><code>function add_commas(numStr){\n    return numStr.split('').reverse().join('').replace(/(\\d{3})(?=[^$|^-])/g, \"$1,\").split('').reverse().join('');\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you really want a regex, you can use two in a while loop:</p>\n\n<pre><code>while(num.match(/\\d{4}/)) {\n    num = num.replace(/(\\d{3})(,\\d|$)/, ',$1$2');\n}\n</code></pre>\n\n<p>And if you want to be fancy, you can format numbers with decimal points too:</p>\n\n<pre><code>while(num.match(/\\d{4}(\\,|\\.)/)) {\n    num = num.replace(/(\\d{3})(,\\d|$|\\.)/, ',$1$2');\n}\n</code></pre>\n\n<p><strong>Edit:</strong></p>\n\n<p>You can also do this with 2 regular expressions and no loop, splits, joins, etc:</p>\n\n<pre><code>num = num.replace(/(\\d{1,2}?)((\\d{3})+)$/, \"$1,$2\");\nnum = num.replace(/(\\d{3})(?=\\d)/g, \"$1,\");\n</code></pre>\n\n<p>The first regex puts a comma after the first 1 or 2 digits if the remaining number of digits is divisible by three.  The second regex places a comma after every remaining group of 3 digits.</p>\n\n<p>These won't work with decimals, but they work great for positive and negative integers.</p>\n\n<p><strong>Test output:</strong></p>\n\n<pre><code>45\n3,856\n398,868,483,992\n\n635\n12,358,717,859,918,856\n-1,388,488,184\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Iteration isn't necessary</p>\n\n<pre><code>function formatNumber(n, separator) {\n    separator = separator || \",\";\n\n    n = n.toString()\n        .split(\"\").reverse().join(\"\")\n        .replace(/(\\d{3})/g, \"$1\" + separator)\n        .split(\"\").reverse().join(\"\");\n\n    // Strings that have a length that is a multiple of 3 will have a leading separator\n    return n[0] == separator ? n.substr(1) : n;\n}\n\nvar testCases = [1, 45, 2856, 398868483992];\nfor ( var i in testCases ) {\n    if ( !ns.hasOwnProperty(i) ) { continue; }\n    console.info(testCases[i]);   \n    console.log(formatNumber(testCases[i]));\n}\n</code></pre>\n\n<p>Results</p>\n\n<pre><code>1\n1\n\n45\n45\n\n2856\n2,856\n\n398868483992\n398,868,483,992\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>// You might want to take decimals into account</p>\n\n<pre><code>Number.prototype.commas= function(){\n var s= '', temp, \n num= this.toString().split('.'), n=num[0];\n while(n.length&gt; 3){\n  temp= n.substring(n.length-3);\n  s= ','+temp+s;\n  n= n.slice(0, -3);\n }\n if(n) s= n+s;\n if(num[1]) s+='.'+num[1];\n return s;\n}\n</code></pre>\n\n<p>var n=  10000000000.34;</p>\n\n<p>n.commas() = returned value: (String) 10,000,000,000.34</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This can be done in a single regex, no iteration required. If you weren't using JavaScript, you could simply use lookaround and just insert commas at the right places:</p>\n\n<p>Search for <code>(?&lt;=\\d)(?=(\\d\\d\\d)+(?!\\d))</code> and replace all with <code>,</code></p>\n\n<p>But JavaScript doesn't support lookbehind, so that doesn't work. Fortunately, we only need to change a little bit:</p>\n\n<p>Search for <code>(\\d)(?=(\\d\\d\\d)+(?!\\d))</code> and replace all with <code>\\1,</code></p>\n\n<p>So, in JavaScript, that would look like:</p>\n\n<pre><code>result = subject.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1,\");\n</code></pre>\n\n<p>Explanation: Assert that from the current position in the string onwards, it is possible to match digits in multiples of three, and that there is a digit left of the current position.</p>\n\n<p>This will also work with decimals (123456.78) as long as there aren't too many digits \"to the right of the dot\" (otherwise you get 123,456.789,012).</p>\n\n<p>You can also define it in a Number prototype, as follows:</p>\n\n<pre><code>Number.prototype.format = function(){\n   return this.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\n};\n</code></pre>\n\n<p>And then using it like this:</p>\n\n<pre><code>var num = 1234;\nalert(num.format());\n</code></pre>\n\n<p>Credit: Jeffrey Friedl, <a href=\"http://oreilly.com/catalog/9780596528126/\">Mastering Regular Expressions, 3rd. edition</a>, p. 66-67</p>\n",
                    "is_accepted": true,
                    "score": 47
                },
                {
                    "body": "<p>Someone mentioned that lookbehind isn't possible in Javascript RegExp. Here is a great page that explains how to use lookaround (lookahead and lookbehind).</p>\n\n<p><a href=\"http://www.regular-expressions.info/lookaround.html\" rel=\"nofollow\">http://www.regular-expressions.info/lookaround.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Formatting a number can be handled elegantly with one line of code.</p>\n\n<p>This code extends the Number object; usage examples are included below.</p>\n\n<p><strong>Code:</strong></p>\n\n<pre><code>Number.prototype.format = function () {\n    return this.toString().split( /(?=(?:\\d{3})+(?:\\.|$))/g ).join( \",\" );\n};\n</code></pre>\n\n<p><strong>How it works</strong></p>\n\n<p>The regular expression uses a look-ahead to find positions within the string where the only thing to the right of it is one or more groupings of three numbers, until either a decimal or the end of string is encountered.  The <code>.split()</code> is used to break the string at those points into array elements, and then the <code>.join()</code> merges those elements back into a string, separated by commas.</p>\n\n<p>The concept of finding <strong>positions</strong> within the string, rather than matching actual characters, is important in order to split the string without removing any characters.</p>\n\n<p><strong>Usage examples:</strong></p>\n\n<pre><code>var n = 9817236578964235;\nalert( n.format() );    // Displays \"9,817,236,578,964,235\"\n\nn = 87345.87;\nalert( n.format() );    // Displays \"87,345.87\"\n</code></pre>\n\n<p>Of course, the code can easily be extended or changed to handle locale considerations.  For example, here is a new version of the code that automatically detects the locale settings and swaps the use of commas and periods.</p>\n\n<p><strong>Locale-aware version:</strong></p>\n\n<pre><code>Number.prototype.format = function () {\n\n    if ((1.1).toLocaleString().indexOf(\".\") &gt;= 0) {\n        return this.toString().split( /(?=(?:\\d{3})+(?:\\.|$))/g ).join( \",\" );\n    }\n    else {\n        return this.toString().split( /(?=(?:\\d{3})+(?:,|$))/g ).join( \".\" );\n    }\n};\n</code></pre>\n\n<p>Unless it's really necessary, I prefer the simplicity of the first version though.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p><a href=\"http://epeli.github.io/underscore.string/\" rel=\"nofollow\">underscore.string</a> has <a href=\"https://github.com/epeli/underscore.string/blob/master/lib/underscore.string.js#L454\" rel=\"nofollow\">a nice implementation</a>.</p>\n\n<p>I've amended it slightly to accept numeric strings.</p>\n\n<pre><code>function numberFormat (number, dec, dsep, tsep) {\n  if (isNaN(number) || number == null) return '';\n\n  number = parseFloat(number).toFixed(~~dec);\n  tsep = typeof tsep == 'string' ? tsep : ',';\n\n  var parts = number.split('.'), fnums = parts[0],\n    decimals = parts[1] ? (dsep || '.') + parts[1] : '';\n\n  return fnums.replace(/(\\d)(?=(?:\\d{3})+$)/g, '$1' + tsep) + decimals;\n},\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Brandon,</p>\n\n<p>I didn't see too many answers working the regex from the decimal point back, so I thought I might chime in.</p>\n\n<p>I wondered if there is any elegant benefit to re-writing the regexp to scan from the back forward...</p>\n\n<pre><code>function addCommas(inputText) {\n    // pattern works from right to left\n    var commaPattern = /(\\d+)(\\d{3})(\\.\\d*)*$/;\n    var callback = function (match, p1, p2, p3) {\n        return p1.replace(commaPattern, callback) + ',' + p2 + (p3 || '');\n    };\n    return inputText.replace(commaPattern, callback);\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/L5hgk/\" rel=\"nofollow\"><strong>>> Fiddle Demo &lt;&lt;</strong></a></p>\n\n<p>This accounts for any decimal place.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It is very easy way to format a number.</p>\n\n<p>Java provides a NumberFormater</p>\n\n<p>How to use:</p>\n\n<blockquote>\n  <p>import java.text.NumberFormat;</p>\n  \n  <p>int numberToFormat = 1000; \n    NumberFormat num = NumberFormat.getInstance();  </p>\n  \n  <p>String valueInFormated  = num.format(numberToFormat);</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I need to display a formatted number on a web page using JavaScript. I want to format it so that there are commas in the right places. How would I do this with a regular expression? I've gotten as far as something like this:</p>\n\n<pre><code>myString = myString.replace(/^(\\d{3})*$/g, \"${1},\");\n</code></pre>\n\n<p>...and then realized this would be more complex than I think (and the regex above is <strong>not even close</strong> to what I need). I've done some searching and I'm having a hard time finding something that works for this.</p>\n\n<p>Basically, I want these results:</p>\n\n<ul>\n<li>45 becomes 45 </li>\n<li>3856 becomes 3,856</li>\n<li>398868483992 becomes 398,868,483,992</li>\n</ul>\n\n<p>...you get the idea.</p>\n",
            "last_activity_date": 1405925499,
            "question_id": 2254185,
            "score": 15,
            "tags": [
                "javascript",
                "regex",
                "formatting"
            ],
            "title": "Regular Expression for formatting numbers in JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Take a look at the <a href=\"http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html\">DOM Range spec</a>. You can get a <code>Range</code> from the user selection in Firefox using:</p>\n\n<pre><code>var range = window.getSelection().getRangeAt(0);\n</code></pre>\n\n<p>Note that some browsers, including Firefox, allow multiple selections, which can be accessed via the <code>getRangeAt()</code> method of the selection.</p>\n\n<p>The <code>Range</code> is expressed in terms of DOM nodes and offsets within those nodes. Once you've got your <code>Range</code>, it's not straightforward to do exactly what you want, since the range's boundaries could be in different nodes at different levels of the DOM tree, so simply surrounding the Range's content with a tag is not always possible. You may be able to do something like the following, although it will create a new block element to contain the selected content:</p>\n\n<pre><code>var range = window.getSelection().getRangeAt(0);\nvar selectionContents = range.extractContents();\nvar div = document.createElement(\"div\");\ndiv.style.color = \"yellow\";\ndiv.appendChild(selectionContents);\nrange.insertNode(div);\n</code></pre>\n\n<p>Another, hacky, alternative is to use the <code>execCommand()</code> method of <code>document</code> to modify the selection (e.g. by setting it to a particular colour) and then using <code>document.querySelectorAll</code> or some selector library to select elements with that colour and then apply styling to them.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>Tim Down's answer is on the right track.  However one issue is that extractContents() will remove the selection from the dom.  You can use </p>\n\n<pre><code>window.getSelection().getRangeAt(0).cloneContents(); \n</code></pre>\n\n<p>to just get a copy of what's selected.  You could then wrap that with your new tag and then replace the selection with it.  Tim Down's concern about the range spanning multiple HTML elements is certainly a valid one.  I think once you get the range, it 'fixes' up the html, but when you put it back in it could cause problems.  <a href=\"http://www.quirksmode.org/dom/range_intro.html\">Here</a>'s a good resource on the Range object.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>window.getSelection() will return an object.  You can use the returned selection object as a string by calling the objects .toString() method.</p>\n\n<pre><code>var selObj = window.getSelection();\nvar selectedText = selObj.toString(); \n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/window.getSelection\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/window.getSelection</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm extending a WYSIWYG htmleditor (for firefox), I want to add tags around a selection.</p>\n\n<p>I can't find a function to accomplish this in the <a href=\"http://www.mozilla.org/editor/midas-spec.html\">Mozilla Midas specification</a>.</p>\n\n<p>There is a command to replace the selection with html.<br>\nSo if i could read the selection contents, i could add my tags to this string.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/Selection\">window.getSelection()</a> almost works, but it gives me <a href=\"http://www.mozilla.org/projects/embedding/embedapiref/embedapi74.html\">nsISelection</a> which converts to a plain-text string.\n<br>\n<br><br>\nPS:\n<em>document.getSelection()</em> returns the plain-text string not even a <a href=\"http://www.mozilla.org/projects/embedding/embedapiref/embedapi74.html\">nsISelection</a>.</p>\n",
            "last_activity_date": 1321759927,
            "question_id": 2139616,
            "score": 15,
            "tags": [
                "javascript",
                "editor",
                "wysiwyg"
            ],
            "title": "window.getSelection() gives me the selected text, but i want the html"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I would bind an event handler to <code>keydown</code> and prevent the default action of that event if we're dealing with the backspace key outside of a <code>textarea</code> or <code>input</code>:</p>\n\n<pre><code>$(document).on(\"keydown\", function (e) {\n    if (e.which === 8 &amp;&amp; !$(e.target).is(\"input, textarea\")) {\n        e.preventDefault();\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>The way google does this is kinda cool. When you press backspace, they focus the textfield. Preventing the users to navigate back!</p>\n\n<p>You can try the same:</p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;input id=\"target\" type=\"text\" /&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n$(document).keydown(function(e) { if (e.keyCode == 8) $('#target').focus(); });\n&lt;/script&gt;\n</code></pre>\n\n<p>demo : <a href=\"http://jsfiddle.net/epinapala/TxG5p/\" rel=\"nofollow\">http://jsfiddle.net/epinapala/TxG5p/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I really like Andrew Whitaker's answer. It will, however, still navigate back when focused on a readonly, radio, or checkbox input field and will not allow backspace on contentEditable elements so I have added a slight modification. Credit goes to Andrew Whitaker.</p>\n\n<pre><code>$(document).on(\"keydown\", function (e) {\n    if (e.which === 8 &amp;&amp; !$(e.target).is(\"input:not([readonly]):not([type=radio]):not([type=checkbox]), textarea, [contentEditable], [contentEditable=true]\")) {\n        e.preventDefault();\n    }\n});\n</code></pre>\n\n<p>At the moment it seems to be necessary to have every variation [contentEditable] that is in the HTML since [contentEditable] != [contentEditable=true].</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>This is old, but these answers will still allow you to backspace and navigate when focused on a radio button. You will want to filter the input type as well. Credit to all answers above for this:</p>\n\n<pre><code>$(document).on(\"keydown\", function (e) {\n    if (e.which === 8 &amp;&amp; !$(e.target).is(\"input[type='text']:not([readonly]), textarea\")) {\n        e.preventDefault();\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've tryed many of the code snippets on the internet without satisfyind result. The new browser versions of IE (IE11) and Crome broke my former solution, but here is what works for me with IE11 + Crome + Firefox. The code prevents backspace and the user doesn't lose anything of what he has keyed in in a text field:</p>\n\n<pre><code>window.addEventListener('keydown', function (e) {\n    if (e.keyIdentifier === 'U+0008' || e.keyIdentifier === 'Backspace' || e.keyCode === '8' || document.activeElement !== 'text') {\n        if (e.target === document.body) {\n            e.preventDefault();\n        }\n    }\n}, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>For Internet Explorer , this worked for me :</p>\n\n<p>window.addEventListener('keydown', function (e) {</p>\n\n<pre><code>    if (e.keyCode === 8) {\n        if (e.target === document.body) {\n        e.preventDefault();\n        }\n    }\n}, true);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Notice while on Google's homepage, with no focus on any element, pressing BACKSPACE will put the focus into the search toolbar instead of navigating back.</p>\n\n<p>How can I accomplish this? </p>\n\n<p>I keep running into this problem with users in my app. They don't have focus on any element and hit BACKSPACE which throws them out of the app.</p>\n",
            "last_activity_date": 1421760538,
            "question_id": 11112127,
            "score": 14,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Prevent BACKSPACE from navigating back with jQuery (Like Google&#39;s Homepage)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Something like this should do it:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html ng-app=\"myApp\"&gt;\n&lt;head&gt;\n    &lt;script src=\"http://code.angularjs.org/1.1.2/angular.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    function Ctrl($scope) {\n        var initial = {text: 'initial value'};\n        $scope.myModel = angular.copy(initial);\n        $scope.revert = function() {\n            $scope.myModel = angular.copy(initial);\n            $scope.myForm.$setPristine();\n        }\n    }\n\n    angular.module(\"myApp\", []).directive('confirmOnExit', function() {\n        return {\n            link: function($scope, elem, attrs) {\n                window.onbeforeunload = function(){\n                    if ($scope.myForm.$dirty) {\n                        return \"The form is dirty, do you want to stay on the page?\";\n                    }\n                }\n                $scope.$on('$locationChangeStart', function(event, next, current) {\n                    if ($scope.myForm.$dirty) {\n                        if(!confirm(\"The form is dirty, do you want to stay on the page?\")) {\n                            event.preventDefault();\n                        }\n                    }\n                });\n            }\n        };\n    });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form name=\"myForm\" ng-controller=\"Ctrl\" confirm-on-exit&gt;\n        myModel.text: &lt;input name=\"input\" ng-model=\"myModel.text\"&gt;\n        &lt;p&gt;myModel.text = {{myModel.text}}&lt;/p&gt;\n        &lt;p&gt;$pristine = {{myForm.$pristine}}&lt;/p&gt;\n        &lt;p&gt;$dirty = {{myForm.$dirty}}&lt;/p&gt;\n        &lt;button ng-click=\"revert()\"&gt;Set pristine&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Note that the listener for $locationChangeStart isn't triggered in this example since AngularJS doesn't handle any routing in such a simple example, but it should work in an actual Angular application.</p>\n",
                    "is_accepted": true,
                    "score": 29
                },
                {
                    "body": "<p>Maybe it will be helpful for someone.\n<a href=\"https://github.com/umbrella-web/Angular-unsavedChanges\" rel=\"nofollow\">https://github.com/umbrella-web/Angular-unsavedChanges</a></p>\n\n<p>Using this service you can listen unsaved changes for any object in the scope (not only the form)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've extended the @Anders answer to clean up listeners (unbind listers) when directive is destroyed (ex: when route changes), and added some syntactic sugar to generalise the usage.</p>\n\n<p><strong>confirmOnExit Directive</strong>:</p>\n\n<pre><code>/**\n * @name confirmOnExit\n * \n * @description\n * Prompts user while he navigating away from the current route (or, as long as this directive \n * is not destroyed) if any unsaved form changes present.\n * \n * @element Attribute\n * @scope\n * @param confirmOnExit Scope function which will be called on window refresh/close or AngularS $route change to\n *                          decide whether to display the prompt or not.\n * @param confirmMessageWindow Custom message to display before browser refresh or closed.\n * @param confirmMessageRoute Custom message to display before navigating to other route.\n * @param confirmMessage Custom message to display when above specific message is not set.\n * \n * @example\n * Usage:\n * Example Controller: (using controllerAs syntax in this example)\n * \n *      angular.module('AppModule', []).controller('pageCtrl', [function () {\n *          this.isDirty = function () {\n *              // do your logic and return 'true' to display the prompt, or 'false' otherwise.\n *              return true;\n *          };\n *      }]);\n * \n * Template:\n * \n *      &lt;div confirm-on-exit=\"pageCtrl.isDirty()\" \n *          confirm-message-window=\"All your changes will be lost.\"\n *          confirm-message-route=\"All your changes will be lost. Are you sure you want to do this?\"&gt;\n * \n * @see\n * http://stackoverflow.com/a/28905954/340290\n * \n * @author Manikanta G\n */\nngxDirectivesModule.directive('confirmOnExit', function() {\n    return {\n        scope: {\n            confirmOnExit: '&amp;',\n            confirmMessageWindow: '@',\n            confirmMessageRoute: '@',\n            confirmMessage: '@'\n        },\n        link: function($scope, elem, attrs) {\n            window.onbeforeunload = function(){\n                if ($scope.confirmOnExit()) {\n                    return $scope.confirmMessageWindow || $scope.confirmMessage;\n                }\n            }\n            var $locationChangeStartUnbind = $scope.$on('$locationChangeStart', function(event, next, current) {\n                if ($scope.confirmOnExit()) {\n                    if(! confirm($scope.confirmMessageRoute || $scope.confirmMessage)) {\n                        event.preventDefault();\n                    }\n                }\n            });\n\n            $scope.$on('$destroy', function() {\n                window.onbeforeunload = null;\n                $locationChangeStartUnbind();\n            });\n        }\n    };\n});\n</code></pre>\n\n<p>Usage:\n<strong>Example Controller</strong>: <em>(using controllerAs syntax in this example)</em></p>\n\n<pre><code>angular.module('AppModule', []).controller('pageCtrl', [function () {\n    this.isDirty = function () {\n        // do your logic and return 'true' to display the prompt, or 'false' otherwise.\n\n        return true;\n    };\n}]);\n</code></pre>\n\n<p><strong>Template</strong>:</p>\n\n<pre><code>&lt;div confirm-on-exit=\"pageCtrl.isDirty()\" \n    confirm-message-window=\"All your changes will be lost.\" \n    confirm-message-route=\"All your changes will be lost. Are you sure you want to do this?\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Anders's answer works fine, However, for people who uses Angular ui-router, you should use <code>'$stateChangeStart'</code> instead of <code>'$locationChangeStart'</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Below is the code so far</p>\n\n<pre><code>    &lt;!doctype html&gt;\n&lt;html ng-app&gt;\n&lt;head&gt;\n    &lt;script src=\"http://code.angularjs.org/1.1.2/angular.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\"&gt;\n    function Ctrl($scope) {\n        var initial = {text: 'initial value'};\n        $scope.myModel = angular.copy(initial);\n        $scope.revert = function() {\n            $scope.myModel = angular.copy(initial);\n            $scope.myForm.$setPristine();\n        }\n    }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;form name=\"myForm\" ng-controller=\"Ctrl\"&gt;\n        myModel.text: &lt;input name=\"input\" ng-model=\"myModel.text\"&gt;\n        &lt;p&gt;myModel.text = {{myModel.text}}&lt;/p&gt;\n        &lt;p&gt;$pristine = {{myForm.$pristine}}&lt;/p&gt;\n        &lt;p&gt;$dirty = {{myForm.$dirty}}&lt;/p&gt;\n        &lt;button ng-click=\"revert()\"&gt;Set pristine&lt;/button&gt;\n    &lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>How to alert the user on <code>browser close</code> or <code>url redirect</code> that there is some unsaved data, does he wish to continue.</p>\n",
            "last_activity_date": 1425863444,
            "question_id": 14852802,
            "score": 13,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-directive"
            ],
            "title": "Detect Unsaved changes and alert user using angularjs"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If your primary concern finding a <em>tight</em> packing of different-sized circles within a rectangle, then unfortunately you'll have to implement a new d3 layout. I don't know of a plugin that's already written that will do this.</p>\n\n<p>However, if what you're looking for is <em>any</em> old packing into a rectangle, then you can use the the existing circle packing algorithm that d3 provides in <code>d3.layout.pack</code>. When you specify the bounds for this layout, you're specifying the dimensions of a rectangle. d3 then determines a circle that the bounding rectangle will circumscribe, and uses that circle to visualize the root of the hierarchical data. So what you can do is provide a \"dummy\" root node which you don't actually render, and have the real data that you want to visualize be the children of that node. </p>\n\n<p>Code example below, and I also <a href=\"http://bl.ocks.org/4127259\" rel=\"nofollow\">put it up on bl.ocks.org</a> so you can see it in action.\n</p>\n\n<pre><code>var w = 640,\n    h = 480;\n\nvar data = {\n  name : \"root\",\n  children : [\n    { name: '1', size: 100 }, { name: '2', size: 85 },\n    { name: '3', size: 70 } , { name: '4', size: 55 },\n    { name: '5', size: 40 } , { name: '6', size: 25 },\n    { name: '7', size: 10 } ,\n  ]\n}\n\nvar canvas = d3.select(\"#canvas\")\n  .append(\"svg:svg\")\n  .attr('width', w)\n  .attr('height', h);\n\nvar nodes = d3.layout.pack()\n  .value(function(d) { return d.size; })\n  .size([w, h])\n  .nodes(data);\n\n// Get rid of root node\nnodes.shift();\n\ncanvas.selectAll('circles')\n    .data(nodes)\n  .enter().append('svg:circle')\n    .attr('cx', function(d) { return d.x; })\n    .attr('cy', function(d) { return d.y; })\n    .attr('r', function(d) { return d.r; })\n    .attr('fill', 'white')\n    .attr('stroke', 'grey');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Well, this is far from optimal packing, but it's something that others can try to beat.  </p>\n\n<p><em>Updated, but still not great</em></p>\n\n<p><a href=\"http://fiddle.jshell.net/LF9Yp/6/\">http://fiddle.jshell.net/LF9Yp/6/</a></p>\n\n<p>Key code, such as it is:</p>\n\n<pre><code>var points = [[]]; //positioned circles, by row\nfunction assignNextPosition(d,index) {\n    console.log(\"fitting circle \", index, d.size);\n    var i, j, n;\n    var radiusPlus = rScale(d.size) + padding;\n    if (!points[0].length) { //this is first object\n       d.x = d.y = radiusPlus; \n       points[0].push(d);\n       points[0].width = points[0].height = 2*radiusPlus;\n       points[0].base = 0;\n       return;\n    }\n    i = 0; n = points.length - 1; \n    var tooTight, lastRow, left, rp2, hyp;\n    while ((tooTight = (width - points[i].width &lt; 2*radiusPlus)\n            ||( points[i+1]? \n                points[i+1].base - points[i].base &lt; 2*radiusPlus \n                : false) ) \n          &amp;&amp;(i &lt; n) ) i++;\n           //skim through rows to see if any can fit this circle\n\n    if (!tooTight) { console.log(\"fit on row \", i);\n        //one of the rows had room\n        lastRow = points[i];\n        j=lastRow.length;\n\n        if (i == 0) {\n          //top row, position tight to last circle and wall\n            d.y = radiusPlus;\n            rp2 = (rScale(lastRow[j-1].size) + padding);\n            d.x = lastRow[j-1].x + Math.sqrt(\n                Math.pow( (radiusPlus + rp2), 2)\n                - Math.pow( (radiusPlus - rp2),2) );\n        }\n        else {\n           //position tight to three closest circles/wall\n           //(left, top left and top right)\n            //or (left, top left and right wall)\n           var left = lastRow[j-1];\n           d.x = left.x + rScale(left.size) + padding + radiusPlus;\n           var prevRow = points[i - 1];       \n           j = prevRow.length;\n           while ((j--) &amp;&amp; (prevRow[j].x &gt; d.x));\n           j = Math.max(j,0);\n           if (j + 1 &lt; prevRow.length) {\n               console.log(\"fit between\", prevRow[j], prevRow[j+1]);\n               d.y = prevRow[j].y \n               + (Math.sqrt(Math.pow((radiusPlus + \n                           rScale(prevRow[j].size) +padding), 2) \n                           - Math.pow( (d.x - prevRow[j].x),2)\n                       )||0);\n              j++;\n              d.y = Math.max(d.y, prevRow[j].y \n               + (Math.sqrt(Math.pow((radiusPlus + \n                           rScale(prevRow[j].size) +padding), 2) \n                           - Math.pow( (d.x - prevRow[j].x),2)\n                       )||0)  );\n           }\n           else { //tuck tight against wall\n               console.log(\"fit between\", prevRow[j], \"wall\");\n            d.x = width - radiusPlus;\n            rp2 = (rScale(prevRow[j].size) + padding);\n            d.y = prevRow[j].y + (Math.sqrt(\n                Math.pow( (radiusPlus + rp2), 2)\n                - Math.pow( (d.x - prevRow[j].x),2) )||0);\n            if (i &gt; 1)\n                d.y = Math.max(d.y, points[i-2].height + radiusPlus);\n           }\n        }\n\n        lastRow.push(d); \n        lastRow.width = d.x + radiusPlus;\n        lastRow.height = Math.max(lastRow.height, \n                                  d.y + radiusPlus);\n        lastRow.base = Math.min(lastRow.base,\n                                d.y - radiusPlus);\n\n    } else { console.log(\"new row \", points.length)\n        prevRow = points[points.length -1];\n        j=prevRow.length;\n        while(j--) {\n            var testY = prevRow[j].y + rScale(prevRow[j].size) + padding\n                  + radiusPlus;\n            if (testY + radiusPlus &lt; prevRow.height) {\n                //tuck row in gap\n                d.x = prevRow[j].x;\n                d.y = testY;\n            }\n        }\n        if (!d.x) {//start row at left\n          d.x = radiusPlus;\n          d.y = prevRow.height + radiusPlus;\n        }\n        var newRow = [d];\n        newRow.width = d.x + radiusPlus;\n        newRow.height = Math.max(d.y + radiusPlus, prevRow.height);\n        newRow.base = d.y - radiusPlus;\n        points.push(newRow); \n    } \n            if (!d.y) console.log(\"error\",d);\n    if (d.y + radiusPlus &gt; height) {\n      //change rScale by the ratio this exceeds the height\n      var scaleFactor = height/(d.y + radiusPlus);\n      rScale.range([0, rScale.range()[1]*scaleFactor]);\n\n      //recalculate all positions\n      points.forEach(function(row, j){\n            row.forEach(function(d, i) {\n               d.x = (d.x - i*2*padding)*scaleFactor + i*2*padding;\n               d.y = (d.y - i*2*padding)*scaleFactor + i*2*padding;\n            });\n            row.width *= scaleFactor;\n      });\n\n    }\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Here is a go at the implementation of your algorithm.</p>\n\n<p>I tweaked it quite a bit, but I think it does basically the same thing.</p>\n\n<h3>Bounding circles</h3>\n\n<p>I used a trick to make the computation more regular.</p>\n\n<p>Instead of segments defining the bounding box, I used circles with \"infinite\" radii, that can be considered a good approximation of lines:</p>\n\n<p><img src=\"http://i.stack.imgur.com/DI4OO.png\" alt=\"bounding circles\"></p>\n\n<p>The picture shows what the 4 bounding circles look like when the radius is decreased. They are computed to pass through the corners of the bounding box and converge toward the actual sides when the radius grows.</p>\n\n<p>The \"corner\" circles (as the algorithm calls them) are all computed as tangents to a pair of circles, thus eliminating the special circle+segment or segment+segment cases.</p>\n\n<p>This also simplifies the start condition greatly.<br>\nThe algorithm simply starts with the four bounding circles and adds one circle at the time, using the greedy heuristic lambda parameter to pick the \"best\" location.</p>\n\n<h3>Best fit strategy</h3>\n\n<p>The original algorithm does not produce the smallest rectangle to hold all the circles<br>\n(it simply tries to fit a bunch of circles into a given rectangle).</p>\n\n<p>I have added a simple dichotomic search on top of it to guess the minimal surface (which yields the smallest bounding rectangle for a given aspect ratio).</p>\n\n<h3>The code</h3>\n\n<p>Here is <a href=\"http://jsfiddle.net/TDzVE/\">a fiddle</a></p>\n\n<pre><code>var Packer = function (circles, ratio)\n{\n    this.circles = circles;\n    this.ratio   = ratio || 1;\n    this.list = this.solve();\n}\n\nPacker.prototype = {\n    // try to fit all circles into a rectangle of a given surface\n    compute: function (surface)\n    {\n        // check if a circle is inside our rectangle\n        function in_rect (radius, center)\n        {\n            if (center.x - radius &lt; - w/2) return false;\n            if (center.x + radius &gt;   w/2) return false;\n            if (center.y - radius &lt; - h/2) return false;\n            if (center.y + radius &gt;   h/2) return false;\n            return true;\n        }\n\n        // approximate a segment with an \"infinite\" radius circle\n        function bounding_circle (x0, y0, x1, y1)\n        {\n            var xm = Math.abs ((x1-x0)*w);\n            var ym = Math.abs ((y1-y0)*h);\n            var m = xm &gt; ym ? xm : ym;\n            var theta = Math.asin(m/4/bounding_r);\n            var r = bounding_r * Math.cos (theta);\n            return new Circle (bounding_r, \n                new Point (r*(y0-y1)/2+(x0+x1)*w/4, \n                           r*(x1-x0)/2+(y0+y1)*h/4));\n        }\n\n        // return the corner placements for two circles\n        function corner (radius, c1, c2)\n        {\n            var u = c1.c.vect(c2.c); // c1 to c2 vector\n            var A = u.norm();\n            if (A == 0) return [] // same centers\n            u = u.mult(1/A); // c1 to c2 unary vector\n            // compute c1 and c2 intersection coordinates in (u,v) base\n            var B = c1.r+radius;\n            var C = c2.r+radius;\n            if (A &gt; (B + C)) return []; // too far apart\n            var x = (A + (B*B-C*C)/A)/2;\n            var y = Math.sqrt (B*B - x*x);\n            var base = c1.c.add (u.mult(x));\n\n            var res = [];\n            var p1 = new Point (base.x -u.y * y, base.y + u.x * y);\n            var p2 = new Point (base.x +u.y * y, base.y - u.x * y);\n            if (in_rect(radius, p1)) res.push(new Circle (radius, p1));\n            if (in_rect(radius, p2)) res.push(new Circle (radius, p2));\n            return res;\n        }\n\n        /////////////////////////////////////////////////////////////////\n\n        // deduce starting dimensions from surface\n        var bounding_r = Math.sqrt(surface) * 100; // \"infinite\" radius\n        var w = this.w = Math.sqrt (surface * this.ratio);\n        var h = this.h = this.w/this.ratio;\n\n        // place our bounding circles\n        var placed=[\n            bounding_circle ( 1,  1,  1, -1),\n            bounding_circle ( 1, -1, -1, -1),\n            bounding_circle (-1, -1, -1,  1),\n            bounding_circle (-1,  1,  1,  1)];\n\n        // Initialize our rectangles list\n        var unplaced = this.circles.slice(0); // clones the array\n        while (unplaced.length &gt; 0)\n        {\n            // compute all possible placements of the unplaced circles\n            var lambda = {};\n            var circle = {};\n            for (var i = 0 ; i != unplaced.length ; i++)\n            {\n                var lambda_min = 1e10;\n                lambda[i] = -1e10;\n                // match current circle against all possible pairs of placed circles\n                for (var j = 0   ; j &lt; placed.length ; j++)\n                for (var k = j+1 ; k &lt; placed.length ; k++)\n                {\n                    // find corner placement\n                    var corners = corner (unplaced[i], placed[j], placed[k]);\n\n                    // check each placement\n                    for (var c = 0 ; c != corners.length ; c++)\n                    {\n                        // check for overlap and compute min distance\n                        var d_min = 1e10;\n                        for (var l = 0 ; l != placed.length ; l++)\n                        {\n                            // skip the two circles used for the placement\n                            if (l==j || l==k) continue;\n\n                            // compute distance from current circle\n                            var d = placed[l].distance (corners[c]);\n                            if (d &lt; 0) break; // circles overlap\n\n                            if (d &lt; d_min) d_min = d;\n                        }\n                        if (l == placed.length) // no overlap\n                        {\n                            if (d_min &lt; lambda_min)\n                            {\n                                lambda_min = d_min;\n                                lambda[i] = 1- d_min/unplaced[i];\n                                circle[i] = corners[c];\n                            }\n                        }\n                    }\n                }\n            }\n\n            // select the circle with maximal gain\n            var lambda_max = -1e10;\n            var i_max = -1;\n            for (var i = 0 ; i != unplaced.length ; i++)\n            {\n                if (lambda[i] &gt; lambda_max)\n                {\n                    lambda_max = lambda[i];\n                    i_max = i;\n                }\n            }\n\n            // failure if no circle fits\n            if (i_max == -1) break;\n\n            // place the selected circle\n            unplaced.splice(i_max,1);\n            placed.push (circle[i_max]);\n        }\n\n        // return all placed circles except the four bounding circles\n        this.tmp_bounds = placed.splice (0, 4);\n        return placed;\n    },\n\n    // find the smallest rectangle to fit all circles\n    solve: function ()\n    {\n        // compute total surface of the circles\n        var surface = 0;\n        for (var i = 0 ; i != this.circles.length ; i++)\n        {\n            surface += Math.PI * Math.pow(this.circles[i],2);\n        }\n\n        // set a suitable precision\n        var limit = surface/1000;\n\n        var step = surface/2;\n        var res = [];\n        while (step &gt; limit)\n        {\n            var placement = this.compute.call (this, surface);\nconsole.log (\"placed\",placement.length,\"out of\",this.circles.length,\"for surface\", surface);\n            if (placement.length != this.circles.length)\n            {\n                surface += step;\n            }\n            else\n            {\n                res = placement;\n                this.bounds = this.tmp_bounds;\n                surface -= step;\n            }\n            step /= 2;\n        }\n        return res; \n    }\n};\n</code></pre>\n\n<h3>Performance</h3>\n\n<p>The code is not optimized, to favor readability (or so I hope :)).</p>\n\n<p>The computation time rises pretty steeply.<br>\nYou can safely place about 20 circles, but anything above 100 will make your browser crawl.</p>\n\n<p>For some reason, it is way faster on FireFox than on IE11.</p>\n\n<h3>Packing efficiency</h3>\n\n<p>The algorithm works quite poorly on identically-sized circles (it cannot find the famous honeycomb pattern for 20 circles in a square), but pretty well on a wide distribution of random radii.</p>\n\n<h3>Aesthetics</h3>\n\n<p>The result is pretty ungainly for identical-sized circles.<br>\nThere is no attempt to bunch the circles together, so if two possibilities are deemed equivalent by the algorithm, one is just picked at random.</p>\n\n<p>I suspect the lambda parameter could be refined a bit to allow for a more aesthetic choice in case of equal values.</p>\n\n<h3>Possible evolutions</h3>\n\n<p>With the \"infinite radii\" trick, it becomes possible to define an arbitrary bounding polygon.</p>\n\n<p>If you provide a function to check if a circle fits into the said polygon, there is no reason the algorithm should not produce a result.</p>\n\n<p>Whether this result would be efficient is another question :).</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>A completely different approach...</p>\n\n<p>As I mentioned in a comment, a <a href=\"http://bl.ocks.org/mbostock/7882658\">d3 cluster-force layout</a> could be adapted into a heuristic method for fitting the circles into the box, by progressively changing the scale until you have a tight fit.</p>\n\n<p>Results so far are not perfect, so I present a few versions:</p>\n\n<p>Option 1, squeezes in the box to the space occupied by the circles <em>before</em> adjusting for circle overlap.  The result is very tightly packed, but with slight overlap between circles that get caught between the walls of the box and each other, unable to move without a conflict:<br>\n<a href=\"http://fiddle.jshell.net/LeGfW/2/\">http://fiddle.jshell.net/LeGfW/2/</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/q6ZBc.gif\" alt=\"Circle Packing results, option 1\"></p>\n\n<p>Option 2, squeezes in the box <em>after</em> separating overlapped circles.  This avoids overlap, but the packing isn't optimum since we don't ever push the circles into each other to force them to spread out to fill the long dimension of the rectangle:<br>\n<a href=\"http://fiddle.jshell.net/LeGfW/3/\">http://fiddle.jshell.net/LeGfW/3/</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/FV4xN.gif\" alt=\"Circle packing results, option 2\"></p>\n\n<p>Option 3, the happy medium, again squeezes in after adjusting for overlap, but the squeeze factor is based on average out the room in width and height dimensions, instead of the minimum room, so it keeps squeezing until both width and height are filled:<br>\n<a href=\"http://fiddle.jshell.net/LeGfW/5/\">http://fiddle.jshell.net/LeGfW/5/</a></p>\n\n<p><img src=\"http://i.stack.imgur.com/XKuuJ.gif\" alt=\"Circle packing results, option 3\"></p>\n\n<p>Key code consists of the <code>updateBubbles</code> method called by the force tick,\nand the <code>collide</code> method which is called in the first line of <code>updateBubbles</code>.  This is the \"option 3\" version:</p>\n\n<pre><code>// Create a function for this tick round,\n// with a new quadtree to detect collisions \n// between a given data element and all\n// others in the layout, or the walls of the box.\n\n//keep track of max and min positions from the quadtree\nvar bubbleExtent;\nfunction collide(alpha) {\n  var quadtree = d3.geom.quadtree(data);\n  var maxRadius = Math.sqrt(dataMax);\n  var scaledPadding = padding/scaleFactor;\n  var boxWidth = width/scaleFactor;\n  var boxHeight = height/scaleFactor;\n\n    //re-set max/min values to min=+infinity, max=-infinity:\n  bubbleExtent = [[Infinity, Infinity],[-Infinity, -Infinity]];\n\n  return function(d) {\n\n      //check if it is pushing out of box:\n    var r = Math.sqrt(d.size) + scaledPadding,\n        nx1 = d.x - r,\n        nx2 = d.x + r,\n        ny1 = d.y - r,\n        ny2 = d.y + r;\n\n      if (nx1 &lt; 0) {\n           d.x = r;\n      }\n      if (nx2 &gt; boxWidth) {\n           d.x = boxWidth - r;\n      }\n      if (ny1 &lt; 0) {\n           d.y = r;\n      }\n      if (ny2 &gt; boxHeight) {\n           d.y = boxHeight - r;\n      }\n\n\n    //check for collisions\n    r = r + maxRadius, \n        //radius to center of any possible conflicting nodes\n        nx1 = d.x - r,\n        nx2 = d.x + r,\n        ny1 = d.y - r,\n        ny2 = d.y + r;\n\n    quadtree.visit(function(quad, x1, y1, x2, y2) {\n      if (quad.point &amp;&amp; (quad.point !== d)) {\n        var x = d.x - quad.point.x,\n            y = d.y - quad.point.y,\n            l = Math.sqrt(x * x + y * y),\n            r = Math.sqrt(d.size) + Math.sqrt(quad.point.size)\n                    + scaledPadding;\n        if (l &lt; r) {\n          l = (l - r) / l * alpha;\n          d.x -= x *= l;\n          d.y -= y *= l;\n          quad.point.x += x;\n          quad.point.y += y;\n        }\n      }\n      return x1 &gt; nx2 || x2 &lt; nx1 || y1 &gt; ny2 || y2 &lt; ny1;\n    });\n\n    //update max and min\n    r = r-maxRadius; //return to radius for just this node\n    bubbleExtent[0][0] = Math.min(bubbleExtent[0][0], \n                                  d.x - r);\n    bubbleExtent[0][1] = Math.min(bubbleExtent[0][1], \n                                  d.y - r);\n    bubbleExtent[1][0] = Math.max(bubbleExtent[1][0], \n                                  d.x + r);\n    bubbleExtent[1][1] = Math.max(bubbleExtent[1][1], \n                                  d.y + r);\n\n  };\n}  \n\nfunction updateBubbles() {\n\n    bubbles\n        .each( collide(0.5) ); //check for collisions   \n\n    //update the scale to squeeze in the box \n    //to match the current extent of the bubbles\n    var bubbleWidth = bubbleExtent[1][0] - bubbleExtent[0][0];\n    var bubbleHeight = bubbleExtent[1][1] - bubbleExtent[0][1];\n\n    scaleFactor = (height/bubbleHeight +\n                           width/bubbleWidth)/2; //average\n    /*\n    console.log(\"Box dimensions:\", [height, width]);\n    console.log(\"Bubble dimensions:\", [bubbleHeight, bubbleWidth]);\n    console.log(\"ScaledBubble:\", [scaleFactor*bubbleHeight,\n                                 scaleFactor*bubbleWidth]);\n    //*/\n\n    rScale\n        .range([0,  Math.sqrt(dataMax)*scaleFactor]);\n\n    //shift the bubble cluster to the top left of the box\n    bubbles\n        .each( function(d){\n            d.x -= bubbleExtent[0][0];\n            d.y -= bubbleExtent[0][1];\n        });\n\n    //update positions and size according to current scale:\n    bubbles\n        .attr(\"r\", function(d){return rScale(d.size);} )\n        .attr(\"cx\", function(d){return scaleFactor*d.x;})\n        .attr(\"cy\", function(d){return scaleFactor*d.y;})\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I was trying to pack circles of <strong>different sizes into a rectangular container</strong>, not packing in circular container that <code>d3.js</code> bundled with, under <code>d3.layout.pack</code>.</p>\n\n<p>here's the layout I want to achieve:</p>\n\n<p><img src=\"http://cl.ly/Kpgp/Image%202012.11.11%2011:12:01%20PM.png\" alt=\"\"></p>\n\n<p>I've found <a href=\"http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.99.5620&amp;rep=rep1&amp;type=pdf\">this paper</a> on this matter, but I am not a math guy to understand the article throughly and convert them into code\u2026</p>\n\n<p>Anyone can suggest where I should start to convert this into d3.js layout plugin, or if you have visualized bubbles similar to this layout, please suggest any direction you took to solve that.</p>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1409801247,
            "question_id": 13339615,
            "score": 13,
            "tags": [
                "javascript",
                "algorithm",
                "geometry",
                "d3.js",
                "packing"
            ],
            "title": "Packing different sized circles into rectangle - d3.js"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I found this, I have not personally used it do I don't know if it is entirely what you are looking for but take a look.</p>\n\n<p><a href=\"http://captico.com/introducing-speech-2-text-api-by-google/2011/03\" rel=\"nofollow\">http://captico.com/introducing-speech-2-text-api-by-google/2011/03</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The issue is what will capture your user's speech and send it some speech server for processing. x-webkit-speech is built into the browser and the browser uses the PC's sound card to capture speech. Javascript/Jquery in a browser alone cannot access the hardware devices. I do not know if Chrome exposes any x-webkit-speech objects in the DOM so you can do capture through Javascript. </p>\n\n<p>That said, people have reverse engineered the Google speech api and used it from code. See <a href=\"http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/\" rel=\"nofollow\">http://mikepultz.com/2011/03/accessing-google-speech-api-chrome-11/</a> for an example.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As of today this now exists, for Chrome: <a href=\"http://chrome.blogspot.co.uk/2013/01/hello-browser.html\">http://chrome.blogspot.co.uk/2013/01/hello-browser.html</a> </p>\n\n<p>(<a href=\"https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html#api_description\">api doc</a>)</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>For an easy way to do this with JavaScript, check out <a href=\"https://www.talater.com/annyang/\">annyang</a>, which is a library that makes dealing with speech recognition super-easy.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I want to try creating a jQuery slideshow using simple voice commands like \"next\" or \"previous\". Is there a way to use Google's voice recognition? I know about Chrome's x-webkit-speech, but I have to click a button to use it.</p>\n\n<p>I tried MIT's WAMI, but I found it slower and less accurate than Google's speech cognition.</p>\n",
            "last_activity_date": 1388706912,
            "question_id": 8830203,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "google-api",
                "speech-recognition",
                "voice-recognition"
            ],
            "title": "Is there an API for Google&#39;s speech recognition technology?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You should do it like this:</p>\n\n<pre><code>function getResults(str) {\n  $.ajax({\n        url:'suggest.html',\n        type:'POST',\n        data: 'q=' + str,\n        dataType: 'json',\n        success: function( json ) {\n           $.each(json, function(i, optionHtml){\n              $('#myselect').append(optionHtml);\n           });\n        }\n    });\n};\n</code></pre>\n\n<p>Cheers</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Why not just make the server return the names?</p>\n\n<pre><code>[\"Woodland Hills\", \"none\", \"Los Angeles\", \"Laguna Hills\"]\n</code></pre>\n\n<p>Then create the <code>&lt;option&gt;</code> elements using JavaScript.</p>\n\n<pre><code>$.ajax({\n    url:'suggest.html',\n    type:'POST',\n    data: 'q=' + str,\n    dataType: 'json',\n    success: function( json ) {\n        $.each(json, function(i, value) {\n            $('#myselect').append($('&lt;option&gt;').text(value).attr('value', value));\n        });\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 38
                }
            ],
            "body": "<p>I need to feed cities based on country of selection. I did it programmically but have no idea how to put JSON data into the select box. I tried several ways using jQuery, but none of them worked.</p>\n\n<p>The response I am getting (I can format this differently if necessary):</p>\n\n<pre><code>[\"&lt;option value='Woodland Hills'&gt;Woodland Hills&lt;\\/option&gt;\",\"&lt;option value='none'&gt;none&lt;\\/option&gt;\",\"&lt;option value='Los Angeles'&gt;Los Angeles&lt;\\/option&gt;\",\"&lt;option value='Laguna Hills'&gt;Laguna Hills&lt;\\/option&gt;\"]\n</code></pre>\n\n<p>But how can I put this data as options inside a HTML <code>&lt;select&gt;&lt;/select&gt;</code> tag?</p>\n\n<p>The code I tried:</p>\n\n<pre><code>&lt;form action=\"\" method=\"post\"&gt;\n&lt;input id=\"city\" name=\"city\" type=\"text\" onkeyup=\"getResults(this.value)\"/&gt;\n&lt;input type=\"text\" id=\"result\" value=\"\"/&gt;\n&lt;select id=\"myselect\" name=\"myselect\" &gt;&lt;option selected=\"selected\"&gt;blank&lt;/option&gt;&lt;/select&gt;\n&lt;/form&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nfunction getResults(str) {\n  $.ajax({\n        url:'suggest.html',\n        type:'POST',\n        data: 'q=' + str,\n        dataType: 'json',\n        success: function( json ) {\n            $('#myselect').append(json);\n\n        }\n    });\n};\n\n$( '.suggest' ).keyup( function() {\n   getResults( $( this ).val() );\n} );\n&lt;/script&gt;\n</code></pre>\n\n<p>I also tried to use this <a href=\"http://remysharp.com/2007/01/20/auto-populating-select-boxes-using-jquery-ajax/\">tutorial on auto-populating select boxes using jQuery and AJAX</a>, but this never did anything except filling my select with \"UNDEFINED\" for me even though I got the response in the format the tutorial suggested.</p>\n\n<pre><code>&lt;script type=\"text/javascript\" charset=\"utf-8\"&gt;\n$(function(){\n  $(\"select#city\").change(function(){\n    $.getJSON(\"/select.php\",{id: $(this).val(), ajax: 'true'}, function(j){\n      var options = '';\n      for (var i = 0; i &lt; j.length; i++) {\n        options += '&lt;option value=\"' + j[i].optionValue + '\"&gt;' + j[i].optionDisplay + '&lt;/option&gt;';\n      }\n      $(\"select#myselect\").html(options);\n    })\n  })\n})\n&lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1356715876,
            "question_id": 5918144,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "json"
            ],
            "title": "How can I use JSON data to populate the options of a select box?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Using CSS to put the image an unused class, then adding that class to an element with javascript is going to be your best bet. If you don't use image tags at all, this solution becomes a bit more obvious.</p>\n\n<p>Though, for perspective, most people have the opposite problem where they want to preload an image so it shows up instantly when it's told to be shown.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It partially depends on how your images must be placed in your code. Are you able to display the images as the background of a &lt;div&gt;, or are you required to use the &lt;img&gt; tag? If you need the &lt;img&gt; tag, you may be screwed depending on the browser being used. Some browsers are smart enough to recognize when an image is inside of a hidden object or in an object of 0 width/height and not load it since it's essentially invisible, anyway. For this reason many people will suggest putting an image in a 1x1 pixel &lt;span&gt; if you want the image to be pre-loaded but not visible.</p>\n\n<p>If you don't require the &lt;img&gt; tag, most browsers won't load images referenced by CSS until the element in question becomes visible.</p>\n\n<p>Mind you that short of using AJAX to download the image there's no way to be 100% sure the browser won't pre-load the image anyway. It's not unbelievable that a browser would want to pre-load anything it assumes may be used later in order to \"speed up\" the average load times.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here's a jQuery solution: </p>\n\n<pre><code>$(function () {\n   $(\"img\").not(\":visible\").each(function () {\n       $(this).data(\"src\", this.src);\n       this.src = \"\";\n   });\n\n   var reveal = function (selector) {\n       var img = $(selector);\n       img[0].src = img.data(\"src\");\n   }\n});\n</code></pre>\n\n<p>It's similar to your solution, except it doesn't use the <code>fakeSrc</code> attribute in the markup. It clears the <code>src</code> attribute to stop it from loading and stores it elsewhere. Once you are ready to show the image, you use the <code>reveal</code> function much like you do in your solution. I apologize if you do not use jQuery, but the process should be transferable to whichever framework (if any) that you use.</p>\n\n<p>Note: This code specifically must be ran before the window has fired the <code>load</code> event but after the DOM has been loaded.</p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>The browser will load any images that has a <code>src</code> attribute set, so what you want to do is to use <code>data-src</code> in the markup and use JavaScript to set the <code>src</code> attribute when you want it to load.</p>\n\n<pre><code>&lt;img class=\"hidden\" data-src=\"url/to/image.jpg\" /&gt;\n</code></pre>\n\n<p>I created this tiny plugin that will take care of the problem:</p>\n\n<pre><code>(function($){\n    $.fn.reveal = function(){\n        var args = Array.prototype.slice.call(arguments);\n        return this.each(function(){\n            var img = $(this),\n                src = img.data(\"src\");\n            src &amp;&amp; img.attr(\"src\", src).load(function(){\n                img[args[0]||\"show\"].apply(img, args.splice(1));\n            });\n        });\n    }\n}(jQuery));\n</code></pre>\n\n<p>Execute <code>.reveal</code> on the image(s) you want to load/show:</p>\n\n<pre><code>$(\"img.hidden\").reveal(\"fadeIn\", 1000);\n</code></pre>\n\n<p>See <a href=\"http://jsfiddle.net/mekwall/PZy53/\">test case on jsFiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>If you are okay relying on scripting, there is the background image method and the image src method. Put simply, set all your hidden images to some very small image (reduce strain on server) or one that does not exist at all (who cares? The visitor cannot see the image-missing [X] anyway, the div is hidden) then change it with script...</p>\n\n<pre><code>&lt;img src=\"I_do_not_exist.jpg\" id=\"my_image\" /&gt;\n&lt;input type=\"button\" onclick=\"document.getElementById('my_image').src='I_exist.jpg';\" Value=\"change image\" /&gt;\n\n&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;\n\n&lt;div id=\"mydiv\" style=\"width:40px; height:40px; border:2px solid blue\"&gt;&lt;/div&gt;\n\n&lt;input type=\"button\" onclick=\"document.getElementById('my_div').style.width='455px';document.getElementById('my_div').style.height='75px';document.getElementById('my_div').style.backgroundImage='url(I_exist.jpg)';\" Value=\"change background image\" /&gt;\n</code></pre>\n\n<p>I left a width on the above example to show that nothing is in the div image wise until you ask it to load.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a bunch of hidden images on my website. Their container DIVs have style=\"display: none\". Depending on the user's actions, some images may be revealed via javascript. The problem is that all my images are loaded upon opening the page. I would like to put less strain on the server by only loading images that eventually become visible. I was wondering if there was a pure CSS way to do this. Here are two hacky/complicated ways I am currently doing it. As you can see, it's not clean code.</p>\n\n<pre><code>&lt;div id=\"hiddenDiv\"&gt;\n   &lt;img src=\"spacer.gif\" /&gt;\n&lt;/div&gt;\n\n.reveal .img {\n background-image: url(flower.png);\n}\n\n$('hiddenDiv').addClassName('reveal');\n</code></pre>\n\n<p>Here is method 2:</p>\n\n<pre><code>&lt;img id=\"flower\" fakeSrc=\"flower.png\" /&gt;\n\nfunction revealImage(id) {\n $('id').writeAttribute(\n  'src',\n  $('id').readAttribute('fakeSrc')\n );\n}\n\nrevealImage('flower');\n</code></pre>\n",
            "last_activity_date": 1395359887,
            "question_id": 3818063,
            "score": 13,
            "tags": [
                "javascript",
                "css",
                "image",
                "http"
            ],
            "title": "Don&#39;t load hidden images"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>tfe answered this question in another post on StackOverflow: <a href=\"http://stackoverflow.com/a/3656618/2044649\">Answered</a></p>\n\n<p>Another method would be to use:</p>\n\n<pre><code>$(document).bind(\"touchmove\",function(event){\n  event.preventDefault();\n});\n</code></pre>\n\n<p>But it may prevent some of the jquery mobile functionality from working properly.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try to handler 'mousewheel' event on all nodes except one</p>\n\n<pre><code>$('body').on({\n    'mousewheel': function(e) {\n        if (e.target.id == 'el') return;\n        e.preventDefault();\n        e.stopPropagation();\n    }\n})\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/DHz77/1/\" rel=\"nofollow\">http://jsfiddle.net/DHz77/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Following Glens idea, here it goes another possibility.\nIt would allow you to scroll inside the div, but would prevent the body to scroll with it, when the div scroll ends.\nHowever, it seems to accumulate too many preventDefault if you scroll too much, and then it creates a lag if you want to scroll up. Does anybody have a suggestion to fix that?</p>\n\n<pre><code>    $(\".scrollInsideThisDiv\").bind(\"mouseover\",function(){\n       var bodyTop = document.body.scrollTop;\n       $('body').on({\n           'mousewheel': function(e) {\n           if (document.body.scrollTop == bodyTop) return;\n           e.preventDefault();\n           e.stopPropagation();\n           }\n       });\n    });\n    $(\".scrollInsideThisDiv\").bind(\"mouseleave\",function(){\n          $('body').unbind(\"mousewheel\");\n    });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to scroll the element you're over and prevent the window to scroll, here's a really useful function :</p>\n\n<pre><code>$('.Scrollable').on('DOMMouseScroll mousewheel', function(ev) {\n    var $this = $(this),\n        scrollTop = this.scrollTop,\n        scrollHeight = this.scrollHeight,\n        height = $this.height(),\n        delta = (ev.type == 'DOMMouseScroll' ?\n            ev.originalEvent.detail * -40 :\n            ev.originalEvent.wheelDelta),\n        up = delta &gt; 0;\n\n    var prevent = function() {\n        ev.stopPropagation();\n        ev.preventDefault();\n        ev.returnValue = false;\n        return false;\n    }\n\n    if (!up &amp;&amp; -delta &gt; scrollHeight - height - scrollTop) {\n        // Scrolling down, but this will take us past the bottom.\n        $this.scrollTop(scrollHeight);\n\n        return prevent();\n    } else if (up &amp;&amp; delta &gt; scrollTop) {\n        // Scrolling up, but this will take us past the top.\n        $this.scrollTop(0);\n        return prevent();\n    }\n});\n</code></pre>\n\n<p>Apply the class \"Scrollable\" to your element and that's it!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>CSS 'fixed' solution (like Facebook does):</p>\n\n<pre><code>body_temp = $(\"&lt;div class='body_temp' /&gt;\")\n    .append($('body').contents())\n    .css('position', 'fixed')\n    .css('top', \"-\" + scrolltop + 'px')\n    .width($(window).width())\n    .appendTo('body');\n</code></pre>\n\n<p>to toggle to normal state:</p>\n\n<pre><code>var scrolltop = Math.abs($('.body_temp').position().top);\n$('body').append($('.body_temp').contents()).scrollTop(scrolltop);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Hi is it possible to disable window scrolling without using <code>overflow:hidden;</code> when i'm hover an element?</p>\n\n<p>i tryed :</p>\n\n<pre><code>$('.chat-content').on('mouseenter',function(){\n    $(document).scroll(function(e){\n        if(!$(e).hasClass('.chat-content'))\n        e.stopPropagation();\n        e.preventDefault();\n    });\n});\n</code></pre>\n\n<p>i mean, i want to leave visible the scrollbar but when i scroll out of the element i'm over with mouse the window doesn't scrolls, while the element i'm over can scroll</p>\n\n<p>So disable scroll for body but not for element i'm over without using css</p>\n\n<p>here is another try i did: <a href=\"http://jsfiddle.net/SHwGL/\">http://jsfiddle.net/SHwGL/</a></p>\n",
            "last_activity_date": 1423761211,
            "question_id": 19817899,
            "score": 12,
            "tags": [
                "javascript",
                "jquery",
                "css",
                "scroll"
            ],
            "title": "jQuery or Javascript - how to disable window scroll without overflow:hidden;"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Don't call angular.injector() -- this creates a new injector.  Instead, inject the already-created <code>$injector</code> into your controller and use it:</p>\n\n<p>So instead of:</p>\n\n<pre><code>var algoController = function($scope) {\n    $scope.base64 = angular.injector(['main']).get('base64');\n};\n</code></pre>\n\n<p>Do this:</p>\n\n<pre><code>var algoController = function($scope, $injector) {\n    $scope.base64 = $injector.get('base64');\n};\n</code></pre>\n\n<p>But most of the time you should inject your service directly, rather than dynamically, like so:</p>\n\n<pre><code>var algoController = function($scope, base64) {\n    $scope.base64 = base64;\n};\n</code></pre>\n\n<p>See also <a href=\"http://stackoverflow.com/questions/14415845/angularjs-dynamically-inject-scope-or-controller\">AngularJS dynamically inject scope or controller</a></p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I'm still a debutant on Angularjs.\nI want to inject dynamically a dependency of a service (that I created) in my controller.</p>\n\n<p>But when I code a service with dependencies, I got this error :</p>\n\n<p><em>Error: Unknown provider: $windowProvider &lt;- $window &lt;- base64</em></p>\n\n<p>This is the code of the controller.</p>\n\n<pre><code>var base64 = angular.injector(['servicesModule']).get('base64');\nconsole.log(\"base64\", base64.encode(\"my text will be encoded\"));\n</code></pre>\n\n<p>This code works:</p>\n\n<pre><code>var servicesModule = angular.module('servicesModule', []);\nservicesModule.factory('base64', function() {\n    return {\n\n        name: 'base64',\n        readonly: false,\n\n        encode: function(input) {\n            return window.btoa(input);\n        },\n\n        decode: function(input) {\n            return window.atob(input);\n        }\n\n    };\n\n});\n</code></pre>\n\n<p>This code doesn't work :</p>\n\n<pre><code>var extModule = angular.module('ext', []);\nextModule.factory('base64', ['$window', function($window) {\n    return {\n\n        name: 'base64',\n        readonly: false,\n\n        encode: function(input) {\n            return $window.btoa(input);\n        },\n\n        decode: function(input) {\n            return $window.atob(input);\n        }\n\n    };\n\n}]);\n</code></pre>\n\n<p>Another problem is when the service is in the same module as the controller.\nIf the module has dependencies, I doesn't work (I have $routeProvider dependence in my module config) :</p>\n\n<p><em>Error: Unknown provider: $routeProvider from mainModule</em></p>\n\n<pre><code>var mainModule = angular.module('main', [],\n    function($routeProvider, $locationProvider) {\n        //Some routing code\n    }\n);\n</code></pre>\n\n<p><strong>JS Fiddles</strong></p>\n\n<p>Same module with dependencies(controller + service) : <a href=\"http://jsfiddle.net/yrezgui/YedT2/\" rel=\"nofollow\">http://jsfiddle.net/yrezgui/YedT2/</a></p>\n\n<p>Different module with dependencies : <a href=\"http://jsfiddle.net/yrezgui/YedT2/4/\" rel=\"nofollow\">http://jsfiddle.net/yrezgui/YedT2/4/</a></p>\n\n<p>Different module without dependencies : <a href=\"http://jsfiddle.net/yrezgui/YedT2/5/\" rel=\"nofollow\">http://jsfiddle.net/yrezgui/YedT2/5/</a></p>\n",
            "last_activity_date": 1420202886,
            "question_id": 12758157,
            "score": 12,
            "tags": [
                "javascript",
                "angularjs",
                "dependency-injection"
            ],
            "title": "How to $inject dynamically dependence in a controller"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><a href=\"http://stackoverflow.com/questions/3338642/updating-address-bar-with-new-url-without-hash-or-reloading-the-page\">Here is a similar question</a>.</p>\n\n<p>Here is an example:</p>\n\n<pre><code>function processAjaxData(response, urlPath){\n    document.getElementById(\"content\").innerHTML = response.html;\n    document.title = response.pageTitle;\n    window.history.pushState(\n        {\n            \"html\":response.html,\n            \"pageTitle\":response.pageTitle\n        },\n        \"\",\n        urlPath\n   );\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>It looks to me like the whole thing is done with AJAX. The <code>#!</code> in the URL is causing the browser to interpret the remainder of the URL as an anchor -- anchors don't cause page reloads (in fact, the server will never see what anchor the browser is on in the course of a normal HTTP request). When the URL changes, Javascript takes over, inspects the querystring, and loads whatever is appropriate from the server using web services.</p>\n\n<p>I haven't looked at it too much in depth, but that is what it looks like to me.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/824349/modify-the-url-without-reloading-the-page\">Modify the URL without reloading the page</a>  </p>\n</blockquote>\n\n\n\n<p>I'm looking for a way to make my internal links functional using my current javascript animations, without causing the page to reload when you click on them - <strong>but I would like the URL to update in the browser</strong>.</p>\n\n<p>Many websites do this, here is a good example: <a href=\"http://grooveshark.com/#!/search?q=adf\">http://grooveshark.com/#!/search?q=adf</a></p>\n\n<p>How do they get the URL to update without the page reloading?</p>\n\n<hr>\n\n<p>More details:</p>\n\n<p>Currently a link on my page looks like <code>&lt;a href=\"#aboutus\"&gt;About Us&lt;/a&gt;</code>, this takes you to <code>&lt;div id=\"aboutus\"&gt;&lt;/div&gt;</code> via javascript.</p>\n\n<p>The javascript looks something like:</p>\n\n<pre><code>$(\"#navigation a\").click(function(e){\n  animate(..scroll to section..);\n  e.preventDefault(); // &lt;==========\n});\n</code></pre>\n\n<p>I believe the \"e.preventDefault()\" is what is causing the URL to not be updated, but how do I prevent the browser from reloading the page when the URL is changed?</p>\n\n<p>How do other websites do it? What is this method called (so I can further research it)?</p>\n\n<p>thanks.</p>\n",
            "last_activity_date": 1423072015,
            "question_id": 10953792,
            "score": 12,
            "tags": [
                "javascript",
                "html",
                "url"
            ],
            "title": "Change URL in browser address bar without reload existing page"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The following will do the job in all the major browsers:</p>\n\n<pre><code>function replaceSelectedText(replacementText) {\n    var sel, range;\n    if (window.getSelection) {\n        sel = window.getSelection();\n        if (sel.rangeCount) {\n            range = sel.getRangeAt(0);\n            range.deleteContents();\n            range.insertNode(document.createTextNode(replacementText));\n        }\n    } else if (document.selection &amp;&amp; document.selection.createRange) {\n        range = document.selection.createRange();\n        range.text = replacementText;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 34
                }
            ],
            "body": "<p>I have been looking high and low for an answer but failed.</p>\n\n<p>Is there a cross-browser solution to replace selected text in contenteditable div? I simply want users to highlight some text and replace the highlighted text into xxxxx.</p>\n",
            "last_activity_date": 1287758425,
            "question_id": 3997659,
            "score": 12,
            "tags": [
                "javascript",
                "contenteditable"
            ],
            "title": "replace selected text in contenteditable div"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I believe there's a setting to format the code, or auto-indent or something along those lines.  It was intended to make the source code more readable.  It's effectiveness is open to opinion I guess.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Add this line to the ckeditor.js configuration file:</p>\n\n<pre><code>n.setRules('p',{indent:false,breakAfterOpen:false});\n</code></pre>\n\n<p>More about the formatting of the HTML Writer can be found in <a href=\"http://docs.cksource.com/CKEditor_3.x/Developers_Guide/Output_Formatting\">Developers Guide: Output Formatting</a> at CKSource Docs.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Elsewhere (my apologies that I did not make a note of where I got it from.), I found code to fix this problem for all the block-level tags. For my project, the extra new-lines were a problem due to outputting to XML and importing into other applications as CDATA.</p>\n\n<p>So, in my ckeditor_config.js file, after the CKEDITOR.editorConfig function, I put in this:</p>\n\n<pre><code>CKEDITOR.on('instanceReady', function( ev ) {\n  var blockTags = ['div','h1','h2','h3','h4','h5','h6','p','pre','li','blockquote','ul','ol',\n  'table','thead','tbody','tfoot','td','th',];\n\n  for (var i = 0; i &lt; blockTags.length; i++)\n  {\n     ev.editor.dataProcessor.writer.setRules( blockTags[i], {\n        indent : false,\n        breakBeforeOpen : true,\n        breakAfterOpen : false,\n        breakBeforeClose : false,\n        breakAfterClose : true\n     });\n  }\n});\n</code></pre>\n\n<p>Some of those elements may not need this treatment; obviously the blockTags array can easily be edited to your needs.</p>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>If you are like me and would like to do it at instance level and don't want to touch the configuration files so that it is easy to update/upgrade.  Then here is another solution.</p>\n\n<pre><code>CKEDITOR.replace( 'editor1',\n{\n    on :\n    {\n        instanceReady : function( ev )\n        {\n            // Output paragraphs as &lt;p&gt;Text&lt;/p&gt;.\n            this.dataProcessor.writer.setRules( 'p',\n                {\n                    indent : false,\n                    breakBeforeOpen : true,\n                    breakAfterOpen : false,\n                    breakBeforeClose : false,\n                    breakAfterClose : true\n                });\n        }\n    }\n});\n</code></pre>\n\n<p>Reference: <a href=\"http://docs.cksource.com/CKEditor_3.x/Developers_Guide/Output_Formatting\" rel=\"nofollow\">Output Formatting</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>When loading content with a set of paragraphs in CKEditor, it replaces my <code>&lt;p&gt;</code> tags with <code>&lt;p&gt;&amp;#x9;</code></p>\n\n<p>That means the editor converts this:</p>\n\n<pre><code>&lt;p&gt;paragraph 1&lt;/p&gt;\n&lt;p&gt;paragraph 2&lt;/p&gt;\n&lt;p&gt;paragraph 3&lt;/p&gt;\n</code></pre>\n\n<p>into what ends up like this:</p>\n\n<pre><code>&lt;p&gt;\n   paragraph 1&lt;/p&gt;\n&lt;p&gt;\n   paragraph 2&lt;/p&gt;\n&lt;p&gt;\n   paragraph 3&lt;/p&gt;\n</code></pre>\n\n<p>How do I fix it so that CKEditor doesn't add the extra newline characters when it sees the paragraph tags? </p>\n",
            "last_activity_date": 1355100535,
            "question_id": 2547090,
            "score": 12,
            "tags": [
                "javascript",
                "newline",
                "wysiwyg",
                "ckeditor"
            ],
            "title": "Removing unwanted newline characters when adding &lt;p&gt; in CKEditor"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Use the <em>httpfox</em> or <em>firebug</em> Firefox extension to figure out what HTTP requests the browser sends and what responses it receives.</p>\n\n<p>I don't know how Google Analytics works, but one possibility is to make the browser download an image: <code>&lt;img src=\"http://my-analytics.com\" width=\"1\" height=\"1\"&gt;</code> (with a single, transparent pixel), and log all the HTTP request headers (e.g. <code>Referer:</code>) on the server side.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's easy enough to tell by using something like Firebug's Net tab.</p>\n\n<p>Ajax isn't needed - since data isn't being fetched from Google. They just encode the information in a query string, and then load a transparent gif using it.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Without looking at the code, I assume their data is collected from the HTTP headers they receive in the asynchronous request.</p>\n\n<p>Remember that most browsers send data such as OS, platform, browser, version, locale, etc... Also they do have the IP so they can guesstimate your location. And I assume they have some sort of clever algorithm to decide whether you are a unique visitor or not.</p>\n\n<p>Time on the site is probably calculated by using an <code>onUnload()</code> event.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>When html page makes a request for a ga.js file the http protocol sends big amount of data, about IP, refer, browers, language, system. There is no need to use ajax.</p>\n\n<p>But still some data cant be achieved this way, so GA script puts image into html with additional parameters, take a look at this example:</p>\n\n<p><code>utm.gif?utmwv=4.3&amp;utmn=1464271798&amp;utmhn=www.example.com&amp;utmcs=UTF-8&amp;utmsr=1920x1200&amp;utmsc=32-bit&amp;utmul=en-us&amp;utmje=1&amp;utmfl=10.0%20r22&amp;utmdt=Page\">http://www.google-analytics.com/_utm.gif?utmwv=4.3&amp;utmn=1464271798&amp;utmhn=www.example.com&amp;utmcs=UTF-8&amp;utmsr=1920x1200&amp;utmsc=32-bit&amp;utmul=en-us&amp;utmje=1&amp;utmfl=10.0%20r22&amp;utmdt=Page title&amp;utmhid=1805038256&amp;utmr=0&amp;utmp=/&amp;utmac=cookie value</code></p>\n\n<p>This is a blank image, sometimes called a <a href=\"http://en.wikipedia.org/wiki/Web_bug\">tracking pixel</a>, that GA puts into HTML.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>//edit: see coment at the bottom</p>\n\n<p>*Ok, find an answer during a discussion with a friend of mine :-)\nThe informations to google analytics are submitted in three ways:</p>\n\n<ol>\n<li>List item</li>\n<li>The HTTP Request can be analyzed with all informations of the http headers.</li>\n<li>A cookie is recognized by the google analytics server.</li>\n<li><strong>An ajax call is done within the embeded javascript to submit such informations like display resolution, flash player version, etc.</strong> \n<strong>These informations are not transmitted via the http headers.</strong>\n<em>This is possible, because the ajax call is done in the context of the embedded javascript, so its no cross domain scripting. This was an error in reasoning by me.</em>*</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Google Analytics web page provides detailed information of how Google Analytics server collect data. <a href=\"http://code.google.com/apis/analytics/docs/concepts/gaConceptsOverview.html\" rel=\"nofollow\">http://code.google.com/apis/analytics/docs/concepts/gaConceptsOverview.html</a></p>\n\n<p>All Google Analytics data is collected and packed into the Request URL's query string and sent to Google Analytics server. The http request is made by a gif image(http://www.google-analytics.com/__utm.gif) activated by Google Analytics JS.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To expand on other very good answers, Google does provide an API to track async \"virtual pageviews\" which are reported by website authors themselves in their scripts to Google. </p>\n\n<pre><code>_gaq.push(['_trackPageview', 'my_unique_action']);\n</code></pre>\n\n<p>They provide it so it is possible to track actions that are not part of regular page views and http requests.</p>\n\n<p>Async tracking guide: \n<a href=\"http://code.google.com/apis/analytics/docs/tracking/asyncUsageGuide.html#Syntax\" rel=\"nofollow\">http://code.google.com/apis/analytics/docs/tracking/asyncUsageGuide.html#Syntax</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Yes, I know you have to embed the google analytics javascript into your page.</p>\n\n<p>But how is the collected information submitted to the google analytics server?</p>\n\n<p>For example an AJAX request will not be possible because of the browsers security settings (cross domain scripting).</p>\n\n<p>Maybe someone had already a look at the confusing google javascript code?</p>\n",
            "last_activity_date": 1395442566,
            "question_id": 892049,
            "score": 12,
            "tags": [
                "javascript",
                "google-analytics",
                "tracking"
            ],
            "title": "How does google analytics collect its data?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This worked well for me.  Rather than grouping on <code>this</code>, create a proxy object that holds the properties you want validated.</p>\n\n<pre><code>this.errors = ko.validation.group({\n    P1: this.P1,\n    P2: this.P2,\n    P3: this.P3\n});\n</code></pre>\n\n<p>If you do this, consider using <code>validatedObservable</code> instead of <code>group</code>.  Not only do you get the errors, but you can collectively check if all the properties are valid using the <code>isValid</code> property.</p>\n\n<pre><code>this.validationModel = ko.validatedObservable({\n    P1: this.P1,\n    P2: this.P2,\n    P3: this.P3\n});\n\n// is the validationModel valid?\nthis.validationModel.isValid();\n// what are the error messages?\nthis.validationModel.errors();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 27
                },
                {
                    "body": "<p>As described in the <a href=\"https://github.com/Knockout-Contrib/Knockout-Validation/wiki/Validating-Only-Specific-Observables\" rel=\"nofollow\">documentation</a> the right way to validate only specific observables is:</p>\n\n<pre><code>this.errors = ko.validation.group([this.P1, this.P2, this.P3]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I am trying to use knockout.validation plugin. I created an exampleViewModel :</p>\n\n<pre><code>function exampleViewModel()\n{\n this.P1 = ko.observable().extend({ required : true });\n this.P2 = ko.observable().extend({ required : true });\n this.P3 = ko.observable().extend({ required : true });\n this.P4 = ko.observable().extend({ required : true });\n\n this.errors = ko.validation.group(this);\n}    \n</code></pre>\n\n<p>In the above view model i created a validation group named errors for the current object. Now if any validation rule fails on any 1 property out of 4 than this errors property contains an error message.</p>\n\n<p><code>My question is</code> , if i want to create a validation group of only 3 properties <code>(P1, P2, P3)</code> out of 4 than how can i do this ?</p>\n",
            "last_activity_date": 1378143864,
            "question_id": 13037713,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "validation",
                "knockout.js"
            ],
            "title": "How to use ko.validation.group function"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>JavaScript strings are UCS-2 encoded but can represent Unicode code points outside the Basic Multilingual Pane (<code>U+0000</code> - <code>U+D7FF</code> and <code>U+E000</code> - <code>U+FFFF</code>) using two 16 bit numbers (a UTF-16 <em>surrogate pair</em>), the first of which must be in the range <code>U+D800</code> - <code>U+DFFF</code>.</p>\n\n<p>Based on this, it's easy to detect whether a string contains any characters that lie outside the Basic Multilingual Plane (which is what I think you're asking: you want to be able to identify whether a string contains any characters that lie outside the range of code points that JavaScript represents as a single character):</p>\n\n<pre><code>function containsSurrogatePair(str) {\n    return /[\\uD800-\\uDFFF]/.test(str);\n}\n\nalert( containsSurrogatePair(\"foo\") ); // false\nalert( containsSurrogatePair(\"f\ud834\udf06\") ); // true\n</code></pre>\n\n<p>Working out precisely which code points are contained in your string is a little harder and requires a UTF-16 decoder. The following will convert a string into an array of Unicode code points:</p>\n\n<pre><code>var getStringCodePoints = (function() {\n    function surrogatePairToCodePoint(charCode1, charCode2) {\n        return ((charCode1 &amp; 0x3FF) &lt;&lt; 10) + (charCode2 &amp; 0x3FF) + 0x10000;\n    }\n\n    // Read string in character by character and create an array of code points\n    return function(str) {\n        var codePoints = [], i = 0, charCode;\n        while (i &lt; str.length) {\n            charCode = str.charCodeAt(i);\n            if ((charCode &amp; 0xF800) == 0xD800) {\n                codePoints.push(surrogatePairToCodePoint(charCode, str.charCodeAt(++i)));\n            } else {\n                codePoints.push(charCode);\n            }\n            ++i;\n        }\n        return codePoints;\n    }\n})();\n\nalert( getStringCodePoints(\"f\ud834\udf06\").join(\",\") ); // 102,119558\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                }
            ],
            "body": "<p>Is it possible in Javascript to detect if a string contains multibyte characters? If so, is it possible to tell which ones?</p>\n\n<p>The problem I'm running into is this (apologies if the Unicode char doesn't show up right for you)</p>\n\n<pre><code>s = \"\ud834\udf06\";\n\nalert(s.length);    // '2'\nalert(s.charAt(0)); // '\ufffd\ufffd'\nalert(s.charAt(1)); // '\ufffd\ufffd'\n</code></pre>\n\n<hr>\n\n<p><strong>Edit for a bit of clarity here <em>(I hope)</em>.</strong> <em>As I understand it now</em>, all strings in Javascript are represented as a series of UTF-16 code points, which means that regular characters actually take up 2 bytes (16 bits), so my usage of \"multibyte\" in the title was a bit off. Some characters do not fall in the Basic Multilingual Plane (BMP), such as the string in the example above, and so they take up two code points (32 bits). That is the question I was asking. I'm also not editing the original title, since to someone who doesn't know much about this stuff (and hence would be searching SO for info about it), \"multibyte\" would make sense.</p>\n",
            "last_activity_date": 1318845229,
            "question_id": 4877326,
            "score": 11,
            "tags": [
                "javascript",
                "string",
                "internationalization",
                "multibyte"
            ],
            "title": "How can I tell if a string contains multibyte characters in Javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use localStorage for that. You can store any data in a hash table format in browser memory and then access it any time. I'm not sure if we can access localStorage from the content script (it was blocked before), try to do it by yourself. Here's how to do it through you background page (I pass data from content script to background page first, then save it in localStorage):</p>\n\n<p>in contentScript.js:</p>\n\n<pre><code>chrome.runtime.sendMessage({\n  total_elements: totalElements // or whatever you want to send\n});\n</code></pre>\n\n<p>in eventPage.js (your background page):</p>\n\n<pre><code>chrome.runtime.onMessage.addListener(\n    function(request, sender, sendResponse){\n       localStorage[\"total_elements\"] = request.total_elements;\n    }\n);\n</code></pre>\n\n<p>Then you can access that variable in popup.js with localStorage[\"total_elements\"].</p>\n\n<p>Maybe you can access localStorage directly from the content script in modern browsers. Then you don't need to pass the data through your background page.</p>\n\n<p>Nice reading about localStorage: <a href=\"http://diveintohtml5.info/storage.html\" rel=\"nofollow\">http://diveintohtml5.info/storage.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Although you are definitely in the right direction (and actually pretty close to the end), there are several (imo) bad practises in your code (e.g. injecting a whole library (jquery) for such a trivial task, declaring unnecessary permissions, making superflous calls to API methods etc).<br>\nI did not test your code myself, but from a quick overview I believe that correcting the following could result in a working solution (although not very close to optimal):</p>\n\n<ol>\n<li><p>In <strong>manifest.json</strong>: Change the order of the content scripts, putting jquery first. According to <strong><a href=\"http://developer.chrome.com/extensions/content_scripts.html\">the relevant docs</a></strong>: </p>\n\n<blockquote>\n  <p>\"js\" [...] The list of JavaScript files to be injected into matching pages. These are injected <strong>in the order they appear</strong> in this array. </p>\n</blockquote>\n\n<p><sub>(emphasis mine)</sub></p></li>\n<li><p>In <strong>contentscript.js</strong>: Move the <strong>chrome.runtime.sendMessage({...})</strong> block <strong>inside</strong> the <code>onMessage</code> listener callback. </p></li>\n</ol>\n\n<hr>\n\n<p>That said, here is my proposed approach:</p>\n\n<h3>Control flow:</h3>\n\n<ol>\n<li>A content script is injected into each page matching some criteria.</li>\n<li>Once injected, the content scripts send a message to the event page (non-persistent background page) and the event page attaches a page=action to the tab.</li>\n<li>As soon as the page-action popup is loaded, it sends a message to the content script, asking for the info it needs.</li>\n<li>The content script processes the request, and responds so the page-action popup can display the info.</li>\n</ol>\n\n<hr>\n\n<h3>Directory structure:</h3>\n\n<pre><code>          root-directory/\n           |_____manifest.json\n           |_____background.js\n           |_____content.js\n           |_____popup.js\n           |_____popup.html\n</code></pre>\n\n<hr>\n\n<h3>manifest.json:</h3>\n\n<pre><code>{\n    \"manifest_version\": 2,\n    \"name\":    \"Test Extension\",\n    \"version\": \"0.0\",\n    \"offline_enabled\": true,\n\n    \"background\": {\n        \"persistent\": false,\n        \"scripts\": [\"background.js\"]\n    },\n\n    \"content_scripts\": [{\n        \"matches\":    [\"*://*.stackoverflow.com/*\"],\n        \"js\":         [\"./fg/content.js\"],\n        \"run_at\":     \"document_idle\",\n        \"all_frames\": false\n    }],\n\n    \"page_action\": {\n        \"default_title\": \"Test Extension\",\n        //\"default_icon\": {\n        //    \"19\": \"img/icon19.png\",\n        //    \"38\": \"img/icon38.png\"\n        //},\n        \"default_popup\": \"popup/popup.html\"\n    },\n\n    // No special permissions required...\n    //\"permissions\": []\n}\n</code></pre>\n\n<hr>\n\n<h3>background.js:</h3>\n\n<pre><code>chrome.runtime.onMessage.addListener(function(msg, sender) {\n    /* First, validate the message's structure */\n    if ((msg.from === 'content') &amp;&amp; (msg.subject === 'showPageAction')) {\n        /* Enable the page-action for the requesting tab */\n        chrome.pageAction.show(sender.tab.id);\n    }\n});\n</code></pre>\n\n<hr>\n\n<h3>content.js:</h3>\n\n<pre><code>/* Inform the backgrund page that \n * this tab should have a page-action */\nchrome.runtime.sendMessage({\n    from:    'content',\n    subject: 'showPageAction'\n});\n\n/* Listen for message from the popup */\nchrome.runtime.onMessage.addListener(function(msg, sender, response) {\n    /* First, validate the message's structure */\n    if ((msg.from === 'popup') &amp;&amp; (msg.subject === 'DOMInfo')) {\n        /* Collect the necessary data \n         * (For your specific requirements `document.querySelectorAll(...)`\n         *  should be equivalent to jquery's `$(...)`) */\n        var domInfo = {\n            total:   document.querySelectorAll('*').length,\n            inputs:  document.querySelectorAll('input').length,\n            buttons: document.querySelectorAll('button').length\n        };\n        /* Directly respond to the sender (popup), \n         * through the specified callback */\n        response(domInfo);\n    }\n});\n</code></pre>\n\n<hr>\n\n<h3>popup.js:</h3>\n\n<pre><code>/* Update the relevant fields with the new data */\nfunction setDOMInfo(info) {\n    document.getElementById('total').textContent   = info.total;\n    document.getElementById('inputs').textContent  = info.inputs;\n    document.getElementById('buttons').textContent = info.buttons;\n}\n\n/* Once the DOM is ready... */\nwindow.addEventListener('DOMContentLoaded', function() {\n    /* ...query for the active tab... */\n    chrome.tabs.query({\n        active: true,\n        currentWindow: true\n    }, function(tabs) {\n        /* ...and send a request for the DOM info... */\n        chrome.tabs.sendMessage(\n                tabs[0].id,\n                {from: 'popup', subject: 'DOMInfo'},\n                /* ...also specifying a callback to be called \n                 *    from the receiving end (content script) */\n                setDOMInfo);\n    });\n});\n</code></pre>\n\n<hr>\n\n<h3>popup.html:</h3>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;script type=\"text/javascript\" src=\"popup.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h3 style=\"font-weight:bold; text-align:center;\"&gt;DOM Info&lt;/h3&gt;\n        &lt;table border=\"1\" cellpadding=\"3\" style=\"border-collapse:collapse;\"&gt;\n            &lt;tr&gt;\n                &lt;td nowrap&gt;Total number of elements:&lt;/td&gt;\n                &lt;td align=\"right\"&gt;&lt;span id=\"total\"&gt;N/A&lt;/span&gt;&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td nowrap&gt;Number of input elements:&lt;/td&gt;\n                &lt;td align=\"right\"&gt;&lt;span id=\"inputs\"&gt;N/A&lt;/span&gt;&lt;/td&gt;\n            &lt;/tr&gt;\n            &lt;tr&gt;\n                &lt;td nowrap&gt;Number of button elements:&lt;/td&gt;\n                &lt;td align=\"right\"&gt;&lt;span id=\"buttons\"&gt;N/A&lt;/span&gt;&lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/table&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 31
                }
            ],
            "body": "<p>I know this this has been asked in numerous posts but honestly I don't get them. I am new to JavaScript, Chrome Extensions and everything and I have this class assignment.\nSo I need to make a plugin that would count DOM objects on any given page using Cross Domain Requests. \nI've been able to achieve this so far using Chrome Extension API's. \nNow the problem is I need to show the data on my popup.html page from the contentScript.js file. \nI don't know how to do that I've tried reading the documentation but messaging in chrome I just can't understand what to do. </p>\n\n<p>following is the code so far. </p>\n\n<p>manifest.json</p>\n\n<pre><code>{\n\"manifest_version\":2,\n\n\"name\":\"Dom Reader\",\n\"description\":\"Counts Dom Objects\",\n\"version\":\"1.0\",\n\n\"page_action\": {\n    \"default_icon\":\"icon.png\",\n    \"default_title\":\"Dom Reader\",\n    \"default_popup\":\"popup.html\"\n},\n\n\"background\":{\n    \"scripts\":[\"eventPage.js\"],\n    \"persistent\":false\n},\n\n\"content_scripts\":[\n    {\n        \"matches\":[\"http://pluralsight.com/training/Courses/*\", \"http://pluralsight.com/training/Authors/Details/*\",                                          \"https://www.youtube.com/user/*\", \"https://sites.google.com/site/*\", \"http://127.0.0.1:3667/popup.html\"],\n        \"js\":[\"domReader_cs.js\",\"jquery-1.10.2.js\"]\n        //\"css\":[\"pluralsight_cs.css\"]\n    }\n],\n\n\"permissions\":[\n    \"tabs\",\n    \"http://pluralsight.com/*\",\n    \"http://youtube.com/*\",\n    \"https://sites.google.com/*\",\n    \"http://127.0.0.1:3667/*\"\n]\n</code></pre>\n\n<p>popup.html</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n\n    &lt;title&gt; Dom Reader &lt;/title&gt;    \n    &lt;script src=\"jquery-1.10.2.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n    &lt;script src=\"popup.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n\n&lt;body&gt;\n    &lt;H1&gt; Dom Reader &lt;/H1&gt;\n    &lt;input type=\"submit\" id=\"readDom\" value=\"Read DOM Objects\" /&gt;\n\n   &lt;div id=\"domInfo\"&gt;\n\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>eventPage.js</p>\n\n<pre><code>var value1,value2,value3;\n\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {\nif (request.action == \"show\") {\n    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n        chrome.pageAction.show(tabs[0].id);\n    });\n}\n\nvalue1 = request.tElements;\n});\n</code></pre>\n\n<p>popup.js</p>\n\n<pre><code>$(function (){\n$('#readDom').click(function(){\nchrome.tabs.query({active: true, currentWindow: true}, function (tabs){\n    chrome.tabs.sendMessage(tabs[0].id, {action: \"readDom\"});\n\n });\n});\n});\n</code></pre>\n\n<p>contentScript</p>\n\n<pre><code>var totalElements;\nvar inputFields;\nvar buttonElement;\n\nchrome.runtime.onMessage.addListener(function (request, sender, sendResponse){\nif(request.action == \"readDom\"){\n\n    totalElements = $(\"*\").length;\n    inputFields = $(\"input\").length;\n    buttonElement = $(\"button\").length;\n\n\n}\n})\n\nchrome.runtime.sendMessage({ \naction: \"show\", \ntElements: totalElements, \nIfields: inputFields, \nbElements: buttonElement \n\n});\n</code></pre>\n\n<p>Any help would be appreciated and please avoid any noobness I did :) </p>\n",
            "last_activity_date": 1407438091,
            "question_id": 20019958,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "Chrome Extension how to send data from content script to popup.html"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Appending <code>?enablejsapi</code> in the embed string does not automatically include the API code. It only registers that particular embed with the API.</p>\n\n<p>You want to read the first example here: <a href=\"https://developers.google.com/youtube/iframe_api_reference\">https://developers.google.com/youtube/iframe_api_reference</a></p>\n\n<ol>\n<li>The asynchronous code snippet downloads and executes the YT iframe API</li>\n<li><code>onYouTubeIframeAPIReady()</code> is fired when the API is ready</li>\n<li>Create a new <code>YT.Player</code> object</li>\n<li>Your code can now call <code>pauseVideo()</code> on your player object</li>\n</ol>\n\n<p>You will most likely want to disable any events on your img until <code>onYouTubeIframeAPIReady()</code> has been fired.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>If you want to keep your JS in external file use:</p>\n\n<p><strong>HTML</strong></p>\n\n<pre><code>&lt;iframe id=\"player1\" class=\"ytplayer\" width=\"430\" height=\"241\" src=\"http://www.youtube.com/embed/HVhSasnVjMQ?enablejsapi=1&amp;theme=light&amp;showinfo=0\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;\n&lt;iframe id=\"player2\" class=\"ytplayer\" width=\"430\" height=\"241\" src=\"http://www.youtube.com/embed/HVhSasnVjMQ?enablejsapi=1&amp;theme=light&amp;showinfo=0\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;\n</code></pre>\n\n<p><strong>JS</strong></p>\n\n<pre><code>var yt_int, yt_players={},\n    initYT = function() {\n        $(\".ytplayer\").each(function() {\n            yt_players[this.id] = new YT.Player(this.id);\n        });\n    };\n$.getScript(\"//www.youtube.com/player_api\", function() {\n    yt_int = setInterval(function(){\n        if(typeof YT === \"object\"){\n            initYT();\n            clearInterval(yt_int);\n        }\n    },500);\n});\n</code></pre>\n\n<p><strong>Control Video</strong></p>\n\n<pre><code>yt_players['player_id'].playVideo();\n</code></pre>\n\n<p>The reason I do it this way is because I have the videos loading dynamically via the CMS and they open in an overlay. I set the close/open overlay functions to play/pause the video.</p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>I have a Youtube video embedded in a slideshow that I would like to pause when the user clicks on an <code>img</code> thumbnail:</p>\n\n<pre><code>&lt;li&gt;&lt;iframe width=\"430\" height=\"241\" src=\"http://www.youtube.com/watch?v=XjUz8IT0CYg?enablejsapi=1&amp;theme=light&amp;showinfo=0\" frameborder=\"0\" allowfullscreen id=\"my-video\"&gt;&lt;/iframe&gt;&lt;/li&gt;\n</code></pre>\n\n<p>I've been over the Youtube API but I'm confused how to get things started.</p>\n\n<p>Does the API JS load automatically when I append <code>?enablejsapi</code> to the end of the YouTube <code>video id</code>?</p>\n\n<p>Here is my JS:</p>\n\n<pre><code>var player1 = document.getElementById('my-video');\n\n$('img').click(function () {\n  player1.pauseVideo();\n})\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>Here's what I did based on Matt's answer below, for anyone wondering:</p>\n\n<pre><code>&lt;li&gt;&lt;iframe width=\"430\" height=\"241\" src=\"http://www.youtube.com/embed/XjUz8IT0CYg?enablejsapi=1&amp;theme=light&amp;showinfo=0\" frameborder=\"0\" allowfullscreen id=\"player-1\"&gt;&lt;/iframe&gt;&lt;/li&gt;\n\n&lt;li&gt;&lt;iframe width=\"430\" height=\"241\" src=\"http://www.youtube.com/embed/HVhSasnVjMQ?enablejsapi=1&amp;theme=light&amp;showinfo=0\" frameborder=\"0\" allowfullscreen id=\"player-2\"&gt;&lt;/iframe&gt;&lt;/li&gt;\n</code></pre>\n\n<p>And then my JS:</p>\n\n<pre><code>var tag = document.createElement('script');\ntag.src = \"//www.youtube.com/iframe_api\";\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n// Create YouTube player(s) after the API code downloads.\nvar player1;\nvar player2;\n\nfunction onYouTubeIframeAPIReady() {\n    player1 = new YT.Player('player-1');\n    player2 = new YT.Player('player-2');\n}\n</code></pre>\n\n<p>Then in <code>document.ready</code>:</p>\n\n<pre><code>$(document).ready(function () {\n    $(\".slideshow-1 img\").click(function () {\n        player1.stopVideo();\n    });\n\n    $(\".slideshow-2 img\").click(function () {\n        player2.stopVideo();\n    });\n}\n</code></pre>\n",
            "last_activity_date": 1358292466,
            "question_id": 12522291,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "youtube",
                "youtube-api"
            ],
            "title": "Pausing YouTube iFrame API in JavaScript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Since your object model is kind of complex I would recommend using custom filtering function:</p>\n\n<pre><code>$scope.isActive = function(user) {\n    return user.User.Stats[0].active === \"1\";\n};\n</code></pre>\n\n<p>and then in your HTML:</p>\n\n<pre><code>&lt;div ng-repeat=\"user in _users | filter:isActive\"&gt;\n    {{user.User.userid}}\n&lt;/div&gt;\n</code></pre>\n\n<p>Here is the working jsFiddle: <a href=\"http://jsfiddle.net/pkozlowski_opensource/4kzzy/3/\">http://jsfiddle.net/pkozlowski_opensource/4kzzy/3/</a></p>\n\n<p>Be sure to check angular's documentation on filters if you need more info: <a href=\"http://docs.angularjs.org/api/ng.filter:filter\">http://docs.angularjs.org/api/ng.filter:filter</a></p>\n",
                    "is_accepted": true,
                    "score": 24
                },
                {
                    "body": "<p>Taking @pkozlowski.opensource a bit further and allowing live filtering of items/users:</p>\n\n<p><a href=\"http://jsfiddle.net/hbyNN/\" rel=\"nofollow\">http://jsfiddle.net/hbyNN/</a></p>\n\n<pre><code>&lt;div ng-controller=\"MyCtrl\"&gt;\n  &lt;label&gt;userid substring filter:&lt;/label&gt;\n  &lt;input ng-model=\"zzzzz\"&gt;\n\n  &lt;div ng-repeat=\"user in _users | filter:isInteresting\"&gt; \n      &lt;pre&gt;{{user | json}}&lt;/pre&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>   $scope.isInteresting = function (user) {\n    if ($scope.zzzzz == undefined) {\n        return true;\n    }\n\n    return user.userid.indexOf($scope.zzzzz) !== -1;\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have an array (_users) that contains JSON objects.</p>\n\n<pre><code>{ \n  \"User\":\n  {\n    \"userid\":\"19571\",\n    \"status\":\"7\",\n    \"active\":\"1\",\n    \"lastlogin\":\"1339759025307\",\n    \"Stats\":\n     [\n       {\n         \"active\":\"1\",\n         \"catid\":\"10918\",\n         \"typeid\":\"71\",\n         \"Credits\":\n         [\n           {\n             \"content\":\"917,65\",\n             \"active\":\"1\",\n             \"type\":\"C7\"\n           },               \n           {\n             \"content\":\"125,65\",\n             \"active\":\"1\",\n             \"type\":\"B2\"\n           }\n         ]\n       }\n     ]\n  }\n}\n</code></pre>\n\n<p>1- How can I filter only users with \"active\":\"1\" not \"0\" </p>\n\n<p>I have tried something like this:</p>\n\n<pre><code>&lt;div ng-repeat=\"user in _users | filter:active | orderBy:user.userid\"&gt;\n    {{user.userid}}\n&lt;/div&gt;\n</code></pre>\n\n<p>but not working correctly for me.</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1395178426,
            "question_id": 11923142,
            "score": 9,
            "tags": [
                "javascript",
                "json",
                "frameworks",
                "angularjs"
            ],
            "title": "How to filter JSON-Data with AngularJs?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>you should be able to execute your script using <a href=\"http://doc.qt.nokia.com/latest/qwebframe.html#evaluateJavaScript\">QWebFrame::evaluateJavaScript</a> method. See if an example below would work for you:</p>\n\n<p>initializing webview: </p>\n\n<pre><code>QWebView *view = new QWebView(this-&gt;centralWidget());\nview-&gt;load(QUrl(\"file:///home//test.html\"));\nconnect(view, SIGNAL(loadFinished(bool)), this, SLOT(loadFinished(bool)));\n</code></pre>\n\n<p>loadFinished signal handler:</p>\n\n<pre><code>void MyTestWindow::loadFinished(bool)\n{\n    QVariant f1result = ((QWebView*)sender())-&gt;page()-&gt;mainFrame()-&gt;evaluateJavaScript(\"f1('test param')\");\n    qDebug() &lt;&lt; f1result.toString();\n}\n</code></pre>\n\n<p>test.html:</p>\n\n<pre><code>&lt;head&gt;\n    &lt;script LANGUAGE=\"JavaScript\"&gt;\n        function f1 (s) \n        {\n            alert (s) \n            return \"f1 result\"\n        }\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    test html\n&lt;/body&gt;\n</code></pre>\n\n<p><em>evaluateJavaScript</em> should trigger an alert message box and return QVariant with f1 function result.</p>\n\n<p>hope this helps, regards</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>While it wouldn't work in all cases, you could simply pass a string to your slot. Your slot could then use evaluateJavaScript (as serge has suggested) to call the function.</p>\n\n<pre><code>function f1()\n{\n    alert(\"f1\");\n}\nqtclass.submit(\"f1\");\n</code></pre>\n\n<p>and in Qt:</p>\n\n<pre><code>public slots:\n    void submit(QString functionName) \n    {\n        m_pWebView-&gt;page()-&gt;mainFrame()-&gt;evaluateJavaScript(functionName + \"()\");\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could solve this in another way, by using Qt signals, as follows:</p>\n\n<pre><code>class qtclass\n{\n   signals:\n      void done(QString message);\n};\n</code></pre>\n\n<p>In your HTML file you can connect to this signal, like this:</p>\n\n<pre><code>qtclass.done.connect(f1);\n\nfunction f1(message)\n{\n   alert('f1 called from qtclass with message' + message);\n}\n</code></pre>\n\n<p>Then you C++ class does not need to know about the javascript function.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I have one entire working solution here - using slots. However, I couldn't get the signals working as suggested by Kurt. </p>\n\n<pre><code>#include &lt;QtGui/QApplication&gt;\n#include &lt;QApplication&gt;\n#include &lt;QDebug&gt;\n#include &lt;QWebFrame&gt;\n#include &lt;QWebPage&gt;\n#include &lt;QWebView&gt;\n\nclass MyJavaScriptOperations : public QObject {\n    Q_OBJECT\npublic:\n     QWebView *view;\n     MyJavaScriptOperations();\n\n    Q_INVOKABLE qint32 MultOfNumbers(int a, int b) {\n        qDebug() &lt;&lt; a * b;\n        return (a*b);\n    }\npublic slots:\n     void callback();\npublic:\n\nvoid  firecb();\n\n signals:\n      void done();\n};\n\n\nMyJavaScriptOperations::MyJavaScriptOperations()\n{\n    view = new QWebView();\n    view-&gt;resize(400, 500);\n\n    connect(view-&gt;page()-&gt;mainFrame(), SIGNAL(javaScriptWindowObjectCleared()), this, SLOT(callback()));\n\n    view-&gt;load(QUrl(\"./shreyas.html\"));\n\n    view-&gt;show();\n\n\n    qDebug()&lt;&lt;view;\n\n\n}\n\nvoid MyJavaScriptOperations::callback()\n{\n    qDebug()&lt;&lt;\"Sending hello text\";\n    QString function = \"f1()\";\n    view-&gt;page()-&gt;mainFrame()-&gt;addToJavaScriptWindowObject(\"myoperations\", this);\n    view-&gt;page()-&gt;mainFrame()-&gt;evaluateJavaScript(\"f1()\");\n    done();\n}\n\nvoid  MyJavaScriptOperations::firecb()\n{\n     qDebug()&lt;&lt;\"Emitting Signal\";\n     done();\n}\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n\n\n    MyJavaScriptOperations *jvs = new MyJavaScriptOperations;\n    jvs-&gt;firecb();\n\n    return a.exec();\n}\n#include \"main.moc\"\n</code></pre>\n\n<p>The html file changes are - </p>\n\n<pre><code>&lt;head&gt;\n    &lt;script LANGUAGE=\"JavaScript\"&gt;\n\n\nfunction f1()\n{\n   alert('f1 called from qtclass with message');\n   document.write(\"HELLLLLLLLL\");\n}\nmyoperations.callback(f1);\n\n\nfunction f2()\n{\n   var result = myoperations.MultOfNumbers(3,7);\n   document.write(result);\n    alert('f1 called from qtclass with message');\n}\n\n\nfunction f3()\n{\n\n    alert('f3');\n}\n\nmyoperations.done.connect(f3);\n\n\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    test html\n&lt;input type=\"button\" value=\"click\" onclick=\"f2()\"&gt;\n&lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How to pass a function \"pointer\" from JavaScript to a slot?</p>\n\n<p>in JavaScript:</p>\n\n<pre><code>function f1()\n{\n    alert(\"f1\");\n}\nqtclass.submit(f1);\n</code></pre>\n\n<p>and in Qt:</p>\n\n<pre><code>public slots:\n    void submit(void * ptr) \n    {\n        (void)ptr;\n    }\n</code></pre>\n\n<p>I need the \"f1\", function to get fired in the JavaScript from the c++, once some processing is done. Also I do not know in advance the name of the function pointer.</p>\n",
            "last_activity_date": 1393432484,
            "question_id": 4975658,
            "score": 9,
            "tags": [
                "javascript",
                "qt",
                "qwebview",
                "slots"
            ],
            "title": "Qt QWEBview JavaScript callback"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I've done a lot of experiments with canvas in many browsers. Some performance issues that I noticed:</p>\n\n<p>First, about your guessing:</p>\n\n<ul>\n<li><p>When <code>requestAnimationFrame</code> is supported by a browser, the drawing stuff and the app itself are more responsive. Use <code>setTimeout</code> or <code>setInterval</code> as a fallback are always possible but you need to be careful about the timing. This <a href=\"https://gist.github.com/paulirish/1579671\">robust polyfill</a> may help a little, but nothing compared to native requestAnimationFrame.</p></li>\n<li><p>If console.log is called every frame (or almost), yes the performance goes down.\nSince native Android Browser doesn't have a console Object, every time it is called will generate an error that also contributes to slow down your application. You can do this:</p>\n\n<p><code>if(typeof console === \"undefined\"){\n      console = {};\n}</code></p></li>\n<li><p>For intense real-time applications <a href=\"https://developer.mozilla.org/en-US/docs/WebSockets\">web sockets</a> are faster then http requests. Unfortunately this feature is not supported by old native android browsers. If it's not possible to use web sockets, you should minimize the http requests.</p></li>\n</ul>\n\n<p>Note: <a href=\"https://developers.google.com/chrome/mobile/docs/faq\">Chrome</a> for android support most of HTML5 features cited here, including <code>requestAnimationFrame</code> and <code>websockets</code>.</p>\n\n<p>More information:</p>\n\n<ul>\n<li><p>Drawing text using the context 2d <code>fillText</code> it's too expensive, but in some  browsers this is even worse. Pre-render your texts in another canvas or use bitmap fonts. (In native Android Browser, after replace <code>filltext</code> drawing for pre-render stuff, the performance grew from 10-15 FPS to 30-45 FPS in some games I've made).</p></li>\n<li><p>Avoid scale and rotate context because they also cause drop down in performance. If you need to scale or rotate a sprite only once, use pre-render either.</p></li>\n<li><p>You need to minimize the real time drawing. Pre-render your stuff whenever you can. Redraw only stuff that changed and needs to be updated.</p></li>\n<li><p>Try to write <a href=\"http://coding.smashingmagazine.com/2012/11/05/writing-fast-memory-efficient-javascript/\">memory efficient</a> and garbage collector friendly code. </p></li>\n</ul>\n\n<p>There are a lot more things to do. I just cited a few.</p>\n\n<p>TIP: make some stress tests for features you don't sure if they are performance killers and capture the benchmark results.</p>\n\n<p>In mobile applications, specially real time apps, all optimizations are welcome no mater if it's just an over optimization or a bit of memory gain.</p>\n\n<p>For more information follow the links below:</p>\n\n<ul>\n<li><a href=\"http://www.html5rocks.com/en/tutorials/canvas/performance/\">http://www.html5rocks.com/en/tutorials/canvas/performance/</a> (this one definitely should be visited)</li>\n<li><a href=\"http://www.html5rocks.com/en/features/performance\">http://www.html5rocks.com/en/features/performance</a></li>\n</ul>\n\n<p>Also search for performance in <a href=\"http://www.html5rocks.com/en/tutorials/\">Posts &amp; Tutorials</a>.</p>\n\n<p><strong>EDIT</strong><br>\nThis <a href=\"http://jsfiddle.net/gfcarv/63vBB/\">jsfiddle code snippet</a> shows some stuff covered in this answer and provides a rough fps counter to benchmark. Edit this fiddle by yourself and check it out.</p>\n",
                    "is_accepted": true,
                    "score": 30
                }
            ],
            "body": "<p>Hi I have a Webapp that should be able to run on both Smartphone and Desktop Browsers alike. While I was expecting to get some curious behaviour on small devices like the Iphone, I was pretty confident that it would run well on an Android Galaxy Tab which is the Android Device that I can run tests with at the moment.</p>\n\n<p>Now I have installed a bunch of Browsers on the Galaxy Tab to test things with:</p>\n\n<ul>\n<li>Android Native Browser</li>\n<li>Chrome for Android</li>\n<li>Firefox for Android</li>\n</ul>\n\n<p>On the Desktop I have used </p>\n\n<ul>\n<li>Firefox</li>\n<li>Google Chrome</li>\n</ul>\n\n<p>and finally I have an Iphone to test with.</p>\n\n<p>The website uses HTML5 canvas for pixel and sprite based drawing no fancy transformation, filters or effects, mostly simple paths and polygons. I do listen to touch events and use <code>requestAnimationFrame</code> for proper redrawing.</p>\n\n<p>Overall the application runs well on Desktop Browsers, it is also running great on iOS Safari (iPhone) and Firefox-on-Android. Yet Androids Native Browser is giving me trouble. I have set it up so that the screen flushes red when the javascript is not responsive, and it does flash almost always when touching the screen.</p>\n\n<p>So I wonder whether there are any known issues with Android Native App and HTML5. Due to the nonexistent Name of the native Browser its quite hard to google information about this. <strong>Any ideas for me where I can get more information? Any ideas what might cause the lagging of the native Android browser?</strong></p>\n\n<p>There are a few ideas about the issue:</p>\n\n<ul>\n<li><p>iOS does not support requestAnimationFrame, therefore I replaced it with a timeout based replacement. If I use that replacement on Android's native browser, the problem persists.</p></li>\n<li><p>I use AJAX (google clojure xhrio) quite regularly to retrieve data from the server. Could it be that data retrieval callbacks are cloggin my event pipeline?</p></li>\n<li><p>Are log console messages (console.log) known to slow down applications? Could they trigger the browser to rerun through the DOM tree or anything related?</p></li>\n</ul>\n",
            "last_activity_date": 1390180019,
            "question_id": 16191324,
            "score": 8,
            "tags": [
                "javascript",
                "html5",
                "html5-canvas",
                "android-browser",
                "mobile-website"
            ],
            "title": "Performance problems with HTML5 Canvas in some mobile browsers."
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You might want to look into a Flash-based solution if you can't use <code>&lt;canvas&gt;</code> (though unless this specifically needs to work in old versions of IE I'm not sure why you can't).</p>\n\n<p><a href=\"http://flashcanvas.net/\">http://flashcanvas.net/</a> is an emulation of <code>&lt;canvas&gt;</code> using Flash that might get you where you need to go. The documentation says that it supports <code>toDataURL()</code> so that might work for you.</p>\n\n<p>Can you provide more insight into what your restrictions around <code>&lt;canvas&gt;</code> are and what you've attempted to try already?</p>\n\n<p>//EDIT</p>\n\n<p>According to your comment below you might be able to use <code>&lt;canvas&gt;</code>, in which case you can try using <a href=\"http://html2canvas.hertzen.com\">http://html2canvas.hertzen.com</a> \u2013 it's a JavaScript solution that basically re-writes the DOM of a specified part of your code to a <code>&lt;canvas&gt;</code> and then allows you to interact with it however you want, including turning it into image data via <code>toDataURL()</code>.</p>\n\n<p>I've not used it before, but your JavaScript code would look something like this:</p>\n\n<pre><code>html2canvas([document.getElementById('mydiv')], {\n    onrendered: function(canvas) {\n       var data = canvas.toDataURL('image/png');\n       // AJAX call to send `data` to a PHP file that creates an image from the dataURI string and saves it to a directory on the server\n    }\n});\n</code></pre>\n\n<p>I've knocked together a quick jsfiddle of this in action here: <a href=\"http://jsfiddle.net/Sq7hg/1/\">http://jsfiddle.net/Sq7hg/1/</a></p>\n\n<p>EDIT again:</p>\n\n<p><a href=\"http://jsfiddle.net/Sq7hg/2/\">http://jsfiddle.net/Sq7hg/2/</a></p>\n\n<p>This jsfiddle shows how to use the <code>toDataURL()</code> method to convert the canvas to an image and append it to the document. Saving the generated image to a server is an infinitely more complex task as it will require an AJAX call or somesuch to send the image data to a PHP script that converts the generated <code>data:</code> URL to an actual image and then saves it to a directory that you have permission to write to. If that's what you need to do, rather than going into that here I'd recommend starting with this Stack Overflow question: <a href=\"http://stackoverflow.com/questions/13198131/how-to-save-a-html5-canvas-as-image-on-a-server\">How to save a HTML5 Canvas as Image on a server</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>This works perfectly...must be the simplest solution .</p>\n\n<p>//html</p>\n\n<pre><code>&lt;div id=\"mydiv\" style=\"background-image:url(Koala.jpg) ;background-size: 100%;\nbackground-size :200px 200px;\nbackground-repeat: no-repeat;\"&gt;\n&lt;p&gt;text!&lt;/p&gt;\n&lt;img src=\"mug.png\" height=\"100\" width=\"100\"/&gt;&lt;/div&gt;\n&lt;div id=\"canvas\"&gt;\n&lt;p&gt;Canvas:&lt;/p&gt;\n&lt;/div&gt;\n\n &lt;div style=\"width:200px; float:left\" id=\"image\"&gt;\n &lt;p style=\"float:left\"&gt;Image: &lt;/p&gt;\n &lt;/div&gt;\n &lt;div style=\"float:left;margin-top: 120px;\" class=\"return-data\"&gt;\n &lt;/div&gt;\n &lt;script src=\"http://html2canvas.hertzen.com/build/html2canvas.js\"&gt;&lt;/script&gt;\n &lt;script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>//Style</p>\n\n<pre><code>#mydiv {\nbackground-color: lightblue;\nwidth: 200px;\nheight: 200px\n}\n</code></pre>\n\n<p>//Script</p>\n\n<pre><code>  &lt;script language=\"javascript\"&gt;\n    html2canvas([document.getElementById('mydiv')], {\n    onrendered: function (canvas) {\n    document.getElementById('canvas').appendChild(canvas);\n    var data = canvas.toDataURL('image/png');\n     //display 64bit imag\n     var image = new Image();\n    image.src = data;\n    document.getElementById('image').appendChild(image);\n    // AJAX call to send `data` to a PHP file that creates an PNG image from the dataURI string and saves it to a directory on the server\n\n    var file= dataURLtoBlob(data);\n\n// Create new form data\nvar fd = new FormData();\nfd.append(\"imageNameHere\", file);\n\n$.ajax({\n   url: \"uploadFile.php\",\n   type: \"POST\",\n   data: fd,\n   processData: false,\n   contentType: false,\n}).done(function(respond){\n\n    $(\".return-data\").html(\"Uploaded Canvas image link: &lt;a href=\"+respond+\"&gt;\"+respond+\"&lt;/a&gt;\").hide().fadeIn(\"fast\");\n    });\n\n  }\n});\n\nfunction dataURLtoBlob(dataURL) {\n// Decode the dataURL    \nvar binary = atob(dataURL.split(',')[1]);\n// Create 8-bit unsigned array\nvar array = [];\nfor(var i = 0; i &lt; binary.length; i++) {\n    array.push(binary.charCodeAt(i));\n }\n// Return our Blob object\nreturn new Blob([new Uint8Array(array)], {type: 'image/png'});\n }\n\n&lt;/script&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/Sq7hg/2/\">here is a sample demo</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>i have already created my data (template-containing image,text,label etc) inside div now i want to convert it into image format. is there any technique to convert a specific div content into images without using canvas.anybody plz help me !\ni want to convert entire \"mydiv\" content into image and save that image into my image directory, when i click on save ? </p>\n\n<pre><code>&lt;html&gt;\n&lt;header&gt;\n&lt;/header&gt;\n&lt;body&gt;\n&lt;label&gt; Template Design&lt;/label&gt;\n&lt;div id=\"mydiv\"&gt;\n&lt;label&gt; Good MOrning&lt;/label&gt;\n&lt;img src=\"mug.png\" id=\"img1\" height=\"100\" width=\"100\"  /&gt;\n&lt;/div&gt;\n&lt;input name=\"save\" type=\"button\" value=\"SAVE\" /&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1415278734,
            "question_id": 18545034,
            "score": 6,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "html",
                "css"
            ],
            "title": "How do I convert my entire div data into image and save it into directory without using canvas?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>use jQuery's <a href=\"http://api.jquery.com/jQuery.getJSON/\">$.getJSON</a> </p>\n\n<pre><code>$.getJSON('mydata.json', function(data) {\n    //do stuff with your data here\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js\"&gt; &lt;/script&gt;\n\n&lt;script&gt;\n\n    $(function() {\n\n\n   var people = [];\n\n   $.getJSON('people.json', function(data) {\n       $.each(data.person, function(i, f) {\n          var tblRow = \"&lt;tr&gt;\" + \"&lt;td&gt;\" + f.firstName + \"&lt;/td&gt;\" +\n           \"&lt;td&gt;\" + f.lastName + \"&lt;/td&gt;\" + \"&lt;td&gt;\" + f.job + \"&lt;/td&gt;\" + \"&lt;td&gt;\" + f.roll + \"&lt;/td&gt;\" + \"&lt;/tr&gt;\"\n           $(tblRow).appendTo(\"#userdata tbody\");\n     });\n\n   });\n\n});\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n&lt;div class=\"wrapper\"&gt;\n&lt;div class=\"profile\"&gt;\n   &lt;table id= \"userdata\" border=\"2\"&gt;\n  &lt;thead&gt;\n            &lt;th&gt;First Name&lt;/th&gt;\n            &lt;th&gt;Last Name&lt;/th&gt;\n            &lt;th&gt;Email Address&lt;/th&gt;\n            &lt;th&gt;City&lt;/th&gt;\n        &lt;/thead&gt;\n      &lt;tbody&gt;\n\n       &lt;/tbody&gt;\n   &lt;/table&gt;\n\n&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>my json file</p>\n\n<pre><code>{\n   \"person\": [\n       {\n           \"firstName\": \"Clark\",\n           \"lastName\": \"Kent\",\n           \"job\": \"Reporter\",\n           \"roll\": 20\n       },\n       {\n           \"firstName\": \"Bruce\",\n           \"lastName\": \"Wayne\",\n           \"job\": \"Playboy\",\n           \"roll\": 30\n       },\n       {\n           \"firstName\": \"Peter\",\n           \"lastName\": \"Parker\",\n           \"job\": \"Photographer\",\n           \"roll\": 40\n       }\n   ]\n}\n</code></pre>\n\n<p>i got succeded in integratig a json file to html table after working a day on it!!!</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I have json file <code>mydata.json</code>, and in this file is some json-encoded data.</p>\n\n<p>I want obtain this data in file <code>index.html</code> and process this data in JavaScript. But a don't know how to connect.json file in .html file?</p>\n\n<p>Tell me please. \nHere is my <strong>json</strong> file:</p>\n\n<pre><code>{\n    \"items\": [\n        {\n            \"movieID\": \"65086\",\n            \"title\": \"The Woman in Black\",\n            \"poster\": \"/kArMj2qsOnpxBCpSa3RQ0XemUiX.jpg\"\n        },\n        {\n            \"movieID\": \"76726\",\n            \"title\": \"Chronicle\",\n            \"poster\": \"/853mMoSc5d6CH8uAV9Yq0iHfjor.jpg\"\n        }\n    ]\n} \n</code></pre>\n\n<p>Thinking that I am getting json file from server, how to use that file in my html, so that I can display the data in tables in html page. I am using JavaScript to parse the json file. I am new to this field. Help out please.</p>\n",
            "last_activity_date": 1380991423,
            "question_id": 12070631,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "json",
                "get"
            ],
            "title": "how to use json file in html code"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Another option would be to start searching after 2/3 characters. Waiting for 1 second before making every request doesn't look good to me. Also try to send very less data back to server which might also make the request and response faster.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You could have a JSON object sitting somewhere and searching that instead of searching the database multiple times. It won't bring too much overhang, as long as it's not a list of 1,000 friends or something.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>the method you are referring to is called \"Debouncing\"</p>\n\n<p>I usually have a \"Debounce\" function at the bottom of all my scripts </p>\n\n<pre><code>var debounce=function(func, threshold, execAsap) {\n    var timeout;\n    return function debounced () {\n        var obj = this, args = arguments;\n        function delayed () {\n            if (!execAsap)\n                func.apply(obj, args);\n            timeout = null; \n        };\n        if (timeout)\n            clearTimeout(timeout);\n        else if (execAsap)\n            func.apply(obj, args);\n        timeout = setTimeout(delayed, threshold || 100); \n    }; \n};\n</code></pre>\n\n<p>And then whenever I do anything that will benefit from a debounce I can use it generically</p>\n\n<p>So your code would be re-written as</p>\n\n<pre><code>$(\"#s\").keyup(debounce(function() {\n    var searchbox = $(this).val();\n    var dataString = 's='+ searchbox;\n    if(searchbox!='') {\n        $.ajax({\n                type: \"POST\",\n                url: \"/livesearch.php\",\n                data: dataString,\n                cache: false,\n                success: function(html){\n                        $(\"#display\").html(html).show();\n                }\n        });\n    } else {return false; }  \n}\n,350 /*determines the delay in ms*/\n,false /*should it execute on first keyup event, \n       or delay the first event until \n       the value in ms specified above*/\n));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I've created a Facebook style ajax search for my site where as you type it will bring up the results in a nice list below your search.</p>\n\n<pre><code>$(\"#s\").keyup(function() {\n    var searchbox = $(this).val();\n    var dataString = 's='+ searchbox;\n    if(searchbox!='') {\n    \t$.ajax({\n    \t\ttype: \"POST\",\n    \t\turl: \"/livesearch.php\",\n    \t\tdata: dataString,\n    \t\tcache: false,\n    \t\tsuccess: function(html){\n    \t\t\t$(\"#display\").html(html).show();\n    \t\t}\n    \t});\n    } else {return false; }  \n});\n\n$(\"body\").click(function() {\n\t\t$(\"#display\").hide();\n});\n</code></pre>\n\n<p>The problem with this is it's a little ineffective as the user will type a word for example \"football\".  This will carry out 8 requests to the server.  What would be a more effective way to do this? ideally i think it should store the request for 1 second before doing a search rather than instant keyup. but not 100% sure how to do that...</p>\n",
            "last_activity_date": 1255558826,
            "question_id": 1568312,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "livesearch"
            ],
            "title": "Facebook Style AJAX Search"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I was having problems with ExternalInterface and Firefox and Chrome and discovered that the Adobe Script was not writing the Flash tag quickly enough, so when the browser tried to find the addCallback() function it was not there at the time.</p>\n\n<p>Simply putting my Javascript function that calls the Flash created addCallback() in a window.setTimeout() calling solves the problem. Delays less than 200 ms still make the problem to occur.</p>\n\n<p>I didn\u2019t have to use the solution of trying to find if the \u201clength\u201d attribute exists in the document[FlashId] object. Just calling \u201cFlashEmbed = document[FlashId]\u201d worked just fine.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I agree with Robson that it is a race condition, but it's not in 'writing the Flash tag' and adding a timer is not a good solution - in fact its very dangerous.</p>\n\n<p>The problem is that the SWF itself isn't loaded and had a chance to initialize your external interface. For a small SWF in Chrome the timing may be more sensitive than other browers, but the underlying problem isn't specific to Chrome.</p>\n\n<p>What you need to do is this :</p>\n\n<p><strong>In Actionscript</strong></p>\n\n<p>Call this function from your constructor :</p>\n\n<pre><code>public function InitializeExternalInterface():void \n{   \n      if (ExternalInterface.available) {\n\n           // register actionscript functions so they can be called by JS   \n           ExternalInterface.addCallback(\"activate\", activate);\n           Security.allowDomain(\"www.example.com\");     \n\n           // send message to parent page that SWF is loaded and interface active\n           trace(\"External Interface Initialized...\");\n           ExternalInterface.call(\"flashInitialized\")\n      }\n      else \n      {\n          trace(\"ERROR: External Interface COULD NOT BE Initialized...\");\n      } \n}\n</code></pre>\n\n<p><strong>In your HTML</strong></p>\n\n<pre><code> &lt;script&gt;\n\n     function flashInitialized() \n     {\n         alert(\"Initialized!\");      // remove this obviously!\n         $('#Main')[0].activate();   // safe to call Flash now\n     }\n\n &lt;/script&gt;\n</code></pre>\n\n<p>You may find on your local machine that it works without this, but as soon as you add network delays into the equation you'll regret not doing this. An arbitrary timer is a bad idea because you will still get the error on a slow connection. This method lets the page call the flash object at the earliest possible time.</p>\n\n<hr>\n\n<p><strong>Note:</strong> Using jQuery's 'on ready' pattern is NOT a solution to the problem - although at first I mistook it for one.</p>\n\n<pre><code>$(function() \n{\n   $('#animation')[0].SetTitle(\"Hello\"); \n} \n</code></pre>\n\n<p>Also swfobject's <a href=\"http://code.google.com/p/swfobject/wiki/api\"><code>callbackFn</code></a> is also not a solution becasue that just tells you when the tag is inserted and not when the SWF is loaded.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>I got the same problem, to fire and recieve listener events between javascript and flash.</p>\n\n<p>The solution was to use <a href=\"http://www.adobe.com/products/flashplayer/download/detection_kit/\" rel=\"nofollow\">AC_OETags.js</a> file from Adobe as embedd script instead of JQuery flash. (It is found in the zip file under Client Side detection, Adobe probably have it some other places as well)</p>\n\n<p>The trouble based on a race condition when the flash builds the javascript callbacks in the browser. This is not handeled correctly by a straight embed for some reason.</p>\n\n<pre><code>&lt;div&gt;\n&lt;script&gt;\n// Major version of Flash required\nvar requiredMajorVersion = 10;\n// Minor version of Flash required\nvar requiredMinorVersion = 0;\n\nvar hasRequestedVersion = DetectFlashVer(requiredMajorVersion, requiredMinorVersion, requiredRevision);\nAC_FL_RunContent(\n\"src\", \"tagflash\",\n    \"width\", \"200\",\n    \"height\", \"200\",\n    \"id\", \"myTagFlash\",\n    \"quality\", \"high\",\n    \"bgcolor\", \"#FFFFFF\",\n    \"name\", \"myTagFlash\",\n    \"allowScriptAccess\",\"always\",\n    \"type\", \"application/x-shockwave-flash\",\n    \"pluginspage\", \"http://www.adobe.com/go/getflashplayer\",\n    \"flashvars\", \"templateData=theYear:2010&amp;theTagNumber:123\"\n);\n&lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Then you can do: (works in IE, FF, Safari, Crome,++)</p>\n\n<pre><code>$(\"#tagFlash\").gotoNewFrame();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>After struggling a lot, I finally decided to use the official solution from Adobe:</p>\n\n<p><a href=\"http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/external/ExternalInterface.html\" rel=\"nofollow\">http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/external/ExternalInterface.html</a></p>\n\n<p>Search for <code>ExternalInterfaceExample.as</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There is a workaround to the problem by disabling Chrome built-in flash plugin:</p>\n\n<ol>\n<li>type the chrome://plugins in the address bar of chrome.</li>\n<li>expand the details of plugins by clicking the details on top right corner.</li>\n<li>in the entry of \"Adobe Flash Player\", disabling the first one.</li>\n</ol>\n\n<p>This is not a solution, but shows why this happens on Chrome. Chrome accompany with a built-in flash plugins, that often cause the troubles when we use the ExternalInterface of AS3, it's annoying.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>My simple ActionScript \nI am trying to use Flash's <a href=\"http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/external/ExternalInterface.html\" rel=\"nofollow\">ExternalInterface</a> to setup a callback so that JavaScript can call a method on my Flash object.  Everything works fine in Safari, Firefox and in IE, but I cannot get Chrome working.  When I try the code on Chrome, I get the following error: </p>\n\n<blockquote>\n  <p>Uncaught TypeError: Object #&lt;an\n  HTMLObjectElement&gt; has no method\n  'setText'</p>\n</blockquote>\n\n<p>Here is the example HTML I am using (again, works fine in Safari, FF and IE)</p>\n\n<pre><code>&lt;html&gt;&lt;body&gt;\n&lt;div id=\"mycontent\"&gt;&lt;/div&gt;\n&lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/swfobject/2.2/swfobject.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\nswfobject.embedSWF(\"http://invincible.dynalias.com:8080/HelloWorld.swf\", \"mycontent\", \"400\", \"420\", \"9.0.0\",\"expressInstall.swf\", {}, {allowScriptAccess:'always'},{id:'hw',name:'hw'});\n\nfunction getFlash(movieName) {\n   return ( navigator.appName.indexOf(\"Microsoft\") != -1) ? window[movieName] : document.getElementById(movieName);\n}\n&lt;/script&gt;&lt;p&gt;\n  &lt;input type=\"text\" id=\"exampleText\" /&gt; &lt;input type=\"button\" value=\"Set Text\" onclick=\"getFlash('hw').setText(document.getElementById('exampleText')\n.value)\" /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>and here is the ActionScript...</p>\n\n<pre><code>package {\n  import flash.display.Sprite;\n  import flash.text.TextField;\n  import flash.external.ExternalInterface;\n  import flash.system.Security;\n\n  public class HelloWorld extends Sprite {\n\n    private var textField:TextField = new TextField();\n    public function HelloWorld() {\n      Security.allowDomain(\"*\");\n      ExternalInterface.addCallback(\"setText\", this.setText);\n      textField.text = \"Hello, world!\";\n      addChild(textField);\n    }   \n    public function setText(text:String):void {\n      this.textField.text = text;\n    }   \n  }\n}\n</code></pre>\n",
            "last_activity_date": 1376556974,
            "question_id": 1436722,
            "score": 6,
            "tags": [
                "javascript",
                "flash",
                "google-chrome",
                "externalinterface"
            ],
            "title": "Problem accessing ExternalInterface exposed method in Google Chrome"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>In VS 11, Visutal Studio will give you intellisense from all files\n  that have references in the \u201c_references.js\u201d file.</p>\n</blockquote>\n\n<p>For More Info: <a href=\"http://gurustop.net/blog/2012/03/03/javascript-js-intellisense-auto_complete-in-visual-studio-11-beta-the-web-_references-js-file/\">http://gurustop.net/blog/2012/03/03/javascript-js-intellisense-auto_complete-in-visual-studio-11-beta-the-web-_references-js-file/</a></p>\n",
                    "is_accepted": true,
                    "score": 168
                },
                {
                    "body": "<p>MSDN documentation: <a href=\"http://msdn.microsoft.com/en-us/library/bb385682.aspx\">JavaScript IntelliSense</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I found Mads Kristensen's blog post on the subject very interesting:\n<a href=\"http://madskristensen.net/post/the-story-behind-_referencesjs\">The story behind _references.js</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>What is the _references.js file used for in a new ASP.NET MVC 4 project?</p>\n",
            "last_activity_date": 1408940219,
            "question_id": 10319645,
            "score": 137,
            "tags": [
                "javascript",
                "visual-studio",
                "asp.net-mvc-4"
            ],
            "title": "What is the _references.js used for?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>To make a first column sorting disable, try with the below code in datatables jquery. The null represents the sorting enable here.</p>\n\n<pre><code>$('#example').dataTable( {\n  \"aoColumns\": [\n  { \"bSortable\": false },\n  null,\n  null,\n  null\n  ]\n} );\n</code></pre>\n\n<p><a href=\"http://www.craiglotter.co.za/2010/04/19/how-to-disable-sorting-on-a-column-in-jquery-datatables-plugin/\">Disable Sorting on a Column in jQuery Datatables</a></p>\n",
                    "is_accepted": false,
                    "score": 49
                },
                {
                    "body": "<p>This is what you're looking for:    </p>\n\n<pre><code>$('#example').dataTable( {\n      \"aoColumnDefs\": [\n          { 'bSortable': false, 'aTargets': [ 1 ] }\n       ]\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 95
                },
                {
                    "body": "<p>you can also use negative index like this:</p>\n\n<pre><code>$('.datatable').dataTable({\n    \"sDom\": \"&lt;'row-fluid'&lt;'span6'l&gt;&lt;'span6'f&gt;r&gt;t&lt;'row-fluid'&lt;'span6'i&gt;&lt;'span6'p&gt;&gt;\",\n    \"sPaginationType\": \"bootstrap\",\n    \"aoColumnDefs\": [\n        { 'bSortable': false, 'aTargets': [ -1 ] }\n    ]\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>What I use is just add a custom attribute in thead td and control sorting by checking that attr value automatically.</p>\n\n<p>So the HTML code will be</p>\n\n<pre><code>&lt;table class=\"datatables\" cellspacing=\"0px\" &gt;\n\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;td data-bSortable=\"true\"&gt;Requirements&lt;/td&gt;\n            &lt;td&gt;Test Cases&lt;/td&gt;\n            &lt;td data-bSortable=\"true\"&gt;Automated&lt;/td&gt;\n            &lt;td&gt;Created On&lt;/td&gt;\n            &lt;td&gt;Automated Status&lt;/td&gt;\n            &lt;td&gt;Tags&lt;/td&gt;\n            &lt;td&gt;Action&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        &lt;tr&gt;\n            &lt;td&gt;\n</code></pre>\n\n<p>And JavaScript for initializing datatables will be\n(it will dynamically get the sorting information from table iteself ;)</p>\n\n<pre><code>$('.datatables').each(function(){\n    var bFilter = true;\n    if($(this).hasClass('nofilter')){\n        bFilter = false;\n    }\n    var columnSort = new Array; \n    $(this).find('thead tr td').each(function(){\n        if($(this).attr('data-bSortable') == 'true') {\n            columnSort.push({ \"bSortable\": true });\n        } else {\n            columnSort.push({ \"bSortable\": false });\n        }\n    });\n    $(this).dataTable({\n        \"sPaginationType\": \"full_numbers\",\n        \"bFilter\": bFilter,\n        \"fnDrawCallback\": function( oSettings ) {\n        },\n        \"aoColumns\": columnSort\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Using Datatables 1.9.4 I've disabled the sorting for the first column with this code:</p>\n\n<pre><code>/* Table initialisation */\n$(document).ready(function() {\n    $('#rules').dataTable({\n        \"sDom\" : \"&lt;'row'&lt;'span6'l&gt;&lt;'span6'f&gt;r&gt;t&lt;'row'&lt;'span6'i&gt;&lt;'span6'p&gt;&gt;\",\n        \"sPaginationType\" : \"bootstrap\",\n        \"oLanguage\" : {\n            \"sLengthMenu\" : \"_MENU_ records per page\"\n        },\n        // Disable sorting on the first column\n        \"aoColumnDefs\" : [ {\n            'bSortable' : false,\n            'aTargets' : [ 0 ]\n        } ]\n    });\n});\n</code></pre>\n\n<p><strong>EDIT:</strong></p>\n\n<p>You can disable even by using the <code>no-sort</code> class on your <code>&lt;th&gt;</code>, </p>\n\n<p>and use this initialization code:</p>\n\n<pre><code>// Disable sorting on the no-sort class\n\"aoColumnDefs\" : [ {\n    \"bSortable\" : false,\n    \"aTargets\" : [ \"no-sort\" ]\n} ]\n</code></pre>\n\n<p><strong>EDIT 2</strong></p>\n\n<p>In this example I'm using Datables with Bootstrap, following an old blog post. Now there is one link with updated material about <a href=\"http://datatables.net/manual/styling/bootstrap\">styling Datatables with bootstrap</a>.</p>\n",
                    "is_accepted": false,
                    "score": 40
                },
                {
                    "body": "<p>\"aoColumnDefs\" : [ {'bSortable' : false,'aTargets' : [ 0 ]} ]\nHere 0 is the index of the column,if you want multiple columns to be not sorted,mwntion column index values seperating by comma(,)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>$(\"#example\").dataTable( {\"aoColumnDefs\": [{ \"bSortable\": false, \"aTargets\": [ 0,1,2,3,4,5 ] }] } );</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here is what you can use to disable certain column to be disabled:</p>\n\n<pre><code> $('#tableId').dataTable({           \n            \"columns\": [\n                { \"data\": \"id\"},\n                { \"data\": \"sampleSortableColumn\" },\n                { \"data\": \"otherSortableColumn\" },\n                { \"data\": \"unsortableColumn\", \"orderable\": false}\n           ]\n});\n</code></pre>\n\n<p>So all you have to do is add the \"orderable\": false to the column you don't want to be sortable.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>columnDefs</code> now accepts a class. I'd say this is the preferred method if you'd like to specify columns to disable in your markup:</p>\n\n<pre><code>&lt;table&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            &lt;th&gt;ID&lt;/th&gt;\n            &lt;th&gt;Name&lt;/th&gt;\n            &lt;th class=\"datatable-nosort\"&gt;Actions&lt;/th&gt;\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    ...\n&lt;/table&gt;\n</code></pre>\n\n<p>Then, in your JS:</p>\n\n<pre><code>$(\"table\").DataTable({\n    columnDefs: [{\n        targets: \"datatable-nosort\",\n        orderable: false\n    }]\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i am using datatables of jquery to sort the table fields.my question is how to disable particular column with out sorting . i tried with the following code ,but get excepted result.</p>\n\n<pre><code>\"aoColumns\": [\n    { \"bSearchable\": false },\n    null\n]   \n</code></pre>\n\n<p>i also tried with following code</p>\n\n<pre><code>\"aoColumnDefs\": [\n     { \"bSearchable\": false, \"aTargets\": [ 1 ] }\n ]\n</code></pre>\n\n<p>but the result is not accepted .please tell me any idea</p>\n\n<p>usman</p>\n",
            "last_activity_date": 1424984015,
            "question_id": 3932587,
            "score": 74,
            "tags": [
                "javascript",
                "jquery",
                "datatables"
            ],
            "title": "disable a column sorting using datatables of jquery"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This comes back to the one-threaded nature of JavaScript<sup>1</sup>. What happens is pretty much this:</p>\n\n<ol>\n<li>Your variables are assigned.</li>\n<li>You schedule a function, to set <code>run = false</code>. This is scheduled to be run <strong>after</strong> the current function is run (or whatever else is currently active).</li>\n<li>You have your endless loop and stay inside the current function.</li>\n<li>After your endless loop (<strong>never</strong>), the <code>setTimeout()</code> callback will be executed and <code>run=false</code>.</li>\n</ol>\n\n<p>As you can see, a <code>setTimeout()</code> approach wont work here. You might work around that by checking the time in the <code>while</code> condition, but this will tamper with your actual measurement.</p>\n\n<p><sup>1</sup> At least for more practical purposes you can see it as single-threaded. Actually there is an so called \"event-loop\". In that loop all functions get queued until they are executed. If you queue up a new function, it is put at the respective position inside that queue. <em>After</em> the current function has finished, the engine takes the next function from the queue (with respect to timings as introduced, e.g., by <code>setTimeout()</code> and executes it.<br>\nAs a result at every point in time just one function is executed, thus making the execution pretty much single threaded. There are some exceptions for events, which are discussed in the link below.</p>\n\n<hr>\n\n<p>For reference:</p>\n\n<ul>\n<li><p><a href=\"http://stackoverflow.com/a/16757582/1169798\">http://stackoverflow.com/a/16757582/1169798</a></p>\n\n<p>Here a similar scenario was explained in more detail</p></li>\n<li><p><a href=\"http://stackoverflow.com/a/2734311/1169798\">http://stackoverflow.com/a/2734311/1169798</a></p>\n\n<p>A more in-depth description on when JS can be seen as single-threaded and when not.</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 79
                },
                {
                    "body": "<p>JavaScript is single-threaded so, while you are in the loop, nothing else gets executed.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>To keep the true speed of Chrome without having to constantly retrieve the time to calculate speed, you could try this JS code:</p>\n\n<pre><code>var start = new Date().getTime()\nvar i = 0\nwhile(i&lt;1000000)\n{\n    i++\n}\nvar end = new Date().getTime()\nvar delta = end-start\nvar speed = i/delta\nconsole.log(speed + \" loops per millisecond\")\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>Javascript is single-threaded, that mean it runs only one instruction at a time, sequentially.</p>\n\n<p>The event system, like in many other languages and library, is handle by an event loop. The event loop is basically a loop, which on each iteration check for message in the queue, and dispatch events.</p>\n\n<p>In javascript (as in mot of languages implementing this pattern), the event loop is called when the stack is empty, that is to say, when all functions have returns, in other word, at the end of the program code.</p>\n\n<p>Your \"real\" program look something like this behind the scene :</p>\n\n<pre><code>var run = true, i = 0;\nsetTimeout(function(){ run = false; }, 1);\nwhile(run){ i++; }\n\nwhile(true) {\n/*\n * check for new messages in the queue and dispatch\n * events if there are some\n */\n  processEvents();\n}\n</code></pre>\n\n<p>So the message from the clock saying timeout is over is never processed.</p>\n\n<p>More info on the event loop on :\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/EventLoop\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/EventLoop</a></p>\n\n<hr>\n\n<p>Of course  it is a bit more complex, check here those examples : <a href=\"http://stackoverflow.com/questions/2734025/is-javascript-guaranteed-to-be-single-threaded/2734311#2734311\">Is javascript guaranteed to be single-threaded?</a> (<strong>tl;dr:</strong> In some browser engines, some external events are not dependent on the event loop and are immediately fired when they occur, preempting the current task. But this is not the case with setTimeout, which just add a message to the queue and never fires immediately.)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The While loop doesn't access the setTimeout. You have code that sets run true, and then it will never become false.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>JavaScript has single thread and has single-threaded anywhere.</p>\n\n<p>I think this question in good:\n<a href=\"http://stackoverflow.com/questions/2734025/is-javascript-guaranteed-to-be-single-threaded\">Is javascript guaranteed to be single-threaded?</a></p>\n\n<p>When your code is in loop other ocde not execute and block.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I wondered how many times can a JavaScript <code>while</code> statement (in Chrome's console) can increment a variable in a millisecond, so I quickly wrote this snippet directly into console:</p>\n\n<pre><code>var run = true, i = 0;\nsetTimeout(function(){ run = false; }, 1);\nwhile(run){ i++; }\n</code></pre>\n\n<p>The problem is that it runs forever.<br>\nWhy is this happening, and how can I solve it?</p>\n",
            "last_activity_date": 1393985828,
            "question_id": 21656766,
            "score": 73,
            "tags": [
                "javascript",
                "infinite-loop"
            ],
            "title": "Why isn&#39;t setTimeout cancelling my loop?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Visibility:hidden makes the element invisible in a way that it still uses space at the page. Display:none makes the element have no space and be completely gone, while it still exists in the DOM.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>Visibility just makes the element invisible, but it would still take up space on the screen.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p><code>visibility: hidden</code> makes an element invisible but does not remove it from the layout of the page. It leaves an empty box where the element was. <code>display: none</code> removes it from the layout so it doesn't take up any space on the page, which is usually what people want when they hide something.</p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>Because in display:none, the element, for all purposes, ceases to exist -- it doesn't occupy any space.\nHowever, in visibility:hidden, it's as if you had just added opacity:0 to the element -- it occupies the same amount of space but just acts invisible.</p>\n\n<p>The jQuery creators probably thought the former would be a better fit for .hide().</p>\n",
                    "is_accepted": true,
                    "score": 61
                },
                {
                    "body": "<p><code>Visibility:hidden</code> just make the element invisible but it is loaded in DOM so it consumes load time. But <code>Display:none</code> does not load the element. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><code>display:none</code> means that the element isn't rendered as part of the DOM, so it's not loaded until the display property changes to something else. </p>\n\n<p><code>visibility:hidden</code> loads the element, but does not show it. </p>\n\n<p>Why does jQuery use <code>display:none</code> for its show/hide functions instead of switching between <code>visibility:hidden</code> and <code>visibility:visible</code>?</p>\n",
            "last_activity_date": 1375100425,
            "question_id": 1160196,
            "score": 64,
            "tags": [
                "javascript",
                "jquery",
                "visibility"
            ],
            "title": "Why does jQuery show/hide use display:none instead of visibility:hidden?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It turns out that this is possible by prepending <code>../</code> to the property name:</p>\n\n<pre><code>{{#each items}}\n    &lt;div style=\"font-size:{{../itemSize}}px\"&gt;{{this}}&lt;/div&gt;\n{{/each}}\n</code></pre>\n\n<p>You can go up multiple levels via repeating the <code>../</code>. For example, to go up two levels use <code>../../key</code>.</p>\n\n<p>For more information, see the <a href=\"http://handlebarsjs.com/#paths\">Handlebars documentation on paths</a>.</p>\n",
                    "is_accepted": true,
                    "score": 124
                }
            ],
            "body": "<p>Consider the following simplified data:</p>\n\n<pre><code>var viewData = {\n    itemSize: 20,\n    items: [\n        'Zimbabwe', 'dog', 'falafel'\n    ]\n};\n</code></pre>\n\n<p>And a Handlebars template:</p>\n\n<pre><code>{{#each items}}\n    &lt;div style=\"font-size:{{itemSize}}px\"&gt;{{this}}&lt;/div&gt;\n{{/each}}\n</code></pre>\n\n<p>This won't work because within the <code>each</code> loop, the parent scope is not accessible -- at least not in any way that I've tried. I'm hoping that there's a way of doing this though!</p>\n",
            "last_activity_date": 1413821076,
            "question_id": 12297959,
            "score": 55,
            "tags": [
                "javascript",
                "handlebars.js"
            ],
            "title": "Access properties of the parent with a Handlebars &#39;each&#39; loop"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Nice formatting add-in: <a href=\"http://blog.stevenlevithan.com/archives/date-time-format\">http://blog.stevenlevithan.com/archives/date-time-format</a>. </p>\n\n<p>With that you could write: </p>\n\n<pre><code>var now = new Date();\nnow.format(\"yyyy/mm/dd\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Use the Date get methods.</p>\n\n<p><a href=\"http://www.tizag.com/javascriptT/javascriptdate.php\" rel=\"nofollow\">http://www.tizag.com/javascriptT/javascriptdate.php</a> </p>\n\n<p><a href=\"http://www.htmlgoodies.com/beyond/javascript/article.php/3470841\" rel=\"nofollow\">http://www.htmlgoodies.com/beyond/javascript/article.php/3470841</a></p>\n\n<pre><code>var dateobj= new Date() \nvar month = dateobj.getMonth() \nvar day = dateobj.getDate()\nvar year = dateobj.getFullYear()\ndocument.write(month + \"/\" + day + \"/\" + year)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var dt = new Date();\n\ndt.getFullYear() + \"/\" + (dt.getMonth() + 1) + \"/\" + dt.getDate();\n</code></pre>\n\n<p>Since month index are 0 based you have to increment it by 1.</p>\n\n<p><strong><em>Edit</em></strong></p>\n\n<p>For a complete list of date object functions see</p>\n\n<p><strong><a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Date\" rel=\"nofollow\">Date</a></strong></p>\n\n<pre><code>getMonth()\n</code></pre>\n\n<p>Returns the month (0-11) in the specified date according to local time. </p>\n\n<pre><code>getUTCMonth()\n</code></pre>\n\n<p>Returns the month (0-11) in the specified date according to universal time. </p>\n",
                    "is_accepted": false,
                    "score": 51
                },
                {
                    "body": "<pre><code>var month = dateObj.getUTCMonth() + 1; //months from 1-12\nvar day = dateObj.getUTCDate();\nvar year = dateObj.getUTCFullYear();\n\nnewdate = year + \"/\" + month + \"/\" + day;\n</code></pre>\n\n<p>or you can set new date and give the above values</p>\n",
                    "is_accepted": true,
                    "score": 84
                },
                {
                    "body": "<p>I would suggest you to use Moment.js <a href=\"http://momentjs.com/\">http://momentjs.com/</a></p>\n\n<p>Then you can do: </p>\n\n<pre><code>moment(new Date()).format(\"YYYY/MM/DD\");\n</code></pre>\n\n<p>Note: you don't actualy need to add <code>new Date()</code> if you want the current TimeDate, I only added it as a reference that you can pass a date object to it. for the current TimeDate this also works: </p>\n\n<pre><code>moment().format(\"YYYY/MM/DD\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p><code>alert(dateObj)</code> gives <code>Wed Dec 30 2009 00:00:00 GMT+0800</code></p>\n\n<p>How to get date in format <code>2009/12/30</code>?</p>\n",
            "last_activity_date": 1421171391,
            "question_id": 2013255,
            "score": 54,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "How to get year/month/day from a date object?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>how about</p>\n\n<pre><code>var isnum = /^\\d+$/.test(val);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 118
                },
                {
                    "body": "<p>Well, you can use the following regex:</p>\n\n<pre><code>^\\d+$\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>string.match(/^[0-9]+$/) != null;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 16
                },
                {
                    "body": "<pre><code>var isNumber =  /^\\d+$/.test(theValue);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>String.prototype.isNumber = function(){return /^\\d+$/.test(this);}\nconsole.log(\"123123\".isNumber()); // outputs true\nconsole.log(\"+12\".isNumber()); // outputs false\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I want to check if a string contains only digits. I used this:</p>\n\n<pre><code>var isANumber = isNaN(theValue) === false;\n\nif (isANumber){\n    ..\n}\n</code></pre>\n\n<p>.. but realized that it also allows + and -. Basically I wanna make sure the input contains ONLY digits and no other letters. Since +100 and -5 are both numbers, isNaN, is not the right way to go.\nPerhaps a regexp is what I need? Any tips?</p>\n",
            "last_activity_date": 1258928309,
            "question_id": 1779013,
            "score": 48,
            "tags": [
                "javascript",
                "numbers",
                "digits"
            ],
            "title": "Check if string contains only digits"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p><code>i</code> is the name.</p>\n\n<pre><code>for(var name in obj) {\n    alert(name);\n    var value = obj[name];\n    alert(value);\n}\n</code></pre>\n\n<p>So you could do:</p>\n\n<pre><code>seperateObj[i] = myObject[i];\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 71
                },
                {
                    "body": "<p>When you do the for/in loop you put up first, i is the property name. So you have the property name, i, and access the value by doing myObject[i].</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Disclaimer</strong> \nI misunderstood the question to be: \"Can I know the property name that an object was attached to\", but chose to leave the answer since some people may end up here while searching for that.</p>\n\n<hr>\n\n<p>No, an object could be attached to multiple properties, so it has no way of knowing its name.</p>\n\n<pre><code>var obj = {a:1};\nvar a = {x: obj, y: obj}\n</code></pre>\n\n<p>What would obj's name be?</p>\n\n<p>Are you sure you don't just want the property name from the for loop?</p>\n\n<pre><code>for (var propName in obj) {\n  console.log(\"Iterating through prop with name\", propName, \" its value is \", obj[propName])\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Use Object.keys():</p>\n\n<pre><code>var keyNames = Object.keys(myObject);\nfor (var i in keyNames) {\n     console.log(i);\n}\n</code></pre>\n\n<p>Object.keys() gives you an array of properties belonging to the input object.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>for direct access a object property by position...\ngenerally usefull for propoerty [0]... so it holds info about the further...\nor in node.js 'require.cache[0]' for the first loaded external module, etc. etc.</p>\n\n<p>Object.keys( myObject )[ 0 ]\nObject.keys( myObject )[ 1 ]\n...\nObject.keys( myObject )[ n ]</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I was wondering if there was any way in JavaScript to loop through an object like so.</p>\n\n<pre><code>for(var i in myObject) {\n    // ...\n}\n</code></pre>\n\n<p>But get the name of each property like this.</p>\n\n<pre><code>for(var i in myObject) {\n    separateObj[myObject[i].name] = myObject[i];\n}\n</code></pre>\n\n<p>I can't seem to find anything like it on Google. They say to pass the names of the variables with them but this is not an option for what I am trying to achieve.</p>\n\n<p>Thanks for any help you can offer.</p>\n",
            "last_activity_date": 1406892013,
            "question_id": 4260308,
            "score": 43,
            "tags": [
                "javascript",
                "object",
                "properties"
            ],
            "title": "JavaScript: Getting the object&#39;s property name"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>The <code>inArray</code> function returns the index of the object supplied as the first argument to the function in the array supplied as the second argument to the function.</p>\n\n<p>When <code>inArray</code> returns <code>0</code> it is indicating that the first argument was found at the first position of the supplied array.</p>\n\n<p>To use <code>inArray</code> within an if statement use:</p>\n\n<pre><code>if(jQuery.inArray(\"test\", myarray) != -1) {\n    console.log(\"is in array\");\n} else {\n    console.log(\"is NOT in array\");\n}\n</code></pre>\n\n<p><code>inArray</code> returns <code>-1</code> when the first argument passed to the function is not found in the array passed as the second argument.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://api.jquery.com/jQuery.inArray/\"><code>$.inArray</code></a> returns the <em>index</em> of the element if found or -1 if it isn't -- not a boolean value. So the correct is</p>\n\n<pre><code>if(jQuery.inArray(\"test\", myarray) != -1) {\n    console.log(\"is in array\");\n} else {\n    console.log(\"is NOT in array\");\n} \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>jQuery.inArray() returns index of the item in the array, or -1 if item was not found. Read more here: <a href=\"http://api.jquery.com/jQuery.inArray/\" rel=\"nofollow\">jQuery.inArray()</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It will return the index of the item in the array. If it's not found you will get <code>-1</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Honestly the answer comes from the first paragraph of the documentation check if the results is greater than -1, not if it's true or false.</p>\n\n<blockquote>\n  <p>The $.inArray() method is similar to JavaScript's native .indexOf() method in that it returns -1 when it doesn't find a match. If the first element within the array matches value, $.inArray() returns 0.</p>\n  \n  <p>Because JavaScript treats 0 as loosely equal to false (i.e. 0 == false, but 0 !== false), if we're checking for the presence of value within array, we need to check if it's not equal to (or greater than) -1.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p><code>inArray</code> returns the index of the element in the array, not a boolean indicating if the item exists in the array.</p>\n\n<p>So, to check if an item is in the array, use:</p>\n\n<pre><code>if(jQuery.inArray(\"test\", myarray)!==-1)\n</code></pre>\n\n<p>as <code>inArray</code> will return <code>-1</code>, if the element was not found.</p>\n",
                    "is_accepted": true,
                    "score": 93
                },
                {
                    "body": "<p>Or if you want to get a bit fancy you can use the bitwise not (~) and logical not(!) operators to convert the result of the inArray function to a boolean value.</p>\n\n<pre><code>if(!!~jQuery.inArray(\"test\", myarray)) {\n    console.log(\"is in array\");\n} else {\n    console.log(\"is NOT in array\");\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The right way of using <code>inArray(x, arr)</code> is <strong>not using it at all</strong>, and using instead <code>arr.indexOf(x)</code>.</p>\n\n<p>The official standard name is also more clear on the fact that the returned value is an index thus if the element passed is the first one you will get back a <code>0</code> (that is falsy in Javascript).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>First time I work with <code>jQuery.inArray()</code> and it acts kinda strange.</p>\n\n<p>If the object is in the array, it will return 0, but 0 is false in Javascript. So the following will output: <em>\"is NOT in array\"</em></p>\n\n<pre><code>var myarray = [];\nmyarray.push(\"test\");\n\nif(jQuery.inArray(\"test\", myarray)) {\n    console.log(\"is in array\");\n} else {\n    console.log(\"is NOT in array\");\n}\n</code></pre>\n\n<p>I will have to change the if statement to:</p>\n\n<pre><code>if(jQuery.inArray(\"test\", myarray)==0)\n</code></pre>\n\n<p>But this makes the code unreadable. Especially for someone who dont know this function. He will expect that jQuery.inArray(\"test\", myarray) gives true when \"test\" is in the array.</p>\n\n<p>So my question is, why is it done this way? I realy dislike this. But there must be a good reason to do it like that.</p>\n",
            "last_activity_date": 1420708133,
            "question_id": 18867599,
            "score": 40,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery.inArray(), how to use it right?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>When installing a tool globally it's to be used by a user as a command line utility anywhere, including outside of node projects. Global installs for a node project are <em>bad</em> because they make deployment more difficult.</p>\n\n<p>When used in a <code>script</code> field of your package.json, <code>npm</code> searches <code>node_modules</code> for the tool as well as globally installed modules, so the local install is sufficient.</p>\n\n<p>So, if you are happy with (in your package.json):</p>\n\n<pre><code>\"devDependencies\": {\n    \"gulp\": \"3.5.2\"\n}\n\"scripts\": {\n    \"test\": \"gulp test\"\n}\n</code></pre>\n\n<p>etc. and running with <code>npm run test</code> then you shouldn't need the global install at all. This is useful for getting people set up with your project since <code>sudo</code> isn't needed. It also means that <code>gulp</code> will be updated when the version is bumped in the package.json, so everyone will be using the same version of gulp when developing with your project.</p>\n\n<p>As an aside, the same is true of other tools like <code>grunt-cli</code>, <code>jshint</code> etc.</p>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>Technically you don't need to install it globally if the <code>node_modules</code> folder in your local installation is in your <code>PATH</code>.  Generally this isn't a good idea.</p>\n\n<p>Alternatively if <code>npm test</code> references <code>gulp</code> then you can just type <code>npm test</code> and it'll run the local gulp.</p>\n\n<p>I've never installed gulp globally -- I think it's bad form.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>TLDR; Here's <a href=\"http://blog.dwaynecrooks.com/post/110903139442/why-do-we-need-to-install-gulp-globally-and\" rel=\"nofollow\">why</a>.</p>\n\n<p>Essentially, when you install <code>gulp</code> locally the script isn't in your <code>PATH</code> and so you can't just type <code>gulp</code> and expect the shell to find the command. By installing it globally the <code>gulp</code> script gets into your <code>PATH</code> because the global <code>node/bin/</code> directory is most likely on your path.</p>\n\n<p>To respect your local dependencies though, <code>gulp</code> will use your locally installed version of itself to run the <code>gulpfile.js</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm not sure if our problem was directly related with installing gulp only locally. But we had to install a bunch of dependencies ourself. This lead to a \"huge\" package.json and we are not sure if it is really a great idea to install gulp only locally. We had to do so because of our build environment. But I wouldn't recommend installing gulp not globally if it isn't absolutely necessary. We faced similar problems as described in the following <a href=\"http://www.saintsatplay.com/blog/2015/01/resolving-gulp-cannot-find-module-errors#.VOrsBFOG_3E\" rel=\"nofollow\">blog-post</a></p>\n\n<p>None of these problems arise for any of our developers on their local machines because they all installed gulp globally. On the build system we had the described problems. If someone is interested I could dive deeper into this issue. But right now I just wanted to mention that it isn't an easy path to install gulp only locally. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've looked though 2 manuals about <a href=\"https://laracasts.com/lessons/gulp-this\">gulp</a> and they both say that I need to install gulp first globally (with -g flag) and then one more time locally. Did not get it. Why do I need this?</p>\n",
            "last_activity_date": 1424683536,
            "question_id": 22115400,
            "score": 39,
            "tags": [
                "javascript",
                "gulp"
            ],
            "title": "Why do we need to install gulp globally and locally?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Turns out string starting with a newline (or anything other than \"&lt;\") is not considered HTML string in jQuery 1.9</p>\n\n<p><a href=\"http://stage.jquery.com/upgrade-guide/1.9/#jquery-htmlstring-versus-jquery-selectorstring\">http://stage.jquery.com/upgrade-guide/1.9/#jquery-htmlstring-versus-jquery-selectorstring</a></p>\n",
                    "is_accepted": true,
                    "score": 74
                },
                {
                    "body": "<p>I guess your template is starting with a space or a tab.</p>\n\n<p>You can use jQuery like that:</p>\n\n<pre><code>$($.parseHtml(modal_template_html)[1]);\n</code></pre>\n\n<p>or parse the string to remove spaces of the beginning:</p>\n\n<pre><code>$(modal_template_html.replace(/^[ \\t]+/gm, ''));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>EugeneXa mentioned it in a comment, but it deserves to be an answer:</p>\n\n<pre><code>var template = $(\"#modal_template\").html().trim();\n</code></pre>\n\n<p>This trims the offending whitespace from the beginning of the string. I used it with Mustache, like so:</p>\n\n<pre><code>var markup = Mustache.render(template, data);\n$(markup).appendTo(container);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use </p>\n\n<blockquote>\n  <p>var modal_template_html = $.trim($('#modal_template).html());</p>\n  \n  <p>var template = $(modal_template_html);</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>As the official document:\nAs of 1.9, a string is only considered to be HTML if it starts with a less-than (\"&lt;\") character. The Migrate plugin can be used to restore the pre-1.9 behavior.</p>\n\n<p>If a string is known to be HTML but may start with arbitrary text that is not an HTML tag, pass it to jQuery.parseHTML() which will return an array of DOM nodes representing the markup. A jQuery collection can be created from this, for example: <code>$($.parseHTML(htmlString))</code>. This would be considered best practice when processing HTML templates for example. Simple uses of literal strings such as <code>$(\"&lt;p&gt;Testing&lt;/p&gt;\").appendTo(\"body\")</code> are unaffected by this change.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I just updated jQuery from 1.8.3 to 1.9, and it started crashing all of a sudden.</p>\n\n<p>This is my template:</p>\n\n<pre><code>&lt;script type=\"text/template\" id=\"modal_template\"&gt;\n    &lt;div&gt;hello&lt;/div&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>This is how I read it:</p>\n\n<pre><code>modal_template_html = $(\"#modal_template\").html();\n</code></pre>\n\n<p>This is how I transform it into jQuery object (I need to use jQuery methods on it):</p>\n\n<pre><code>template = $(modal_template_html);\n</code></pre>\n\n<p>... and jQuery crashes!</p>\n\n<p>Error: Syntax error, unrecognized expression: &lt;div&gt;hello&lt;/div&gt;</p>\n\n<p>slice.call( docElem.childNodes, 0 )[0].nodeType;</p>\n\n<p>jquery-1.9.0.js (line 3811)</p>\n\n<p>However, if I declare template as a plain text variable, it starts working again:</p>\n\n<pre><code>var modal_template_html = '&lt;div&gt;hello&lt;/div&gt;';\n</code></pre>\n\n<p>Can anyone help me to figure this out?</p>\n\n<p><strong>UPDATE</strong>:\nJquery team heard and <a href=\"http://blog.jquery.com/2013/05/09/jquery-1-10-beta-1-released/\">changed</a> things back to normal in 1.10:</p>\n\n<blockquote>\n  <p>The biggest change you\u2019re likely to see is that we\u2019ve loosened up the criteria for HTML processing in $(), allowing leading spaces and newlines as we did before version 1.9</p>\n</blockquote>\n",
            "last_activity_date": 1425628250,
            "question_id": 14347611,
            "score": 39,
            "tags": [
                "javascript",
                "jquery",
                "mustache"
            ],
            "title": "jQuery + client-side template = &quot;Syntax error, unrecognized expression&quot;"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>The <code>&lt;link&gt;</code> tag is used to \"link\" other documents to the current one, and describe it's relationship, or <code>rel</code>, with it.</p>\n\n<p>You can also use <code>&lt;link&gt;</code> to link other things to the document.  For example, favicons:</p>\n\n<pre><code>&lt;link rel=\"shortcut icon\" href=\"favicon.ico\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This might explain things, I guess: <a href=\"http://www.w3.org/TR/html4/struct/links.html\" rel=\"nofollow\">http://www.w3.org/TR/html4/struct/links.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's historical... coincidence? You can recommend him reading <a href=\"http://diveintohtml5.info/past.html\">part about Past of diveintohtml5.info</a>, where there are some interesting stories, actually mail correspondences, between web developers. Web developers means they were, <em>in fact</em>, developing the Web we see nowadays ;)</p>\n\n<p>I.e. <code>&lt;img&gt;</code> tag we are used to:</p>\n\n<pre><code>&lt;IMG SRC=\"file://foobar.com/foo/bar/blargh.xbm\"&gt;\n</code></pre>\n\n<p>could be:</p>\n\n<pre><code>&lt;ICON name=\"NoEntry\" href=\"http://note/foo/bar/NoEntry.xbm\"&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;A HREF=\"...\" INCLUDE&gt;See photo&lt;/A&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;INCLUDE HREF=\"...\"&gt;\n</code></pre>\n\n<p>but <a href=\"http://1997.webhistory.org/www.lists/www-talk.1993q1/0257.html\">finally devs decided to stick with <code>&lt;img&gt;</code>, which was already implemented</a>:</p>\n\n<blockquote>\n  <p>We\u2019re not prepared to support INCLUDE/EMBED at this point. \u2026 So we\u2019re\n  probably going to go with  (not ICON, since not all\n  inlined images can be meaningfully called icons). For the time being,\n  inlined images won\u2019t be explicitly content-type\u2019d; down the road, we\n  plan to support that (along with the general adaptation of MIME).\n  Actually, the image reading routines we\u2019re currently using figure out\n  the image format on the fly, so the filename extension won\u2019t even be\n  significant.</p>\n</blockquote>\n\n<p>I don't know direct answer to your question, but I'm pretty curious about <code>&lt;link&gt;</code> tag, too. Finding answer would probably include some web archives digging.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>There is a difference, at least from the W3C's point of view.</p>\n\n<p>A <code>&lt;style&gt;</code> element introduces a block of CSS rules that apply to the current document. However, external style sheets are actually considered as whole documents <a href=\"http://www.w3.org/TR/html4/struct/links.html#h-12.3\">related</a> to the current page, and user agents are free to ignore such documents, depending on the <code>type</code> and <code>media</code> attributes of the link. For instance:</p>\n\n<pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"screen.css\" /&gt;\n&lt;link rel=\"stylesheet\" type=\"text/css\" media=\"print\" href=\"print.css\" /&gt;\n</code></pre>\n\n<p>In this situation, user agents would typically only follow one of the links, either the <code>screen</code> one (for normal rendering) or the <code>print</code> one (for, well, printing). The idea was to preserve bandwidth by only downloading the appropriate resource, instead of fetching everything and filtering on the media type later.</p>\n\n<p>This is mentioned in the specification:</p>\n\n<blockquote>\n  <p>When the <code>LINK</code> element links an external style sheet to a document, the\n  <code>type</code> attribute specifies the style sheet language and the <code>media</code>\n  attribute specifies the intended rendering medium or media. User\n  agents may save time by retrieving from the network only those style\n  sheets that apply to the current device.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>They both have a basically identical meaning, and you have spotted a sort of inconsistency in HTML. The cause of this is that the standards were based on the implementations of different browsers. Different browsers came up with the attributes in the different tags, and the W3C just decided to keep some of the inconsistencies in order to maintain backwards compatability.</p>\n\n<p>Elements that use <code>src</code>: <code>script img iframe input video frame</code></p>\n\n<p>Elements that use <code>href</code>: <code>a link base</code></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Possible reason for <code>link ref</code> vs <code>style</code>:</p>\n\n<p><code>link</code> can only go on the <code>head</code>, where \"Metadata content\" is allowed, typically <code>head</code>,</p>\n\n<p><code>style</code> could not go in the <code>body</code> before HTML5 (now you can with <code>scoped</code>, but still not to external styles). Therefore, the choice between <code>link ref</code> and <code>style src</code> is arbitrary.</p>\n\n<p><code>script</code>, however, could already include an external script in the <code>body</code> before HTML5, so there had to be <code>script src</code>. But since it had to exist, why not allow it in the <code>head</code> as well (where <code>script</code> was already allowed), and disallow <code>link rel=script</code> to avoid duplication?</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>A relative of mine who started to learn Web Development asked me this question. </p>\n\n<p>Why <code>&lt;script src=\"min.js\"&gt;&lt;/script&gt;</code> but <code>&lt;link rel=\"stylesheet\" href=\"min.css\"&gt;</code> why not <code>&lt;style href=\"min.css\"&gt;&lt;/style&gt;</code> why we use <code>link</code> tag to add external css in the page but when we link css to page but we use <code>&lt;style&gt;...&lt;/style&gt;</code> when we write css inside <code>&lt;head&gt;</code>?</p>\n\n<p>I told him that it's because of Specification. Is there any more info to give to him?</p>\n",
            "last_activity_date": 1415696898,
            "question_id": 7122492,
            "score": 36,
            "tags": [
                "javascript",
                "html",
                "css",
                "html5",
                "w3c"
            ],
            "title": "Why &lt;script src=&quot;min.js&quot;&gt;&lt;/script&gt; but &lt;link rel=&quot;stylesheet&quot; href=&quot;min&quot;&gt; why not &lt;style href=&quot;min.css&quot;&gt;&lt;/style&gt;"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<pre><code>$('form :input').change(function() {\n    // Something has changed\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First, I'd add a hidden input to your form to track the state of the form.  Then, I'd use this jQuery snippet to set the value of the hidden input when something on the form changes:</p>\n\n<pre><code>    $(\"form\")\n    .find(\"input\")\n    .change(function(){\n        if ($(\"#hdnFormChanged\").val() == \"no\")\n        {\n            $(\"#hdnFormChanged\").val(\"yes\");\n        }\n    });\n</code></pre>\n\n<p>When your button is clicked, you can check the state of your hidden input:</p>\n\n<pre><code>$(\"#Button\").click(function(){\n    if($(\"#hdnFormChanged\").val() == \"yes\")\n    {\n        // handler code here...\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Looking at the updated question try something like</p>\n\n<pre><code>$('input, textarea, select').each(function(){\n    $(this).data(\"val\", $(this).val());\n});\n$('#button').click(function() {\n    $('input, textarea, select').each(function(){\n        if($(this).data(\"val\")!==$(this).val()) alert(\"CHANGED!1123%%32\");\n    });\n});\n</code></pre>\n\n<p>For the original question use something like</p>\n\n<pre><code>$('input').change(function() {\n    alert(\"Things have changed!\");\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use multiple selectors to attach a callback to the change event for any form element.</p>\n\n<pre><code>$(\"input, select\").change(function(){\n    // Something changed\n});\n</code></pre>\n\n<p><strong>EDIT</strong></p>\n\n<p>Since you mentioned you only need this for a click, you can simply modify my original code to this:</p>\n\n<pre><code>$(\"input, select\").click(function(){\n    // A form element was clicked\n});\n</code></pre>\n\n<p><strong>EDIT #2</strong></p>\n\n<p>Ok, you can set a global that is set once something has been changed like this:</p>\n\n<pre><code>var FORM_HAS_CHANGED = false;\n\n$('#mybutton').click(function() {\n    if (FORM_HAS_CHANGED) {\n        // The form has changed\n    }\n});\n\n$(\"input, select\").change(function(){\n    FORM_HAS_CHANGED = true;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You can do this:</p>\n\n<pre><code>$(\"form :input\").change(function() {\n  $(this).closest('form').data('changed', true);\n});\n$('#mybutton').click(function() {\n  if($(this).closest('form').data('changed')) {\n     //do something\n  }\n});\n</code></pre>\n\n<p>This rigs a <code>change</code> event handler to inputs in the form, if any of them change it uses <a href=\"http://api.jquery.com/data/\"><code>.data()</code></a> to set a <code>changed</code> value to <code>true</code>, then we just check for that value on the click, this assumes that <code>#mybutton</code> is inside the form (if not just replace <code>$(this).closest('form')</code> with <code>$('#myForm')</code>), but you could make it even more generic, like this:</p>\n\n<pre><code>$('.checkChangedbutton').click(function() {\n  if($(this).closest('form').data('changed')) {\n     //do something\n  }\n});\n</code></pre>\n\n<p><strong>References:</strong> Updated</p>\n\n<p>According to jQuery this is a filter to select all form controls.</p>\n\n<p><a href=\"http://api.jquery.com/input-selector/\">http://api.jquery.com/input-selector/</a></p>\n\n<blockquote>\n  <p>The :input selector basically selects all form controls.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 63
                },
                {
                    "body": "<p>You need <strong><a href=\"http://code.google.com/p/jquery-form-observe/\" rel=\"nofollow\">jQuery Form Observe</a></strong> plugin. That's what you are looking for.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to check if the form data, as it is going to be sent to the server, have changed, you can serialize the form data on page load and compare it to the current form data:</p>\n\n<pre><code>$(function() {\n\n    var form_original_data = $(\"#myform\").serialize(); \n\n    $(\"#mybutton\").click(function() {\n        if ($(\"#myform\").serialize() != form_original_data) {\n            // Something changed\n        }\n    });\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>I had a similar requirement in my project few days back. <a href=\"https://gist.github.com/DrPheltRight/4131266\" rel=\"nofollow\">This</a> plugin was really helpful.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>A real time simple solution:</p>\n\n<pre><code>$('form').on('keyup change', 'input, select, textarea', function(){\n    console.log('Form changed!');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Extending Udi's answer, this only checks on form submission, not on every input change.</p>\n\n<pre><code>$(document).ready( function () {\n  var form_data = $('#myform').serialize();\n  $('#myform').submit(function () {\n      if ( form_data == $(this).serialize() ) {\n        alert('no change');\n      } else {\n        alert('change');\n      }\n   });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In jQuery, is there a simple way to test if ANY of a forms elements have changed?</p>\n\n<p><strong>EDIT:</strong> I should have added that I only need to check on a click() event.</p>\n\n<p><strong>EDIT:</strong> Sorry I really should have been more specific! Say I have a form. And I have a button with the following:</p>\n\n<pre><code>$('#mybutton').click(function() {\n  //here is where is need to test.\n  if( FORM has changed ) {\n     do something\n  }\n});\n</code></pre>\n\n<p>how would I test if the form has changed since it was loaded?</p>\n",
            "last_activity_date": 1407911071,
            "question_id": 3025396,
            "score": 34,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jquery form change"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var isOk  = /^#[0-9A-F]{6}$/i.test('#aabbcc')\n</code></pre>\n\n<p>and more advanced : </p>\n\n<pre><code> var isOk  = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test('#ac3') // for #f00 (Thanks Smamatti)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 60
                },
                {
                    "body": "<pre><code>function isHexaColor(sNum){\n  return (typeof sNum === \"string\") &amp;&amp; sNum.length === 6 \n         &amp;&amp; ! isNaN( parseInt(sNum, 16) );\n}\n</code></pre>\n\n<p>isHexaColor(\"AA33FF\") => true</p>\n\n<p>isHexaColor(\"Z34FF9\") => false</p>\n\n<p>isHexaColor(\"AA33FF11\") => false</p>\n\n<p><strong>Edit</strong>: Please, see the comment of @SalvadorDali below, there are false positives in some cases. Rather use another solution.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>This can be a complicated problem.  After several attempts I came up with a fairly clean solution.  Let the browswer do the the work for you.</p>\n\n<p>Step 1: Create a div with border-style set to none.  The div can be positioned off screen or it can be any div on your page that doesn't use the borders.</p>\n\n<p>Step 2: Set the border color to an empty string. The code might look something like this:</p>\n\n<pre><code>e=document.getElementbyId('mydiv');\ne.style.borderColor=\"\";\n</code></pre>\n\n<p>Step 3: Set the border color to the color you aren't sure about.</p>\n\n<pre><code>e.style.borderColor=testcol;\n</code></pre>\n\n<p>Step 4: Check to see if the color actually got changed.  If testcol is invalid, no change will occur.</p>\n\n<pre><code>col2=e.style.borderColor;\nif(col2.length==0) {alert(\"Bad Color!\");}\n</code></pre>\n\n<p>Step 5: Clean up after yourself by setting the color back to an empty string.  </p>\n\n<pre><code>e.style.borderColor=\"\";\n</code></pre>\n\n<p>The Div:  </p>\n\n<pre><code>&lt;div id=\"mydiv\" style=\"border-style:none; position:absolute; left:-9999px; top:-9999px;\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Now the JavaScript function:  </p>\n\n<pre><code>function GoodColor(color)\n{\n   var color2=\"\";\n   var result=true;\n   var e=document.getElementById('mydiv');\n   e.style.borderColor=\"\";\n   e.style.borderColor=color;\n   color2=e.style.borderColor;\n   if (color2.length==0){result=false;}\n   e.style.borderColor=\"\";\n   return result;\n}\n</code></pre>\n\n<p>In this case, the function is returning a true/false answer to the question, the other option is to have it return a valid color value.  Your original color value, the value from borderColor or an empty string in place of invalid colors.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>For example:</p>\n\n<p><code>AA33FF</code> = valid hex color</p>\n\n<p><code>Z34FF9</code> = invalid hex color (has Z in it)</p>\n\n<p><code>AA33FF11</code> = invalid hex color (has extra characters)</p>\n",
            "last_activity_date": 1400438520,
            "question_id": 8027423,
            "score": 33,
            "tags": [
                "javascript",
                "jquery",
                "colors"
            ],
            "title": "How to check if a string is a valid hex color representation?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I'm not sure, but if you add event handlers to both 'click' &amp; 'dblclick' events, where you say to put marker on a click, and don't take any action on double click, then you can skip the adding of timeouts (the maps API can differ what is click and what is double click)</p>\n\n<pre><code>google.maps.event.addListener(map, 'click', function (event) {\n        placeMarker(event.latLng);\n    });\ngoogle.maps.event.addListener(map, 'dblclick', function(event) { \n//DO NOTHING, BECAUSE IT IS DOUBLE CLICK\n});\n</code></pre>\n\n<p>The placeMarker(latLng) is custom added function which adds marker on the given location:</p>\n\n<pre><code>var marker = new google.maps.Marker({\n        position: location,\n        draggable: true,\n        map: map\n    });\nmap.setCenter(location);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -4
                },
                {
                    "body": "<p>You can take advantage of, dblclick fires if it is a double click, and single click fires in such occations only once.</p>\n\n<pre><code>runIfNotDblClick = function(fun){\n    if(singleClick){\n        whateverurfunctionis();\n    }\n};\n\nclearSingleClick = function(fun){\n    singleClick = false;\n};\n\nsingleClick = false;\n\ngoogle.maps.event.addListener(map, 'click', function(event) {// duh! :-( google map zoom on double click!\n    singleClick = true;\n    setTimeout(\"runIfNotDblClick()\", 500);\n});\n\ngoogle.maps.event.addListener(map, 'dblclick', function(event) {// duh! :-( google map zoom on double click!\n     clearSingleClick();\n});\n</code></pre>\n\n<p>See <a href=\"http://www.ilikeplaces.com\">http://www.ilikeplaces.com</a> </p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The easiest way to solve it.</p>\n\n<pre><code>var location;\n\nfunction initialize() {\n        map = (...)\n        google.maps.event.addListener(map, 'click', function(event) {\n            mapZoom = map.getZoom();\n            startLocation = event.latLng;\n            setTimeout(placeMarker, 600);\n        });\n    }\n\nfunction placeMarker() {\n    if(mapZoom == map.getZoom()){\n        var marker = new google.maps.Marker({\n            position: location,\n            map: map\n        });\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>I just found an hackish solution which works but introduce a small waiting time (200ms, this is the minimum to make it work, but I don't know if it is client dependent)</p>\n\n<pre><code>var update_timeout = null;\n\ngoogle.maps.event.addListener(map, 'click', function(event){\n    update_timeout = setTimeout(function(){\n        do_something_here();\n    }, 200);        \n});\n\ngoogle.maps.event.addListener(map, 'dblclick', function(event) {       \n    clearTimeout(update_timeout);\n});\n</code></pre>\n\n<p>Hope this helps!</p>\n",
                    "is_accepted": false,
                    "score": 36
                }
            ],
            "body": "<p>With the Google Maps JS API v3, I want to drop a marker where the user clicks on the map, while keeping the default behavior when the user double clicks (and not adding any marker on the map).</p>\n\n<p>I thought about defining a timeout on click event. If a double click event is triggered within the next few milliseconds, the timeout is cancelled. If not, the marker is placed on the map when the timeout expires.\nBut it doesn't really look like the best solution ever.</p>\n\n<p>Is there a more elegant way to handle this?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1424355483,
            "question_id": 5329136,
            "score": 33,
            "tags": [
                "javascript",
                "events",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Handling click events in Google Maps JS API v3 while ignoring double clicks"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You need to use an object (not a primitive) in the parent scope and then you will be able to update it directly from the child scope</p>\n\n<p><strong>Parent:</strong></p>\n\n<pre><code>app.controller('ctrlParent',function($scope){\n    $scope.parentprimitive = \"someprimitive\"\n    $scope.parentobj = {};\n    $scope.parentobj.parentproperty = \"somevalue\";\n});\n</code></pre>\n\n<p><strong>Child:</strong></p>\n\n<pre><code>app.controller('ctrlChild',function($scope){\n    $scope.parentprimitive = \"this will NOT modify the parent\"\n    $scope.parentobj.parentproperty = \"this WILL modify the parent\";\n});\n</code></pre>\n\n<p><strong>Working demo</strong>: <a href=\"http://jsfiddle.net/sh0ber/xxNxj/\" rel=\"nofollow\">http://jsfiddle.net/sh0ber/xxNxj/</a></p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/14049480/what-are-the-nuances-of-scope-prototypal-prototypical-inheritance-in-angularjs\">What are the nuances of scope prototypal / prototypical inheritance in AngularJS?</a></p>\n",
                    "is_accepted": true,
                    "score": 58
                },
                {
                    "body": "<p>When you assign a primitive attribute to a scope, it is <em>always</em> local to the scope (possibly created on the fly), even if a parent scope has an attribute with the same name. This is a design decision, and a good one IMHO.</p>\n\n<p>If you need to change some primitive (ints, booleans, strings) in the parent scope, from the view, you need it to be an attribute of another object in that scope, so the assignment may read:</p>\n\n<pre><code>&lt;a ng-click=\"viewData.myAttr = 4\"&gt;Click me!&lt;/a&gt;\n</code></pre>\n\n<p>and it will, in turn:</p>\n\n<ol>\n<li>get the <code>viewData</code> object from whatever scope it is defined in</li>\n<li>assign 4 to its <code>myAttr</code> attribute.</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This also works (but not sure whether this follows best practice or not)</p>\n\n<pre><code>app.controller('ctrlParent',function($scope) {\n    $scope.simpleValue = 'x';\n});\n\napp.controller('ctrlChild',function($scope){\n    $scope.$parent.simpleValue = 'y';\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is one more way to do this task and to not use the <code>$scope.$parent</code> variable.</p>\n\n<p>Just prepare a method for changing the value in parent scope and use it in child one. Like this:</p>\n\n<pre><code>app.controller('ctrlParent',function($scope) {\n  $scope.simpleValue = 'x';\n  $scope.changeSimpleValue = function(newVal) {\n    $scope.simpleValue = newVal;\n  };\n});\n\napp.controller('ctrlChild',function($scope){\n    $scope.changeSimpleValue('y');\n});\n</code></pre>\n\n<p>It also works and give you more control over the value changes.</p>\n\n<p>You can then also call the method even in HTML like: <code>&lt;a ng-click=\"changeSimpleValue('y')\" href=\"#\"&gt;click me!&lt;/a&gt;</code>.</p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<p>I have two controllers one wrapped within another. Now I know the child scope inherits properties from the parent scope but is there a way to update the parent scope variable? So far I have not come across any obvious solutions.</p>\n\n<p>In my situation I have a calendar controller within a form. I would like to update the start and end dates from the parent scope (which is the form) so that the form has the start and end dates when submitted.</p>\n",
            "last_activity_date": 1422555311,
            "question_id": 16928341,
            "score": 30,
            "tags": [
                "javascript",
                "angularjs",
                "angularjs-scope"
            ],
            "title": "Update parent scope variable"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Likely an eclipse bug. See this thread:</p>\n\n<p><a href=\"https://bugs.eclipse.org/bugs/show_bug.cgi?id=359005\" rel=\"nofollow\">https://bugs.eclipse.org/bugs/show_bug.cgi?id=359005</a></p>\n\n<p>There is a patch posted there which you  might try.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>At first I thought this was just a trick, but it is working so well, I had to post it as an actual answer.</p>\n\n<p>When the error window pops up, don't close it. Just drag it off to the side, focus back on the main window and keep editing.</p>\n\n<p>When the error happens again Eclipse doesn't change the focus back to the error message. Focus stays in the editing window and you can continue to edit the document.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>An even better answer (from the bug report linked by Cliff Ribaudo, comment #10 and others):</p>\n\n<p>Turn off Toggle Mark Occurrences (Alt-Shift-O or the paintbrush icon on the toolbar, which handily, will show you your current state).</p>\n\n<p>Thanks Cliff!</p>\n\n<p>Edited:</p>\n\n<p><img src=\"http://i.stack.imgur.com/hktzU.png\" alt=\"Via Preferences\"></p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>Ironically, the solution for me was to install another plugin.  After I installed <a href=\"http://eclipse.org/vjet/\" rel=\"nofollow\">VJET</a>, and set up my JavaScript project to be a VJET-enabled project, the issue went away.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am working on relatively small (100-300 lines) Javascript files in Eclipse and periodically it gets really upset about some piece of code and pops up this error every time I place the cursor on that line.  The error is:</p>\n\n<pre><code>'Requesting JavaScript AST from Selection' has encountered a problem. \nAn internal error occured during \"Requesting JavaScript AST from selection\". \njava.lang.NullPointerException\n</code></pre>\n\n<p>While I am converting this:</p>\n\n<pre><code>if(p){\n    // enter code here\n} else { return false; }\n</code></pre>\n\n<p>into this:</p>\n\n<pre><code>if(p){\n    // enter code here\n} return false; \n</code></pre>\n\n<p>the error pops up several times. Each time it stops my typing and requires me to click the okay button. I then type two more characters and the error appears again.</p>\n\n<p>Any ideas how to either prevent the error or disable whatever Javascript AST is? </p>\n\n<p>This is on Eclipse Java EE, Indigo Service Release 2. It is almost a flat install, only two plugins installed and neither are for SVN and have nothing to do with Javascript.</p>\n",
            "last_activity_date": 1385974399,
            "question_id": 11334026,
            "score": 30,
            "tags": [
                "javascript",
                "eclipse"
            ],
            "title": "Eclipse error constantly pops up while editing Javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><code>Array.prototype.slice.call(arrayLikeObject)</code></p>\n\n<p>is the standard way to convert and an array-like object to an array. </p>\n\n<p>That only really works for the <code>arguments</code> object. To convert a generic object to an array is a bit of a pain. Here's the source from <a href=\"http://documentcloud.github.com/underscore/docs/underscore.html#section-29\">underscore.js</a>:</p>\n\n<pre><code>_.toArray = function(iterable) {\n    if (!iterable)                return [];\n    if (iterable.toArray)         return iterable.toArray();\n    if (_.isArray(iterable))      return iterable;\n    if (_.isArguments(iterable))  return slice.call(iterable);\n    return _.values(iterable);\n};\n\n_.values = function(obj) {\n    return _.map(obj, _.identity);\n};\n</code></pre>\n\n<p>Turns out you're going to need to loop over your object and map it to an array yourself. </p>\n\n<pre><code>var newArray = []\nfor (var key in object) {\n    newArray.push(key);\n}\n</code></pre>\n\n<p>You're confusing the concepts of arrays and \"associative arrays\". In JavaScript, objects kind of act like an associative array since you can access data in the format <code>object[\"key\"]</code>. They're not real associative arrays since objects are unordered lists.</p>\n\n<p>Objects and arrays are vastly different. </p>\n\n<p>An example of using underscore:</p>\n\n<pre><code>var sortedObject = _.sortBy(object, function(val, key, object) {\n    // return an number to index it by. then it is sorted from smallest to largest number\n    return val;\n});\n</code></pre>\n\n<p>See <a href=\"http://jsfiddle.net/Raynos/rNvFy/1/\">live example</a></p>\n",
                    "is_accepted": true,
                    "score": 36
                },
                {
                    "body": "<p>You should be able to convert a JavaScript object into an array like so...</p>\n\n<pre><code>var obj = {\n    '1': 'a',\n    '2': 'b',\n    '3': 'c'  \n};\n\nvar arr = [];\n\nfor (var key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      arr.push(obj[key]);  \n    }\n}\n\nconsole.log(arr); // [\"a\", \"b\", \"c\"]\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/33Xv6/\">See it on jsFiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If your JavaScript object is an <strong>array-like object</strong>, that is, an Object instance with a valid numerical <code>length</code> property, then you can directly use many <em>native</em> Array methods on it thanks to the <code>call</code> method. For example:</p>\n\n<pre><code>// Sorts the given objet in-place as if it was an array\nArray.prototype.sort.call(yourObject);\n</code></pre>\n\n<p>So if you know the number of entries to be sorted (<a href=\"http://stackoverflow.com/questions/126100/how-to-efficiently-count-the-number-of-keys-properties-of-an-object-in-javascrip\">How to efficiently count the number of keys/properties of an object in JavaScript?</a>), you can do:</p>\n\n<pre><code>yourObject.length = theNumberOfEntries;\nArray.prototype.sort.call(yourObject);\n// Optionally: delete yourObject.length;\n</code></pre>\n\n<p>Note that this will only sort properties indexed by \"0\", \"1\", \"2\", ... to <code>length - 1</code> inclusive, like in an Array. The object's other properties will not be re-ordered.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I have stumbled upon that problem recently while trying to group an array of objects by one of it's properties, resulting in one object I could therefore not sort. </p>\n\n<p>Concretely it's an array of blog posts I wanted to group by year and have them sorted by descending years. I used underscore's utility :</p>\n\n<pre><code>var grouped = _.groupBy(blogposts, function(post){\n  var date = new Date(post.publication_date)\n  return date.getFullYear()\n})\n//=&gt; { 2010: [blogpost, blogpost,etc], 2011: [blogpost, etc] }\n</code></pre>\n\n<p>As @Raynos explained I had to end up with some sort of array first before sorting it... </p>\n\n<p>It turns out underscore (1.4) has a nice little utility called <code>pairs</code> which will map the {key: value} of your object in an array of [key, value]. The equivalent of :</p>\n\n<pre><code>var paired = _.map(grouped, function(val, key){\n  return [key, val]\n})\n//=&gt; [ [2010, [blogpost, blogpost, ...] ], [2011, [blogpost, blogpost, ...]]...]\n</code></pre>\n\n<p>From there on you can easily sort by the first term of each pair. </p>\n\n<p>Here's the end result:</p>\n\n<pre><code>var grouped = _.groupBy(result.resource, function(resource){\n  var date = new Date(resource.pub_date)\n  return date.getFullYear() //+ \".\" + (date.getMonth()+1)\n})\n\nvar paired = _.pairs(grouped)\n\nvar sorted = _.sortBy(paired, function(pairs){\n  return -parseInt(pairs[0])\n})\n\nreturn sorted;\n// Giving me the expected result:\n//=&gt; [ [2013, [blogpost, blogpost, ...] ], [2012, [blogpost, blogpost, ...]]...]\n</code></pre>\n\n<p>I'm sure though there's a better and more performant way, but coming from ruby this code is immediately understandable for me.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>jQuery offers a map function, which will iterate through each element in an array or object and map the results into a new array. </p>\n\n<p>Prior to jQuery 1.6, $.map() supported traversing arrays only.</p>\n\n<p>We can use this to convert any object to an array as follows...</p>\n\n<pre><code>  myArray = $.map(myObject, function (el) {\n    return el;\n  });\n</code></pre>\n\n<p>But...\nif the callback function returns <strong>null or undefined</strong>, then that value is <strong>removed</strong> from the array, in most cases this is useful, but it can cause problems if you need null values in myArray.</p>\n\n<p>jQuery offers a solution for this...\nreturn the value as an array with the single value</p>\n\n<pre><code>myArrayWithNulls = jQuery.map(myObject, function (el) {\n  return [el];\n});\n</code></pre>\n\n<p>Here's a fiddle demonstrating the two approaches:\n<a href=\"http://jsfiddle.net/chim/nFyPE/\" rel=\"nofollow\">http://jsfiddle.net/chim/nFyPE/</a> </p>\n\n<p><a href=\"http://jsperf.com/object-to-array-jquery-2\" rel=\"nofollow\">http://jsperf.com/object-to-array-jquery-2</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I wrote a small function to recursively convert an object with properties that may also be objects to a multi-dimensional array. This code is dependent on underscore or lodash for the forEach and toArray methods.</p>\n\n<pre><code>function deepToArray(obj) {\n    var copy = [];\n\n\n    var i = 0;\n    if (obj.constructor == Object ||\n        obj.constructor == Array) {\n\n        _.forEach(obj, process);\n\n    } else {\n\n        copy = obj;\n\n    }\n\n\n    function process(current, index, collection) {\n\n        var processed = null;\n        if (current.constructor != Object &amp;&amp;\n            current.constructor != Array) {\n            processed = current;\n        } else {\n            processed = deepToArray(_.toArray(current));\n        }\n\n        copy.push(processed);\n\n    }\n\n    return copy;\n}\n</code></pre>\n\n<p>Here is the fiddle: \n<a href=\"http://jsfiddle.net/gGT2D/\" rel=\"nofollow\">http://jsfiddle.net/gGT2D/</a></p>\n\n<p>Note: This was written to convert an object that was originally an array back into an array, so any non-array index key values will be lost.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have some JSON data that I get from a server. In my Javascript, I want to do some sorting on it. I think the sort() function will do what I want.</p>\n\n<p>However, it seems that Javascript is converting the JSON data into an Object immediately on arrival. If I try to use the sort() method, I get errors a-plenty (using Firebug for testing).</p>\n\n<p>I've looked around the net, and everyone seems to say that for one thing, JSON objects are already Javascript arrays, and also that Objects can be treated just like arrays. Like over on <a href=\"http://stackoverflow.com/questions/752222/jquery-with-json-array-convert-to-javascript-array\">this question</a>, where in one of the answers, a guy says \"The [Object object] is your data -- you can access it as you would an array.\"</p>\n\n<p>However, that is not exactly true. Javascript won't let me use sort() on my object. And since the default assumption is that they're all the same thing, there don't seem to be any instructions anywhere on how to convert an Object to an Array, or force Javacript to treat it as one, or anything like that.</p>\n\n<p>So... how do I get Javascript to let me treat this data as an array and sort() it?</p>\n\n<p>Console log output of my object looks like this (I want to be able to sort by the values in the \"level\"):</p>\n\n<p>OBJECT JSONdata</p>\n\n<pre><code>{ \n1: {\n    displayName: \"Dude1\",\n    email: \"dude1@example.com&lt;mailto:dude1@example.com&gt;\",\n    lastActive: 1296980700, \n    level: 57, \n    timeout: 12969932837\n}, 2: {\n    displayName: \"Dude2\",\n    email: \"dude2@example.com&lt;mailto:dude2@example.com&gt;\",\n    lastActive: 1296983456,\n    level: 28,\n    timeout: 12969937382\n}, 3: {\n    displayName: \"Dude3\",\n    email: \"dude3@example.com&lt;mailto:dude3@example.com&gt;\",\n    lastActive: 1296980749,\n    level: 99,\n    timeout: 129699323459\n} \n}\n</code></pre>\n",
            "last_activity_date": 1389898403,
            "question_id": 4929924,
            "score": 30,
            "tags": [
                "javascript",
                "arrays",
                "json",
                "sorting",
                "object"
            ],
            "title": "How to sort a Javascript object, or convert it to an array?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/Function/apply\">apply</a> to avoid eval:</p>\n\n<pre><code>var args = [start, number].concat(newItemsArray);\nArray.prototype.splice.apply(theArray, args);\n</code></pre>\n\n<p>The <a href=\"https://developer.mozilla.org/en/Core%5FJavaScript%5F1.5%5FReference/Global%5FObjects/Function/apply\">apply</a> function is used to call another function, with a given context and arguments, provided as an array, for example:</p>\n\n<p>If we call:</p>\n\n<pre><code>var nums = [1,2,3,4];\nMath.min.apply(Math, nums);\n</code></pre>\n\n<p>The apply function will execute:</p>\n\n<pre><code>Math.min(1,2,3,4);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 56
                },
                {
                    "body": "<p>Wrap that into a function and you get this:</p>\n\n<pre><code>function insertArrayAt(array, index, arrayToInsert) {\n    Array.prototype.splice.apply(array, [index, 0].concat(arrayToInsert));\n}\n</code></pre>\n\n<p>You would use it like this:</p>\n\n<pre><code>var arr = [\"A\", \"B\", \"C\"];\ninsertArrayAt(arr, 1, [\"x\", \"y\", \"z\"]);\nalert(JSON.stringify(arr)); // output: A, x, y, z, B, C\n</code></pre>\n\n<p>You can check it out in this jsFiddle: <a href=\"http://jsfiddle.net/luisperezphd/Wc8aS/\">http://jsfiddle.net/luisperezphd/Wc8aS/</a></p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>You can also add such a function to the Array prototype, if you want something that is almost identical to the splice method.  E.g.</p>\n\n<pre><code>Array.prototype.spliceArray = function(index, n, array) {\n    return Array.prototype.splice.apply(this, [index, n].concat(array));\n}\n</code></pre>\n\n<p>Then usage would simply be:</p>\n\n<pre><code>var array = [\"A\",\"B\",\"C\",\"\",\"E\",\"F\"];\n\narray.splice(3,1,\"D\");\n// array is [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"]\n\narray.spliceArray(3,3,[\"1\",\"2\",\"3\"]);\n// array is [\"A\",\"B\",\"C\",\"1\",\"2\",\"3\"]\n</code></pre>\n\n<p>See it in action here: <a href=\"http://jsfiddle.net/TheMadDeveloper/knv2f8bb/1/\" rel=\"nofollow\">http://jsfiddle.net/TheMadDeveloper/knv2f8bb/1/</a></p>\n\n<p>Some notes:</p>\n\n<ul>\n<li>The <code>splice</code> function modifies the array directly, but returns the an array of elements that were removed... not the spliced array.</li>\n<li>While it's normally not recommended to extend core javascript classes, this is relatively benign with most standard frameworks.</li>\n<li>Extending <code>Array</code> won't work in cases where specialized array classes are used, such as an ImageData data Uint8ClampedArray.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a better way than this to splice an array into another array in javascript</p>\n\n<pre><code>var string = 'theArray.splice('+start+', '+number+',\"'+newItemsArray.join('\",\"')+'\");';\neval(string);\n</code></pre>\n",
            "last_activity_date": 1422324422,
            "question_id": 1348178,
            "score": 28,
            "tags": [
                "javascript",
                "arrays",
                "splice"
            ],
            "title": "A better way to splice an array into an array in javascript"
        },
        {
            "answer_count": 18,
            "answers": [
                {
                    "body": "<pre><code>$('#friendslist .tf')\n</code></pre>\n\n<p>this selector will suit your needs</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>maybe try this:</p>\n\n<pre><code>$(function () {\n    $('#selectall').click(function () {\n        $('#friendslist .tf').attr('checked', this.checked);\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>So \"checked\" is a crappy attribute; in many browsers it doesn't work as expected :-(  Try doing:</p>\n\n<pre><code>$('#friendslist').find(':checkbox')\n    .attr('checked', this.checked)\n    .attr('defaultChecked', this.checked);\n</code></pre>\n\n<p>I know setting \"defaultChecked\" doesn't make any sense, but try it and see if it helps.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Use the jquery toggle function. Then you can also perform whatever other changes you may want to do along with those changes... such as changing the value of the button to say \"check all\" or \"uncheck all\".</p>\n\n<pre><code>$(function () {\n    $('#selectall').toggle(\n        function() {\n            $('#friendslist .tf').attr('checked', 'checked');\n        },\n        function() {\n            $('#friendslist .tf').attr('checked', '');\n        }\n    );\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>It works for me (IE, Safari, Firefox) by just changing your this.checked to 'checked'.</p>\n\n<pre><code>$(function() {\n  $('#selectall').click(function() {\n    $('#friendslist').find(':checkbox').attr('checked', 'checked');\n  });\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You may try this:</p>\n\n<pre><code>$(function () {\n $('#selectall').click(function () {\n  $('#friendslist input:checkbox').attr('checked', checked_status);\n });\n});\n</code></pre>\n\n<p>//checked_status=true/false  -as the case may be, or set it via a variable</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>assuming <code>#selectall</code> is a checkbox itself whose state you want copied to all the other checkboxes?</p>\n\n<pre><code>$(function () {\n $('#selectall').click(function () {\n  $('#friendslist input:checkbox').attr('checked', $(this).attr('checked'));\n });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>try this</p>\n\n<pre><code>var checkAll = function(){  \nvar check_all = arguments[0];\nvar child_class = arguments[1];\nif(arguments.length&gt;2){\n    var uncheck_all = arguments[2];\n\n    $('#'+check_all).click(function (){\n        $('.'+child_class).attr('checked', true);\n    });\n\n    $('#'+uncheck_all).click(function (){\n        $('.'+child_class).attr('checked', false);\n    });\n\n    $('.'+child_class).click(function (){\n        var checkall_checked = true;\n        $('.'+child_class).each(function(){\n            if($(this).attr('checked')!=true){\n                checkall_checked = false;\n            }\n        });\n        if(checkall_checked == true){\n            $('#'+check_all).attr('checked', true);\n            $('#'+uncheck_all).attr('checked', false);\n        }else{\n            $('#'+check_all).attr('checked', false);\n            $('#'+uncheck_all).attr('checked', true);\n        }\n    });\n}else{\n    $('#'+check_all).click(function (){\n        $('.'+child_class).attr('checked', $(this).attr('checked'));\n    });\n\n    $('.'+child_class).click(function (){\n        var checkall_checked = true;\n        $('.'+child_class).each(function(){\n            if($(this).attr('checked')!=true){\n                checkall_checked = false;                   \n            }\n        });\n        $('#'+check_all).attr('checked', checkall_checked);\n    });\n}\n};\n</code></pre>\n\n<p>To \"check all\" and \"uncheck all\" is same checkbox</p>\n\n<p>checkAll(\"checkall_id\", \"child_checkboxes_class_name\");</p>\n\n<p>To \"check all\" and \"uncheck all\" is separate checkbox</p>\n\n<p>checkAll(\"checkall_id\", \"child_checkboxes_class_name\", \"uncheckall_id\");</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is how I toggle checkboxes</p>\n\n<pre><code>$(document).ready(function() {\n    $('#Togglebutton').click(function() {\n        $('.checkBoxes').each(function() {\n            $(this).attr('checked',!$(this).attr('checked'));\n        });\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I know I'm revisiting an old thread, but this page shows up as one of the top results in Google when this question is asked. I am revisiting this because in jQuery 1.6 and above, prop() should be used for \"checked\" status instead of attr() with true or false being passed. More info <a href=\"http://api.jquery.com/prop/\" title=\"here\">here</a>.</p>\n\n<p>For example, Henrick's code should now be:</p>\n\n<pre><code>$(function () {\n    $('#selectall').toggle(\n        function() {\n            $('#friendslist .tf').prop('checked', true);\n        },\n        function() {\n            $('#friendslist .tf').prop('checked', false);\n        }\n    );\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>Here is how I achieved it.</p>\n\n<pre><code>function SelectAllCheckBoxes();\n{\n$('#divSrchResults').find(':checkbox').attr('checked', $('#chkPrint').is(\":checked\"));\n}\n</code></pre>\n\n<p>The following fires the above line.</p>\n\n<pre><code>&lt;input type=checkbox id=chkPrint onclick='SelectAllCheckBoxes();' /&gt; \n</code></pre>\n\n<p>On the click of chkPrint , every checkbox in the grid divSrchResults' is either checked or unchecked depending on the status of chkPrint.</p>\n\n<p>Of course, if you need advanced functions like unchecking the titled checkbox when every other checkbox has been unchecked, you need to write another function for this. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>&lt;input type=\"checkbox\" onclick=\"toggleChecked(this.checked)\"&gt; Select / Deselect All\n\nNow here are  two versions of the toggleChecked function dependent on the semantics of your document. The only real difference is the jQuery selector for your list checkboxes:\n\n1: All checkboxes have a class of  \u201ccheckbox\u201d (&lt;input type=\u201dcheckbox\u201d class=\u201dcheckbox\u201d /&gt;)\nfunction toggleChecked(status) {\n$(\".checkbox\").each( function() {\n$(this).attr(\"checked\",status);\n})\n}\n\n2: All the checkboxes are contained within a div with an arbitary id:\n\n&lt;div id=\"checkboxes\"&gt;\n&lt;input type=\"checkbox\" /&gt;\n&lt;input type=\"checkbox\" /&gt;\n&lt;input type=\"checkbox\" /&gt;\n&lt;/div&gt;\n\nIn this case the function would look like this:\n\nfunction toggleChecked(status) {\n$(\"#checkboxes input\").each( function() {\n$(this).attr(\"checked\",status);\n})\n\nHave fun!\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;div class=\"control-group\"&gt;\n&lt;input type=\"checkbox\" class=\"selAllChksInGroup\"&gt; All\n&lt;input type=\"checkbox\" value=\"NE\"&gt; Nebraska\n&lt;input type=\"checkbox\" value=\"FL\"&gt; Florida\n&lt;/div&gt;\n\n\n$(document).ready(function(){\n\n$(\"input[type=checkbox].selAllChksInGroup\").on(\"click.chkAll\", function( event ){\n    $(this).parents('.control-group:eq(0)').find(':checkbox').prop('checked', this.checked);\n});\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>A very simple check/uncheck all without the need of loop</p>\n\n<pre><code>&lt;input type=\"checkbox\" id=\"checkAll\" /&gt; Check / Uncheck All\n\n&lt;input type=\"checkbox\" class=\"chk\" value=\"option1\" /&gt; Option 1\n&lt;input type=\"checkbox\" class=\"chk\" value=\"option2\" /&gt; Option 2\n&lt;input type=\"checkbox\" class=\"chk\" value=\"option3\" /&gt; Option 3\n</code></pre>\n\n<p>And the javascript (jQuery) accounting for \"undefined\" on checkbox value</p>\n\n<p>** <strong>UPDATE - using .prop()</strong> **</p>\n\n<pre><code>$(\"#checkAll\").change(function(){\n    var status = $(this).is(\":checked\") ? true : false;\n    $(\".chk\").prop(\"checked\",status);\n});\n</code></pre>\n\n<hr>\n\n<p>** <strong>Previous Suggestion - may not work</strong> **</p>\n\n<pre><code>$(\"#checkAll\").change(function(){\n    var status = $(this).attr(\"checked\") ? \"checked\" : false;\n    $(\".chk\").attr(\"checked\",status);\n});\n</code></pre>\n\n<p>OR with the suggestion from the next post using .prop() combined into a single line</p>\n\n<pre><code>$(\"#checkAll\").change(function(){\n    $(\".chk\").attr(\"checked\",$(this).prop(\"checked\"));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I could not get this last example to work for me. The correct way to query the state of the checkbox is apparently :</p>\n\n<pre><code>var status = $(this).prop(\"checked\");\n</code></pre>\n\n<p>and not </p>\n\n<pre><code>var status = $(this).attr(\"checked\") ? \"checked\" : false;\n</code></pre>\n\n<p>as above.</p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/7645508/jquery-recieving-checkbox-status\">JQuery recieving checkbox status</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I created a function that I use on all projects. This is just the initial draft, but maybe it will help:</p>\n\n<p>Function:</p>\n\n<pre><code>function selectAll(wrapperAll, wrapperInputs) {\n\n    var selectAll = wrapperAll.find('input');\n    var allInputs = wrapperInputs.find('input');\n\n    console.log('Checked inputs = ' + allInputs.filter(':not(:checked)').length);\n\n    function checkitems(allInputs) {\n        //If all items checked\n        if (allInputs.filter(':not(:checked)').length === 0) {\n            console.log('Function: checkItems: All items checked');\n            selectAll.attr('checked', true);\n\n        } else {\n            console.log('Function: checkItems: Else all items checked');\n            selectAll.attr('checked', false);\n        }\n    }\n\n    checkitems(allInputs);\n    allInputs.on('change', function () {\n        checkitems(allInputs)\n    });\n\n    selectAll.on('change', function () {\n        if (this.checked) {\n            console.log('This checkbox is checked');\n            wrapperInputs.find(':checkbox').attr('checked', true);\n\n        } else {\n            console.log('This checkbox is NOT checked');\n            wrapperInputs.find(':checkbox').attr('checked', false);\n\n        }\n    });\n\n}\n</code></pre>\n\n<p>It accepts the 2 parameters where the inputs are wrapped into and you cand use-it like this:</p>\n\n<pre><code>$(function () {\n\n    var wrapperAll = $('.selectallinput');\n    var wrapperInputs = $('.inputs');\n\n    selectAll(wrapperAll, wrapperInputs);\n});\n</code></pre>\n\n<p>See demo: <a href=\"http://jsfiddle.net/cHD9z/\" rel=\"nofollow\">http://jsfiddle.net/cHD9z/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This may work for both (checked/unchecked) <strong>selectall</strong> situations:</p>\n\n<pre><code>$(document).ready(function(){\n $('#selectall').click(function () {\n   $(\"#friendslist .tf\").attr(\"checked\",function(){return $(this).attr(\"checked\") ? false : true;});\n });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <a href=\"http://stackoverflow.com/a/9223856/552438\">currently accepted answer</a> won't work for jQuery 1.9+. The event handling aspect of the (rather heavily) overloaded <code>.toggle()</code> function was removed in that version, which means that attempting to call <code>.toggle(function, function)</code> will instead just toggle the display state of your element.</p>\n\n<p>I'd suggest doing something like this instead:</p>\n\n<pre><code>$(function() {\n    var selectAll = $('#selectall');\n    selectAll.on('click', function(e) {\n        var checked = !(selectAll.data('checked') || false);\n        $('#friendslist .tf').prop('checked', checked);\n        selectAll.data('checked', checked);\n    });\n});\n</code></pre>\n\n<p>That uses a regular click event handler, plus a data attribute to track the \"toggled\" status and invert it with each click.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a series of checkboxes that are loaded 100 at a time via ajax.</p>\n\n<p>I need this jquery to allow me to have a button when pushed check all on screen. If more are loaded, and the button is pressed, to perhaps toggle all off, then pressed again toggle all back on.</p>\n\n<p>This is what i have, obviously its not working for me.</p>\n\n<pre><code>$(function () {\n $('#selectall').click(function () {\n  $('#friendslist').find(':checkbox').attr('checked', this.checked);\n });\n});\n</code></pre>\n\n<p>The button is <code>#selectall</code>, the check boxes are class <code>.tf</code>, and they all reside in a parent div called <code>#check</code>, inside a div called <code>#friend</code>, inside a div called <code>#friendslist</code></p>\n\n<p>Example:</p>\n\n<pre><code>&lt;div id='friendslist'&gt;\n    &lt;div id='friend'&gt;\n        &lt;div id='check'&gt;\n            &lt;input type='checkbox' class='tf' name='hurr' value='durr1'&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div id='friend'&gt;\n        &lt;div id='check'&gt;\n            &lt;input type='checkbox' class='tf' name='hurr' value='durr2'&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div id='friend'&gt;\n        &lt;div id='check'&gt;\n            &lt;input type='checkbox' class='tf' name='hurr' value='durr3'&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;input type='button' id='selectall' value=\"Select All\"&gt;\n</code></pre>\n",
            "last_activity_date": 1408112168,
            "question_id": 1880313,
            "score": 27,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jquery select all checkboxes"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There are at least two ways of doing that:</p>\n\n<ul>\n<li>render some partial using templating</li>\n<li>use simple expression with conditional rendering function (see <a href=\"http://jsfiddle.net/XKT65/\" rel=\"nofollow\">this fiddle</a> and description below)</li>\n</ul>\n\n<p>For simple components, I recommend sticking to the rendering function. Very easy to understand.</p>\n\n<pre><code>$scope.render = function(condition) {        \n   return condition ? \"This is rendered when condition == TRUE\" : \"This is rendered when condition == FALSE\";\n};\n</code></pre>\n\n<p>and simply include it in your HTML, like so:</p>\n\n<pre><code>{{render(true)}}\n</code></pre>\n\n<p>You can also wrap this up with angular directive, which will give you very nice markup and unlimited possibilities!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><strong>Update for angularjs 1.1.5 and above users (not supported in 1.0.7):</strong></p>\n\n<blockquote>\n  <p>Related commit:\n  <a href=\"https://github.com/angular/angular.js/commit/2f96fbd17577685bc013a4f7ced06664af253944\">https://github.com/angular/angular.js/commit/2f96fbd17577685bc013a4f7ced06664af253944</a></p>\n</blockquote>\n\n<p>Angular now have a conditional rendering directive: <code>ngIf</code>.</p>\n\n<p>Usage:</p>\n\n<pre><code>&lt;div ng-if=\"conditional_expression\"&gt;&lt;/div&gt;\n</code></pre>\n\n<blockquote>\n  <p>Note that when an element is removed using ngIf its scope is destroyed and a new scope  is created when the element is restored</p>\n</blockquote>\n\n<p><a href=\"http://code.angularjs.org/1.1.5/docs/api/ng.directive:ngIf\">Documentation: directive-ngIf</a></p>\n\n<p><strong>For legacy angularjs users:</strong></p>\n\n<p><code>ngShow</code> directive conditionally hides/shows the element. This is going to be changed in one of the new stable releases, it is now available in the <code>unstable</code> release as with <code>1.1.5</code>.</p>\n\n<p>If you want to conditionally add/remove items on DOM, use can use <code>ngSwitch</code>.</p>\n\n<pre><code>&lt;div ng-switch=\"showMe\"&gt;\n    &lt;div ng-switch-when=\"true\"&gt;Hello!&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Actually, this directive has been created for handling cases for more than 1, but you can use it that way too. See <a href=\"http://stackoverflow.com/questions/14425497/angularjs-ngrepeat-with-multiple-object-types/14425547#14425547\">this</a> answer for examples of more sophisticated usages.</p>\n",
                    "is_accepted": true,
                    "score": 34
                },
                {
                    "body": "<p>Recommended way is to use <strong>ng-include</strong></p>\n\n<p>Example: <a href=\"http://jsfiddle.net/api/post/library/pure/\" rel=\"nofollow\">http://jsfiddle.net/api/post/library/pure/</a></p>\n\n<pre><code>&lt;div ng-app=\"\"&gt;\n  &lt;div ng-controller=\"Ctrl\"&gt;\n    &lt;select ng-model=\"template\" ng-options=\"t.name for t in templates\"&gt;\n     &lt;option value=\"\"&gt;(blank)&lt;/option&gt;\n    &lt;/select&gt;\n    url of the template: &lt;tt&gt;{{template.url}}&lt;/tt&gt;\n    &lt;hr/&gt;\n    &lt;div ng-include src=\"template.url\"&gt;&lt;/div&gt;\n  &lt;/div&gt;\n\n\n  &lt;!-- template1.html --&gt;\n  &lt;script type=\"text/ng-template\" id=\"template1.html\"&gt;\n    Content of template1.html\n  &lt;/script&gt;\n\n  &lt;!-- template2.html --&gt;\n  &lt;script type=\"text/ng-template\" id=\"template2.html\"&gt;\n    Content of template2.html\n  &lt;/script&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Look at <a href=\"http://angular-ui.github.com/\" rel=\"nofollow\">angular-ui</a> <code>if</code> directive. I believe this would serve you purpose well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I know how to make a <strong>view</strong> condition in AngularJS, that will display or hide dom element dependent on the condition:</p>\n\n<pre><code>&lt;div ng-show=\"{{isTrue}}\"&gt;Some content&lt;/div&gt;\n</code></pre>\n\n<p>but how do I create a <strong>render</strong> condition that determines whether to render or not the div?</p>\n",
            "last_activity_date": 1409077029,
            "question_id": 14475284,
            "score": 26,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Make a render condition with AngularJS"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You need to simulate local context and create your own version of <code>window</code> and <code>window.location</code> objects</p>\n\n<pre><code>var localContext = {\n    \"window\":{\n        location:{\n            href: \"http://www.website.com?varName=foo\"\n        }\n    }\n}\n\n// simulated context\nwith(localContext){\n    console.log(window.location.href);\n    // http://www.website.com?varName=foo\n}\n\n//actual context\nconsole.log(window.location.href);\n// http://www.actual.page.url/...\n</code></pre>\n\n<p>If you use <code>with</code> then all variables (including <code>window</code>!) will firstly be looked from the context object and if not present then from the actual context.</p>\n",
                    "is_accepted": true,
                    "score": -8
                },
                {
                    "body": "<p>The best way to do this is to create a helper function somewhere and then mock that:</p>\n\n<pre><code> var mynamespace = mynamespace || {};\n    mynamespace.util = (function() {\n      function getWindowLocationHRef() {\n          return window.location.href;\n      }\n      return { \n        getWindowLocationHRef: getWindowLocationHRef\n      }\n    })();\n</code></pre>\n\n<p>Now instead of using window.location.href directly in your code simply use this instead.  Then you replacing this method whenever you need to return a mocked value: </p>\n\n<pre><code>mynamespace.util.getWindowLocationHRef = function() {\n  return \"http://mockhost/mockingpath\" \n};\n</code></pre>\n\n<p>If you want a specific part of the window location such as a query string parameter then create helper methods for that too and keep the parsing out of your main code.  Some frameworks such as jasmine have test spies that can not only mock the function to return desired values, but can also verified it was called:</p>\n\n<pre><code>spyOn(mynamespace.util, 'getQueryStringParameterByName').andReturn(\"desc\");\n//...\nexpect(mynamespace.util.getQueryStringParameterByName).toHaveBeenCalledWith(\"sort\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 30
                },
                {
                    "body": "<p>Sometimes you may have a library that modifies window.location and you want to allow for it to function normally but also be tested. If this is the case, you can use a closure to pass your desired reference to your library such as this.</p>\n\n<pre><code>/* in mylib.js */\n(function(view){\n    view.location.href = \"foo\";\n}(self || window));\n</code></pre>\n\n<p>Then in your test, before including your library, you can redefine self globally, and the library will use the mock self as the view.</p>\n\n<pre><code>var self = {\n   location: { href: location.href }\n};\n</code></pre>\n\n<p>In your library, you can also do something like the following, so you may redefine self at any point in the test:</p>\n\n<pre><code>/* in mylib.js */\nvar mylib = (function(href) {\n    function go ( href ) {\n       var view = self || window;\n       view.location.href = href;\n    }\n    return {go: go}\n}());\n</code></pre>\n\n<p>In most if not all modern browsers, self is already a reference to window by default. In platforms that implement the Worker API, within a Worker self is a reference to the global scope. In node.js both self and window are not defined, so if you want you can also do this:</p>\n\n<pre><code>self || window || global\n</code></pre>\n\n<p>This may change if node.js really does implement the Worker API.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would propose two solutions which have already been hinted at in previous posts here:</p>\n\n<ul>\n<li><p>Create a function around the access, use that in your production code, and stub this with Jasmine in your tests:</p>\n\n<pre><code>var actions = {\n    getCurrentURL: function () {\n        return window.location.href;\n    },\n    paramToVar: function (testData) {\n        ...\n        var url = getCurrentURL();\n        ...\n    }\n};\n// Test\nvar urlSpy = spyOn(actions, \"getCurrentURL\").andReturn(\"http://my/fake?param\");\nexpect(actions.paramToVar(test_Data)).toEqual(\"bar\");\n</code></pre></li>\n<li><p>Use a <a href=\"http://en.wikipedia.org/wiki/Dependency_injection\">dependency injection</a> and inject a fake in your test:</p>\n\n<pre><code>var _actions = function (window) {\n    return {\n        paramToVar: function (testData) {\n            ...\n            var url = window.location.href;\n            ...\n        }\n    };\n};\nvar actions = _actions(window);\n// Test\nvar fakeWindow = {\n   location: { href: \"http://my/fake?param\" }\n};\nvar fakeActions = _actions(fakeWindow);\nexpect(fakeActions.paramToVar(test_Data)).toEqual(\"bar\");\n</code></pre></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>You need to change <code>URL</code> but not to refresh a page. In that case use</p>\n\n<pre><code>history.pushState({}, '', '/Path');\n</code></pre>\n\n<p>Now <code>window.location.href</code> will point to <code>/Path</code>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have some unit tests for a function that makes use of the window.location.href -- not ideal I would far rather have passed this in but its not possible in the implementation. I'm just wondering if its possible to mock this value without actually causing my test runner page to actually go to the URL.</p>\n\n<pre><code>  window.location.href = \"http://www.website.com?varName=foo\";    \n  expect(actions.paramToVar(test_Data)).toEqual(\"bar\"); \n</code></pre>\n\n<p>I'm using jasmine for my unit testing framework.</p>\n",
            "last_activity_date": 1414616254,
            "question_id": 4792281,
            "score": 24,
            "tags": [
                "javascript",
                "mocking",
                "jasmine"
            ],
            "title": "mocking window.location.href in Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can set two way data binding with <code>property: '='</code> as Roy suggests. So if you want both <code>key</code> and <code>value</code> bound to the local scope you would do</p>\n\n<pre><code>scope: {\n    key: '=',\n    value: '='\n},\n</code></pre>\n\n<p>Since you are passing these values, you have access to them in your directive's controller. But in case you want to run a function in the context of the parent scope, which seems to be  what you want to do with the <code>accept</code> attribute, then you would need to tell angular like this</p>\n\n<pre><code>scope: {\n    accept: \"&amp;\"\n}\n</code></pre>\n\n<p>Now, from your <code>save</code> method you could call the function passed via <code>accept</code></p>\n\n<pre><code>controller: function($scope, $element, $attrs, $location) {\n    $scope.save= function() {      \n        $scope.accept()\n    };\n}\n</code></pre>\n\n<p>Here's a <a href=\"http://jsfiddle.net/jaimem/y85Ft/7/\">jsfiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<pre><code>scope: {\n    accept: \"&amp;\"\n}\n</code></pre>\n\n<p>Use lowercase letters for function names, otherwise it doesn't work.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Look at <a href=\"http://jsfiddle.net/y85Ft/\">this Fiddle</a>, what do I have to change, that the expressions in the template get evaluated using the arguments I defined in the HTML? The SAVE-button should call the <code>blabla()</code>-function of the controller, since I pass it?</p>\n\n<pre><code>var myApp = angular.module('MyApp',[])\nmyApp.directive('editkeyvalue', function() {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            accept: \"expression\"\n        },\n        template : '&lt;div&gt;&lt;label class=\"control-label\"&gt;{{key}}&lt;/label&gt;' +\n        '&lt;label class=\"control-label\"&gt;{{key}}&lt;/label&gt;' +\n          '&lt;input type=\"text\" ng-model=\"value\" /&gt;'+\n        '&lt;button type=\"button\" x-ng-click=\"cancel()\"&gt;CANCEL&lt;/button&gt;' +\n        '&lt;button type=\"submit\" x-ng-click=\"save()\"&gt;SAVE&lt;/button&gt;&lt;/div&gt;',\n\n      controller: function($scope, $element, $attrs, $location) {\n        $scope.save= function() {\n          $scope.accept();\n        };\n      }\n    }\n});\n</code></pre>\n\n<p>I do not really see through that. Thanks for help!</p>\n",
            "last_activity_date": 1379231421,
            "question_id": 13725938,
            "score": 23,
            "tags": [
                "javascript",
                "html5",
                "controller",
                "scope",
                "angularjs"
            ],
            "title": "AngularJS: How to pass arguments/functions to a directive?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>Edit: No, there isn't.</strong></p>\n\n<p>To get the rendered font size of a given element, without affecting the DOM:</p>\n\n<pre><code>Number(getComputedStyle(parentElement, \"\").fontSize.match(/(\\d*(\\.\\d*)?)px/)[1]);\n</code></pre>\n\n<p>This is based off the answer to <a href=\"http://stackoverflow.com/questions/4571813/why-is-this-javascript-function-so-slow-on-firefox\">this question</a>. I expanded the regex to allow for floating point values.</p>\n\n<hr>\n\n<p><strong>Edit:</strong></p>\n\n<p>In IE, you would have to use <code>parentElement.currentStyle[\"fontSize\"]</code>, but this is not guaranteed to convert the size to <code>px</code>. So that's out.</p>\n\n<p>Furthermore, this snippet won't get you the default font size of the element, but rather its <em>actual</em> font size, which is important if it has actually got a class and a style associated with it. In other words, if the element's font size is <code>2em</code>, you'll get the number of pixels in 2 ems. Unless the font size is specified inline, you won't be able to get the conversion ratio right.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>If you need something quick and dirty (and based on base font-size of body, not an element), I'd go with:</p>\n\n<pre><code>Number(getComputedStyle(document.body,null).fontSize.replace(/[^\\d]/g, ''))\n\n Number(  // Casts numeric strings to number\n   getComputedStyle(  // takes element and returns CSSStyleDeclaration object\n     document.body,null) // use document.body to get first \"styled\" element\n         .fontSize  // get fontSize property\n          .replace(/[^\\d]/g, '')  // simple regex that will strip out non-numbers\n ) // returns number\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Just 2 cents. I made a jQuery Plug-in awhile back for a similar situation (didn't worry about dom change then). Mostly I was needing to get default px of elements having em font sizes. A plugin was a bit more than necessary except I was redoing the same things over and over again, so I finally plugged it. Since then I've cultivated it a little. </p>\n\n<p>Cut to the chase, the plugin will not only get default PX of any element, it will also get BODY Default PX without triggering Dom change. Of course, however, a Dom change is still triggered on getting inner element default px.</p>\n\n<p>Most Basic Use (No DOM event!)</p>\n\n<pre><code>$.getDefaultPx();\n</code></pre>\n\n<hr>\n\n<p>Takes up to 3 arguments:</p>\n\n<ul>\n<li>element (as jQuery object, dom element, or even string of element TagName|ID|ClassName)</li>\n<li>multiplier (must be int, if you want the return to be multiplied by specified number)</li>\n<li>asObject \n<ul>\n<li>true: returns an object of result (useful for multiple elements)</li>\n<li>false:\n<ol>\n<li>if one element, returns string</li>\n<li>if multiple elements, returns array</li>\n</ol></li>\n</ul></li>\n</ul>\n\n<p>Examples:</p>\n\n<pre><code>$(\"#eleID\").getDefaultPx(); // returns default px of element with id = eleID\n$.getDefaultPx($(\"#eleID\")); // same as above\n$.getDefaultPx(\"#eleID\"); // same as above\n\n$(\"#eleID\").getDefaultPx(5);  // returns default px of said element multiplied by 5\n\n$(\"#eleID\").getDefaultPx(true);  // returns something like { 0: 16 }\n\n$.getDefaultPx({ element: $(\"element\"), multiplier: 3, asObject: true }); // params passed as object\n$(\"element\").getDefaultPx({ multiplier: 3, asObject: true })  // same as above\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/SpYk3/fHgdv/\" rel=\"nofollow\"><h1>jsFiddle</h1></a></p>\n\n<hr>\n\n<p>Compiled Plugin:</p>\n\n<pre><code>(function($){$.getDefaultPx||($.extend({getDefaultPx:function(){var a=Array.prototype.slice.call(arguments),b=$(\"body\"),d=1,e=!1,f=0,c=$(\"&lt;div /&gt;\").css({clear:\"both\",display:\"block\",height:\"1em\",position:\"absolute\",width:\"1em\",\"z-index\":\"-999\"});for(x in a)switch(typeof a[x]){case \"boolean\":e=a[x];break;case \"number\":d=a[x];break;case \"object\":a[x]instanceof jQuery?a[x].length&amp;&amp;(b=a[x]):$(a[x]).prop(\"tagName\")?b=$(a[x]):(a[x].element&amp;&amp;(\"string\"==typeof a[x].element?$(\"body\").find($(a[x].element)).length&amp;&amp;\n(b=$(a[x].element)):\"object\"==typeof a[x].element&amp;&amp;(a[x].element instanceof jQuery?b=a[x].element:$(a[x].element).prop(\"tagName\")&amp;&amp;(b=$(a[x].element)))),a[x].multiplier&amp;&amp;(d=parseFloat(a[x].multiplier)),a[x].asObject&amp;&amp;(e=a[x].asObject));break;case \"string\":$(a[x]).length&amp;&amp;(b=$(a[x]))}if(1==b.length){if(\"body\"==b.prop(\"tagName\").toLowerCase())return parseFloat($(\"body\").css(\"font-size\"))*d;b.append(c);a=c.height()*d;f=!e?a:{\"0\":a}}else f=!e?[]:{},b.each(function(a){$(this).append(c);f[a]=c.height()*\nd});$(document).find(c).length&amp;&amp;c.remove();return f}}),$.fn.extend({getDefaultPx:function(a,b){return $.getDefaultPx($(this),a,b)}}))})(jQuery);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>There are situations where it can be useful to get the exact pixel width of an <code>em</code> measurement.  For example, suppose you have an element with a CSS property (like border or padding) which is measured in ems, and you need to get the exact pixel width of the border or padding.  There's an existing question which touches on this topic:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1442542/how-can-i-get-default-font-size-in-pixels-by-using-javascript-or-jquery\">How can i get default font size in pixels by using JavaScript or JQuery?</a></p>\n\n<p>This question is asking about getting the <em>default font size</em> - which is necessary in order to convert a relative <code>em</code> value to an exact <code>px</code> value.  </p>\n\n<p><a href=\"http://stackoverflow.com/a/4530334/168288\">This answer</a> has a pretty good explanation of how to go about getting the default font size of an element:</p>\n\n<blockquote>\n  <p>Since ems measure width you can always compute the exact pixel font\n  size by creating a div that is 1000 ems long and dividing its\n  client-Width property by 1000. I seem to recall ems are truncated to\n  the nearest thousandth, so you need 1000 ems to avoid an erroneous\n  truncation of the pixel result.</p>\n</blockquote>\n\n<p>So, using this answer as a guide, I wrote the following function to get the default font size:</p>\n\n<pre><code>function getDefaultFontSize(parentElement)\n{\n    parentElement = parentElement || document.body;\n    var div = document.createElement('div');\n    div.style.width = \"1000em\";\n    parentElement.appendChild(div);\n    var pixels = div.offsetWidth / 1000;\n    parentElement.removeChild(div);\n    return pixels;\n}\n</code></pre>\n\n<p>Once you have the default font size, you can convert any <code>em</code> width to <code>px</code> width by just multiplying the ems by the element's default font size and rounding the result:</p>\n\n<p><code>Math.round(ems * getDefaultFontSize(element.parentNode))</code></p>\n\n<p><strong>Problem:</strong> The <code>getDefaultFontSize</code> is ideally supposed to be a simple, side-effect free function that returns the default font size.  But it <em>DOES</em> have an unfortunate side effect: it modifies the DOM!  It appends a child and then removes the child. Appending the child is necessary in order to get a valid <code>offsetWidth</code> property.  If you don't append the child <code>div</code> to the DOM, the <code>offsetWidth</code> property remains at 0 because the element is never rendered.  Even though we immediately remove the child element, this function can still create unintended side effects, such as firing an event (like Internet Explorer's <code>onpropertychange</code> or W3C's <code>DOMSubtreeModified</code> event) that was listening on the parent element. </p>\n\n<p><strong>Question:</strong> Is there any way to write a truly side-effect free <code>getDefaultFontSize()</code> function that won't accidentally fire event handlers or cause other unintended side effects?</p>\n",
            "last_activity_date": 1387406273,
            "question_id": 10463518,
            "score": 23,
            "tags": [
                "javascript",
                "css",
                "events",
                "dom"
            ],
            "title": "Converting em to px in Javascript (and getting default font size)"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Try, <a href=\"http://recurser.com/articles/2008/02/21/jquery-i18n-translation-plugin/\">jQuery i18n</a> or <a href=\"http://keith-wood.name/localisation.html\">jQuery localisation</a></p>\n\n<p>An example for jQuery i18n, and of course you need to generate JSON based dictionary from language file from php</p>\n\n<pre><code>var my_dictionary = { \n    \"some text\"  : \"a translation\",\n    \"some more text\"  : \"another translation\"\n}\n$.i18n.setDictionary(my_dictionary);\n\n\n$('div#example').text($.i18n._('some text'));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>The easiest way is having a PHP file write the translations from <code>gettext</code> into JavaScript variables.</p>\n\n<p>js_lang.php:</p>\n\n<pre><code>word_hello = \"&lt;?php echo gettext(\"hello\"); ?&gt;\"\nword_world = \"&lt;?php echo gettext(\"world\"); ?&gt;\"\nword_how_are_you = \"&lt;?php echo gettext(\"how_are_you\"); ?&gt;\"\n</code></pre>\n\n<p>and then include it:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js_lang.php\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>I would also recommend this method in conjunction with the translation plugins S.Mark mentions (which are very interesting!). </p>\n\n<p>You can define the dictionary in the current page's header, too, without including an external file, but that way, you would have to look up and send the data on every page load - quite unnecessary, as a dictionary tends to change very rarely.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>I generally export the translations in a JavaScript structure:</p>\n\n<pre><code>var app = {}\nvar app.translations = {\n  en:  { hello: \"Hello, World!\"\n       , bye:   \"Goodbye!\"\n       }\n, nl:  { hello: \"Hallo, Wereld!\"\n       , bye:   \"Tot ziens!\"\n       }\n};\n</code></pre>\n\n<p>The current language of the page texts can be defined using: <code>&lt;html xml:lang=\"en\" lang=\"nl\"&gt;</code></p>\n\n<p>This can be read in JavaScript:</p>\n\n<pre><code>var curentLanguage = document.documentElement.lang || \"en\";\napp.lang = app.translations[ currentLanguage ] || app.translations.en;\n</code></pre>\n\n<p>And then you can write code like this:</p>\n\n<pre><code>alert( app.lang.hello );\n</code></pre>\n\n<hr>\n\n<p>Optionally, a <code>i18n()</code> or <code>gettext()</code> function can bring some intelligence, to return the default text if the key does not exist). For example:</p>\n\n<pre><code>function gettext( key )\n{\n  return app.lang[ key ] || app.translations.en[ key ] || \"{translation key not found: \" + key + \"}\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can make your life much easier if you get rid of bad habit to use string literals in your code. That is, instead of</p>\n\n<pre><code> alert(\"Some message\")\n</code></pre>\n\n<p>use</p>\n\n<pre><code>alert($(\"#some_message_id\").text())\n</code></pre>\n\n<p>where \"#some_message_id\" is a hidden div or span generated on the server side.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As a further hint there's a perl script called po2json which will generate json from a .po file.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just for your reference, here is a very simple (but it does the job) solution: <a href=\"http://www.zomeoff.com/jsin/\" rel=\"nofollow\">http://www.zomeoff.com/jsin/</a> </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The one I use is <a href=\"http://jsgettext.berlios.de/\" rel=\"nofollow\">http://jsgettext.berlios.de/</a> (mirrored at <a href=\"http://sourceforge.net/projects/jsgettext.berlios/\" rel=\"nofollow\">http://sourceforge.net/projects/jsgettext.berlios/</a> ) and it seems to do the job.\nBut then I'm using a combination of GWT and JavaScript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>WordPress has a nice solution for this, using PHP and JS: <a href=\"http://codex.wordpress.org/I18n_for_WordPress_Developers#Handling_JavaScript_files\" rel=\"nofollow\">http://codex.wordpress.org/I18n_for_WordPress_Developers#Handling_JavaScript_files</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://developer.berlios.de/projects/jsgettext/\" rel=\"nofollow\">JSGettext</a> is best implementation of GNU gettext spec. \nFirst download JSGETTEXT package and include in your page\n/js/Gettext.js</p>\n\n<pre><code>&lt;?php\n$locale = \"ja_JP.utf8\";\nif(isSet($_GET[\"locale\"]))$locale = $_GET[\"locale\"];\n?&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;link rel=\"gettext\" type=\"application/x-po\" href=\"/locale/&lt;?php echo $locale ?&gt;/LC_MESSAGES/messages.po\" /&gt;\n&lt;script type=\"text/javascript\" src=\"/js/Gettext.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"/js/test.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\nTest!\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>javascript code for example</p>\n\n<pre><code>window.onload = function init(){\nvar gt = new Gettext({ 'domain' : 'messages' });\nalert(gt.gettext('Hello world'));\n}\n</code></pre>\n\n<p>For reference find below link. It's working fine without converting .js file to .php.</p>\n\n<p><a href=\"http://openflights.org/blog/2009/05/29/dynamic-javascript-localization-with-gettext-and-php/\" rel=\"nofollow\">Click here</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am using <code>gettext</code> in my PHP code, but I have a big problem. All my JavaScript files are not affected by the translation, can somebody tell me an easy way to get the translations in the chosen language into JavaScript as well.</p>\n",
            "last_activity_date": 1409124190,
            "question_id": 2400106,
            "score": 23,
            "tags": [
                "javascript",
                "gettext",
                "translate"
            ],
            "title": "Translation in JavaScript like gettext in PHP?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Are you using Rails 4?   (Find out by doing <code>rails -v</code> in your console)</p>\n\n<p>This issue is probably due to the newly added <a href=\"https://github.com/rails/turbolinks/\">Turbolinks</a> gem.  It makes your application behave like a single page JavaScript application.  It has a few benefits (<a href=\"http://blog.steveklabnik.com/posts/2012-09-27-seriously--numbers--use-them-\">it's faster</a>), but it unfortunately breaks some existing events like <code>$(document).ready()</code> because the page is never reloaded.  That would explain why the JavaScript works when you directly load the URL, but not when you navigate to it through a <code>link_to</code>.</p>\n\n<p>Here's a <a href=\"http://railscasts.com/episodes/390-turbolinks\">RailsCast</a> about Turbolinks.</p>\n\n<p>There are a couple solutions.  You can use <a href=\"https://github.com/kossnocorp/jquery.turbolinks\">jquery.turbolinks</a> as a drop-in fix, or you can switch your <code>$(document).ready()</code> statement to instead use the Turbolinks <code>'page:load'</code> event:</p>\n\n<pre><code>$(document).on('page:load', function() {\n    // your stuff here\n});\n</code></pre>\n\n<p>Alternatively, you could do something like this for compatibility with regular page loads as well as Turbolinks:</p>\n\n<pre><code>var ready = function() {\n    // do stuff here.\n};\n\n$(document).ready(ready);\n$(document).on('page:load', ready);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 48
                },
                {
                    "body": "<p>I got the same probleme but <a href=\"https://github.com/kossnocorp/jquery.turbolinks\">jquery.turbolinks</a> doesn't helped. I noticed that I have to override the GET method.</p>\n\n<p>There is my sample : </p>\n\n<pre><code>&lt;%= link_to 'Edit', edit_interpreter_path(@interpreter), method: :get %&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I'm having some trouble loading my javascript when I use a link_to helper in rails. When I either manually enter the url with 'localhost:3000/products/new' or reload the page, the javascript loads, but when I go through a link as written below, the jQuery <code>$(document).ready</code> will not load on the new page. </p>\n\n<p>Link_to, javascript does not load when I click this link:</p>\n\n<pre><code>&lt;%= link_to \"New Product\", new_product_path %&gt;\n</code></pre>\n\n<p>products.js file</p>\n\n<pre><code>$(document).ready(function() {\n    alert(\"test\");\n});\n</code></pre>\n\n<p>Any help would be much appreciated. Thanks in advance!</p>\n",
            "last_activity_date": 1403079347,
            "question_id": 17600093,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "ruby-on-rails"
            ],
            "title": "Rails, javascript not loading after clicking through link_to helper"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>From the documentation of <code>bind</code> and <code>click</code> :</p>\n\n<p><strong><a href=\"http://api.jquery.com/bind/\">bind</a> :</strong></p>\n\n<blockquote>\n  <p>As of jQuery 1.7, the .on() method is the preferred method for\n  attaching event handlers to a document.</p>\n</blockquote>\n\n<p><a href=\"http://code.jquery.com/jquery-latest.js\">The source</a> makes it clear there's no reason to use <code>bind</code>, as this function only calls the more flexible <code>on</code> function without even being shorter :</p>\n\n<pre><code>bind: function( types, data, fn ) {\n    return this.on( types, null, data, fn );\n},\n</code></pre>\n\n<p>So I'd suggest, just like the jQuery team, to forget the old <code>bind</code> function, which is now useless. It's only for compatibility with older code that it's still here.</p>\n\n<p><strong><a href=\"http://api.jquery.com/click/\">click</a> :</strong></p>\n\n<blockquote>\n  <p>This method is a shortcut for .on('click', handler)</p>\n</blockquote>\n\n<p>This shortcut is of course less powerful and flexible than the <code>on</code> function and doesn't allow delegation but it lets you write a shorter and, arguably, slightly more readable, code when it applies (opinions diverge on that point : some developers argue that it should be avoided as it is just a shortcut).</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I think that you should have searched the <a href=\"http://api.jquery.com/bind/\" rel=\"nofollow\">jquery docs</a> before posting this question : </p>\n\n<blockquote>\n  <p>As of jQuery 1.7, the .on() method is the preferred method for attaching event handlers to a document.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>To your first question: there's also <code>.delegate</code>, which was superseded by <code>.on</code> as of jQuery 1.7, but still is a valid form of binding event handlers.</p>\n\n<p>To your second question: You should always use <code>.on</code> like the docs say, but you should also pay attention on how to use <code>.on</code>, because you can either bind the event handler on an object itself or a higher level element and delegate it like with <code>.delegate</code>.</p>\n\n<p>Say you have an ul > li list and want to bind a mouseover event to the lis. Now there are two ways:</p>\n\n<ul>\n<li><code>$('ul li').on('mouseover', function() {});</code></li>\n<li><code>$('ul').on('mouseover', 'li', function() {});</code></li>\n</ul>\n\n<p>The second one is preferable, because with this one the event handler gets bound to the ul element and jQuery will get the actual target li via <code>event.currentTarget</code> (<a href=\"http://api.jquery.com/event.currenttarget/\" rel=\"nofollow\">jQuery API</a>), while in the first example you bind it to every list element.</p>\n\n<p>This doesn't just work for parent > child elements. If you have a click handler for every anchor on the page you should rather use <code>$(document).on('click', 'a', function() {});</code> instead of just <code>$('a').on('click', function() {});</code> to save a lot of time attaching event handlers to every element.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have come across several methods for handling click events in jquery:</p>\n\n<p>bind:</p>\n\n<pre><code>$('#mydiv').bind('click', function() {\n    ...\n});\n</code></pre>\n\n<p>click:</p>\n\n<pre><code>$('#mydiv').click(function() {\n   ...\n}\n</code></pre>\n\n<p>on:</p>\n\n<pre><code>$('mydiv').on('click', function() {\n   ...\n}\n</code></pre>\n\n<p>Two questions:</p>\n\n<ol>\n<li>Are they any other ways of doing this?</li>\n<li>Which one should I use, and why ?</li>\n</ol>\n\n<p>UPDATE:</p>\n\n<p>As eveyyone has helpfully suggested, I should have read the docs better, and found out that I should use:</p>\n\n<p>on() or click(),</p>\n\n<p>which are effectively the same thing.</p>\n\n<p>However, nobody has explained why bind is no longer recommended ? I'll probably get more downvotes for missing the obvious somewhere, but I can't find a reason for this in the documents.</p>\n\n<p>UPDATE2:</p>\n\n<p>'on' has the useful effect of being able to add event handlers to dynamically created elements. e.g.</p>\n\n<pre><code>$('body').on('click',\".myclass\",function() {\n    alert(\"Clicked On MyClass element\");\n});\n</code></pre>\n\n<p>This code adds a click handler to elements with a class of 'myClass'. However, if more myClass elements are then dynamically added later, they automatically get the click handler as well, without having to explicitly call 'on'. From what I understand people are saying, this is also more efficient (see Simons answer below).</p>\n",
            "last_activity_date": 1388742059,
            "question_id": 15658231,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "onclick"
            ],
            "title": "jquery use of bind vs on click"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Use this:</p>\n\n<pre><code>alert($(\".messageCheckbox\").is(\":checked\").val())\n</code></pre>\n\n<p>This assumes the checkboxes to check have the class \"messageCheckbox\", otherwise you would have to do a check if the input is the checkbox type, etc.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>in plain javascript:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>function test() {\n    var cboxes = document.getElementsByName('mailId[]');\n    var len = cboxes.length;\n    for (var i=0; i&lt;len; i++) {\n        alert(i + (cboxes[i].checked?' checked ':' unchecked ') + cboxes[i].value);\n    }\n}\n</code></pre>\n\n<pre class=\"lang-js prettyprint-override\"><code>function selectOnlyOne(current_clicked) {\n    var cboxes = document.getElementsByName('mailId[]');\n    var len = cboxes.length;\n    for (var i=0; i&lt;len; i++) {\n        cboxes[i].checked = (cboxes[i] == current);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><em>For modern browsers</em>:</p>\n\n<pre><code>var checkedValue = document.querySelector('.messageCheckbox:checked').value;\n</code></pre>\n\n<p><em>By using <code>jQuery</code></em>:</p>\n\n<pre><code>var checkedValue = $('.messageCheckbox:checked').val();\n</code></pre>\n\n<p><em>Pure javascript without <code>jQuery</code></em>:</p>\n\n<pre><code>var checkedValue = null; \nvar inputElements = document.getElementsByClassName('messageCheckbox');\nfor(var i=0; inputElements[i]; ++i){\n      if(inputElements[i].checked){\n           checkedValue = inputElements[i].value;\n           break;\n      }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 55
                },
                {
                    "body": "<p>I am using this in my code.Try this</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var x=$(\"#checkbox\").is(\":checked\");\n</code></pre>\n\n<p>If the checkbox is checked <code>x</code> will be true otherwise it will be false.</p>\n",
                    "is_accepted": false,
                    "score": 28
                },
                {
                    "body": "<p>THIS WORKS <a href=\"http://www.overpie.com/jquery/articles/jquery-get-selected-checkboxes\" rel=\"nofollow\">http://www.overpie.com/jquery/articles/jquery-get-selected-checkboxes</a> \nI also tried it and it worked so I am posting this for fellow programmers who are stuck at getting checkbox values. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I've got code that looks like this:</p>\n\n<pre><code>&lt;input class=\"messageCheckbox\" type=\"checkbox\" value=\"3\" name=\"mailId[]\"&gt;\n&lt;input class=\"messageCheckbox\" type=\"checkbox\" value=\"1\" name=\"mailId[]\"&gt;\n</code></pre>\n\n<p>I just need Javascript that will give me the value of whatever checkbox is currently checked.</p>\n\n<p><strong>EDIT</strong>: To add, their will only be ONE checked box.</p>\n",
            "last_activity_date": 1403779789,
            "question_id": 11599666,
            "score": 22,
            "tags": [
                "javascript",
                "checkbox"
            ],
            "title": "Get the value of checked checkbox?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Javascript doesn't have integers, all numbers are actually doubles.</p>\n\n<p>The <a href=\"https://developer.mozilla.org/En/Core%5FJavaScript%5F1.5%5FReference/Operators/Bitwise%5FOperators\" rel=\"nofollow\">Javascript 1.5 Reference by Mozilla</a> suggests that one can only use bitwise-operations safely for 32 bit numbers.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>What kind of IP addresses do you have? IPv4 uses only 32bit addresses, so JavaScript should be fine (using double which gives you an <a href=\"http://en.wikipedia.org/wiki/Double%5Fprecision%5Ffloating-point%5Fformat\" rel=\"nofollow\">52bit integer part</a>). IPv6 uses 128bit addresses, so you'll have to use an array. My guess is that something else is broken.</p>\n\n<p>[EDIT] Build a small library which uses an array of two ints as the internal data type.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use >>> instead of >> to get an unsigned right shift instead of a sign-extending one. All the other bitwise operators behave the same way regardless of whether ints are signed or not.</p>\n\n<p>Your code breaking \"when subnet ... is less than 2\" is concerning. That sounds like you may have some bug unrelated to signedness of integers.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<pre><code>document.write( (1 &lt;&lt; 31) +\"&lt;br/&gt;\");\n</code></pre>\n\n<p>The <code>&lt;&lt;</code> operator is defined as working on signed 32-bit integers (converted from the native Number storage of double-precision float). So <code>1&lt;&lt;31</code> must result in a negative number.</p>\n\n<p>The only JavaScript operator that works using unsigned 32-bit integers is <code>&gt;&gt;&gt;</code>. You can exploit this to convert a signed-integer-in-Number you've been working on with the other bitwise operators to an unsigned-integer-in-Number:</p>\n\n<pre><code>document.write(( (1&lt;&lt;31)&gt;&gt;&gt;0 )+'&lt;br /&gt;');\n</code></pre>\n\n<p>Meanwhile:</p>\n\n<pre><code>document.write( (1 &lt;&lt; 32) +\"&lt;br/&gt;\");\n</code></pre>\n\n<p>won't work because all shift operations use only the lowest 5 bits of shift (in JavaScript and other C-like languages too). <code>&lt;&lt;32</code> is equal to <code>&lt;&lt;0</code>, ie. no change.</p>\n",
                    "is_accepted": true,
                    "score": 46
                },
                {
                    "body": "<p>Douglas Crockford believes that bitwise operators is one of the bad parts of javascript:</p>\n\n<blockquote>\n  <p>In Java, the bitwise operators work with integers. JavaScript doesn't have integers. It only has double precision floating-point numbers. So, the bitwise operators convert their number operands into integers, do their business, and then convert them back. In most languages, these operators are very close to the hardware and very fast. <strong>In JavaScript, they are very far from the hardware and very slow.</strong> JavaScript is rarely used for doing bit manipulation.</p>\n  \n  <p>-- Douglas Crockford in \"JavaScript: The Good Parts\", Appendix B, Bitwise Operators     (emphasis added)</p>\n</blockquote>\n\n<p>Are you sure that bitwise operators really speed up your logic?</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Here are two functions that convert ipv4 addresses to/from unsigned integers in javascript:</p>\n\n<pre><code>function ip2long(ip) {\n    var ipl=0;\n    ip.split('.').forEach(function( octet ) {\n        ipl&lt;&lt;=8;\n        ipl+=parseInt(octet);\n    });\n    return(ipl &gt;&gt;&gt;0);\n}\n\nfunction long2ip (ipl) {\n    return ( (ipl&gt;&gt;&gt;24) +'.' +\n        (ipl&gt;&gt;16 &amp; 255) +'.' +\n        (ipl&gt;&gt;8 &amp; 255) +'.' +\n        (ipl &amp; 255) );\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm working on a page that processes IP address information, but it's choking on the fact that integers are signed. I am using bitwise operators to speed it up, but the 64th bit (signed/unsigned flag) is messing it up.</p>\n\n<p>Is there any way to force a number to be unsigned in Javascript? It seems to work fine, until subnet is greater than 30, or less than 2.</p>\n\n<p>Maybe I'm expecting too much out of a simple language.</p>\n\n<p>Try this:</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n\n&lt;script type='text/javascript'&gt;\ndocument.write( (1 &lt;&lt; 30) +\"&lt;br/&gt;\");\ndocument.write( (1 &lt;&lt; 31) +\"&lt;br/&gt;\");\ndocument.write( (1 &lt;&lt; 32) +\"&lt;br/&gt;\");\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Result:</p>\n\n<blockquote>\n  <p>1073741824\n  -2147483648 \n  1</p>\n</blockquote>\n",
            "last_activity_date": 1422572785,
            "question_id": 1908492,
            "score": 22,
            "tags": [
                "javascript",
                "bit-manipulation",
                "unsigned"
            ],
            "title": "Unsigned Integer in Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Adding document level keypress handler does the trick!</p>\n\n<pre><code>var ar=new Array(33,34,35,36,37,38,39,40);\n\n$(document).keydown(function(e) {\n     var key = e.which;\n      //console.log(key);\n      //if(key==35 || key == 36 || key == 37 || key == 39)\n      if($.inArray(key,ar) &gt; -1) {\n          e.preventDefault();\n          return false;\n      }\n      return true;\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>If you add a document level keypress handler it will prevent normal scroll on the page at any time, not only when your element has the focus, this might be an undesired effect.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Under some circumstances, eg. when you don't actualy have an element you focus on, just some area you had to click, you might not have too much control over the handler and preventing the event at the global level can be a little flaky at best (as I found out the hard way). </p>\n\n<p>The simplest solution in those cases is to bind on the click even of the control button and focus on a empty input element which you position -9000px to the left. </p>\n\n<p>You can then reliably block the event via keydown and also dont have to worry about blocking default behavior or other global listeners since the default behavior on the input element will just move the cursor to the left and right.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Since I'm using jQuery, any solution via that would work too. Ideally, I'd like to know both, though.</p>\n\n<p>I already have the arrow keys bound to another function on my page (using jQuery), but having them cause the page to scroll in addition to that, causes me problems.</p>\n\n<p>I may have known this at one time, but I don't remember it anymore.</p>\n",
            "last_activity_date": 1410434118,
            "question_id": 1056562,
            "score": 22,
            "tags": [
                "javascript",
                "jquery",
                "scroll",
                "arrow-keys"
            ],
            "title": "How do I prevent scrolling with arrow keys but NOT the mouse?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>window.name</code> isn't particularly good as a transport, as (AFAIK) it doesn't fire any events when it's changed. As a result, an application which was trying to use <code>window.name</code> as a two-way communications channel would have to poll it for updates.</p>\n\n<p>As far as sites that actually use it: I've never heard of any. There might be some, but I've only heard this technique discussed in a purely theoretical sense.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><strong>Overview and original question</strong></p>\n\n<p><a href=\"https://developer.mozilla.org/en/DOM/window.name\">window.name</a> is an interesting beast. MDN's description hints at the original intent:</p>\n\n<blockquote>\n  <p>The name of the window is used primarily for setting targets for hyperlinks and forms. Windows do not need to have names.</p>\n</blockquote>\n\n<p>So, this means we can open the console in this window, and write:</p>\n\n<pre><code>var win = window.open('http://google.com', 'el goog');\n</code></pre>\n\n<p>...and then let it through the popup blocker, that should open google.com in a window named \"el goog.\" I can't access the <code>name</code> property of <code>win</code> because of the same-origin policy, but if I open a console in the new window and type <code>name</code>, I'll get <code>\"el goog\"</code>.</p>\n\n<p>If I send the window back to the domain I opened it from (in this case stackoverflow.com), I can get the <code>name</code> property, and it hasn't changed.</p>\n\n<pre><code>win.location.replace(location.href);\nwin.name; // \"el goog\"\n</code></pre>\n\n<p>This means we can have a kind of cross-domain session store by setting the <code>name</code> property of a window.</p>\n\n<p>If google.com had <em>changed</em> the value of <code>window.name</code> before the window was sent back to the original domain, we'd see the new value instead of \"el goog.\" This could be used as a cross-domain data transport, similar in utility to JSONP or CORS.</p>\n\n<p>I did a bit of searching to try to find more info, and apparently dojo <a href=\"http://www.sitepen.com/blog/2008/07/22/windowname-transport/\">thinks it's legit</a> as a transport. Somehow, though, that doesn't completely reassure me. So my question is, are any reputable sites using <code>window.name</code> as a data transport? I'd think it would be easily spotted, because their docs would say something like \"<em>add 'callback' to the query string for JSONP, or add 'whatever' for window.name,</em>\" but I've never seen anything like that. Has anyone actually spotted this in the wild?</p>\n\n<hr>\n\n<p><strong>Alternate question</strong></p>\n\n<p>It may be the case that nobody is really using this technique; if that's true then (as Rob W pointed out) the question above is unanswerable. So, my alternate question is, what are the problems with this approach? This might help explain why it hasn't really been adopted.</p>\n\n<p>As I see it, there are at least two benefits to this approach over JSONP.</p>\n\n<ul>\n<li><p>With JSONP, you trust a script from a foreign origin to run on your domain. With <code>window.name</code>, any scripts included by a malicious site would run on their own domain.</p></li>\n<li><p>With JSONP, there is no way to pass in big data (anything too big for a URL), and no way to make an HTTP POST. With <code>window.name</code>, we can post arbitrary data of any size.</p></li>\n</ul>\n\n<p>What are the drawbacks?</p>\n\n<hr>\n\n<p><strong>Example implementation</strong></p>\n\n<p>Here is a very simple example of a client implementation. This doesn't handle POST requests, only GET.</p>\n\n<pre><code>function fetchData(url, callback) {\n    var frame = document.createElement('iframe');\n    frame.onload = function() {\n        frame.onload = function() {\n            callback(frame.contentWindow.name);\n            frame.parentNode.removeChild(frame);\n        }\n        frame.src = 'about:blank';\n    }\n    frame.src = url;\n    document.body.appendChild(frame);\n}\n\n// using it\n\nfetchData('http://somehost.com/api?foo=bar', function(response) {\n\n    console.log(response);\n\n});\u200b\n</code></pre>\n\n<p>I've set up a fiddle to test it out <a href=\"http://jsfiddle.net/n9Wnx/\">here</a>.\nIt uses <a href=\"http://jsbin.com/ayehuv/2/edit\">this script</a> as a test server. </p>\n\n<p>Here is a slightly longer example that can make POST requests: <a href=\"http://jsfiddle.net/n9Wnx/2/\">http://jsfiddle.net/n9Wnx/2/</a></p>\n\n<hr>\n\n<p><strong>Summary</strong></p>\n\n<p>As far as I can tell, <code>window.name</code> has not caught on as a data transport. I wonder if my perception is accurate (thus the original question) and if so, I wonder <em>why</em> this is the case. I've listed a few advantages that <code>window.name</code> seems to have over JSONP. Can anyone identify some <em>disadvantages</em> that might have contributed to preventing adoption of this technique?</p>\n\n<p>More to the point, can anyone give me a solid reason why I shouldn't use <code>winow.name</code> as a data transport? </p>\n",
            "last_activity_date": 1364317683,
            "question_id": 10567847,
            "score": 21,
            "tags": [
                "javascript",
                "same-origin-policy"
            ],
            "title": "window.name as a data transport: a valid approach?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If I understand you correctly, by saying you want to inherit the parent constructor arguments, you mean that <code>new DynamicBody(1, 2, 3)</code> will internally call <code>PhysicsBody(1, 2, 3)</code> for the <code>DynamicBody</code> instance.</p>\n\n<p>This can be accomplished by using <code>.apply</code> and passing <code>arguments</code> along: <a href=\"http://jsfiddle.net/pmkrQ/\">http://jsfiddle.net/pmkrQ/</a>.</p>\n\n<pre><code>function DynamicBody() {\n    PhysicsBody.apply(this, arguments);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>One way to do it:</p>\n\n<pre><code>function PhysicsBody( aNode ) {\n    this.userData = aNode;\n}\n\nPhysicsBody.prototype.pbMethod = function () {};\n\nfunction DynamicBody( aNode ) {\n    PhysicsBody.call( this, aNode );\n}\n\n// setting up the inheritance\nDynamicBody.prototype = Object.create( PhysicsBody.prototype );\n\nDynamicBody.prototype.dbMethod = function () {};\n</code></pre>\n\n<hr>\n\n<p>Now, when you do</p>\n\n<pre><code>var pb = new PhysicsBody( '...' );\n</code></pre>\n\n<p>the instance <code>pb</code> gets a <code>userData</code> property and also inherits the methods from <code>PhysicsBody.prototype</code> (<code>pbMethod</code> in this case).</p>\n\n<p><img src=\"http://i.imgur.com/fsWcm.png\"></p>\n\n<hr>\n\n<p>When you do</p>\n\n<pre><code>var db = new DynamicBody( '...' );\n</code></pre>\n\n<p>the instance <code>db</code> gets a <code>userData</code> property and also inherits the methods from <code>DynamicBody.prototype</code> (<code>dbMethod</code> in this case), which in turn inherits from <code>PhysicsBody.prototype</code>.</p>\n\n<p><img src=\"http://i.imgur.com/0JQUR.png\"></p>\n",
                    "is_accepted": true,
                    "score": 42
                }
            ],
            "body": "<p>I'm browsing the discussion for a similar topic, but can't find my situation...</p>\n\n<p>Am trying call parent constructors with parameters... can't seem to get it right.</p>\n\n<p>I have a <code>PhysicsBody</code> superclass that takes <code>aNode</code> as its only constructor argument:</p>\n\n<pre><code>function PhysicsBody(aNode) {\n    this.userData = aNode;\n    // ...\n}\n</code></pre>\n\n<p>Of this <code>PhysicsBody</code> inherits a <code>DynamicBody</code> class. Is constructor also takes <code>aNode</code> as only argument... Like I would do it in Java, I'd love to call something equivalent to <code>\"super(aNode\");</code> Can't seem to find out how.</p>\n\n<p>Here's the <code>DynamicBody</code> class:</p>\n\n<pre><code>// Wanted to give \"new PhysicsBody(this, aNode)\", but that fails!\nDynamicBody.prototype = new PhysicsBody();\nDynamicBody.prototype.constructor=DynamicBody;\n\nfunction DynamicBody(aNode) {\n\n    // calling the parent constructor fails too:\n    // PhysicsBody.prototype.constructor.call(this, aNode);\n    //...\n}\n</code></pre>\n",
            "last_activity_date": 1318805189,
            "question_id": 7785955,
            "score": 21,
            "tags": [
                "javascript",
                "inheritance",
                "constructor",
                "arguments"
            ],
            "title": "Inherit parent constructor arguments"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p><code>return false;</code> from the inner div's onclick function:</p>\n\n<pre><code>&lt;div onclick=\"alert('inner'); return false;\" ...\n</code></pre>\n\n<p>What you're dealing with is called <a href=\"http://www.quirksmode.org/js/events_order.html\" rel=\"nofollow\">event propagation</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Check out the info on event propagation <a href=\"http://www.quirksmode.org/js/events_order.html\">here</a></p>\n\n<p>In particular you'll want some code like this in your event handlers to stop events from propagating:</p>\n\n<pre><code>function myClickHandler(e)\n{\n    // Here you'll do whatever you want to happen when they click\n\n    // now this part stops the click from propagating\n    if (!e) var e = window.event;\n    e.cancelBubble = true;\n    if (e.stopPropagation) e.stopPropagation();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>This is a case of event bubbling.</p>\n\n<p>You can use </p>\n\n<pre><code>e.cancelBubble = true; //IE\n</code></pre>\n\n<p>and</p>\n\n<pre><code>e.stopPropagation(); //FF\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Basically there are two event models in javascript. <strong>Event capturing</strong> and <strong>Event bubbling</strong>. In event bubbling, if you click on inside div, the inside div click event fired first and then the outer div click fired. while in event capturing, first the outer div event fired and than the inner div event fired. To stop event propagation, use this code in your click method.</p>\n\n<pre><code>   if (!e) var e = window.event;\n    e.cancelBubble = true;\n    if (e.stopPropagation) e.stopPropagation();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p><a href=\"http://www.quirksmode.org/js/events_order.html\" rel=\"nofollow\">Here</a> is some more reference to help you in understanding javascript event bubbling. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you have two 'div' and three '/div'.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One more way for webkit based browsers:</p>\n\n<pre><code>&lt;div onclick=\"alert('inner'); event.stopPropagation;\" ...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This was very helpful, but it didn't work for me.</p>\n\n<p>What i did is described <a href=\"http://stackoverflow.com/questions/2029654/jquery-firefox-stoppropagation\">here</a>.</p>\n\n<p>So I put a condition to the outer <code>onclick</code> event:</p>\n\n<pre><code>if( !event.isPropagationStopped() ) {\n    window.location.href = url;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just add this code :</p>\n\n<pre><code>window.event.stopPropagation();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>just a quick question. I'm having a problem with divs with onclick javascript within each other. When I click on the inner div it should only fire it's onclick javascript, but the outer div's javascript is also being fired. How can the user click on the inner div without firing the outer div's javascript?</p>\n\n<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;div onclick=\"alert('outer');\" style=\"width:300px;height:300px;background-color:green;padding:5px;\"&gt;outer div\n    &lt;div onclick=\"alert('inner');\"  style=\"width:200px;height:200px;background-color:white;\" /&gt;inner div&lt;/div&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1397749630,
            "question_id": 2385113,
            "score": 21,
            "tags": [
                "javascript",
                "html",
                "onclick"
            ],
            "title": "Howto: div with onclick inside another div with onclick javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Far from ideal, but you can use a flash local connection to setup one websocket connection and then share it across tabs and multiple browsers.</p>\n\n<p>See <a href=\"http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/net/LocalConnection.html?filter_flash=cs5&amp;filter_flashplayer=10.2&amp;filter_air=2.6\" rel=\"nofollow\">http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/flash/net/LocalConnection.html?filter_flash=cs5&amp;filter_flashplayer=10.2&amp;filter_air=2.6</a> for more information.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Don't think there seems to be a solution the way socket.io is implemented now. Check out Guillermo Rauch in <a href=\"http://www.infoq.com/interviews/socketio-nodejs-guillermo-rauch\" rel=\"nofollow\">this</a>video, fifth segment. He too considers it a challenge.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Lightstreamer ( <a href=\"http://www.lightstreamer.com\" rel=\"nofollow\">http://www.lightstreamer.com</a> ) is already able to share the same socket across multiple tabs for HTTP Streaming (Comet). The same mechanisms will be applied to WebSockets, due in a few weeks with Lightstreamer Colosseo. [Full disclosure: I am the CTO of Lightstreamer]</p>\n\n<p>Give it a play in the meantime, to see how the automatic connection sharing behaves. Go to the demo page ( <a href=\"http://www.lightstreamer.com/demos.htm\" rel=\"nofollow\">http://www.lightstreamer.com/demos.htm</a> ) and click \"Run\" on the Stock-List Demo. A new tab will open with the running demo. Keep clicking \"Run\" a few times, until you have a desired number of tabs. All of the tabs will share the same physical socket. Only one tab will contain the actual socket endpoint. You can identify it by looking at the upper-left status indicator (with the green led). If it's oval (and the roll-over shows \"Master page\"), then that's the master tab containing the shared connection.</p>\n\n<p>Now the magics... What happens if you close the Master tab? Well, the other tabs will spot that and will do an elecetion to choose a new master, which will create a new connection and recover the state. Give it a try, it's fun...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I used the localStorage object for communication between tabs in some occasions. The localStorage object has an event system to tell another tab or window of the same origin that some data has changed ( <a href=\"http://www.codediesel.com/javascript/sharing-messages-and-data-across-windows-using-localstorage/\" rel=\"nofollow\">http://www.codediesel.com/javascript/sharing-messages-and-data-across-windows-using-localstorage/</a> ). The idea is, to let the tab with the socket write a timestamp and the received data into the localstorage. If the timestamp gets too old - maybe because the tab with the socket has been closed - another tab can start a socket-connection and update the data and timestamp.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>After seeing this question, I've finally implemented sharing socket and added to my library a few days ago. It seems to work in most of browsers including even in IE6, but except Opera. For Opera, you may use regular checking instead of unload event.</p>\n\n<p>Check releated issue at <a href=\"https://github.com/flowersinthesand/jquery-socket/issues/21\" rel=\"nofollow\">https://github.com/flowersinthesand/jquery-socket/issues/21</a></p>\n\n<h3>Leaving a cookie</h3>\n\n<ol>\n<li>Set cookie to inform there is a shared socket.</li>\n<li>When socket closes, remove that cookie to inform there is no shared socket.</li>\n</ol>\n\n<p>See, <a href=\"https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L629-650\" rel=\"nofollow\">https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L629-650</a></p>\n\n<h3>Sharing and using shared socket</h3>\n\n<ol>\n<li>Using the storage event and localStorage - The localStorage fires the storage event when a value is set and removed.\n<ol>\n<li>Check that StorageEvent and localStorage are supported.</li>\n<li>Add storage event handler which filters event by key. I used socket's url as key</li>\n<li>Add close event of socket which removes storage attributes</li>\n<li>To signal, set data with the previous key to storage</li>\n</ol></li>\n</ol>\n\n<p>Sharing: <a href=\"https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L531-568\" rel=\"nofollow\">https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L531-568</a></p>\n\n<p>Using shared: <a href=\"https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L851-893\" rel=\"nofollow\">https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L851-893</a></p>\n\n<ol>\n<li>Using the window.open method - If we know a shared window's name, we can get that window's reference and access its property.\n<ol>\n<li>Every browser supports the window.open method, but some browsers like Chrome prohibit to access the returned window's properties.</li>\n<li>Get or create iframe whose name attribute is key. I used socket's url, but note that IE doesn't allow to use non-word characters in name attribute of iframe tag.</li>\n<li>Iframe's contentWindow is a shared window reference. Set callbacks variable to store each window's listener.</li>\n<li>To signal, simply call callbacks with data. Note that IE 8 and less allow to pass only string to other window's function, and the shared window could be destoryed.</li>\n</ol></li>\n</ol>\n\n<p>Sharing: <a href=\"https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L571-605\" rel=\"nofollow\">https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L571-605</a></p>\n\n<p>Using shared: <a href=\"https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L894-929\" rel=\"nofollow\">https://github.com/flowersinthesand/jquery-socket/blob/7c2ce4bb61d05d80580e6cde6c94a78238a67345/jquery.socket.js#L894-929</a></p>\n\n<h3>Note</h3>\n\n<ol>\n<li>In the above implementation, signalling is broadcasting, so the data should indicate the target. I used target property, p for parent and c for child.</li>\n<li>I used additional variables to share socket: opened - whether the shared socket is open, children - list of sharer. Codes and comments will help you understand details.</li>\n</ol>\n\n<p>I hope my answer was helpful.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I am using localStorage as a shared communication channel in order to send data between tabs using an interface identical to EventEmitters. Coupled with a leader election algorithm that decides which tab will be the one connected to the server, I relay all socket events to the leader tab from all follower tabs and vice versa. And finally, the leader tab forwards all events to the server, and broadcasts all received events to all other clients. Here's the code:</p>\n\n<ul>\n<li><a href=\"https://github.com/majestic3/athena-online-judge/blob/master/source/client/core/itc.js\" rel=\"nofollow\">https://github.com/majestic3/athena-online-judge/blob/master/source/client/core/itc.js</a></li>\n<li><a href=\"https://github.com/majestic3/athena-online-judge/blob/master/source/client/core/socket.js\" rel=\"nofollow\">https://github.com/majestic3/athena-online-judge/blob/master/source/client/core/socket.js</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm still theorizing on this for a design I'm getting ready to start building.  But, I'm thinking of combining </p>\n\n<p>-WebSockets\n-Local Storage\nand\n-Cross Window Messaging</p>\n\n<p>My theory is to create a socket engine in javascript that runs on every page load in every tab, but will shut down if one already has an established connection.</p>\n\n<p>On first hit to the site, I'll have it make a GUID and store it in local storage, this guid will uniquely identify that users browser/login to their PC. </p>\n\n<p>When the socket server accepts a connection it will have that guid, and any new request by that guid will return \"999 Connection Already Established\" or something like that.</p>\n\n<p>Once one is running, It will seed the other tabs with cross window messaging by converting the data I want to share accross tabs to a JSON blob and then converting that back to an object when received in other tabs. So whichever tab get's the connection, will be handling all incoming/outgoing messages with the socket server.  Then it will receive/transmit with the other tabs over cross window messaging.  And in theory this should work with Iframe's and Popup windows as well.</p>\n\n<p>This whole system will drive automatic data refreshes on loaded forms for a CRM like system we are building and a live chat system and ticket board.</p>\n\n<p>My dream scenario, is if User A is staring at Ticket 1000 and User B updates ticket 1000 I want user A's ticket to refresh, and if user A made changes before it refreshed I want to give them a data migration pop up to prevent blowing away User B's changed</p>\n\n<p>--User B Made a Conflicting Change while you are editing this record\n\"UserB: FirstName -> Bob\" [Take]\n\"UserA: FirstName -> Robert\" [Keep]</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>We want to have one socket per browser rather than one per tab in a browser. How can we achieve it? I read about shared web workers which was promising. A reference for that too is appreciated. Unfortunately shared web workers are  not yet implemented by mozilla or internet explorer to the best of my knowledge. So what to do in this case ? We are working on node.js on server side.</p>\n",
            "last_activity_date": 1403325224,
            "question_id": 9554896,
            "score": 20,
            "tags": [
                "javascript",
                "html5",
                "node.js",
                "websocket",
                "web-worker"
            ],
            "title": "Sharing websocket across browser tabs?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>try </p>\n\n<pre><code>$.post('urpage.php',{},\nfunction(data) {\nwindow.open('page.php?data=data')\n});\n</code></pre>\n\n<p>and have page.php show whatever data was supposed to be</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use the write()-Method of the Popup's document to put your markup there:</p>\n\n<pre><code>$.post(url, function (data) {\n    var win=window.open('about:blank');\n    with(win.document)\n    {\n      open();\n      write(data);\n      close();\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 35
                },
                {
                    "body": "<p>If you dont need a feedback about the requested data and also dont need any interactivity between the opener and the popup, you can post a hidden form into the popup:</p>\n\n<p>Example:</p>\n\n<pre><code>&lt;form method=\"post\" target=\"popup\" id=\"formID\" style=\"display:none\" action=\"https://example.com/barcode/generate\" &gt;\n  &lt;input type=\"hidden\" name=\"packing_slip\" value=\"35592\" /&gt;\n  &lt;input type=\"hidden\" name=\"reference\" value=\"0018439\" /&gt;\n  &lt;input type=\"hidden\" name=\"total_boxes\" value=\"1\" /&gt;\n&lt;/form&gt;\n&lt;script type=\"text/javascript\"&gt;\nwindow.open('about:blank','popup','width=300,height=200')\ndocument.getElementById('formID').submit();\n&lt;/script&gt;\n</code></pre>\n\n<p>Otherwise you could use jsonp. But this works only, if you have access to the other Server, because you have to modify the response.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Accepted answer doesn't work with \"use strict\" as the \"with\" statement throws an error. So instead:</p>\n\n<pre><code>$.post(url, function (data) {\n    var w = window.open('about:blank', 'windowname');\n    w.document.write(data);\n    w.document.close();\n});\n</code></pre>\n\n<p>Also, make sure 'windowname' doesn't have any spaces in it because that will fail in IE :)</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I have a script that on.DocumentReady posts data to another page. That page responds with some HTML encapsulated in one div tag.</p>\n\n<p>My goal is to have this post response/data open in a new window.</p>\n\n<p>Any hints or clues? </p>\n\n<p>Here is the snippet I created from Dr. Mille's advice.</p>\n\n<pre><code> &lt;script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js\"&gt;&lt;/script&gt;\n &lt;script type=\"text/javascript\"&gt;\n$(document).ready(function() {\nvar packslip_id = 35592;\nvar po_no = 0018439;\nvar  box_no = 1;\n    $.post(\"https://example.com/barcode/generate\", { packing_slip: packslip_id, reference: po_no, total_boxes: box_no}, \n    function (data) {\n        alert(data);\n        var win=window.open('about:blank');\n        with(win.document)\n        {\n            open();\n            write(data);\n            close();\n        }\n    });\n });\n</code></pre>\n\n<p></p>\n",
            "last_activity_date": 1398833412,
            "question_id": 3825078,
            "score": 20,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Jquery post, response in new window"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I tried:</p>\n\n<pre><code>&lt;input id=\"btnTest\" type=\"button\" value=\"button\" /&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    $(document).ready( function() {\n      $('#btnTest').click( function() {\n        $.ajax({\n          type: \"POST\", \n          url: \"/Login/Test\",\n          data: { ListID: '1', ItemName: 'test' },\n          dataType: \"json\",\n          success: function(response) { alert(response); },\n          error: function(xhr, ajaxOptions, thrownError) { alert(xhr.responseText); }\n        });\n      });\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>and C#:</p>\n\n<pre><code>[HttpPost]\npublic ActionResult Test(string ListID, string ItemName)\n{\n    return Content(ListID + \" \" + ItemName);\n}\n</code></pre>\n\n<p>It worked. Remove <code>contentType</code> and set <code>data</code> without double quotes.</p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>If you have trouble with caching ajax you can turn it off:</p>\n\n<pre><code>$.ajaxSetup({cache: false});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm passing two string parameters from a jQuery ajax call to an MVC controller method, expecting a json response back. I can see that the parameters are populated on the client side but the matching parameters on the server side are null.</p>\n\n<p>Here is the javascript:</p>\n\n<pre><code>$.ajax({  \n  type: \"POST\",  \n  contentType: \"application/json; charset=utf-8\",  \n  url: \"List/AddItem\",  \n  data: \"{ ListID: '1', ItemName: 'test' }\",  \n  dataType: \"json\",  \n  success: function(response) { alert(\"item added\"); },  \n  error: function(xhr, ajaxOptions, thrownError) { alert(xhr.responseText); }\n});\n</code></pre>\n\n<p>Here is the controller method:</p>\n\n<pre><code>Function AddItem(ByVal ListID As String, ByVal ItemName As String) As JsonResult\n   'code removed for brevity\n   'ListID is nothing and ItemName is nothing upon arrival.\n   return nothing\nEnd Function\n</code></pre>\n\n<p>What am I doing wrong?</p>\n",
            "last_activity_date": 1400765522,
            "question_id": 2002163,
            "score": 20,
            "tags": [
                "javascript",
                "jquery",
                "asp.net-mvc",
                "ajax"
            ],
            "title": "jquery Ajax call - data parameters are not being passed to MVC Controller action"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Unfortunately, there is no way to control WHEN the garbage collection takes place but with the proper formation of objects, you CAN control how quickly and cleanly it happens. Take a look at <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management#Garbage_collection\" rel=\"nofollow\">these documents on Mozilla Dev Net</a>.</p>\n\n<blockquote>\n  <p>This algorithm assumes the knowledge of a set of objects called roots\n  (In JavaScript, the root is the global object). Periodically, the\n  garbage-collector will start from these roots, find all objects that\n  are referenced from these roots, then all objects referenced from\n  these, etc. Starting from the roots, the garbage collector will thus\n  find all reachable objects and collect all non-reachable objects.</p>\n  \n  <p>This algorithm is better than the previous one since \"an object has\n  zero reference\" leads to this object being unreachable. The opposite\n  is not true as we have seen with cycles.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Why not keep references to all your objects until you want them to be GC'd?</p>\n\n<pre><code>var delayed_gc_objects = [];\nfunction delayGC(obj) { // keeps reference alive\n    return delayed_gc_objects[delayed_gc_objects.length] = obj;\n}\nfunction resumeGC() { // kills references, letting them be GCd\n    delayed_gc_objects.length = 0;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><a href=\"http://www.codesandscripts.com/2014/06/javascript-and-garbage-collection.html\">Garbage collection in javascript reference</a></p>\n\n<p>Javascript doesn't have explicit memory mangament, it's the browser which decides when to clean it up. Sometimes it may happen that you experience unsmooth rendering of JavaScript due to a garbage collection pause.</p>\n\n<p>There are many techniques that you can apply to overcome glitches caused by garbage collection (GC). More you apply more you explore. Suppose you have a game written in JavaScript , and every second you are creating a new object then its obvious that at after certain amount of time GC will occur to make further space for your application.</p>\n\n<p>For real time application like games, which requires lot of space the simplest thing you can do is to reuse the same memory. It depends on you how you structure your code. If it generates lots of garbage then it might give choppy experience.</p>\n\n<p><strong>By using simple procedures:</strong> This is well know that new keyword indicates allocation. Wherever possible you can try to reuse the same object by each time by adding or modifying properties. This is also called <strong>recycling of object</strong></p>\n\n<p><strong>In case of Arrays</strong>, assigning [] is often used to clear array, but you should keep in mind that it also creates a new array and garbages the old one. To reuse the same block you should use <code>arr.length = 0</code> This has the same effect but it reuses the same array object instead of creating new one.</p>\n\n<p><strong>In case of functions</strong>: Sometimes our program needed to call a specific function more time or on certain intervals by using setInterval or setTimeout.</p>\n\n<pre><code>ex: setTimeout(function() { doSomething() }, 10);\n</code></pre>\n\n<p>You can optimize the above code by assigning the function to a permanent variable rather than spawning each time at regular intervals.</p>\n\n<pre><code>    ex : var myfunc = function() { doSomething() }\n    setTimeout(myfunc, 10);\n</code></pre>\n\n<p>Other possible thing is that, the array slice() method returns a new array (based on a range in the original array,that can remain untouched), string's substr also returns a new string (based on a range of characters in the original string, that can remain untouched), and so on. Calling these functions creates garbage if not reutilized properly.</p>\n\n<p>To avoid garbage completely in JavaScript is very difficult, you could say impossible. Its depends, how you reuse the objects and variables to avoid garbage. If your code is well structured and optimized you can minimize the overhead.</p>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>you can perform some changes to improve your memory use, like:</p>\n\n<ol>\n<li>don't set variables on loops</li>\n<li>avoid using of global variables and functions. they will take a piece of memory until you get out</li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JavaScript is a garbage-collected language, meaning that the execution environment is responsible for managing the memory required during code execution. \nThe most popular form of garbage collection for JavaScript is called mark-and-sweep.\nA second, less-popular type of garbage collection is reference counting. The idea is that every value keeps track of how many references are made to it</p>\n\n<p>GC follows these algo, even if you manage to trigger the GC, it will not be guaranteed that it will run immediately, you are only marking it</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there any way to control when Javascript performs garbage collection? I would like to enable it to perform garbage collection at certain times to ensure the smooth operation of my web site</p>\n",
            "last_activity_date": 1409810538,
            "question_id": 18800440,
            "score": 19,
            "tags": [
                "javascript",
                "garbage-collection"
            ],
            "title": "Javascript and Garbage collection"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I imagine the best way is to use a <strong><code>regexp</code></strong> to search what numeric characters should be changed via adding a <strong><code>class name</code></strong> to the div that needs a different numeric set.</p>\n\n<p>You can do this using jQuery fairly easy.</p>\n\n<p><a href=\"http://jsfiddle.net/YHbP8/\" rel=\"nofollow\"><strong>jsfiddle DEMO</strong></a></p>\n\n<hr>\n\n<p><strong>EDIT:</strong> And if you don't want to use a variable, then see this revised demo:</p>\n\n<p><a href=\"http://jsfiddle.net/8XUfW/\" rel=\"nofollow\"><strong>jsfiddle DEMO 2</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can try this: \nThis is CSS source code:   </p>\n\n<pre><code>@font-face\n {\n   font-family: A1Tahoma;\n    src: url(yourfont.eot) format('eot')\n    , url(yourfont.ttf) format('truetype')\n   , url(yourfont.woff) format('woff')\n    , url(yourfont.svg) format('svg');\n}\n\np{font-family:A1Tahoma; font-size:30px;}  \n</code></pre>\n\n<p>And this is HTML code:  </p>\n\n<pre><code>&lt;p&gt;\u0633\u0644\u0627\u0645 \u0628\u0647 \u0647\u0645\u0647&lt;/p&gt;\n\n&lt;p&gt;1234567890&lt;/p&gt;  \n</code></pre>\n\n<p>And finally you will see your result.remember that 4 font types use for any browser such as IE,FIREFOX and so on.<br>\n\"salam reza ,to mituni in karo anjam bedi ta un fonte dekhaheto be site ezafe koni.\"</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Here is an approach with code shifting:</p>\n\n<pre><code>// Eastern Arabic (officially \"Arabic-Indic digits\")\n\"0123456789\".replace(/\\d/g, function(v) {\n    return String.fromCharCode(v.charCodeAt(0) + 0x0630);\n});  // \"\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\"\n\n// Persian variant (officially \"Eastern Arabic-Indic digits (Persian and Urdu)\")\n\"0123456789\".replace(/\\d/g, function(v) {\n    return String.fromCharCode(v.charCodeAt(0) + 0x06C0);\n});  // \"\u06f0\u06f1\u06f2\u06f3\u06f4\u06f5\u06f6\u06f7\u06f8\u06f9\"\n</code></pre>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/bKEbR/\">http://jsfiddle.net/bKEbR/</a></p>\n\n<p>Here we use Unicode shift, since numerals in any Unicode group are placed in the same order as in latin group (i.e. <code>[0x0030 ... 0x0039]</code>). So, for example, for Arabic-Indic group shift is <code>0x0630</code>.</p>\n\n<p><em>Note,</em> it is difficult for me to distinguish Eastern characters, so if I've made a mistake (there are many different groups of Eastern characters in Unicode), you could always calculate the shift using any online Unicode table. You may use either official <a href=\"http://www.unicode.org/charts/\">Unicode Character Code Charts</a>, or <a href=\"http://www.utf8-chartable.de/\">Unicode Online Chartable</a>.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>I have created a jquery plugin that can convert Western Arabic numbers to Eastern ones (Persian only). But it can be extended to convert a number to any desired numeral system. My jQuery plugin has two advantages:</p>\n\n<ol>\n<li>Detect and convert numbers properly in child nodes.</li>\n<li>Detect and convert point characters appropriately.</li>\n</ol>\n\n<p>You can clone this plugin from <a href=\"https://github.com/aghaomid/persianumber\" rel=\"nofollow\">github</a>.\nMy plugin code:</p>\n\n<pre><code>(function( $ ){\n  $.fn.persiaNumber = function() {\n      var groupSelection = this;\n      for(i=0; i&lt; groupSelection.length ; i++){\n          var htmlTxt = $(groupSelection[i]).html();\n          var trueTxt = convertDecimalPoint(htmlTxt);\n          trueTxt = convertToPersianNum(trueTxt);\n          $(groupSelection[i]).html(trueTxt);\n      }\nfunction convertToPersianNum(htmlTxt){\n          var otIndex = htmlTxt.indexOf(\"&lt;\");\n          var ctIndex = htmlTxt.indexOf(\"&gt;\");\n          if(otIndex == -1 &amp;&amp; ctIndex == -1 &amp;&amp; htmlTxt.length &gt; 0){\n            var trueTxt = htmlTxt.replace(/1/gi, \"\u06f1\").replace(/2/gi, \"\u06f2\").replace(/3/gi, \"\u06f3\").replace(/4/gi, \"\u06f4\").replace(/5/gi, \"\u06f5\").replace(/6/gi, \"\u06f6\").replace(/7/gi, \"\u06f7\").replace(/8/gi, \"\u06f8\").replace(/9/gi, \"\u06f9\").replace(/0/gi, \"\u06f0\");\n            return trueTxt;\n          }\n              var tag = htmlTxt.substring(otIndex,ctIndex + 1);\n              var str = htmlTxt.substring(0,otIndex);\n              str = convertDecimalPoint(str);\n              str = str.replace(/1/gi, \"\u06f1\").replace(/2/gi, \"\u06f2\").replace(/3/gi, \"\u06f3\").replace(/4/gi, \"\u06f4\").replace(/5/gi, \"\u06f5\").replace(/6/gi, \"\u06f6\").replace(/7/gi, \"\u06f7\").replace(/8/gi, \"\u06f8\").replace(/9/gi, \"\u06f9\").replace(/0/gi, \"\u06f0\");\n              var refinedHtmlTxt = str + tag;\n              var htmlTxt = htmlTxt.substring(ctIndex + 1, htmlTxt.length);\n              if(htmlTxt.length &gt; 0 &amp;&amp; otIndex != -1 || ctIndex != -1){\n                  var trueTxt = refinedHtmlTxt;\n                  var trueTxt =  trueTxt + convertToPersianNum(htmlTxt); \n              }else{\n                    return refinedHtmlTxt+ htmlTxt;\n              }\n              return trueTxt;         \n\n    }\nfunction convertDecimalPoint(str){\n    for(j=1;j&lt;str.length - 1; j++){\n        if(str.charCodeAt(j-1) &gt; 47 &amp;&amp;  str.charCodeAt(j-1) &lt; 58 &amp;&amp; str.charCodeAt(j+1) &gt; 47 &amp;&amp;  str.charCodeAt(j+1) &lt; 58 &amp;&amp; str.charCodeAt(j) == 46)\n            str = str.substring(0,j) + '\u066b' + str.substring(j+1,str.length);\n    }\n    return str;\n}\n};\n})( jQuery );\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/VPWmq/2/\" rel=\"nofollow\">http://jsfiddle.net/VPWmq/2/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have been working on a general web page localization technique that does more than just numbers (its similar to .po files)</p>\n\n<p>The localization files are simple (the strings <em>can</em> contain html if needed)</p>\n\n<pre><code>/* Localization file - save as document_url.lang.js ... index.html.en.js: */\nitems=[\n{\"id\":\"string1\",\"value\":\"Localized text of string1 here.\"},\n{\"id\":\"string2\", \"value\":\"\u06f0 \u06f1 \u06f2 \u06f3 \u06f4 \u06f5 \u06f6 \u06f7 \u06f8 \u06f9 \"}\n];\nrtl=false; /* set to true for rtl languages */\n</code></pre>\n\n<p>This format is useful to separate out for translators (or mechanical turk)</p>\n\n<p>and a basic page template</p>\n\n<pre><code>&lt;html&gt;&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;\n&lt;head&gt;&lt;title&gt;My title&lt;/title&gt;\n&lt;style&gt;.txt{float:left;margin-left:10px}&lt;/style&gt;\n&lt;/head&gt;\n&lt;body onload='setLang()'&gt;\n&lt;div id=\"string1\" class=\"txt\"&gt;This is the default text of string1.&lt;/div&gt;\n&lt;div id=\"string2\" class=\"txt\"&gt;0 1 2 3 4 5 6 7 8 9 &lt;/div&gt;\n&lt;/body&gt;&lt;/html&gt;\n&lt;script&gt;\n   function setLang(){\n      for(var i=0;i&lt;items.length;i++){\n         term=document.getElementById(items[i].id)\n         if(term)term.innerHTML=items[i].value\n         if(rtl){  /* for rtl languages */ \n            term.style.styleFloat=\"right\"\n            term.style.cssFloat=\"right\"\n            term.style.textAlign=\"right\"\n         }\n      }\n   }\n   var lang=navigator.userLanguage || navigator.language;\n   var script=document.createElement(\"script\");\n   script.src=document.URL+\"-\"+lang.substring(0,2)+\".js\"\n   var head = document.getElementsByTagName('head')[0]\n   head.insertBefore(script,head.firstChild)\n&lt;/script&gt;\n</code></pre>\n\n<p>I tried to keep it pretty simple, yet cover as many locales as possible so additional css is likely required (I have to admit a lack of exposure to rtl languages, so many more styles may need to be set)</p>\n\n<p>I do have font checking code that would be useful if you know what fonts support your character codes well</p>\n\n<pre><code>function hasFont(f){\n    var s=document.createElement(\"span\")\n    s.style.fontSize=\"72px\"\n    s.innerHTML=\"MWMWM\"\n    s.style.visibility=\"hidden\"\n    s.style.fontFamily=[(f==\"monospace\")?'':'monospace','sans-serif','serif']\n    document.body.appendChild(s)\n    var w=s.offsetWidth\n    s.style.fontFamily=[f,'monospace','sans-serif','serif']\n    document.body.lastChild=s\n    return s.offsetWidth!=w\n}\n</code></pre>\n\n<p>usage: <code>if(hasFont(\"myfont\"))myelement.style.fontFamily=\"myfont\"</code></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One has to decide if this is a question of appearance or of transformation.  One must also decide if this is a question involving character-level semantics or numeral representations.  Here are my thoughts:</p>\n\n<hr>\n\n<p>The question would have entirely different semantics, if we had a situation where Unicode had not sparated out the codes for numeric characters.\nThen, displaying the different glyphs as appropriate would simply be a matter of using the appropriate font.  On the other hand, it would not have been possible to simply write out the different characters as I did below without changing fonts. (The situation is not exactly perfect as fonts do not necessarily cover the whole range of the 16-bit Unicode set, let alone the 32-bit Unicode set.)</p>\n\n<pre><code>9, \u0669 (Arabic), \u06f9 (Urdu), &amp;#29590; (Chinese, complex), \u0e59 (Thai), \u0bef (Tamil) etc.  \n</code></pre>\n\n<p>Now, assuming we accept Unicode semantics i.e. that  '9' ,'\u0669', and '\u06f9' are <em>distinct</em> characters,   we may conclude that the question is not about appearance (something that would have been in the purview of CSS), but of transformation -- a few thoughts about this later, for now let us assume this is the case. \nWhen focusing on character-level semantics, the situation is not too dissimilar with what happens with alphabets and letters.  For instance, Greek '\u03b1' and Latin 'a' are considered distinct, even though the Latin alphabet is nearly identical to the Greek alphabet used in Euboea. Perhaps even more dramatically, the corresponding capital variants, '\u0391' (Greek) and 'A' (Latin) are visually identical in practically all fonts supporting both scripts, yet distinct as far as Unicode is concerned.  </p>\n\n<p>Having stated the ground rules, let us see how the question can be answered by ignoring them, and in particular ignoring (character-level) Unicode semantics.</p>\n\n<p><strong>(Horrible, nasty and non-backwards compatible) Solution:</strong>   Use fonts that map '0' to '9' to the desired glyphs.  I am not aware of any such fonts.  You would have to use @font-face and some font that has been appropriately hacked to do what you want.  </p>\n\n<p>Needless to say, I am not particularly fond of this solution.  However, it is the only simple solution I am aware of that does what the question asks \"without changing character codes\" on either the server or the client side.  (Technically speaking the Cufon solution I propose below does not change the character codes either, but what it does, drawing text into canvases is vastly more complex and also requires tweaking open-source code).   </p>\n\n<hr>\n\n<p><strong>Note:</strong>  Any transformational solution i.e. any solution that changes the DOM and replaces characters in the range '0' to '9' to, say, their Arabic equivalents will break code that expects numerals to appear in their original form in the DOM.  This problem is, of course,  worst when discussing forms and inputs.</p>\n\n<p>An example of an answer taking the transformational approach is would be:</p>\n\n<pre><code>  $(\"[lang='fa']\").find(\"*\").andSelf().contents().each(function() {\n      if (this.nodeType === 3) \n     {\n        this.nodeValue = this.nodeValue.replace(/\\d/g, function(v) {\n            return String.fromCharCode(v.charCodeAt(0) + 0x0630);\n       });\n    }\n });\n</code></pre>\n\n<p>Note:    Code taken from  VisioN's second jsFiddle.  If this is the only part of this answer that you like, make sure you upvote VisioN's answer, not mine!!! :-)</p>\n\n<p>This has two problems:</p>\n\n<ol>\n<li>It messes with the DOM and as a result may break code that used to work assuming it would find numerals in the \"standard\" form (using digits '0' to '9').   See the problem here: <a href=\"http://jsfiddle.net/bKEbR/10/\" rel=\"nofollow\">http://jsfiddle.net/bKEbR/10/</a>    For instance, if you had a field containing the sum of some integers the user inputs, you might be in for a surprise when you try to get its value...</li>\n<li>It does not address the issue of what goes on inside <code>input</code> (and <code>textarea</code>) elements.  If an input field is initialised with, say, \"42\", it will retail that value.  This can be fixed easily, but then there is the issue of actual input... One may decide to change characters as they come, convert the values when they changes and so on and so forth. If such conversion is made then both the client side and the server side will need to be prepared to deal with different kinds of numeral.  What comes out of the box in Javascript, jQuery and even Globalize (client-side), and ASP.NET, PHP etc. (server-side)  will break if fed with numerals in non-standard formats ...  </li>\n</ol>\n\n<p>A slightly more comprehensive solution (taking care also of input/textarea elements, both their initial values and user input) might be:</p>\n\n<pre><code>//before the DOM change, test1 holds a numeral parseInt can understand\nalert(\"Before: test holds the value:\" +parseInt($(\"#test1\").text()));\n\nfunction convertNumChar(c) {\n   return String.fromCharCode(c.charCodeAt(0) + 0x0630);\n}\n\nfunction convertNumStr(s) {\n    return s.replace(/\\d/g, convertNumChar);\n}\n\n//the change in the DOM\n$(\"[lang='fa']\").find(\"*\").andSelf().contents()\n    .each(function() {\n        if (this.nodeType === 3)        \n           this.nodeValue = convertNumStr(this.nodeValue);      \n    })\n    .filter(\"input:text,textarea\")\n    .each(function() {\n         this.value = convertNumStr(this.value)\n     })\n     .change(function () {this.value = convertNumStr(this.value)});      \n\n//test1 now holds a numeral parseInt cannot understand\nalert(\"After: test holds the value:\" +parseInt($(\"#test1\").text()))\n</code></pre>\n\n<p>The entire jsFiddle can be found here: <a href=\"http://jsfiddle.net/bKEbR/13/\" rel=\"nofollow\">http://jsfiddle.net/bKEbR/13/</a></p>\n\n<p>Needless to say, this only solves the aforementioned problems partially.  Client-side and/or server-side code will have to recognise the non-standard numerals and convert them appropriately either to the standard format or to their actual values.</p>\n\n<p>This is not a simple matter that a few lines of javascript will solve.  And this is but the simplest case of such possible conversion since there is a simple character-to-character mapping that needs to be applied to go from one form of numeral to the other.</p>\n\n<hr>\n\n<p>Another go at an appearance-based approach:</p>\n\n<p><strong>Cufon-based Solution (Overkill, Non-Backwards Compatible (requires canvas), etc.):</strong>  One could relatively easily tweak a library like Cufon to do what is envisaged.  Cufon can do its thing  and draw glyphs on a canvas object, except that the tweak will ensure that when elements have a certain property, the desired glyphs will be used instead of the ones normally chosen.  Cufon and other libraries of the kind tend to add elements to the DOM and alter the appearance of existing elements but not touch their text, so the problems with the transformational approaches should not apply.  In fact it is interesting to note that while (tweaked) Cufon provides a clearly transformational apprroach as far as the overall DOM is concerned, it is an appearance-based solution  as far as its mentality goes; I would call it a hybrid solution.</p>\n\n<p><strong>Alternative Hybrid-Solution:</strong>  Create new DOM elements with the arabic content, hide the old elements but leave their ids and content intact.  Synchronize the arabic content elements with their corresponding, hidden, elements. </p>\n\n<hr>\n\n<p>Let's try to think outside the box (the box being current web standards).</p>\n\n<p>The fact that certain characters are unique does not mean they are unrelated.  Moreover, it does not necessarily mean that their difference is one of appearance.  For instance, 'a' and 'A' are the same letter; in some contexts they are considered to be the same and in others to be different.  Having, the distinction in Unicode (and ASCII and ISO-Latin-1 etc. before it) means that some effort is required to overcome it.\nCSS offers a quick and easy way for changing the case of letters.  For instance, <code>body {text-transform:uppercase}</code> would turn all letters in the text in the body of the page into upper case.  Note that this is also a case of appearance-change rather than transformation: the DOM of the body element does not change, just the way it is rendered.</p>\n\n<p><strong>Note:</strong> If CSS supported something like <code>numerals-transform: 'ar'</code> that would probably have been the ideal answer to the question as it was phrased.  </p>\n\n<p>However, before we rush to tell the CSS committee to add this feature, we may want to consider what that would mean.  Here, we are tackling a tiny little problem, but they have to deal with the big picture.</p>\n\n<p>Output:\n  Would this numerals-transform feature work allow '10' (2-characters) to appear as &#21313;(Chinese, simple),  &#25342; (Chinese, complex), X (Latin) (all 1-character) and so on if instead of 'ar', the appropriate arguments were given? </p>\n\n<p>Input:\n  Would this numerals-transform feature change '&#21313;'(Chinese, simple) into its Arabic equivalent, or would it simply target '10'?   Would it somehow cleverly detect that \"MMXI\" (Latin numeral for 2012) is a number and not a word and convert it accordingly?</p>\n\n<p>The question of number representation is not as simple as  one might imagine just looking at this question.</p>\n\n<hr>\n\n<p>So, where does all this leave us:</p>\n\n<ol>\n<li>There is no simple presentation-based solution.   If one appears in the future, it will not be backwards compatible.  </li>\n<li>There can be a transformational \"solution\" here and now, but even if this is made to work also with form elements as I have done (http://jsfiddle.net/bKEbR/13/)  there need  to be server-side and client-side awareness of the non-standard format used. </li>\n<li>There may be complex hybrid solutions.  They are complex but offer some of the advantages of the presentation-based approaches in  some cases.</li>\n</ol>\n\n<p>A CSS solution would be nice, but actually the problem is big and complex when one looks at the big picture which involves other numeric systems (with less trivial conversions from and to the standard system), decimal points,signs etc.</p>\n\n<p>At the end of the day, the solution I see as realistic and backwards compatible would be an extension of Globalize (and server-side equivalents) possibly with some additional code to take care of user input.  The idea is that this is not a problem at the character-level (because once you consider the big picture it is not) and that it will have to be treated in the same way that differences with thousands and decimal separators have been dealt with: as formatting/parsing issues.</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>How can I set the variant of <a href=\"http://en.wikipedia.org/wiki/Eastern_Arabic_numerals\" rel=\"nofollow\">Arabic numeral</a> without changing character codes ?</p>\n\n<pre><code>Eastern Arabic      \u06f0   \u06f1   \u06f2   \u06f3   \u0666   \u0665   \u0664   \u06f7   \u06f8   \u06f9\nPersian variant     \u06f0   \u06f1   \u06f2   \u06f3   \u06f4   \u06f5   \u06f6   \u06f7   \u06f8   \u06f9\nWestern Arabic      0   1   2   3   4   5   6   7   8   9 \n(And perhaps any other in use numeral system if any)\n</code></pre>\n\n<p>Here is a sample code:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div lang=\"fa\"&gt;0123456789&lt;/div&gt;\n&lt;div lang=\"ar\"&gt;0123456789&lt;/div&gt;\n&lt;div lang=\"en\"&gt;0123456789&lt;/div&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>How can i do this using only client-side technologies (<code>HTML</code>,<code>CSS</code>,<code>JS</code>)?<br>\nThe solution should have no negative impact on page's SEO score.</p>\n\n<p>Note that in Windows text boxes (e.g. Run) numbers are displayed correctly according to language of surrounding text.</p>\n\n<p>See also: <a href=\"http://stackoverflow.com/q/13899793/752603\">Numbers localization in desktop applications</a></p>\n",
            "last_activity_date": 1380713807,
            "question_id": 13757310,
            "score": 19,
            "tags": [
                "javascript",
                "html",
                "css",
                "localization",
                "cross-browser"
            ],
            "title": "Numbers localization in Web applications"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I guess the standard is written by the W3C.</p>\n\n<p><a href=\"http://www.w3.org/TR/REC-DOM-Level-1/\" rel=\"nofollow\">http://www.w3.org/TR/REC-DOM-Level-1/</a></p>\n\n<p>You may find also the standards for DOM Level 2 and 3 ;)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The DOM is actually a separate thing to JavaScript. The DOM can be accessed from other languages, such as VBScript in IE. And general-purpose programming languages like Java, Python, PHP etc have their own non-browser-based DOM libraries.</p>\n\n<p>The basic DOM operations that work on both HTML and general XML documents can be found in <a href=\"http://www.w3.org/TR/DOM-Level-3-Core/\">DOM Core</a>; HTML documents get extra methods defined in <a href=\"http://www.w3.org/TR/DOM-Level-2-HTML/\">DOM HTML</a>. These are the latest \u2018levels\u2019 of support defined by W3; not all browsers support everything in DOM Level 3 Core. But <a href=\"http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html\">DOM Level 1 Core</a> is pretty much solid.</p>\n\n<p>Confusingly, DOM HTML has further developed, but not in its own DOM specification. Instead it is part of HTML5. This standardises a lot of extensions that were already widely supported in browsers, like <code>innerHTML</code>, and adds a bunch more stuff that isn't widely implemented yet (and may be changed before the document is standardised).</p>\n\n<p>The DOM is only the document object model: it specifies what you get inside the <code>document</code> object. It doesn't specify other browser features, like the contents of <code>window</code>. The browser object model (BOM) was previously unstandardised; HTML5 is making the first effort to properly document it.</p>\n\n<p>HTML5 also specifies parts of the browser object model (BOM) that were not previously standardised. Stuff like <code>window</code> that isn't directly connected to the <code>document</code> content.</p>\n\n<p>The upshot of all this is that there isn't a single document you can go to that will tell you everything about what methods and properties you have available to you in web scripting. Some day DOM Core plus HTML5 will cover it all, but today HTML5 includes a lot you can't rely on, and isn't exactly the most readable of guides even by the standards of standards documents. So yes, I'm afraid you're going to have to continue to check MDC and MSDN for popular support.</p>\n\n<blockquote>\n  <p>Is 'Image' a global variable, or is it a property of 'window' the global object?</p>\n</blockquote>\n\n<p><code>Image</code> is specified by HTML5 to be a member of the <code>window</code> object, which, being the global context, allows you to refer to it as just <code>Image</code>... that's not <em>quite</em> the same thing as being a global variable, but it's close enough for most.</p>\n\n<p>It is a constructor-function that returns a DOM object implementing the <code>HTMLImageElement</code> interface (from DOM Level 1 HTML, extended in HTML5). It was originally introduced in Netscape 3.0 as a mechanism for pre-loading images; plus already-created images could be accessed from <code>document.images</code> to change their <code>src</code>. Today <code>new Image()</code> doesn't do anything different to <code>document.createElement('img')</code>.</p>\n\n<blockquote>\n  <p>I also want to read about the 'src' property, since it has non-standard behavior - when this property is assigned to, the image is reloaded.</p>\n</blockquote>\n\n<p>Well the image won't be reloaded necessarily, but it may cause the <code>load</code> event to be fired on some browsers. Unfortunately this isn't standardised (even in HTML5 as far as I can see). IE, Firefox and Opera fire <code>load</code> on every <code>src</code> set (even if the <code>src</code> is not changed) whereas WebKit (Chrome/Safari) only ever fires it on the initial image load.</p>\n\n<p>This sort of thing is why there are sites with big tables of differing browser behaviours, and why we still have to actively test on different browsers.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>New fave: <a href=\"http://devdocs.io/dom/\" rel=\"nofollow\">http://devdocs.io/dom/</a>\n(Devdocs.io in general is pretty awesome for lots of reference material)</p>\n\n<p>(older) I really like this DOM reference: <a href=\"http://krook.org/jsdom/\" rel=\"nofollow\">http://krook.org/jsdom/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I sometimes use <a href=\"http://www.javascriptkit.com/\" rel=\"nofollow\">javascriptkit</a> and I find it very useful.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>For newbies, this will really help with understanding what you are working with and separating the concepts of:</p>\n\n<ul>\n<li><p>Javascript (a language used to access the DOM, other scripting languages can be used), </p></li>\n<li><p>an HTML or XML document (the markup that forms the basis of a web page) </p></li>\n<li><p>and the DOM (a model of the document that serves as an API allowing you to manipulate the structure and contents of the document).  </p></li>\n</ul>\n\n<p><a href=\"http://css-tricks.com/dom/\" rel=\"nofollow\">http://css-tricks.com/dom/</a></p>\n\n<p>It also links to these informative documents:  </p>\n\n<p>W3C: <a href=\"http://www.w3.org/TR/DOM-Level-2-Core/introduction.html\" rel=\"nofollow\">What is the Document Object Model?</a><br>\nMDN: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/DOM_Reference/Introduction\" rel=\"nofollow\">Introduction - Document Object Model</a><br>\nWikipedia: <a href=\"http://en.wikipedia.org/wiki/Document_Object_Model\" rel=\"nofollow\">Document Object Model</a></p>\n\n<p>Knowing how the DOM developed in a historical context also helps in understanding its structure and how to work with it and this is also covered in the above links.  </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am a C/C++ programmer, and I am currently playing with some Javascript code, and I am having problems finding where the documentation is for the standard Javascript libraries that are available in the browser.</p>\n\n<p>Specifically, I am setting an <code>onload</code> callback function on a <code>HTMLImageElement</code>, created with <code>new Image()</code>. I also want to read about the <code>src</code> property, since it has non-standard behavior - when this property is assigned to, the image is reloaded.</p>\n\n<p>Mozilla has some skeleton documentation of the various attributes here: <a href=\"https://developer.mozilla.org/en/DOM/Image\">https://developer.mozilla.org/en/DOM/Image</a>\nThere is no documentation here, only a list of properties. The <code>onload</code> property is not mentioned. The <code>src</code> property is listed but there is no documentation on it.</p>\n\n<p>MSDN has has better documentation: <a href=\"http://msdn.microsoft.com/en-us/library/cc197055(VS.85).aspx\">http://msdn.microsoft.com/en-us/library/cc197055(VS.85).aspx</a>.</p>\n\n<p>My question is 'where are the standard docs'? Is <code>Image()</code> a global variable, or is it a property of <code>window</code> the global object? Who writes the API for <code>window</code> and <code>document</code>? Is there a standard, or does each browser just copy each other?</p>\n",
            "last_activity_date": 1414396505,
            "question_id": 3768606,
            "score": 19,
            "tags": [
                "javascript",
                "api",
                "dom",
                "browser",
                "documentation"
            ],
            "title": "Where is the JavaScript DOM API documented?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I recommend you have a look a the <a href=\"http://jqueryui.com/demos/slider/#range\" rel=\"nofollow\">jQuery UI Slider</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You might try checking out the <a href=\"http://jqueryui.com/demos/slider/#range\" rel=\"nofollow\">jQuery UI Slider</a></p>\n\n<p>The link above demonstrates the \"range\" selector feature, which is what you're looking for, but there are lots of other ways to use it as well. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<h2>Overview</h2>\n\n<p><a href=\"http://jqueryui.com/demos/slider/#range\">jQuery UI Slider</a> widget extension for a <code>rangeDrag</code> feature. This feature allows the user to drag the entire range at once, rather than having to drag the handles to move the range.</p>\n\n<h3>Code</h3>\n\n<p><a href=\"https://gist.github.com/3758297\">https://gist.github.com/3758297</a></p>\n\n<pre><code>(function( $, undefined ) {\n\n$.widget(\"ui.dragslider\", $.ui.slider, {\n\n    options: $.extend({},$.ui.slider.prototype.options,{rangeDrag:false}),\n\n    _create: function() {\n      $.ui.slider.prototype._create.apply(this,arguments);\n      this._rangeCapture = false;\n    },\n\n    _mouseCapture: function( event ) { \n      var o = this.options;\n\n      if ( o.disabled ) return false;\n\n      if(event.target == this.range.get(0) &amp;&amp; o.rangeDrag == true &amp;&amp; o.range == true) {\n        this._rangeCapture = true;\n        this._rangeStart = null;\n      }\n      else {\n        this._rangeCapture = false;\n      }\n\n      $.ui.slider.prototype._mouseCapture.apply(this,arguments);\n\n      if(this._rangeCapture == true) {  \n          this.handles.removeClass(\"ui-state-active\").blur();   \n      }\n\n      return true;\n    },\n\n    _mouseStop: function( event ) {\n      this._rangeStart = null;\n      return $.ui.slider.prototype._mouseStop.apply(this,arguments);\n    },\n\n    _slide: function( event, index, newVal ) {\n      if(!this._rangeCapture) { \n        return $.ui.slider.prototype._slide.apply(this,arguments);\n      }\n\n      if(this._rangeStart == null) {\n        this._rangeStart = newVal;\n      }\n\n      var oldValLeft = this.options.values[0],\n          oldValRight = this.options.values[1],\n          slideDist = newVal - this._rangeStart,\n          newValueLeft = oldValLeft + slideDist,\n          newValueRight = oldValRight + slideDist,\n          allowed;\n\n      if ( this.options.values &amp;&amp; this.options.values.length ) {\n        if(newValueRight &gt; this._valueMax() &amp;&amp; slideDist &gt; 0) {\n          slideDist -= (newValueRight-this._valueMax());\n          newValueLeft = oldValLeft + slideDist;\n          newValueRight = oldValRight + slideDist;\n        }\n\n        if(newValueLeft &lt; this._valueMin()) {\n          slideDist += (this._valueMin()-newValueLeft);\n          newValueLeft = oldValLeft + slideDist;\n          newValueRight = oldValRight + slideDist;\n        }\n\n        if ( slideDist != 0 ) {\n          newValues = this.values();\n          newValues[ 0 ] = newValueLeft;\n          newValues[ 1 ] = newValueRight;\n\n          // A slide can be canceled by returning false from the slide callback\n          allowed = this._trigger( \"slide\", event, {\n            handle: this.handles[ index ],\n            value: slideDist,\n            values: newValues\n          } );\n\n          if ( allowed !== false ) {\n            this.values( 0, newValueLeft, true );\n            this.values( 1, newValueRight, true );\n          }\n          this._rangeStart = newVal;\n        }\n      }\n\n\n\n    },\n\n\n    /*\n    //only for testing purpose\n    value: function(input) {\n        console.log(\"this is working!\");\n        $.ui.slider.prototype.value.apply(this,arguments);\n    }\n    */\n});\n\n})(jQuery);\n</code></pre>\n\n<h3>Example</h3>\n\n<p><a href=\"http://jsfiddle.net/omnosis/Swd9S/\">http://jsfiddle.net/omnosis/Swd9S/</a></p>\n\n<h3>Usage</h3>\n\n<p>HTML</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"js/jquery-1.5.1.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery-ui-1.8.13.custom.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\" src=\"js/jquery.ui.slider.custom.js\"&gt;&lt;/script&gt;\n...\n&lt;div id=\"slider\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>JavaScript</p>\n\n<pre><code>$(function(){\n// Slider\n$('#slider').dragslider({\n    animate: true,   // Works with animation.\n    range: true,     // Must have a range to drag.\n    rangeDrag: true, // Enable range dragging.\n    values: [30, 70]        \n});\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 32
                },
                {
                    "body": "<p>You can try adding the drag + drop triggers to the <code>$('.ui-slider-range')</code> element <br>OR<br> add you own event to the <code>$('.ui-slider-range')</code> element that just trigger the events on the <code>$('.ui-slider-handle')</code> </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can also try <a href=\"http://ghusse.github.com/jQRangeSlider/\" rel=\"nofollow\">jQRangeSlider</a>, take a look at the <a href=\"http://ghusse.github.com/jQRangeSlider/demo.html\" rel=\"nofollow\">demo</a>.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><a href=\"http://refreshless.com/nouislider/\" rel=\"nofollow\">noUiSlider</a> offers this feature. You can use it by setting the <a href=\"http://refreshless.com/nouislider/slider-options#behaviour\" rel=\"nofollow\"><code>behaviour</code>option</a>. It allows for both fixed and user-changeable ranges. There are no dependencies on jQueryUI, and if you prefer Zepto over jQuery: that works too.</p>\n\n<p><img src=\"http://i.stack.imgur.com/1LN42.jpg\" alt=\"enter image description here\"></p>\n\n<p><strong>Disclosure:</strong> I am the plugin author.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<pre><code>&lt;---------[]=====================================[]--------&gt;\n\n0         10                                     90       100\n</code></pre>\n\n<p>I need an input range slider with two handles to select a range, and <strong><em>the ability to drag the range</em></strong> (the equals signs in the above diagram). So, in the above example, start=10 and end=90, and it is dragged left by shifting the entire line between the two handles:</p>\n\n<pre><code>&lt;[]=====================================[]------------------&gt;\n\n0                                       80                 100\n</code></pre>\n\n<p>Now Start is 0 and End is 80, accomplished without dragging the handles.</p>\n\n<p>What library offers this functionality?</p>\n\n<p>Thank you.</p>\n",
            "last_activity_date": 1385819816,
            "question_id": 5955343,
            "score": 18,
            "tags": [
                "javascript",
                "jquery",
                "range",
                "user-input"
            ],
            "title": "Drag the Range of a UI Input Range Slider"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>Math.max.apply(Math, $('.image').map(function(){ return $(this).width(); }).get());\n</code></pre>\n\n<p>Per suggestion, I'll break that down:</p>\n\n<pre><code>$('.image').map(function(){\n   return $(this).width();\n}).get();\n</code></pre>\n\n<p>The above gets a list of all <code>.image</code> divs and converts it into a list of their widths.  So you'll now have something like: <code>[200, 300, 250, 100, 400]</code>.  The <code>.get()</code>, as Felix pointed out, is necessary to get an actual Array instead of a jQuery array.</p>\n\n<p><code>Math.max</code> takes N arguments, so you have to call it as: <code>Math.max(200, 300, 250, 100, 400)</code>, which is what the <code>Math.max.apply</code> piece accomplishes.</p>\n",
                    "is_accepted": true,
                    "score": 51
                },
                {
                    "body": "<p>A not-so-difficult example function to consider; not as elegant as cwolves, but probably easier to follow if you're a beginner.</p>\n\n<pre><code>function getMaxChildWidth(sel) {\n    max = 0;\n    $(sel).children().each(function(){\n        c_width = parseInt($(this).width());\n        if (c_width &gt; max) {\n            max = c_width;\n        }\n    });\n    return max;\n}\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/userdude/rMSuJ/1/\">http://jsfiddle.net/userdude/rMSuJ/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I need to get the max width(just the one width) of the child div in the wrapper div element</p>\n\n<pre><code>&lt;div id=\"wrapper\"&gt;  \n    &lt;div class=\"image\"&gt;&lt;img src=\"images/1.jpg\"&gt;&lt;/div&gt; \n    &lt;div class=\"image\"&gt;&lt;img src=\"images/2.jpg\"&gt;&lt;/div&gt;  \n    &lt;div class=\"image\"&gt;&lt;img src=\"images/3.jpg\"&gt;&lt;/div&gt;  \n    &lt;div class=\"image\"&gt;&lt;img src=\"images/4.jpg\"&gt;&lt;/div&gt;  \n    &lt;div class=\"image\"&gt;&lt;img src=\"images/5.jpg\"&gt;&lt;/div&gt;  \n    &lt;div class=\"image\"&gt;&lt;img src=\"images/6.jpg\"&gt;&lt;/div&gt; \n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1303775369,
            "question_id": 5784388,
            "score": 18,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery get max width of child div&#39;s"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Change 2 to 1 as the first parameter in the splice call when removing the element:</p>\n\n<pre><code>var tmp = playlist.splice(1,1);\nplaylist.splice(2,0,tmp);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could always use the sort method, if you don't know where the record is at present:</p>\n\n<pre><code>playlist.sort(function (a, b) {\n    return a.artist == \"Lalo Schifrin\" \n               ? 1    // Move it down the list\n               : 0;   // Keep it the same\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you know the indexes you could easily swap the elements, with a simple function like this:</p>\n\n<pre><code>function swapElement(array, indexA, indexB) {\n  var tmp = array[indexA];\n  array[indexA] = array[indexB];\n  array[indexB] = tmp;\n}\n\nswapElement(playlist, 1, 2);\n// [{\"artist\":\"Herbie Hancock\",\"title\":\"Thrust\"},\n//  {\"artist\":\"Faze-O\",\"title\":\"Riding High\"},\n//  {\"artist\":\"Lalo Schifrin\",\"title\":\"Shifting Gears\"}]\n</code></pre>\n\n<p>Array indexes are just properties of the array object, so you can swap its values.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>The syntax of <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/splice\"><code>Array.splice</code></a> is:</p>\n\n<pre><code>yourArray.splice(index, howmany, element1, /*.....,*/ elementX);\n</code></pre>\n\n<p>Where:</p>\n\n<ul>\n<li><em>index</em> is the position in the array you want to start removing elements from</li>\n<li><em>howmany</em> is how many elements you want to remove from <em>index</em></li>\n<li><em>element1, ..., elementX</em> are elements you want inserted from position <em>index</em>.</li>\n</ul>\n\n<p>This means that <code>splice()</code> can be used to remove elements, add elements, or replace elements in an array, depending on the arguments you pass.</p>\n\n<p>Note that it returns an array of the removed elements.</p>\n\n<p>Something nice and generic would be:</p>\n\n<pre><code>Array.prototype.move = function (from, to) {\n  this.splice(to, 0, this.splice(from, 1)[0]);\n};\n</code></pre>\n\n<p>Then just use:</p>\n\n<pre><code>var ar = [1,2,3,4,5];\nar.move(0,3);\nalert(ar) // 2,3,4,1,5\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 43
                },
                {
                    "body": "<p>Try this: </p>\n\n<pre><code>playlist = playlist.concat(playlist.splice(1, 1));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you only ever want to move one item from an arbitrary position to the end of the array, this should work:</p>\n\n<pre><code>function toEnd(list, position) {\n    list.push(list.splice(position, 1));\n    return list;\n}\n</code></pre>\n\n<p>If you want to move multiple items from some arbitrary position to the end, you can do:</p>\n\n<pre><code>function toEnd(list, from, count) {\n    list.push.apply(list, list.splice(from, count));\n    return list;\n}\n</code></pre>\n\n<p>If you want to move multiple items from some arbitrary position to some arbitrary position, try:</p>\n\n<pre><code>function move(list, from, count, to) {\n    var args = [from &gt; to ? to : to - count, 0];\n    args.push.apply(args, list.splice(from, count));\n    list.splice.apply(list, args);\n\n    return list;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Say, I have an array that looks like this:</p>\n\n<pre><code>var playlist = [\n    {artist:\"Herbie Hancock\", title:\"Thrust\"},\n    {artist:\"Lalo Schifrin\", title:\"Shifting Gears\"},\n    {artist:\"Faze-O\", title:\"Riding High\"}\n];\n</code></pre>\n\n<p>How can move an element to another position?</p>\n\n<p>I want to move for example, <code>{artist:\"Lalo Schifrin\", title:\"Shifting Gears\"}</code> to the end.</p>\n\n<p><br /></p>\n\n<p>I tried using splice, like this:</p>\n\n<pre><code>var tmp = playlist.splice(2,1);\nplaylist.splice(2,0,tmp);\n</code></pre>\n\n<p>But it doesn't work.</p>\n\n<p>Any help would be appreciated.</p>\n",
            "last_activity_date": 1411463425,
            "question_id": 2440700,
            "score": 18,
            "tags": [
                "javascript"
            ],
            "title": "Reordering arrays"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Apparently, the <code>&lt;device&gt;</code> tag is not part of the HTML5 spec, and therefore there is no currently standard way to access webcams from a browser.  You might be able to get away with using the JavaScript API <code>navigator.getUserMedia(...)</code>, but <a href=\"http://caniuse.com/#search=getUserMedia\" rel=\"nofollow\">that isn't supported by any browsers, either</a></p>\n\n<p>You can read up on this here: <a href=\"http://stackoverflow.com/questions/3012002/what-web-browser-supports-device-tag-html5\">What web browser supports &lt;device&gt; tag HTML5?</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I was doing similar research recently and found a working demo: <a href=\"http://gadgets-code.com/taking-webcam-photo-with-opera-browser-new-technology\" rel=\"nofollow\">http://gadgets-code.com/taking-webcam-photo-with-opera-browser-new-technology</a></p>\n\n<p>It requires install of an experimental version of Opera: <a href=\"http://snapshot.opera.com/labs/camera-and-pages/\" rel=\"nofollow\">http://snapshot.opera.com/labs/camera-and-pages/</a></p>\n\n<p><strong>Happy hacking!</strong></p>\n\n<hr>\n\n<p><strong>UPDATE [20 May 2012]:</strong></p>\n\n<p><a href=\"http://www.webrtc.org/running-the-demos\" rel=\"nofollow\">http://www.webrtc.org/running-the-demos</a> - WebRTC - GoogleChromeCanary - about://flags - enableMediaStream + PeerConnection :) Me recommends - Jerome Etienne's blog - <a href=\"http://learningthreejs.com/\" rel=\"nofollow\">http://learningthreejs.com/</a> </p>\n\n<p><strong>UPDATE [13 Sep 2012]:</strong></p>\n\n<p>WebRTC enabled in Chrome 21 by default <em>(change introduced couple weeks ago)</em></p>\n\n<p><strong>UPDATE [2 Jul 2014]:</strong></p>\n\n<p>WebRTC is mainstream / huge: <a href=\"http://youtu.be/GBAEG_RuqeE?t=50m1s\" rel=\"nofollow\">http://youtu.be/GBAEG_RuqeE?t=50m1s</a> (Google Hangouts, Amazon Mayday, Snapchat)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You can do it for Chrome and Opera but you'll have to instruct your users, because it isn't very safe yet.</p>\n\n<p>Here is an online example, it still requires chrome users to activate MediaStream in chrome://flags/:</p>\n\n<p><a href=\"http://neave.com/webcam/html5/\" rel=\"nofollow\">http://neave.com/webcam/html5/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is now possible: <a href=\"http://www.iandevlin.com/blog/2012/06/html5/filtering-a-webcam-using-getusermedia-and-html5-canvas\">Filtering a webcam using getUserMedia and HTML5 Canvas</a>.</p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>I want access webcam from HTML5 for register and save a video file, for playing later. Is this possible?</p>\n",
            "last_activity_date": 1404298546,
            "question_id": 7074230,
            "score": 17,
            "tags": [
                "javascript",
                "html5"
            ],
            "title": "How to access webcam from HTML5?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I am not getting your question exactly but this may useful to you.</p>\n\n<pre><code>  Ext.define('My.Group', {\n// extend: 'Ext.form.FieldSet',\nxtype : 'fieldset',\nconfig : {\n    title : 'Group' + i.toString(),\n    id : '_group-' + i.toString()\n\n},\nconstructor : function(config) {\n    this.initConfig(config);\n\n    return this;\n},    \ncollapsible: true,\nautoScroll:true,\n.....\n});\n</code></pre>\n\n<p>you can use it as follow.</p>\n\n<pre><code>handler : function() {                      \n        i = i + 1;\n        var group = new My.Group({\n            title : 'Group' + i.toString(),\n            id : '_group-' + i.toString()\n        });\n        // console.log(this);\n        // console.log(group);\n        Ext.getCmp('panelid').insert(i, group);\n        Ext.getCmp('panelid').doLayout();\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Personal practice, I will declare variables in the properties area when the</p>\n\n<ul>\n<li>variables defining magnitude, like <code>x</code>, <code>y</code>, <code>width</code>, <code>height</code></li>\n<li>variables that awaiting to be overridden, or customizable, like <code>title</code>, <code>saveBtnTxt</code>, <code>url</code>, <code>fields</code>, <code>iconCls</code></li>\n<li>some constants, that will have special prefixes so will not be overridden so easily</li>\n</ul>\n\n<p>Then I will declare <code>items</code>, <code>listeners</code>, <code>this.on</code>, <code>Ext.apply(me, {..})</code> or anything that requires the scope of the obj (<code>this</code>, <code>me</code>), to sit inside my <code>initComponent</code>. Or stuff that should be modified/overridden before everything is setting up so user will not break my component by overriding some of the important variables.</p>\n\n<p>Of course that'll serve as my guidance. 2 cents</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>About the ugly <code>this</code>, I have used the variable <code>me</code> widely in my app, and it looks a lot cleaner than <code>this</code>. It benefits me from changing scopes less frequently too.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I want to add to Lionel's answer that it is better to declare any <strong>non-primitive</strong> config in <code>initComponent</code>. (By primitive I mean string, boolean and number). Array and Object go into <code>initComponent</code>.<br>\nSo definition should look like this: </p>\n\n<pre><code>Ext.define('My.NewClass', {\n  extend: 'OldClass',\n  // here all primitive configs:\n  cls: 'x-my-cls',\n  collapsible: true,\n  region: 'west',\n  // and so on ...\n\n  initComponent: function() {\n    // here you declare non-primitive configs:\n    this.tbar = [/* blah-blah */];\n    this.columns = [/* blah-blah */];\n    this.viewConfig = {/* blah-blah */};\n    // and so on ...\n\n    this.callParent(arguments);\n  }\n\n  // other stuff\n}\n</code></pre>\n\n<p>The reason why you should put all non-primitive configs into initComponent is that otherwise configs of all instances will refer to the same objects. For example if you define NewClass like:</p>\n\n<pre><code>Ext.define('My.NewClass', {\n  extend: 'OldClass',\n  bbar: Ext.create('Ext.toolbar.Toolbar', {\n  // ...\n</code></pre>\n\n<p><code>bbar</code>s of all instances will refer to the same object. And therefore every time you create new instance bbar disappears from the preveous instance.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I'm writing all my components in ExtJS's new MVC fashion using <code>Ext.define()</code>.</p>\n\n<p>I struggle a bit whether define properties inside of <code>initComponent()</code> or by simply setting them like <code>property: 42,</code>.</p>\n\n<p>Are there widely accepted best practices?</p>\n\n<p>I'm staggering between using <code>initComponent()</code> only when necessary (ie. when I want something dynamic or set a scope) which keeps the function shorter and spares me some ugly <code>this.</code>s and using it always which has the benefit, that I'd never have to move former properties to <code>initComponent()</code> just because I want to make it more dynamic.</p>\n\n<p>Unfortunately, Sencha's docs don't tell much about that and the available examples seem to do as they want.</p>\n",
            "last_activity_date": 1312456817,
            "question_id": 6871594,
            "score": 16,
            "tags": [
                "javascript",
                "extjs",
                "extjs4"
            ],
            "title": "Best Practices concerning initComponent() in Ext.define()"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>You want to auto-size the display? but leave the content the same?</p>\n\n<p>That is all the scripts can do, adjust the display, and let you see more of your own text...</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You may need to roll your own to meet those requirements.</p>\n\n<p>These could be a start.</p>\n\n<p><a href=\"http://tuckey.org/textareasizer/\" rel=\"nofollow\">http://tuckey.org/textareasizer/</a> (though try and avoid eval() in yours)</p>\n\n<p><a href=\"http://www.felgall.com/jstip45.htm\" rel=\"nofollow\">http://www.felgall.com/jstip45.htm</a></p>\n\n<p><a href=\"http://viralpatel.net/blogs/2009/06/textarea-resize-javascript-jquery-plugin-resize-textarea-html.html\" rel=\"nofollow\">http://viralpatel.net/blogs/2009/06/textarea-resize-javascript-jquery-plugin-resize-textarea-html.html</a></p>\n\n<p>This actually seems like a good jQuery plugin. <del>I might have a tackle at developing something like this. If I get it done, I'll post it here.</del></p>\n\n<p>I spent a few hours developing something, but then I found this one that seems to be really good.</p>\n\n<p><a href=\"http://www.aclevercookie.com/demos/autogrow%5Ftextarea.html\" rel=\"nofollow\">http://www.aclevercookie.com/demos/autogrow%5Ftextarea.html</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Are any of these useful?</p>\n\n<p><a href=\"http://viralpatel.net/blogs/2009/06/textarea-resize-javascript-jquery-plugin-resize-textarea-html.html\" rel=\"nofollow\">Textarea Resize JavaScript: Resize textarea using jQuery plugin</a></p>\n\n<p><a href=\"http://www.ajaxbestiary.com/2007/11/14/smart-area-a-lightweight-resizing-text-area-plugin-for-jquery/\" rel=\"nofollow\">Smart Area: A Lightweight Resizing Text Area Plugin for jQuery</a></p>\n\n<p><a href=\"http://www.sitepoint.com/blogs/2009/07/29/build-auto-expanding-textarea-1/\" rel=\"nofollow\">How to Build an Auto-Expanding Textarea jQuery Plugin, Part 1</a></p>\n\n<p><a href=\"http://www.sitepoint.com/blogs/2009/07/29/build-auto-expanding-textarea-2/\" rel=\"nofollow\">How to Build an Auto-Expanding Textarea jQuery Plugin, Part 2</a></p>\n\n<p><a href=\"http://www.sitepoint.com/blogs/2009/07/30/build-auto-expanding-textarea-3/\" rel=\"nofollow\">How to Build an Auto-Expanding Textarea jQuery Plugin, Part 3</a></p>\n\n<p><a href=\"http://drupal.org/project/resizable%5Fbody\" rel=\"nofollow\">Resizable Body</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Check out <a href=\"http://dojotoolkit.org/reference-guide/dijit/form/Textarea.html#dijit-form-textarea\" rel=\"nofollow\">DOJO tools text area control</a></p>\n\n<p>see more on this <a href=\"http://demos.dojotoolkit.org/demos/form/\" rel=\"nofollow\">demo page</a> (text area At the end of the form )</p>\n\n<p>This closely come to your requirements.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I have been using <a href=\"http://nicedit.com/\" rel=\"nofollow\">nicEdit</a>.  It seems to have all that you need and the script is only 1700 lines with an MIT license so you could make any changes you need.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://www.alistapart.com/articles/expanding-text-areas-made-elegant/\" rel=\"nofollow\">This A List Apart post</a> contains an implementation that looks pretty close to meeting your criteria and contains a good explanation of what's going on.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm wanting to provide a resizing textarea control for users. I've given this a go and looked at a number of other implementations, but I can't seem to find one that meets all my requirements. Specifically I want a control that:</p>\n\n<ul>\n<li>Works in IE6, IE7, IE8 on Windows and Firefox 3 and 3.5 on Windows and OS X when the page is rendered in standards compliant mode (i.e. not in quirks mode).</li>\n<li>Does not mess up the undo buffer/undo stack. This is a particularly nasty issue with IE - adding nodes, removing nodes and some other DOM operations will reset the input buffer meaning that if an implementation relies on these techniques an undo will not behave like it does in a standard textarea control. I haven't been able to find much information about this bug except for <a href=\"http://www.codeproject.com/KB/scripting/htmlarea.aspx#bugs1\">this note</a>. Implementations like the jQuery <a href=\"http://plugins.jquery.com/project/autogrow\">Auto Growing Plugin</a> suffer from this problem - try undoing changes in IE and compare how this works to a standard textarea. I've added an <a href=\"http://jsbin.com/ivaca\">example page</a> demonstrating this problem to JSBin.</li>\n<li>Has a maximum height beyond which the control cannot grow.</li>\n<li>Shrinks appropriately when content is deleted.</li>\n<li>Does not flicker or act strangely on keypress. e.g. jQuery Auto Growing Textarea control behaves strangely with, at least IE7, when the control has grown beyond it's initial size.</li>\n<li>Does not require the control to use a fixed-width/monospace font.</li>\n</ul>\n\n<p>The closest I've seen to something that works like this is Facebook's status update field, which is implemented as a content editable div element, but I have some reservations about using such an element because using a div means:</p>\n\n<ul>\n<li>Need to explicitly style the border which means we could end up with a border that looks different to a native textarea.</li>\n<li>Need to sync content with the real textarea (possibly in both directions?).</li>\n<li>Adds complexity when placing hints and other elements relative to position of a textarea.</li>\n<li>While this approach works for something like a Facebook status update, how well would it work in a form containing hundreds of standard input elements?</li>\n</ul>\n\n<p>What I've set out above represents the \"ultimate resizing textarea\" - addressing what I perceive to be issues with existing approaches. Does such a control exist? Is it possible to write such a control?</p>\n",
            "last_activity_date": 1326327616,
            "question_id": 1586931,
            "score": 16,
            "tags": [
                "javascript",
                "widget"
            ],
            "title": "Searching for the Ultimate Resizing Textarea"
        }
    ]
}
