{
    "items": [
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>var obj = {\n func1 : function(){\n   // Do stuff \n },\n func2 : function(){\n  obj.func1();  // It works fine\n }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>if you want to use the 'this' keyword, you should do something like</p>\n\n<pre><code>function obj() {\n    this.param = whatever;\n\n}\n\nobj.prototype.method1 = function(){\n...\n}\n\nobj.prototype.method2 = function(){\n    this.method1();\n}\n</code></pre>\n\n<p>you could declare the methods in the obj function, but it is better to use prototype, because it is more efficient -- no matter how many obj instances you create, the functions only exist once.  If you put the functions in the obj constructor, each instance of obj has its own copy of the function.  javascript does some magic to associate the method call with the object instance on which it is called, to make sure 'this' means the right thing in context</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How to do this?</p>\n\n<pre><code>var obj = {\n func1 : function(){\n   // Do stuff \n },\n func2 : function(){\n  func1();  // does not work\n  this.func1();  // does not work\n }\n}\n</code></pre>\n\n<p>Edit: missed a semicolon</p>\n",
            "last_activity_date": 1297268271,
            "question_id": 4947435,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "How to call a sibling method in an object defined with object syntax?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If you want the form to submit after the user has made their selection, then simply add</p>\n\n<pre><code>&lt;input type=\"file\" onchange=\"this.form.submit();\" ..... &gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I have a HTML page with the following input tag:</p>\n\n<pre><code>...\n&lt;input type=\"file\" id=\"browseContactImageButton\" /&gt;\n... \n</code></pre>\n\n<p>Clicking the button on the page results in Open File Dialog. If I want to do the actual uploading, I need another button to click (submit), because this input file button is used just to provide the path to the file. </p>\n\n<p>Is it possible to click the browse button, select the file and to start the uploading function immediately after the file has been chosen? If yes, could anyone provide the code snippet? Thanks. </p>\n",
            "last_activity_date": 1296513659,
            "question_id": 4856916,
            "score": 8,
            "tags": [
                "javascript",
                "html",
                "ajax",
                "file-upload"
            ],
            "title": "Automatically submitting a form when an upload file is chosen"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>As it is, you can't in any reliable manner. Because you are enumerating an Object, there is never a guaranteed order.</p>\n\n<p>If you want a guaranteed numeric order, you would need to use an Array, and iterate backwards.</p>\n\n<hr>\n\n<p><strong>EDIT:</strong> This will convert your Object to an Array, and do a reverse iteration. </p>\n\n<p>Note that it will only work if all the properties are numeric.</p>\n\n<pre><code>var data = $.parseJSON($('#sdata').val());\nvar arr = [];\n\nfor( var name in data ) {\n    arr[name] = data[name];\n}\nvar len = arr.length;\nwhile( len-- ) {\n    if( arr[len] !== undefined ) {\n        console.log(len,arr[len]);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>You can use javascript function sort() or reverse()  </p>\n\n<pre><code>var data = $.parseJSON($('#sdata').val());\ndata.reverse();\n$.each(data, function(id, sc) {\nalert(id);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I don't know, but for the simple stuff I work with, this function does the job. It doesn't rely on numeric keys. And will flip simple objects top to bottom. I don't understand complex Objects, so I don't know how \"robust\" it is.</p>\n\n<pre><code>function flipObject(obj){\n    var arr = [];\n    $.each(obj, function(key, val){\n        var temp = new Object;\n        temp['key'] = key;\n        temp['val'] = val;\n        arr.push(temp);\n        delete temp;\n        delete obj[key];\n    });\n    arr.reverse();\n    $.each(arr, function(key, val){\n        obj[val['key']] = val['val'];\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If all you need to do is generate some HTML out of your JSON and put generated elements into a container in reverse order you can use jQuery's prependTo method when building your HTML.</p>\n\n<pre><code>var container = $('&lt;div /&gt;');\n$.each(data, function (key, value) {\n    $('&lt;div&gt;' + value + '&lt;/div&gt;').prependTo(container);\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>There is another solution, a fairly easy one:</p>\n\n<pre><code>$(yourobject).toArray().reverse();\n</code></pre>\n\n<p>That's it.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I tried this and it worked perfectly for me.</p>\n\n<pre><code>var data = $.parseJSON($('#sdata').val());\n$.each(data.reverse(), function(id, sc) {\n    alert(id);\n}\n</code></pre>\n\n<p>The only change is the \"reverse()\" in line 2.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>HTML:</p>\n\n<pre><code>&lt;input id=\"sdata\" type=\"hidden\" value='{\"1651\":[\"12\",\"1\"],\"1650\":[\"30\",\"0\"],\"1649\":[\"20\",\"0\"],\"1648\":[\"13\",\"2\"],\"1647\":[\"11\",\"0\"],\"1646\":[\"10\",\"0\"],\"1645\":[\"12\",\"0\"],\"1644\":[\"8\",\"0\"],\"1643\":[\"16\",\"1\"],\"1642\":[\"10\",\"1\"],\"1641\":[\"10\",\"0\"],\"1640\":[\"18\",\"3\"]}' /&gt;\n</code></pre>\n\n<p>JS:</p>\n\n<pre><code>var data = $.parseJSON($('#sdata').val());\n$.each(data, function(id, sc) {\n    alert(id);\n}\n</code></pre>\n\n<p>OUT: 1640, 1641, 1642, ..., 1651</p>\n\n<p>How to make it in reverse order (ex. 1651, 1650...)?</p>\n",
            "last_activity_date": 1399462155,
            "question_id": 4838630,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "object"
            ],
            "title": "Reverse object in jQuery.each"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If you own the code of the parent window you can use cross document messsages to solve this. You could send the orientation from the parent window to the iframe. This should work as well in the cross domain scenario.\nI tested this on iphone 4.3 and android 2.2.</p>\n\n<p>In the parent window : register for orientation changes and transfer it to the iframe</p>\n\n<pre><code>window.addEventListener(\"orientationchange\", function(){\n                var iframe = document.getElementById(\"youriframe\").contentWindow;\n                iframe.postMessage({\n                    orientation: window.orientation\n                }, 'http://the.domain.of.the.iframe.com');\n}, false)\n</code></pre>\n\n<p>In the iframe : subscribe to orientation changes from the parent</p>\n\n<pre><code>window.addEventListener(\"message\", function(e){\n            var newOrientationValue = e.data.orientation;\n            alert(newOrientationValue); // &lt;--- DO your own logic HERE\n}, false)\n</code></pre>\n\n<p>Check this out for more details : <a href=\"http://html5demos.com/postmessage2\">http://html5demos.com/postmessage2</a></p>\n",
                    "is_accepted": false,
                    "score": 11
                }
            ],
            "body": "<p>So I have a .jsp page that has an iframe in it.  The content of this iframe is hosted on a separate domain.  On a mobile device, I'm looking for this iframe to detect an orientation change and alter the dimensions of the content accordingly.</p>\n\n<p>Is there a way to add an event listener to the content stored within this iframe that would detect an orientation change?</p>\n\n<p>If this content were not within an iframe, and accessed directly instead, a call like: window.addEventListener('orientationchange', FunctionToBeCalled, false);\nsuccessfully catches an orientation change and calls the appropriate function.  However, I can't seem to get this to work from within the iframe.  I've tried parent.addEventListener, parent.window.addEventListener, top.addEventListener, etc. but to no avail.  </p>\n\n<p>From what I've read it sounds like since this is a cross-domain call I have very limited parent functionality available to me, am I doomed to fail?</p>\n\n<p>Any help would be greatly appreciated. Thanks!</p>\n",
            "last_activity_date": 1322287294,
            "question_id": 4798063,
            "score": 8,
            "tags": [
                "javascript",
                "iframe",
                "orientation"
            ],
            "title": "Detect orientation change from within cross-domain iframe"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>EDIT -- I originally wrote that you could subclass an Array just like any other object, which was wrong.  Learn something new every day.  Here is a good discussion </p>\n\n<p><a href=\"http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/\">http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/</a></p>\n\n<p>In this case, would composition work better?  i.e. just create a Vector object, and have it backed by an array.  This seems to be the path you are on, you just need to add the push and any other methods to the prototype.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I'd wrap an array inside a proper vector type like this:</p>\n\n<pre><code>window.Vector = function Vector() {\n  this.data = [];\n}\n\nVector.prototype.push = function push() {\n  Array.prototype.push.apply(this.data, arguments);\n}\n\nVector.prototype.sum = function sum() {\n  for(var i = 0, s=0.0, len=this.data.length; i &lt; len; s += this.data[i++]);\n  return s;\n}\n\nvar vector1 = new Vector();\nvector1.push(1); vector1.push(2);\nconsole.log(vector1.sum());\n</code></pre>\n\n<p>Alternatively you can build new prototype functions on arrays and then just use normal arrays. </p>\n\n<p>If you are consistent with naming the arrays so they all start with a lowercase v for example or something similar that clearly mark them aw vector and not normal arrays, and you do the same on the vector specific prototype functions, then it should be fairly easy to keep track of.</p>\n\n<pre><code>Array.prototype.vSum = function vSum() {\n  for(var i = 0, s=0.0, len=this.length; i &lt; len; s += this[i++]);\n  return s;\n}\n\nvar vector1 = [];\nvector1.push(1); vector1.push(2);\nconsole.log(vector1.vSum());\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>@hvgotcodes answer has an <a href=\"http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/\" rel=\"nofollow\">awesome link</a>. I just wanted to summerize the conclusion here.</p>\n\n<p><a href=\"http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/#wrappers_prototype_chain_injection\" rel=\"nofollow\">Wrappers. Prototype chain injection</a></p>\n\n<p>This seems to be the best method to extend array from the article.</p>\n\n<blockquote>\n  <p>wrappers can be used ... in which object\u2019s prototype chain is augmented, rather than object itself.</p>\n</blockquote>\n\n<pre><code>function SubArray() {\n  var arr = [ ];\n  arr.push.apply(arr, arguments);\n  arr.__proto__ = SubArray.prototype;\n  return arr;\n}\nSubArray.prototype = new Array;\n\n// Add custom functions here to SubArray.prototype.\nSubArray.prototype.last = function() {\n  return this[this.length - 1];\n};\n\nvar sub = new SubArray(1, 2, 3);\n\nsub instanceof SubArray; // true\nsub instanceof Array; // true\n</code></pre>\n\n<p>Unfortunally for me, this method uses <code>arr.__proto__</code>, unsupported in IE 8-, a browser I have to support.</p>\n\n<p><a href=\"http://perfectionkills.com/how-ecmascript-5-still-does-not-allow-to-subclass-an-array/#wrappers_direct_property_injection\" rel=\"nofollow\">Wrappers. Direct property injection.</a></p>\n\n<p>This method is a little slower than the above, but works in IE 8-.</p>\n\n<blockquote>\n  <p>Wrapper approach avoids setting up inheritance or emulating length/indices relation. Instead, a factory-like function can create a plain Array object, and then augment it directly with any custom methods. Since returned object is an Array one, it maintains proper length/indices relation, as well as [[Class]] of \u201cArray\u201d. It also inherits from Array.prototype, naturally.</p>\n</blockquote>\n\n<pre><code>function makeSubArray() {\n  var arr = [ ];\n  arr.push.apply(arr, arguments);\n\n  // Add custom functions here to arr.\n  arr.last = function() {\n    return this[this.length - 1];\n  };\n  return arr;\n}\n\nvar sub = makeSubArray(1, 2, 3);\nsub instanceof Array; // true\n\nsub.length; // 3\nsub.last(); // 3\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just another example of the wrapper. Having some fun with .bind.</p>\n\n<pre><code>var _Array = function _Array() {\n    if ( !( this instanceof _Array ) ) {\n        return new _Array();\n    };\n};\n\n_Array.prototype.push = function() {\n    var apContextBound = Array.prototype.push,\n        pushItAgainst = Function.prototype.apply.bind( apContextBound );\n\n    pushItAgainst( this, arguments );\n};\n\n_Array.prototype.pushPushItRealGood = function() {\n    var apContextBound = Array.prototype.push,\n        pushItAgainst = Function.prototype.apply.bind( apContextBound );\n\n    pushItAgainst( this, arguments );\n};\n\n_Array.prototype.typeof = (function() { return ( Object.prototype.toString.call( [] ) ); }());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I realize that, strictly speaking, this is not subclassing the array type, but will this work in the way one might expect, or am I still going to run into some issues with .length and the like? Are there any drawbacks that I would not have if normal subclassing were an option?</p>\n\n<pre><code>        function Vector()\n        {\n            var vector = [];\n            vector.sum = function()\n            {\n                sum = 0.0;\n                for(i = 0; i &lt; this.length; i++)\n                {\n                    sum += this[i];\n                }\n                return sum;\n            }            \n            return vector;\n        }\n\n        v = Vector();\n        v.push(1); v.push(2);\n        console.log(v.sum());\n</code></pre>\n",
            "last_activity_date": 1394573546,
            "question_id": 4761000,
            "score": 8,
            "tags": [
                "javascript",
                "arrays",
                "subclass"
            ],
            "title": "Is this a reasonable way to &#39;subclass&#39; a javascript array?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>How about:</p>\n\n<pre><code>$('#my-element').parents().length\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Try something like this:</p>\n\n<pre><code>&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;MooExample&lt;/title&gt;\n        &lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            $(document).ready(function() {\n                $(\"li\").click(function() {\n                    alert($(this).parents().length);\n                });\n            });\n        &lt;/script&gt;\n    &lt;/head&gt;\n\n    &lt;body&gt;\n        &lt;ul&gt;\n            &lt;li&gt;moo&lt;/li&gt;\n            &lt;li&gt;foo&lt;/li&gt;\n            &lt;li&gt;fasoo&lt;/li&gt;\n            &lt;li&gt;moasf&lt;/li&gt;\n            &lt;li&gt;moosadg&lt;/li&gt;\n            &lt;li&gt;moo1&lt;/li&gt;\n            &lt;li&gt;moo412&lt;/li&gt;\n            &lt;li&gt;moo613a&lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Supposing you don't want to include body and html tag in the parents to count use:</p>\n\n<pre><code>$(\"#element\").parents(\"*\").not(\"body,html\").size()\n</code></pre>\n\n<p>Online demo here: <a href=\"http://jsfiddle.net/zaJff/\" rel=\"nofollow\">http://jsfiddle.net/zaJff/</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>My advice would be to rethink the way you are solving your problem - I think finding the number of generations between nodes probably isn't the best way to go, it sounds like a solution that will be likely to break easily by future changes to the code.</p>\n\n<p>If you insist however, the solution (by Cletus, in native javascript) seems pretty good on this page:\n<a href=\"http://stackoverflow.com/questions/1387560/find-number-of-nodes-between-two-elements-with-jquery\">find number of nodes between two elements with jquery?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>An additional note. If you want to get the depth relative to a certain context you can do:</p>\n\n<pre><code>var depth = $(\"#my-element\",\"#ContextContainerID\").parents(\"ul\").length;\n</code></pre>\n\n<p>Above, I'm searching for how many UL's are within the container #ContextContainerID</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<h1><strong>for more details about the depth</strong>,</h1>\n\n<p>you can use : <code>id</code> jquery plugin , or <code>fullselector</code> jquery plugin : </p>\n\n<pre><code>    alert($(\"#fir\").fullselector())\n    //--&gt; html:eq(0)&gt;:eq(2)&gt;:eq(0)&gt;a\n    alert($(\"#sec\").fullselector())\n   //--&gt; html:eq(0)&gt;:eq(2)&gt;:eq(0)&gt;:eq(1)&gt;a\n    alert($(\"#fir\").id())\n    //--&gt; html[0]//body[2]//div[0]//a\n    alert($(\"#sec\").id()) \n    //--&gt; html[0]//body[2]//div[0]//div[1]//a\n</code></pre>\n\n<h1><a href=\"http://jsfiddle.net/abdennour/2YtGc/\" rel=\"nofollow\">DEMO</a></h1>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>What's the easiest way to get the depth of an element in pure JavaScript or jQuery? By \"depth\" I mean how many elements deep is it nested, or how many ancestors does it have.</p>\n",
            "last_activity_date": 1401967168,
            "question_id": 4710943,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JS/jQuery: Get depth of element?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>No.  Once the connection is established you have a true socket.  But you're right that it requires special server support.  So it won't let you connect to an unmodified POP or IMAP server.</p>\n\n<p>They chose that design (the Upgrade mechanism) so you could easily have a server that listened for WebSocket connections as well as true HTTP requests.</p>\n\n<p>There <em>is</em> still a big distinction from AJAX and COMET.  You can use WebSockets to have true full-duplex communication between server and client.  Previous browser APIs haven't provided that, forcing people to use various work-arounds (such as repeated AJAX requests, COMET's forever frame, and others).</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>Alright so I just tried out the new WebSocket class in HTML 5, and was pretty excited they exist; however, I fail to see how they are much more rewarding than AJAX seeing as how they still initiate an HTTP call and are <em>not</em> like conventional sockets. That's why I'm asking here.</p>\n\n<p>Is there a way with HTML 5's <code>WebSocket</code> class to connect to a listening socket without sending HTTP data? Currently with TCP/IP builder it's showing all this header crap that I don't want (since I want to connect to POP3/IMAP servers without things like Flash bridges or Comet).</p>\n\n<p>Possible?</p>\n\n<p>Output from connection:</p>\n\n<pre><code>Listening for connections...Connected\nGET / HTTP/1.1\nUpgrade: WebSocket\nConnection: Upgrade\nHost: localhost:666\nOrigin: null\nSec-WebSocket-Key1: 2 987_390VNw60yi9\nSec-WebSocket-Key2: ~196  Y p  5    P67 428  ?\n</code></pre>\n",
            "last_activity_date": 1361948862,
            "question_id": 4590447,
            "score": 8,
            "tags": [
                "javascript",
                "http",
                "html5",
                "header",
                "websocket"
            ],
            "title": "JS/HTML5 WebSocket: Connect without HTTP call"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You say that UTC timestamp is \"2004-09-16T23:59:58.75\"?</p>\n\n<p>So you are basically doing</p>\n\n<pre><code>var x = \"2004-09-16T23:59:58.75\" - 123456\n</code></pre>\n\n<p>Now that you clarified that, than the above does not apply. You new issue is the number of milliseconds is in the past so when you do the difference calculation, you are getting a negative number. You probably want to swap the order around. </p>\n\n<pre><code>var difference = new Date().getTime()-data.List[0].EndDate;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If EndDate is in milliseconds, and getTime() returns milliseconds, why do you divide it by 1000 only to multiply it by 1000 in the same line? And if you only need second precision for all the rest of the code, why work in milliseconds? Start out with a number of seconds to simplify all your calculations:</p>\n\n<pre><code>var difference = Math.round((data.List[0].EndDate - new Date().getTime()) / 1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>function days_between(date1, date2) {\n\n    // The number of milliseconds in one day\n    var ONE_DAY = 1000 * 60 * 60 * 24\n\n    // Convert both dates to milliseconds\n    var date1_ms = date1.getTime()\n    var date2_ms = date2.getTime()\n\n    // Calculate the difference in milliseconds\n    var difference_ms = Math.abs(date1_ms - date2_ms)\n\n    // Convert back to days and return\n    return Math.round(difference_ms/ONE_DAY)\n\n}\n</code></pre>\n\n<p><a href=\"http://www.mcfedries.com/javascript/daysbetween.asp\">http://www.mcfedries.com/javascript/daysbetween.asp</a></p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>I now believe <em>this</em> is the best solution:</p>\n\n<p><a href=\"http://momentjs.com/\">http://momentjs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I've looked at: <a href=\"http://stackoverflow.com/questions/3224834/get-difference-between-2-date-in-javascript\">Get difference between 2 date in javascript?</a></p>\n\n<p>And I still can't get this to work.</p>\n\n<pre><code>var difference = data.List[0].EndDate - Math.round(new Date().getTime()/1000.0) * 1000;\nvar daysRemaining = Math.floor(difference / 1000 / 60 / 60 / 24);\nvar hoursRemaining = Math.floor(difference / 1000 / 60 / 60 - (24 * daysRemaining));\nvar minutesRemaining = Math.floor(difference / 1000 / 60 - (24 * 60 * daysRemaining) - (60 * hoursRemaining));\nvar secondsRemaining = Math.floor(difference / 1000 - (24 * 60 * 60 * daysRemaining) - (60 * 60 * hoursRemaining) - (60 * minutesRemaining));\n</code></pre>\n\n<p>data.List[0].EndDate is a UTC number (like: 1291427809310 (http://www.epochconverter.com/)) that will always be later than the current date.</p>\n",
            "last_activity_date": 1385409341,
            "question_id": 4435605,
            "score": 8,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "javascript date difference"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try</p>\n\n<pre><code>var doc;\nvar iframeObject = document.getElementById('iframeID'); // MUST have an ID\nif (iframeObject.contentDocument) { // DOM\n  doc = iframeObject.contentDocument;\n} \nelse if (iframeObject.contentWindow) { // IE win\n  doc = iframeObject.contentWindow.document;\n}\nif (doc) {\n  var something = doc.getElementById('someId');\n}\nelse {\n  alert('Wonder what browser this is...'+navigator.userAgent);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>I used this \"iframe.contentDocument\" in js file-uploader , But it not working in IE8 ,Firefox(3.5 and below versions.\nHow can i solve this by using other DOM's for working with iframe ?</p>\n\n<p>Thanks to all</p>\n",
            "last_activity_date": 1310314385,
            "question_id": 4310946,
            "score": 8,
            "tags": [
                "javascript",
                "iframe",
                "uploader",
                "denied"
            ],
            "title": "&quot; iframe.contentDocument&quot; Not Working in IE8 and FF(3.5 and below) any other steps to solve this?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Not quite optimal, but the cleanest you can get without pre-computing the reverse dictionary (and besides, this shouldn't be too much of an issue if you only have a few enumeration values): </p>\n\n<pre><code>function string_of_enum(enum,value) \n{\n  for (var k in enum) if (enum[k] == value) return k;\n  return null;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Do you actually need the numeric values at all? If not then you could use something like this:</p>\n\n<pre><code>var TEST_ERROR  = {\n    SUCCESS  : 'Success',\n    FAIL     : 'Fail',\n    ID_ERROR : 'ID Error'\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>You could always have the values be objects of a particular type.</p>\n\n<pre><code>var TEST_ERROR = (function() {\n  function ErrorValue(value, friendly) {\n    this.value = value;\n    this.friendly = friendly;\n  }\n  ErrorValue.prototype = {\n    toString: function() { return this.friendly; },\n    valueOf: function() { return this.value; }\n  };\n  return {\n    'SUCCESS': new ErrorValue(0, 'Success'),\n    'FAIL': new ErrorValue(1, 'Fail'),\n    'ID_ERROR': new ErrorValue(2, 'ID error')\n  };\n})();\n</code></pre>\n\n<p>Now when you get a value of that type:</p>\n\n<pre><code>var err = testFunction(whatever);\n</code></pre>\n\n<p>you can get the string value with</p>\n\n<pre><code>alert(err.toString());\n</code></pre>\n\n<p>In fact you shouldn't even have to call <code>.toString()</code> explicitly, most of the time.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>So I have this in the javascript for my page:</p>\n\n<pre><code>var TEST_ERROR  = {\n        'SUCCESS'   :   0,\n        'FAIL'      :   -1,\n        'ID_ERROR'  :   -2\n      };\n</code></pre>\n\n<p>And perform tests on functions in the page like so:</p>\n\n<pre><code>function test()\n{\n    // Get the paragraph from the DOM\n    var testResultParagraph = document.getElementById('testResult');\n\n    // Check the paragraph is valid\n    if(!testResultBox)\n    {\n        // Update the web page\n        testResultParagraph.value = TEST_ERROR.ID_ERROR;\n        return TEST_ERROR.ID_ERROR;\n    }\n\n    // Something to store the results\n    var testResult = TEST_ERROR.SUCCESS;\n\n    // Test the calculation\n    testResult = testCalculate()\n\n    // Update the web page\n    testResultParagraph.value = testResult;\n\n    // The test succeeded\n    return TEST_ERROR.SUCCESS;\n}\n</code></pre>\n\n<p>The result of <code>testCalculate()</code> and the value of the paragraph will be either 0, -1, -2 depending on the outcome.</p>\n\n<p>Now I want to map this to a string so that the paragraph shows 'Success', 'Fail' or 'ID Error'</p>\n\n<p>I could do this a few ways I have figured:</p>\n\n<pre><code>var TEST_ERROR  = {\n        'SUCCESS'   :   {VALUE : 0 , STRING: 'Success' },\n        'FAIL'      :   {VALUE : -1, STRING: 'Fail'    },\n        'ID_ERROR'  :   {VALUE : -2, STRING: 'Id Error'},\n      };\n</code></pre>\n\n<p>would require a modification to the enum dot accessors, or</p>\n\n<pre><code>var TEST_ERROR  = {\n        'SUCCESS'   :   0,\n        'FAIL'      :   1,\n        'ID_ERROR'  :   2\n      };\n\nvar TEST_STRING = [\n        'Success',\n        'Fail',\n        'ID Error'\n      ];\n</code></pre>\n\n<p>Which would require changes to the logic (<code>result &gt; TEST_ERROR.SUCCESS</code> seems wierd tho!)</p>\n\n<p><strong>My question is how would you go about mapping an enumerator value to a string value in Javascript?</strong>  I'm thinking the second way is the most sensible, but would like the enumerator to be positive for successes and negative for fails.  I also like the idea of the first containing the strings and values in the object structure.</p>\n\n<p>Any ideas?</p>\n\n<p>Thanks!</p>\n\n<p>Matt</p>\n\n<p><i>PS.  I'm going to be doing the testing in a Web Worker, so that the page doesn't hang and the results will be put into a table, not a paragraph like above.</p>\n\n<p>PPS. I'm pretty new to Javascript programming, but do a lot in ASM, C, C++, C#.</i></p>\n",
            "last_activity_date": 1290788669,
            "question_id": 4286899,
            "score": 8,
            "tags": [
                "javascript",
                "enums"
            ],
            "title": "Javascript Enum To Corresponding String Value"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>HMAC authentication is better served for an API that third parties are going to connect to. It seems like your app would be better served by writing a cookie to the client's browser indicating that they've been authenticated. Then with each ajax request you can check for that cookie. </p>\n\n<p>Edit: I take back a bit of what I said about HMAC being better served for third party APIs. Traditionally with HMAC each user gets their own private key. I don't think this is necessary for your application. You can probably get away with just keeping one master private key and give each user a unique \"public\" key (I call it a public key, but in actuality the user would never know about the key). When a user logs in I would write two cookies. One which is the combination of the user's public key + time stamp encrypted and another key stating what the time stamp is. Then on the server side you can validate the encrypted key and check that the time stamp is within a given threshold (say 10-30 minutes in case they're sitting around idle on your app). If they're validated, update the encrypted key and time stamp, rinse and repeat.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>The answer: You technically <a href=\"http://en.wikipedia.org/wiki/Trusted_client\" rel=\"nofollow\"><strong>cannot</strong> prevent the user from modifying the JavaScript</a>. So don't worry about that because you can do nothing about it.</p>\n\n<p>However, the attack you do need to prevent is <a href=\"http://www.owasp.org/index.php/Top_10_2010-A5\" rel=\"nofollow\">Cross-Site Request Forgery</a> (CSRF). Malicious scripts on different domains are capable of automatically submitting forms to your domain with the cookies stored by the browser. To deal with that, you need to include an authentication token (which should be sufficiently random, not related to the username or password, and sent in the HTML page in which the chat client resides) in the actual data sent by the AJAX request (which is not automatically filled in by the browser).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<blockquote>\n  <p>How is this secure if the javascript application needs to be aware of the private key?</p>\n</blockquote>\n\n<p>Why not? It's the user's own private key, so if he is willing to give it out to someone else, it's his problem. It's no different from giving out your password and then saying someone else has access to your account.</p>\n\n<p>If you think about this a bit, you'll realize that you don't need to implement public-key encryption, HMAC or anything like that. Your normal session-based authentication will do, provided the communication channel itself is secure (say using HTTPS).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am researching ways to secure a javascript application I am working on. The application is a chat client which uses APE (Ajax Push Engine) as the backend.</p>\n\n<p>Currently, anyone can access the page and make a GET/POST request to the APE server. I only want to serve the chat client to registered users, and I want to make sure only their requests will be accepted. I can use username/password authentication with PHP to serve a user the page. But once they have the page, what's to stop them from modifying the javascript or letting it fall into the wrong hands?</p>\n\n<p>This method for securing a client/server application looks promising: <a href=\"http://abhinavsingh.com/blog/2009/12/how-to-add-content-verification-using-hmac-in-php/\">http://abhinavsingh.com/blog/2009/12/how-to-add-content-verification-using-hmac-in-php/</a></p>\n\n<p>I have another source that says this is ideal for a javascript client since it doesn't depend on sending the private key. But how can this be? According to to the tutorial above, the client needs to provide the private key. This doesn't seem very safe since anyone who has the javascript now has that user's private key. From what I understand it would work something like this:</p>\n\n<ol>\n<li>User logs in with a username and password</li>\n<li>PHP validates the username and password, looks up the user's private key and inserts it into the javascript</li>\n<li>Javascript supplies a signature (using the private key), and the public key with all APE requests</li>\n<li>APE compares the computed signature to the received signature and decides whether to handle the requests.</li>\n</ol>\n\n<p>How is this secure if the javascript application needs to be aware of the private key?</p>\n\n<p>Thanks for the help!</p>\n",
            "last_activity_date": 1290525243,
            "question_id": 4252208,
            "score": 8,
            "tags": [
                "php",
                "javascript",
                "hmac",
                "ajax-push"
            ],
            "title": "Securing a javascript client with hmac"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You may choose to write a similar functionality and check existing parameters them against the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Functions_and_function_scope/arguments\" rel=\"nofollow\">arguments</a> array. I'm not 100% that this will solve your problem.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/994143/javascript-getter-for-all-properties\">JavaScript getter for all properties</a>  </p>\n</blockquote>\n\n\n\n<p>Does JavaScript provide a method to access undefined object properties? In PHP the solution is to declare and implement <code>__get()</code> method in class.<br>\nSolutions using <code>try { .. } catch { .. }</code> are not sufficient for me, because I already have very large amount of code which actually needs to stay as-is.</p>\n",
            "last_activity_date": 1287406016,
            "question_id": 3959187,
            "score": 8,
            "tags": [
                "php",
                "javascript",
                "properties",
                "get",
                "undefined"
            ],
            "title": "JavaScript&#39;s equivalent to PHP&#39;s __get() magic method"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The problem is the +, which is a quantifier you need to escape.</p>\n\n<p>Use this instead:</p>\n\n<pre><code>/(.{1,38})(\\+|$\\n?)/\n</code></pre>\n\n<p>or inside a string:</p>\n\n<pre><code>\"(.{1,38})(\\\\+|$\\\\n?)\"\n</code></pre>\n\n<p>If you want to match the literal $ followed by a newline, you need to escape the $ with <code>\\</code> (or <code>\\\\</code> inside a string - see my last comment below this for an explanation).</p>\n\n<p>Here's some <a href=\"http://www.regular-expressions.info/repeat.html\">information on quantifiers</a>.</p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>A quantifier means \"how many\". The most common is \"*\" which means zero or more. The quantifier \"+\" means one or more.</p>\n\n<p>When you get an error about an illegal quantifier it almost always means you have a quantifier where it doesn't belong. For example, since they mean \"how many\" they must obviously refer to something. If you place one at the start of a pattern or group the regex is thinking \"how many _of what?</p>\n\n<p>In your specific case you have a \"+\" immediately after the grouping character \"(\" which is why you get the error. You need to either escape the \"+\" so it isn't treated as a quantifier or put some character or group you want to match in front of it. In your case it is probably the first if you are trying to match an actual \"+\" character.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>The regex is constructed on the fly, but I've output it to firebug:</p>\n\n<pre><code>(.{1,38})(+|$\\n?)\n</code></pre>\n\n<p>the error is</p>\n\n<pre><code>invalid quantifier +|$\\n?)\n</code></pre>\n\n<p>I'm not sure where to start.</p>\n\n<p>The actual code is:</p>\n\n<pre><code>var re = top.RegExp;\nvar regex = new re(\"(.{1,\" + len + \"})(+|$\\\\n?)\", \"gm\");\n</code></pre>\n\n<p><strong>UPDATE:</strong>\nPer Bennor McCarthy's instructions, I changed the code to this:</p>\n\n<pre><code> var regex = new re(\"(.{1,\" + len + \"})(\\+|\\$\\\\n?)\", \"gm\");\n</code></pre>\n\n<p>Firebug still tells me this:</p>\n\n<pre><code>invalid quantifier +|$\\n?)\n[Break on this error] var regex = new re(\"(.{1,\" + len + \"})(\\+|\\$\\\\n?)\", \"gm\"); \n</code></pre>\n\n<p><strong>ANOTHER UPDATE</strong>\nLooks Like I had to double slash it and this solved the problem!</p>\n\n<h2>final code</h2>\n\n<pre><code>var regex = new re(\"(.{1,\" + len + \"})(\\\\+|\\\\$\\\\n?)\", \"gm\");\n</code></pre>\n",
            "last_activity_date": 1375795007,
            "question_id": 3713290,
            "score": 8,
            "tags": [
                "javascript",
                "regex",
                "quantifiers"
            ],
            "title": "JavaScript: Invalid quantifier in regex"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Each web application has a ServletContext associated with it. The ServletContext object is created when the application is started and is destroyed when the application is shut down. A ServletContext has a global scope and is similar to a global variable in an application.</p>\n\n<p><a href=\"http://www.javabeat.net/tips/178-servletcontextlistener-example.html\">http://www.javabeat.net/tips/178-servletcontextlistener-example.html</a></p>\n\n<p>complete explanation here</p>\n\n<p><a href=\"http://onjava.com/pub/a/onjava/2001/04/12/listeners.html\">http://onjava.com/pub/a/onjava/2001/04/12/listeners.html</a></p>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>One thing you can do portably is to implement a servlet that initializes everything you need in its init() method (and maybe call System.exit() if it fails, i do not know if you have permission to do this in Tomcat). Then you would load it using <code>&lt;load-on-startup&gt;</code> in your <code>web.xml</code> to specify initialization order.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want to initialize a global instance of a class before my Tomcat server completes startup and begins to offer my servlets.  If this service somehow fails initialization, I'd like the entire startup sequence to fail as well (or as close to this as possible; it would be pointless for the server to be running otherwise).  What's the best way I can accomplish this?  </p>\n",
            "last_activity_date": 1284064247,
            "question_id": 3680295,
            "score": 8,
            "tags": [
                "java",
                "javascript",
                "apache",
                "tomcat",
                "servlets"
            ],
            "title": "Is there a means of executing code during the startup of Apache Tomcat 6.x to perform intialization routines, etc.?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Why not use <code>jQuery</code>'s built-in functions <a href=\"http://api.jquery.com/fadeIn/\"><code>fadeIn</code></a> and <a href=\"http://api.jquery.com/fadeOut/\"><code>fadeOut</code></a>?</p>\n\n<pre><code>$('#font-classic').click(function(){\n    $('body').fadeOut('normal', function(){\n        $('body').fadeIn();\n    }});\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>jQuery's <code>.animate()</code> takes values from <code>0</code> to <code>1</code>.</p>\n\n<pre><code>$(document.body).animate({opacity: 0}, 1000);\n$(document.body).animate({opacity: 1}, 1000);\n</code></pre>\n\n<p>I'm sure that <code>.animate()</code> must call <code>.parseFloat()</code> (or something) on the values you're passing, which would make your <code>0%</code> into <code>0</code> (which is correct), but your <code>100%</code> into <code>100</code>, which would be incorrect.</p>\n",
                    "is_accepted": false,
                    "score": 24
                },
                {
                    "body": "<p>You can use functions or something like this:</p>\n\n<pre><code>$(document.body).animate({ opacity: 1/2 }, 1000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am making a website, and it allows users to change view options. I use jQuery to smooth animations for font changing. It fades the whole page out and back in again with the new fonts.</p>\n\n<p>The fade out animation is fine, but when it fades back in, there's no fade. It just pops up, no animation.</p>\n\n<p>The problematic jQuery is in <a href=\"http://xsznix.my3gb.com/options.php\">http://xsznix.my3gb.com/options.php</a>.</p>\n\n<p>The code I have so far is this:</p>\n\n<pre>\n$('#font-classic').click(function(){\n    $(document.body).animate({opacity: '0%'},{duration: 1000, complete: function(){\n        // font changing code here\n        $(document.body).animate({opacity: '100%'}, 1000);\n    }});\n});\n</pre>\n\n<p>Thanks,</p>\n\n<p>xsznix</p>\n",
            "last_activity_date": 1387232529,
            "question_id": 3390361,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery opacity animation"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can use <code>$(\"#tempDiv\").empty()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 19
                }
            ],
            "body": "<p>I'm temporarily adding contents to a div,tempDiv, and adding that to a link which is appended to a div, #contentHere, that's displayed. I need to clear the contents of tempDiv so that the links aren't appended to each other, creating a string of urls that don't link to anywhere.</p>\n\n<pre><code>$(document).ready(function(){\n   $.getJSON(\"data.php\", function(data){\n     for(i = 0; i &lt; 5; i++){\n         $(\"#tempDiv\").append(data.justIn[i].dataLink+ '  ');\n         $(\"#contentHere\").append(\"&lt;a href=\\\"#tempDiv\\\"&gt;Click to go to the div link&lt;/a&gt;\");\n         //I need to clear the contents of tempDiv here\n  }  \n   });\n});\n</code></pre>\n\n<p>Solutions to clearing the temporary contents of the div as I go?</p>\n",
            "last_activity_date": 1276538196,
            "question_id": 3039310,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "html"
            ],
            "title": "How do I clear the text contents of a div in javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is not. Unfortunately this is a big deal.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Bleh. It's a major bummer you can't overload the indexer operator in JavaScript. Oh well. We'll just have to be creative and come up with a different solution. This is a good thing (and fun). :-)</p>\n\n<p>LLer, the solution you settle with is a damn good one. Kudos. It's refreshing to come across people who truly understand JavaScript to that degree. </p>\n\n<p>After reading this question I was struck with an epic idea and wrote up some code for the fun of it. My solution to the problem is very similar to yours and many others that have been done before. But, I feel I came up with something unique and very neat so I want to share it. </p>\n\n<p>So I'm hosting a project of mine on CodePlex where I use a very jQuery-esque technique for defining properties (self-contained getter/setter functions) very similar to the one you're using. For the solution I came up with I simply just extrapolated from this pre-existing code of mine. Here's my approach toward the lazy loading of array indexes. Starting from the beginning...</p>\n\n<p>Let's consider a property named \"PageSize\". Here's how the property would be used with my technique: </p>\n\n<pre><code>var MyClass = function() { }; // MyClass constructor.\n\nvar instance = new MyClass();\ninstance.PageSize(5);\n\nalert(instance.PageSize());\n</code></pre>\n\n<p>Take notice that the property is a single function where providing a value as the first parameter invokes the setter and leaving out the parameter invokes the getter. The \"PageSize\" property would be defined as part of the MyClass class like so:</p>\n\n<pre><code>MyClass.prototype.PageSize = function(v) { return this.GetSetProperty(\"PageSize\", v, myFunctionThatDoesLazyLoading); };\n</code></pre>\n\n<p>The property function is merely a wrapper around a call to the utitily GetSetProperty method which does the actual getting and setting. Here's a snippet of the GetSetProperty function:</p>\n\n<pre><code>Object.prototype.GetSetProperty = function(name, value, loadFunction) {\n    if (!this.Properties)\n    {\n        this.Properties = {};\n    }\n\nif (value)\n{\n    this.Properties[name] = value;\n}\nelse\n{       \n    if (!this.Properties[name] &amp;&amp; loadFunction)\n    {\n        this.Properties[name] = loadFunction();\n    }\n\n    return this.Properties[name]; // This will return \"undefined\" if property doesn't exist or the loadFunction wasn't provided.\n}\n};\n</code></pre>\n\n<p>So that handles properties. But, to provide a means to access indexed values of a possible property of Array type I modify this code further like so:</p>\n\n<pre><code>Object.prototype.GetSetProperty = function(name, value, loadFunction, index) {\n  if (!this.Properties)\n  {\n    this.Properties = {};\n  }\n\n  if (typeof index === \"number\" &amp;&amp; this.Properties[name] &amp;&amp; this.Properties[name].constructor == Array)\n  {\n    return this.GetSetArrayProperty(name, index, value, loadFunction);\n  }\n  else \n  {\n    value = index;\n  }\n\n  if (value)\n  {\n    this.Properties[name] = value;\n  }\n  else\n  {    \n    if (!this.Properties[name] &amp;&amp; loadFunction)\n    {\n      this.Properties[name] = loadFunction();\n    }\n\n    return this.Properties[name]; // This will return \"undefined\" if property doesn't exist or the loadFunction wasn't provided.\n  }\n};\n\n\nObject.prototype.GetSetArrayProperty = function(name, index, value, loadFunction) {\n  if (value)\n  {\n    this.Properties[name][index] = value;\n  }\n  else\n  {\n    if (!this.Properties[name][index] &amp;&amp; loadFunction)\n    {\n      this.Properties[name][index] = loadFunction();\n    }\n\n    return this.Properties[name][index];\n  }\n};\n</code></pre>\n\n<p>The prototype declaration would need to be modified like so:</p>\n\n<pre><code>MyClass.prototype.PageSize = function(i, v) { return this.GetSetProperty(\"PageSize\", v, myFunctionThatDoesLazyLoading, i); };\n</code></pre>\n\n<p>Everyone reading this can access a working set of the code here: <a href=\"http://jsbin.com/ajawe/edit\" rel=\"nofollow\">http://jsbin.com/ajawe/edit</a></p>\n\n<p>Here's a complete listing of the code with tests:</p>\n\n<pre><code>Object.prototype.GetSetProperty = function(name, value, loadFunction, index) {\n  if (!this.Properties)\n  {\n    this.Properties = {};\n  }\n\n  if (typeof index === \"number\" &amp;&amp; this.Properties[name] &amp;&amp; this.Properties[name].constructor == Array)\n  {\n    return this.GetSetArrayProperty(name, index, value, loadFunction);\n  }\n  else \n  {\n    value = index;\n  }\n\n  if (value)\n  {\n    this.Properties[name] = value;\n  }\n  else\n  {    \n    if (!this.Properties[name] &amp;&amp; loadFunction)\n    {\n      this.Properties[name] = loadFunction();\n    }\n\n    return this.Properties[name]; // This will return \"undefined\" if property doesn't exist or the loadFunction wasn't provided.\n  }\n};\n\n\nObject.prototype.GetSetArrayProperty = function(name, index, value, loadFunction) {\n  if (value)\n  {\n    this.Properties[name][index] = value;\n  }\n  else\n  {\n    if (!this.Properties[name][index] &amp;&amp; loadFunction)\n    {\n      this.Properties[name][index] = loadFunction();\n    }\n\n    return this.Properties[name][index];\n  }\n};\n\n\n// Here's a nifty function that declares the properties for you.\nFunction.prototype.CreateProperty = function(propertyName, loadFunction) {\n  eval(\"this.prototype['\" + propertyName.toString() + \"'] = function(i, v) { return this.GetSetProperty('\" + propertyName.toString() + \"', v, \" + eval(loadFunction) + \", i); };\");\n};\n\n\n\n\nvar myFunctionThatDoesLazyLoading = function() {\n  return \"Ahoy!\";\n};\n\n\nvar MyClass = function() { }; // MyClass constructor.\nMyClass.prototype.PageSize = function(i, v) { return this.GetSetProperty(\"PageSize\", v, myFunctionThatDoesLazyLoading, i); };\n\nvar instance = new MyClass();\nalert(instance.PageSize()); // PageSize is lazy loaded.\n\ninstance.PageSize(5); // PageSize is re-assigned.\nalert(instance.PageSize()); // Returns the new value.\n\ninstance.PageSize([1, 2, 3]); // PageSize is re-assigned to have an Array value.\nalert(instance.PageSize(2)); // Returns the value at index 2 of the Array value.\n\ninstance.PageSize(2, \"foo\"); // Re-assigns the value at index 2.\nalert(instance.PageSize(2)); // Returns the new value at index 2.\n\nMyClass.CreateProperty(\"NewProp\", function() { return [\"a\", \"b\", \"c\"]; }); // Demo of the CreateProperty function.\nalert(instance.NewProp());\nalert(instance.NewProp(1));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Ok, unless I misunderstood your question, I believe I have found a simple solution which does not require a so-called \"lazy_push\" function.</p>\n\n<p>Following the method from my previous answer, you create a MyArray Class:</p>\n\n<pre><code>function MyArray(){\n     this.object = [];\n }\n\nMyArray.prototype.push = function(what){\n     this.object.push(what);\n}\n</code></pre>\n\n<p>Now the important part is the getter function, we will create a getIdx() function to grab the value out of the array.  The function then uses the 'typeof' operator to determine if the returned value is a function.  If it is, return the value returned from the function, if not return the original value.  </p>\n\n<p>Code makes more sense:</p>\n\n<pre><code>MyArray.prototype.getIdx = function(which){\n     if(typeof this.object[which] == 'function'){\n         alert(\"a function\");\n         //NOTICE THE '()' AT THE END OF THE NEXT LINE!!!\n         return this.object[which]();\n     }\n     return this.object[which];\n }\n</code></pre>\n\n<p>Hopefully if I didn't completely answer your question you can figure it out from here.</p>\n\n<p>&lt;--------- My original post -------------></p>\n\n<p>Not really an answer, but a few important points.</p>\n\n<ol>\n<li><p>There are no real arrays in Javascript, an Array is just an extended Object (as is everything in JS)</p></li>\n<li><p>You should ideally never add prototype functions to the native objects in JS, you might accidentally overwrite an existing property, or create confusing errors down the line.  For instance, adding to the prototype of Object is going to add to every single Object in JS (which is everything), you need to make absolutely sure that you want every type in JS to have that property.  This is just dangerous because if you accidentally overwrite the actual Array() or Object() functions, you will break javascript in the browser, period, a refresh of the page won't fix it.</p></li>\n<li><p>Rather than adding to the prototype of the Object you are modifying, create a new Object that extends it.  For instance if you want to extend the Array class:</p>\n\n<pre><code>//create the constructor, \n//with an object variable that holds the object you wish to extend\nfunction MyArray(){\n     this.object = [];\n}\n\n\n//create functions which reference the native functions of the object\nMyArray.prototype.push = function(what){\n     this.object.push(what);\n}\n\n\n//Etc... Etc....  Etc.....\n</code></pre></li>\n</ol>\n\n<p>Its not necessarily fun writing all the accessor methods for native Object functions, but it keeps the Javascript engine safe.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't particularly like this answer, but could you store your \"variable\" as an expression string, and then eval() it when you need it? Not ideal, but it's compact...</p>\n\n<pre><code>var x = 10, arr = [];\narr.push(\"x + 10\");\nalert(eval(arr[0]));\nx = 20;\nalert(eval(arr[0]));\n</code></pre>\n\n<p>I've tested it, and it works, even if it's not <em>exactly</em> what you're looking for.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to add elements to an array that are lazy-evaluated. This means that the value for them will not be calculated or known until they are accessed. This is like a <a href=\"http://stackoverflow.com/questions/2703304/how-do-i-compute-a-variable-in-javascript-if-and-only-if-it-is-used\">previous question I asked</a> but for objects.</p>\n\n<p>What I ended up doing for objects was</p>\n\n<pre><code>Object.prototype.lazy = function(var_name, value_function) {\n  this.__defineGetter__(var_name, function() {\n    var saved_value = value_function();\n    this.__defineGetter__(var_name, function() {\n      return saved_value;\n    });\n    return saved_value;\n  });\n}\n\nlazy('exampleField', function() {\n  // the code that returns the value I want\n});\n</code></pre>\n\n<p>But I haven't figured out a way to do it for real Arrays. Arrays don't have setters like that. You could push a function to an array, but you'd have to call it as a function for it to return the object you really want. What I'm doing right now is I created an object that I treat as an array.</p>\n\n<pre><code>Object.prototype.lazy_push = function(value_function) {\n  if(!this.length)\n    this.length = 0;\n  this.lazy(this.length++, value_function);\n}\n</code></pre>\n\n<p>So what I want to know is, is there a way to do this while still doing it on an array and not a fake array?</p>\n\n<p>UPDATE: The following function works only if the value_function returns a primitive data type.</p>\n\n<pre><code>Array.prototype.lazy_push = function(value_function) {\n  var a = this,\n  i = this.length;\n  this.push({\n    toString: function() {\n      return a[i] = value_function();\n    }\n  });\n}\n</code></pre>\n\n<p>If you try to push say an object that has properties in it, you won't be able to access the properties until you access the object directly. This doesn't happen with setters, that's why I want some kind of setting syntax for Javascript. For now I will be using the fake array, which is enough for what I'm doing.</p>\n",
            "last_activity_date": 1277400086,
            "question_id": 2952573,
            "score": 8,
            "tags": [
                "javascript",
                "arrays",
                "lazy-evaluation"
            ],
            "title": "Any way to define getters for lazy variables in Javascript arrays?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>nope, that is the shorthand.</p>\n\n<p>as an alternative, you can do a <code>switch</code></p>\n\n<pre><code>switch (value) {\ncase 1 :\ncase 16 :\ncase -500 :\n    ....\n}\n</code></pre>\n\n<p>which is easier to manage if you need a lot of possible values, but actually your version is shorter anyway :)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var a = [1, 16, -500, 42.42, 'something'];\nvar value = 42;\nif (a.indexOf(value) &gt; -1){\n// blah blah blah\n}\n</code></pre>\n\n<p><strong>Upd:</strong>\nUtility function sample as proposed in comments:</p>\n\n<pre><code>Object.prototype.in = function(){\n  for(var i = 0; i &lt; arguments.length; i++){\n    if (this == arguments[i]) return true;\n  }\n  return false;\n}\n</code></pre>\n\n<p>So you can write:</p>\n\n<pre><code>if (value.in(1, 16, -500, 42.42, 'something')){\n// blah blah blah\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You could extend the array object:</p>\n\n<pre><code>Array.prototype.contains = function(obj) {\n  var i = this.length;\n  while (i--) {\n    if (this[i] == obj) {\n      return true;\n    }\n  }\n  return false;\n}\n</code></pre>\n\n<p>Then if you store all those values in an array you could do something like MyValues.contains(value)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>switch is an acceptable choice.  You can also use a map, depending on the complexity of the problem (assuming you have more than you put in your example).</p>\n\n<pre><code>var accept = { 1: true, 16: true, '-500': true, 42.42: true, something: true };\nif (accept[value]) {\n  // blah blah blah\n}\n</code></pre>\n\n<p>accept could be generated progamatically from an array of course.  Depends really on how much you plan on using this pattern. :/</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Well, you could use a switch statement...</p>\n\n<pre><code>switch (value) {\n  case 1    : // blah\n              break;\n  case 16   : // blah\n              break;\n  case -500 : // blah\n              break;\n  case 42.42: // blah\n              break;\n  case \"something\" : // blah\n                     break;\n}\n</code></pre>\n\n<p>If you're using JavaScript 1.6 or greater, you can use the indexOf notation on an array:</p>\n\n<pre><code>if ([1, 16, -500, 42.42, \"something\"].indexOf(value) !== -1) {\n   // blah\n}\n</code></pre>\n\n<p>And for the ultimate in hackiness, you can coerce the values to strings (this works for all browsers):</p>\n\n<pre><code>if (\"1,16,-500,42.42,something\".indexOf(value) !== -1) {\n   // blah\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var value= -55;\nswitch(value){\n    case 1: case 16: case -55: case 42.5: case 'something': \n        alert(value); break;        \n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In an effort to make yet another way of doing it...</p>\n\n<pre><code>if (/^(1|16|-500|42.42|something)$/.test(value)) {\n  // blah blah blah\n}\n</code></pre>\n\n<p>No need to extend array prototypes or anything, just use a quick regexp to test the value!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a better way to write the following conditional in javascript?</p>\n\n<pre><code>if ( value == 1 || value == 16 || value == -500 || value == 42.42 || value == 'something' ) {\n  // blah blah blah\n}\n</code></pre>\n\n<p>I hate having all of those logical ORs strung together.  I'm wondering if there is some kind of shorthand.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1284064158,
            "question_id": 2932131,
            "score": 8,
            "tags": [
                "javascript",
                "if-statement",
                "logical-operators"
            ],
            "title": "short hand for chaining logical operators in javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It saves a reference to the parent element of <code>this</code>. So for example:</p>\n\n<pre><code>&lt;div id=\"parent\"&gt;\n  &lt;span id=\"child\"&gt;\n  &lt;/span&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>In this case, if <code>this</code> corresponds to the <code>child</code> span, <code>parentElement</code> would correspond to the <code>parent</code> div.</p>\n\n<p>That said, you should always use <code>parentNode</code> instead of <code>parentElement</code>, as <code>parentElement</code> is proprietary and (I believe) only works with IE. According to <a href=\"http://msdn.microsoft.com/en-us/library/ms534327%28VS.85%29.aspx\" rel=\"nofollow\">MSDN</a>:</p>\n\n<blockquote>\n  <p>There is no public standard that applies to this property.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>It's the same as <code>this.parentNode</code>: it gives you the node that contains <code>this</code> as a childNode. <code>this</code> will be <code>pg</code>, presumably an Element of some kind; <code>this.parentNode</code> will be the Element that contains it, or the <code>document</code> object if <code>pg</code> is the root element.</p>\n\n<p><code>parentElement</code> is a non-standard <a href=\"http://msdn.microsoft.com/en-us/library/ms534327%28VS.85%29.aspx\">IE extension</a>. Since IE also supports the standard property <code>parentNode</code>, <code>parentElement</code> should never be used.</p>\n\n<p>Alternatively, maybe it's just an arbitrary object with a property called <code>parentElement</code>, in which case it could be anything at all. There's no real way to tell from that code, but it would be unusual to be setting arbitrary properties like <code>myfunc</code> on an Element node.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>It's impossible to know without some context.  We don't what xx is, nor do we know for sure what the \"this\" object is. parentElement MAY be a property to pg, but then again this function may be called in a different way, for instance if somewhere it is assigned as an onclick function:</p>\n\n<p>someElement.onclick = pg.myfunc;</p>\n\n<p>In which case it would be a property of someElement.</p>\n\n<p>As others have said, if \"this\" is a DOM element, you should be using parentNode not parentElement, since the latter is non-standard.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<pre><code>pg.myfunc = function(){\n    var i = 1, j = 2;\n    this.selected = 1;\n    xx.newObject = this.parentElement;\n\n...\n</code></pre>\n\n<p>What is <code>xx.newObject = this.parentElement;</code> doing?</p>\n",
            "last_activity_date": 1334805254,
            "question_id": 2899196,
            "score": 8,
            "tags": [
                "javascript",
                "javascript-events"
            ],
            "title": "What is this.parentElement?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>if (currentMonth &lt; 10) { currentMonth = '0' + currentMonth; }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>An alternative way:</p>\n\n<pre><code>var currentMonth=('0'+(currentDate.getMonth()+1)).slice(-2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 31
                },
                {
                    "body": "<p>In order for the accepted answer to return a string consistently, it should be:</p>\n\n<pre><code>if(currentMonth &lt; 10) {\n    currentMonth = '0' + currentMonth;\n} else {\n    currentMonth = '' + currentMonth;\n}\n</code></pre>\n\n<p>Or:</p>\n\n<pre><code>currentMonth = (currentMonth &lt; 10 ? '0' : '') + currentMonth;\n</code></pre>\n\n<p>Just for funsies, here's a version without a conditional:</p>\n\n<pre><code>currentMonth = ('0' + currentMonth).slice(-2);\n</code></pre>\n\n<p>Edit: switched to <code>slice</code>, per Gert G's answer, credit where credit is due; <code>substr</code> works too, I didn't realize it accepts a negative <code>start</code> argument</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you do this</p>\n\n<pre><code>var currentDate = new Date();\nvar currentMonth = currentDate.getMonth() + 1;\n</code></pre>\n\n<p>then currentMonth is a number, which you can format as you want, see this question that will help you with formatting: <a href=\"http://stackoverflow.com/questions/1127905/how-can-i-format-an-integer-to-a-specific-length-in-javascript\">http://stackoverflow.com/questions/1127905/how-can-i-format-an-integer-to-a-specific-length-in-javascript</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>for the date:</p>\n\n<pre><code>(\"0\" + this.getDate()).slice(-2)\n</code></pre>\n\n<p>and similar for the month:</p>\n\n<pre><code>(\"0\" + (this.getMonth() + 1)).slice(-2)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>One line solution:</p>\n\n<pre><code>var currentMonth = (currentDate.getMonth() &lt; 10 ? '0' : '') + currentDate.getMonth();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>How do I retrieve the month from the current date in <code>mm</code> format?  (i.e. \"05\")</p>\n\n<p>This is my current code:</p>\n\n<pre><code>var currentDate = new Date();\nvar currentMonth = currentDate.getMonth() + 1;\n</code></pre>\n",
            "last_activity_date": 1419004432,
            "question_id": 2878184,
            "score": 8,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Get month in mm format in javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>How's this?</p>\n\n<pre><code>var Cat = Function (a, b, c, d, e, f, g, h, i, j, k , l, m, n){\n   Animal.apply(this, arguments);\n};\n\n// inherit functions if any\nCat.prototype = new Animal;\n\nvar y = new Cat(1,2,3....);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>It quickly becomes tedious to remember the order and meaning of long lists of parameters like this.</p>\n\n<p>You can add some flexibility if you pass the properties of a new Animal as an object-\nand it is not so hard to remember as a long list of argument indexes.</p>\n\n<pre><code>function Animal(features){\n for(var p in features){\n  this[p]= features[p];\n }\n};\n\nYou can give every cat some basic cat features automatically, \nand add specifics when you make a new cat.\n\nfunction Cat(features){\n for(var p in features){\n  this[p]= features[p];\n }\n}\nCat.prototype= new Animal({legs: 4, eats: 'meat', type: 'mammal', whiskers: true});\nCat.prototype.constructor=Cat;\n\nvar Tiger= new Cat({tail: true, hunter: true});\nTiger begins with these properties:\n\ntail: true\nhunter: true\nlegs: 4\neats: meat\ntype: mammal\nwhiskers: true\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>So I'm learning Javascript and all its' prototype goodness, and I am stumped over the following:</p>\n\n<p>Say I have this</p>\n\n<pre><code>var Animal = function (a, b, c, d, e, f, g, h, i, j, k , l, m, n){\n   this.a = a;\n   this.b = b;\n   //...etc...\n};\n\nvar x = new Animal(1,2,3....);\n</code></pre>\n\n<p>Now how do I create a Cat constructor function that inherits from the Animal constructor function such that I don't have to type the super long arguments again? </p>\n\n<p>In other words I don't want to be doing this:</p>\n\n<pre><code>var Cat = function (a, b, c, d, e, f, g, h, i, j, k , l, m, n){\n   this.a = a;\n   this.b = b;\n   //...etc...\n};\n\n// inherit functions if any\nCat.prototype = new Animal;\n\nvar y = new Cat(1,2,3....);\n</code></pre>\n\n<p>Thanks in advance!\nj</p>\n",
            "last_activity_date": 1266203608,
            "question_id": 2263353,
            "score": 8,
            "tags": [
                "javascript",
                "inheritance",
                "constructor"
            ],
            "title": "How to get a constructor function to inherit from a constructor function in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There are several ways to achieve it:</p>\n\n<p>Using the unary plus operator:</p>\n\n<pre><code>var n = +str;\n</code></pre>\n\n<p>The <code>Number</code> constructor:</p>\n\n<pre><code>var n = Number(str);\n</code></pre>\n\n<p>The <code>parseFloat</code> function:</p>\n\n<pre><code>var n = parseFloat(str);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p><code>var f = parseFloat(str);</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var num = Number(str);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>var str = '0.25';\n</code></pre>\n\n<p>How to convert the above to <code>0.25?</code></p>\n",
            "last_activity_date": 1264408302,
            "question_id": 2130454,
            "score": 8,
            "tags": [
                "javascript",
                "numerical"
            ],
            "title": "Javascript to convert string to number?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You declared an anonymous function with</p>\n\n<pre><code>function(){\n</code></pre>\n\n<p>You should declare it as</p>\n\n<pre><code>function testfunc(){\n</code></pre>\n\n<p>to get the name printed.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<pre><code>/function\\s+(\\[^\\s\\(]+)/\n</code></pre>\n\n<p>What's with the backslash before <code>[</code>? I don't think you want a literal square bracket here. Without that it should work.</p>\n\n<p>Although I'd <strong>strongly</strong> recommend against anything to do with sniffing function name or especially sniffing caller function. Almost anything you might do using these hideous hacks will be better done using some combination of closures and lookups.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>First of all, the function doesn't have a name. The function name is what you put in-between <code>function</code> and the arguments list <code>(...)</code>. Here's how to get a function's name (don't use the <code>name</code> property, as it can be changed):</p>\n\n<pre><code>var fName = arguments.callee.toString(0).match(\n  /^function\\s*(?:\\s+([\\w\\$]*))?\\s*\\(/\n);\nfName = (fName ? fName[1] : \"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The typical arguments.callee hacks don't work here because what you've done is assigned an anonymous function as the value for the object's 'testfunc' key.  In this case the hacking even gets worse, but it can be done, as follows:</p>\n\n<pre><code>var testobj = {\n    testfunc: function(){\n      for (var attr in testobj) {\n              if (testobj[attr] == arguments.callee.toString()) {\n                  alert(attr);\n                  break;\n                }\n            }\n    }\n}\ntestobj.testfunc();\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I found that if you simply log the function object, like so:</p>\n\n<pre><code>console.log(arguments.callee)\n</code></pre>\n\n<p>or</p>\n\n<pre><code>console.debug(arguments.callee)\n</code></pre>\n\n<p>that you simply get the function name in the console log with some options.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>On firefox 3.5, Safari 5, and Chrome 6.0 you can use:</p>\n\n<pre><code>function myFunctionName() {\n alert(\"Name is \" + arguments.callee.name );\n}\n\nmyFunctionName();\n</code></pre>\n\n<p>You can also get the function that called the current one using arguments.callee.caller.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think there's a much cleaner and elegant solution to all this. Assuming the function is a member of some higher-level object&mdash;and that's always going to be the case, even if the function's owner is \"window\" or some other global object, we can access the global object via the <b>this</b> keyword, we can access the function itself via <b>arguments.callee</b> and we can access all the parent's object (function) names via <b>for (var o in this)</b>, so you should be able to get the desired information fairly easily as...</p>\n\n<pre><code>returnMyName = function() {\n  for (var o in this) {\n    if (arguments.callee===this[o]) return o;\n  }\n};\n</code></pre>\n\n<p>That should be robust and avoid any weird IE browser behaviors accessing named functions, etc.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>Function.prototype.getName = function(fn) {\n    if(Function.name || Function.prototype.name) return this.name;\n    return this.toString().match(/^function\\s+(\\w+)\\s*\\(/)[1];\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm trying to get the name of the currently running function. From what I've read, this should be possible using:</p>\n\n<pre><code>(arguments.callee.toString()).match(/function\\s+(\\[^\\s\\(]+)/)\n</code></pre>\n\n<p>However, when I run this in Firefox and Safari (latest versions on Mac) the name is not returned.</p>\n\n<p>console.log( arguments.callee ) returns the source of the function, but not the assigned name. arguments.callee.name returns an empty string.</p>\n\n<p>My sample code is as follows:</p>\n\n<pre><code>var testobj = {\n    testfunc: function(){\n        console.log( (arguments.callee.toString()).match(/function\\s+(\\[^\\s\\(]+)/) );\n    }\n}\ntestobj.testfunc();\n</code></pre>\n",
            "last_activity_date": 1361291351,
            "question_id": 1935521,
            "score": 8,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "javascript - arguments.callee.toString() and arguments.callee.name does not return function name"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Yes. Copy / paste here: <a href=\"http://jsbeautifier.org/\" rel=\"nofollow\">http://jsbeautifier.org/</a></p>\n\n<p>That will only <strong>reformat</strong> the layout. You cannot restore variable/function names.</p>\n\n<p><strong>Related on MetaSO</strong>: <a href=\"http://meta.stackexchange.com/questions/9094/can-we-get-an-un-obfuscated-version-of-the-vote-object\">Can we get an un-obfuscated version of the vote object?</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>I think something like Eclipse can auto-format it for you. Won't be able to get back any of the original variable names though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If what you are trying to do is see the original variables used to describe the code, then no.  You can always take the time to run it through a formatter to make it easier to read visually but the variable and function names are lost forever.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In your specific example, you should be able to uncompress it.</p>\n\n<p>Note, however, that most compressors will rename variables.  At that point, the code is, IMO, no longer human readable.</p>\n\n<pre><code>var vote = function() {\n    var k = {\n        informModerator: -1,\n        undoMod: 0,\n        acceptedByOwner: 1,\n        upMod: 2,\n        downMod: 3,\n        offensive: 4,\n        favorite: 5,\n        close: 6,\n        reopen: 7,\n        deletion: 10,\n        undeletion: 11,\n        spam: 12\n    };\n    var f = imagePath + \"vote-arrow-down.png\";\n    var c = imagePath + \"vote-arrow-down-on.png\";\n    var x = imagePath + \"vote-arrow-up.png\";\n    var w = imagePath + \"vote-arrow-up-on.png\";\n    var A = imagePath + \"vote-favorite-on.png\";\n    var o = imagePath + \"vote-favorite-off.png\";\n    var l = function() {\n        var C = '&lt;a href=\"/users/login?returnurl=' + escape(document.location) + '\"&gt;login or register&lt;/a&gt;';\n        $(\"div.vote\").find(\"img\").not(\".vote-accepted\").unbind(\"click\").click(function(D) {\n            u($(D.target), \"Please \" + C + \" to use voting.\")\n        });\n        z().unbind(\"click\").click(function(D) {\n            u($(D.target), \"Please \" + C + \" to flag this post.\")\n        })\n    };\n    var B = function(C) {\n        if (!C) {\n            C = \"div.vote\"\n        }\n        $(C).find(\"img.vote-\")\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to uncompress (if that's the right term even) for code like below?</p>\n\n<pre><code>var vote=function(){var k={informModerator:-1,undoMod:0,acceptedByOwner:1,upMod:2,downMod:3,offensive:4,favorite:5,close:6,reopen:7,deletion:10,undeletion:11,spam:12};var f=imagePath+\"vote-arrow-down.png\";var c=imagePath+\"vote-arrow-down-on.png\";var x=imagePath+\"vote-arrow-up.png\";var w=imagePath+\"vote-arrow-up-on.png\";var A=imagePath+\"vote-favorite-on.png\";var o=imagePath+\"vote-favorite-off.png\";var l=function(){var C='&lt;a href=\"/users/login?returnurl='+escape(document.location)+'\"&gt;login or register&lt;/a&gt;';$(\"div.vote\").find(\"img\").not(\".vote-accepted\").unbind(\"click\").click(function(D){u($(D.target),\"Please \"+C+\" to use voting.\")});z().unbind(\"click\").click(function(D){u($(D.target),\"Please \"+C+\" to flag this post.\")})};var B=function(C){if(!C){C=\"div.vote\"}$(C).find(\"img.vote-\n</code></pre>\n\n<p>I did search stackoverflow for this question and found no results</p>\n",
            "last_activity_date": 1297923421,
            "question_id": 1190875,
            "score": 8,
            "tags": [
                "javascript",
                "compression"
            ],
            "title": "Can compressed javascript be uncompressed"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I don't think you can test for the back button specifically, but I believe you can check the browser's history position with Javascript.</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<p>Isn't that the behaviour you want, so they don't double-submit using the back button?</p>\n\n<p>Anyway, you could set a cookie on the following page, and detect that on load on the page with the form.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Yes. In javascript you can use visited.value</p>\n\n<pre><code>function checkrefresh()\n var visited = getCookie(\"visited\");  \n{\n        if((form.visited.value == '' || form.visited.value == null) &amp;&amp; (visited != '1') ) \n        {\n\t        document.form.visited.value = \"1\";\n                    document.cookie = \"visited=1\";\n                    //here you set it to something so that next time they go to the page it will no longer be nothing and you can 'disable the button' see below.\n\n        }\n        else\n        {\n            document.form.submitbutton.disabled=true;\n        }\n    } \n\nfunction getCookie(name)\n{\nvar re = new RegExp(name + \"=([^;]+)\");\nvar value = re.exec(document.cookie);\nreturn (value != null) ? unescape(value[1]) : null;\n}\n</code></pre>\n\n<p>you would call this in the onload tag FYI.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The answer by @tkotitan was probably correct when he wrote it. His answer led me to my solution. It's not foolproof, but it might be \"good enough\" to help in some situations.</p>\n\n<p>I improved my script and replaced it with the following. This version is for an intermediate page that now works as intermediate in both directions.</p>\n\n<pre><code>&lt;?php\nif($_SERVER['QUERY_STRING']=='')\n{\n    echo '&lt;a href=\"go_back_test.php?page=1\"&gt;Go forward&lt;/a&gt;';\n}\nelseif($_GET['page']!=2)\n{\n    echo 'You cannot stay here.';\n    echo '\n    &lt;script type=\"text/javascript\"&gt;\n    function test()\n    {\n        if (document.getElementById(\"detectback\").value==\"goneback\")\n        {\n            document.getElementById(\"detectback\").value=history.length;\n        }\n        if (document.getElementById(\"detectback\").value==history.length)\n        {\n            document.getElementById(\"detectback\").value=\"goneforward\";\n            window.location = \"go_back_test.php?page=2\"\n        }\n        else\n        {\n            document.getElementById(\"detectback\").value=\"goneback\";\n            window.history.back();\n        }\n    }\n    function updateform()\n    {\n        if(document.getElementById(\"detectback\").value==\"\")\n        {\n            document.getElementById(\"detectback\").value=history.length;\n        }\n    }\n    &lt;/script&gt;\n    &lt;img src=\"spacer.gif\" onload=\"updateform(); test();\"&gt;&lt;br&gt;\n    &lt;form&gt;\n        &lt;input id=\"detectback\" type=\"text\" value=\"\" style=\"display: none;\"&gt;\n    &lt;/form&gt;\n    ';\n}\nelse\n{\n    echo 'Welcome to page 2';\n}\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p><strong>Edit</strong>:  What I really need to know is if there is any javascript event that will reliably fire when the user arrives at the page via the back button.  I tried the <code>onload</code> event for the <code>body</code> element, but it doesn't fire on Firefox or Safari.</p>\n\n<p><hr /></p>\n\n<p>I'm working with some old code that tries to prevent double-submission of form data by disabling all form submission buttons as soon as the user clicks one (by listening to the form's onSubmit event).  This code is applied to every form in the app, regardless of whether double-submission would even be a problem.</p>\n\n<p>The problem is that if the user hits the back button in Firefox or Safari, all the submit buttons are still disabled when he gets to the page.  On Firefox, they are even disabled after a refresh (only a Ctrl+F5 refresh will do it)!</p>\n\n<p>I've tried listening to <code>body</code>'s <code>onLoad</code> event, but FF and Safari don't fire that when you get to the page via back button.  (Interestingly, it is fired on a soft refresh on FF, even though the button stays disabled.)</p>\n\n<p><hr /></p>\n\n<p>Here's a very simple HTML doc that will show what I mean:</p>\n\n<pre><code>&lt;html&gt;&lt;body&gt;\n&lt;form name=\"theForm\" id=\"theForm\" action=\"test2.html\"\n      onSubmit=\"document.theForm.theButton.disabled = true;\"&gt;\n  &lt;input id=\"theButton\" type=\"submit\" name=\"theButton\" value=\"Click me!\" /&gt;\n&lt;/form&gt;\n&lt;/body&gt;&lt;/html&gt;\n</code></pre>\n\n<p>Note: I've tested on WinXP with IE8, FF3.5, Safari 4, Opera 9, and Chrome 2.0.  Only Safari and FF leave the button disabled when you use back to get to them.</p>\n",
            "last_activity_date": 1361886806,
            "question_id": 1134106,
            "score": 8,
            "tags": [
                "javascript",
                "cross-browser"
            ],
            "title": "Can I detect when a user gets to a page using the back button?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>try the following. Demo <a href=\"http://pastebin.me/4a55b25f3253f\">here</a></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n\n       function unloadPage(){\n           return \"dont leave me this way\";\n       }\n\n       window.onbeforeunload = unloadPage;\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>It's possible bind the \"onbeforeunload\" event with jQuery:</p>\n\n<pre><code>$(window).bind('beforeunload', function(e) {\n    return \"ATTENZIONE!!\";\n});\n</code></pre>\n\n<p>It works!!</p>\n",
                    "is_accepted": false,
                    "score": 9
                }
            ],
            "body": "<p>I have a page with a form that is submittes via ajaxSubmit() (so, without changing the page).</p>\n\n<p>My goal is that, when the user try to change page (or even to close the browser), i ask him if really want to exit the page without sending the form (exactly as gmail does).</p>\n\n<p>Gmail for example do this with a window.confirm-like popup, but if it is possible, i'll like to handle it with custom messages and options.</p>\n\n<p>jQuery have the unload event:</p>\n\n<pre><code>$(window).unload( function () { alert(\"Bye now!\"); } );\n</code></pre>\n\n<p>but it permits me just to do something before exit the page; i need to 'block' the page exit, if the user click the relative button.</p>\n\n<p>So, how to handle (and cancel) the page-exit event?</p>\n",
            "last_activity_date": 1347550207,
            "question_id": 1102618,
            "score": 8,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to prevent the user to change page with jQuery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>When <code>undefined</code> is cast to a string (which the regex does), it produces the string <code>\"undefined\"</code>, which is then matched.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>/(\\w)(\\w)(\\w)(\\w)(\\w)/.exec(undefined);<br />\nreturns: [\"undef\", \"u\", \"n\", \"d\", \"e\", \"f\"]</p>\n\n<p>It is treating undefined as the string \"undefined\".</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>See ECMAScript Specification section 15.10.6.2 for RegExp.prototype.exec(<em>string</em>) which will be called from .match method.  match basically is exec when it's evaluated to true.</p>\n\n<p>Here is word for word from the specification:\nPerforms a regular expression match of string against the regular expression and returns an Array object containing the results of the match, or null if the string did not match\nThe string ToString(string) is searched for an occurrence of the regular expression pattern as follows:</p>\n\n<ol>\n<li>Let S be the value of ToString(string).</li>\n<li>Let length be the length of S.</li>\n<li>Let lastIndex be the value of the lastIndex property.</li>\n<li>Let i be the value of ToInteger(lastIndex).</li>\n<li>If the global property is false, let i = 0.</li>\n<li>If I &lt; 0 or I > length then set lastIndex to 0 and return null.</li>\n<li>Call [[Match]], giving it the arguments S and i. If [[Match]] returned failure, go to step 8;\notherwise let r be its State result and go to step 10.</li>\n<li>Let i = i+1.</li>\n<li>Go to step 6.</li>\n<li>Let e be r's endIndex value.</li>\n</ol>\n\n<p>As you can see it will translate any input to a string, so undefined becomes 'undefined' and that will match to true.</p>\n\n<p>Tested this as well outside the browser using JScript in command line and getting the same result.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>Why does the the RegExp <code>/^\\w+$/</code> match <code>undefined</code>?</p>\n\n<p>Example code:</p>\n\n<pre><code>alert(/^\\w+$/.test(undefined));\n</code></pre>\n\n<p>This will display true in Firefox 3 (only browser I tested it on).</p>\n",
            "last_activity_date": 1246850038,
            "question_id": 1085189,
            "score": 8,
            "tags": [
                "javascript",
                "regex",
                "firefox"
            ],
            "title": "Why does the JavaScript RegExp /^\\w+$/ match undefined?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This also happens on Safari, AFAIK.</p>\n\n<p>What you could certainly do is create a global try/catch block for all JS code instead of text parsing - which could be tricky if you come into things like:</p>\n\n<pre><code>(function ($){\n  $(function (){\n  });\n})(jQuery);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Opera 11.60+ supports <code>window.onerror</code>.</p>\n\n<p>Opera's <a href=\"http://dev.opera.com/articles/view/introduction-to-opera-dragonfly/\" rel=\"nofollow\">Dragonfly</a> supports <a href=\"http://dev.opera.com/articles/view/remote-debugging-with-opera-dragonfly/\" rel=\"nofollow\">remote debugging</a>. You might be able to <a href=\"https://dragonfly.opera.com/app/core-2-2/\" rel=\"nofollow\">hack it</a> (it's all written in JavaScript) and log errors yourself (unfortunately the protocol <a href=\"http://dev.opera.com/articles/view/opera-dragonfly-architecture/#scopeprotocol\" rel=\"nofollow\">isn't published yet</a>).</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>you can replace Error.prototype.toString in Opera!</p>\n\n<pre><code>window.onerror = function (msg) {\n  // send msg to http://errors.net/log.php, for example\n  (new Image()).src = 'http://errors.net/log.php?msg=' + encodeURIComponent(msg);\n};\nif (({}).toString.call(window.opera) === '[object Opera]') {\n (function () {\n   var x = Error.prototype.toString;\n   Error.prototype.toString = function () {\n     var msg = '';\n     try {\n       msg = x.apply(this, arguments);\n       if (typeof (window.onerror) === \"function\") {\n         window.onerror(msg, typeof (this) === 'object' ? this.stack : '', '');\n       }\n     } catch (e) {}\n     return msg;\n   };\n }());\n}\n</code></pre>\n\n<p>seems, it doesn't work for Opera 11.50... only for early versions ...</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>there is a mention here that Opera now supports window.onerror:</p>\n\n<p><a href=\"http://my.opera.com/ODIN/blog/2011/11/07/what-s-new-in-opera-development-snapshots-4-november-2011-edition\" rel=\"nofollow\">http://my.opera.com/ODIN/blog/2011/11/07/what-s-new-in-opera-development-snapshots-4-november-2011-edition</a></p>\n\n<p>but window.onerror does not seem to work in Opera Mini (e.g. user agent \"Opera/9.80 (J2ME/MIDP; Opera Mini/7.1.32422/30.3214; U; en) Presto/2.8.119 Version/11.10\"). This makes it really hard to debug javascript on mobiles with Opera Mini.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am currently working on a web application, I have a JS logging mechanism that Handles Javascript error that are not caught by the js code inside the page. I am using window.onerror to catch all such errors and log them else where.</p>\n\n<p>However, Problem is with Opera which does not have window.onerror event. one approach I could think of is, to string process all js functions code and insert try catch blocks inside those functions after body load. It does not work in many cases though, But, It at least works to some extent.</p>\n\n<p>I am sure this approach sucks, But, I could not think of anything better.\nPlease advise.</p>\n\n<p>Update: For now, I am calling the code below to Catch as many errors as I could.</p>\n\n<pre><code>function OnBodyLoad()\n{\n        var allElements = document.getElementsByTagName(\"*\");\n        for(var cnt = 0;cnt &lt; allElements.length;cnt++)\n        {\n            RegisterAllEvents(allElements[cnt]);\n        }\n}\nfunction RegisterAllEvents(objToProcess){\n    for(var cnt = 0;cnt &lt; objToProcess.attributes.length;cnt++){\n        if(IsAttributeAnEvent(objToProcess.attributes[cnt].name))\n        {\n            objToProcess.attributes[cnt].value =  'try{'+objToProcess.attributes[cnt].value+'}catch(err){LogError(\"'+ objToProcess.id+'\"'+ ',err);}';\n        }\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1371932996,
            "question_id": 645840,
            "score": 8,
            "tags": [
                "javascript",
                "opera"
            ],
            "title": "Mimic Window. onerror in Opera using javascript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This can be done. Just googled and got the following code</p>\n\n<pre><code>if (IE) { // grab the x-y pos.s if browser is IE\n    tempX = event.clientX + document.body.scrollLeft;\n    tempY = event.clientY + document.body.scrollTop;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can get mouse coordinats in browser <a href=\"http://www.codelifter.com/main/javascript/capturemouseposition1.html\" rel=\"nofollow\">like this</a>.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Source: <a href=\"http://javascript.internet.com/page-details/mouse-coordinates.html\" rel=\"nofollow\">http://javascript.internet.com/page-details/mouse-coordinates.html</a></p>\n\n<pre><code>&lt;form name=\"Show\"&gt;\n    X\n    &lt;input type=\"text\" name=\"MouseX\" value=\"0\" size=\"4\"&gt;\n    &lt;br&gt;\n    Y\n    &lt;input type=\"text\" name=\"MouseY\" value=\"0\" size=\"4\"&gt;\n    &lt;br&gt;\n&lt;/form&gt;\n\n&lt;script language=\"JavaScript\"&gt;\n    var IE = document.all ? true : false;\n    if (!IE) {\n        document.captureEvents(Event.MOUSEMOVE)\n    }\n    document.onmousemove = getMouseXY;\n    var tempX = 0;\n    var tempY = 0;\n    function getMouseXY(e) {\n        if (IE) {// grab the x-y pos.s if browser is IE\n            tempX = event.clientX + document.body.scrollLeft;\n            tempY = event.clientY + document.body.scrollTop;\n        } else {// grab the x-y pos.s if browser is NS\n            tempX = e.pageX;\n            tempY = e.pageY;\n        }\n        if (tempX &lt; 0) {\n            tempX = 0;\n        }\n        if (tempY &lt; 0) {\n            tempY = 0;\n        }\n        document.Show.MouseX.value = tempX;\n        document.Show.MouseY.value = tempY;\n        return true;\n    }\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://www.webreference.com/programming/javascript/mk/column2/\" rel=\"nofollow\">Here</a> is a compact function with a demonstration, it returns value with coordinates in .x and .y:</p>\n\n<pre><code>function mouseCoords(ev){\n\t// from http://www.webreference.com/programming/javascript/mk/column2/\n\tif(ev.pageX || ev.pageY){\n\t\treturn {x:ev.pageX, y:ev.pageY};\n\t}\n\treturn {\n\t\tx:ev.clientX + document.body.scrollLeft - document.body.clientLeft,\n\t\ty:ev.clientY + document.body.scrollTop  - document.body.clientTop\n\t};\n}\n</code></pre>\n\n<p>(I found quirksmode to be a good resource of JavaScript wisdom. <a href=\"http://www.quirksmode.org/js/events%5Fproperties.html#position\" rel=\"nofollow\">Here</a> is the some background of the function in case you want to dig deeper.)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Possible to get the current mouse coords with Javascript?</p>\n",
            "last_activity_date": 1376139184,
            "question_id": 604118,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Possible to get the current mouse coords with Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The IE version of prompt does not dynamically resize.</p>\n\n<p>You should only be using prompts for small messages, not whole paragraphs.\nlike</p>\n\n<p>e-mail:</p>\n\n<p>or</p>\n\n<p>username:</p>\n\n<p>You should have any explanation stuff inline on the web page. or better yet don't use prompt's at all and use inline forms.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You should probably not use <code>window.prompt</code> to begin with. It is largely frowned upon due to the fact it blocks the thread, and thus can halt your application. The web today has moved towards leveraging the asynchronous nature of JavaScript; this should distance us from things like <code>alert</code>, <code>prompt</code>, etc.</p>\n\n<p>Presently the <code>prompt</code> is not supported in Immersive Internet Explorer (\"Metro\"), Internet Explorer on the xbox, or Windows Web Applications (formerly Windows Store Applications). Instead, you are encouraged to leverage third-party tools and libraries (such as Bootstrap, jQuery UI, etc) for these types of needs.</p>\n\n<p>All of this being said, it is a genuine difference between Internet Explorer and other modern browsers, and as a result I have opened up an issue internally for the IE team to discuss.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You can use one of these alerts, even simpler than modals:</p>\n\n<p>If you use Bootstrap, Bootboxjs is for you:\n<a href=\"http://bootboxjs.com/\" rel=\"nofollow\">http://bootboxjs.com/</a></p>\n\n<p>Sweetalert is also simple and cool:\n<a href=\"http://tristanedwards.me/sweetalert\" rel=\"nofollow\">http://tristanedwards.me/sweetalert</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to display a \"larger than normal\" amount of text in a prompt() box. When calling the javascript prompt() function in Internet Explorer 11, a large portion of my text is being hidden. It seems to only support 2 lines of text. Chrome, Firefox and Opera seem to work fine. This seems to be just an IE issue.</p>\n\n<p>Here is a fiddle that demonstrates the problem: <a href=\"http://jsfiddle.net/jfielaidof/c9zz70zj/\">JSFiddle Example</a></p>\n\n<pre><code>prompt(\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum     has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\");\n</code></pre>\n\n<p>I am only able to see this text \"<em>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when</em>\". The rest is not displayed.</p>\n\n<p>I'm afraid I already know the answer, but is there a reason why this is happening? I would prefer to use the prompt() and not use a custom modal. </p>\n",
            "last_activity_date": 1420917459,
            "question_id": 26746007,
            "score": 7,
            "tags": [
                "javascript",
                "internet-explorer",
                "internet-explorer-11"
            ],
            "title": "Javascript Prompt() text is partially hidden in Internet Explorer 11"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Yes, channelUrl is no longer required.  Here's a quote from the blog post:</p>\n\n<blockquote>\n  <p><strong>Changed browser requirements for the JavaScript SDK</strong></p>\n  \n  <p>In order for the JavaScript SDK to be able to communicate with Facebook, we now require either native support for HTML5 postMessage, or support for Flash, minimum version 8.0.24. As part of this change, we are no longer supporting the use of the channelUrl initialization option to provide a fallback mechanism.</p>\n</blockquote>\n\n<p>Source: <a href=\"https://developers.facebook.com/blog/post/2013/11/21/platform-updates--new-design-for-follow-button-and-like-box--ios-sdk-improvements-and-more/\" rel=\"nofollow\">Facebook Blog, Nov 2013</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I remember that there was a channelUrl option for <code>FB.init()</code>, but it seems that it does not exist anymore according to <a href=\"https://developers.facebook.com/docs/javascript/reference/FB.init/\">this page</a></p>\n\n<p>Is this feature deprecated?</p>\n",
            "last_activity_date": 1417569905,
            "question_id": 22261080,
            "score": 7,
            "tags": [
                "javascript",
                "facebook",
                "facebook-javascript-sdk"
            ],
            "title": "Is channelUrl parameter for Facebook init() deprecated?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>with <a href=\"http://mongodb.github.io/node-mongodb-native/api-bson-generated/objectid.html\">ObjectId</a></p>\n\n<pre><code>var ObjectID = require('mongodb').ObjectID;\n_id = new ObjectID(_id); // _id is some 12 or 24 byte long string, else it will throw an Exception\n</code></pre>\n\n<p>You probably do this, because your documents are created without _id's, mongo does a <code>_id =  new ObjectId()</code> for you. When you want later to access them with their <code>_id</code>, converting in ObjectId is necessary in that case. Because of that, with Mongo I prefer to avoid this additionnal conversion by generating my custom id's, you can deal with collisions (very rare, depending on your table size and your hash function) using an error callback:</p>\n\n<pre><code>var o = { text:\"hello\", _id: (1e4*(Date.now()+Math.random())).toString(16) };\ncollection.insert( o, insertCb );\nfunction insertCb(err, item){\n    if (err) {\n        //bad luck item._id already exists\n        // change item._id and try to insert again or just warn the client to do so\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>Salam (means hello) :)</p>\n\n<p>I'm using <a href=\"https://github.com/mongodb/node-mongodb-native%E2%80%8E\">mongodb native driver</a> in a nodejs environment and I need to convert an id string to <a href=\"http://mongodb.github.io/node-mongodb-native/api-bson-generated/objectid.html\">ObjectId</a> to use it in my update query, how can I do this?</p>\n",
            "last_activity_date": 1392338464,
            "question_id": 21076460,
            "score": 7,
            "tags": [
                "javascript",
                "node.js",
                "mongodb"
            ],
            "title": "How to convert a string to ObjectId in nodejs mongodb native driver?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You're compiling the entire element (including the part added by the directive's template, which has already been compiled):</p>\n\n<pre><code>element.append(\"&lt;collection&gt;&lt;/collection&gt;\"); \n$compile(element.contents())(scope);\n</code></pre>\n\n<p>Since your click handler is in the template <strong>compiling the template a second time results in a second set of click handlers</strong> (amongst other things) being added.</p>\n\n<pre><code>template: \"&lt;li&gt;{{member.name}}\" + \n      \" &lt;i&gt;{{path}}&lt;/i&gt; &lt;a href ng-click='add_child_task()'&gt;Add Child&lt;/a&gt;&lt;/li&gt;\",\n</code></pre>\n\n<p><strong>The Fix:</strong> Instead use this to compile only the new element you've added:             </p>\n\n<pre><code>newe = angular.element(\"&lt;collection&gt;&lt;/collection&gt;\");\nelement.append(newe); \n$compile(newe)(scope);\n</code></pre>\n\n<p><a href=\"http://jsbin.com/aTOrIkIS/19/edit\" rel=\"nofollow\">updated jsbin</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I've got a tree structure. <a href=\"http://jsbin.com/aTOrIkIS/1/edit?html,js,output\">JSBIN here</a></p>\n\n<p>in the directive </p>\n\n<pre><code>scope.add_child_task = function() {\n    scope.add_task(scope.path,\"child of \" + scope.member.name);\n    if (!scope.has_children) {\n        scope.add_children_element();\n        scope.has_children = true;\n    }\n};\n</code></pre>\n\n<p>in the controller</p>\n\n<pre><code>$scope.add_task = function(to,name) { \n    DataFactory.add_task(to,name);\n};\n</code></pre>\n\n<p>The factory is finding the correct position and adding the node. </p>\n\n<p><strong>When adding a child to nodes with existing children it's adding two children and i don't understand why.</strong></p>\n\n<p>Thanks.</p>\n\n<p><strong>EDIT</strong>\nI can lose <code>has_children</code> and it still produces the same result </p>\n\n<p><a href=\"http://jsbin.com/aTOrIkIS/7/edit?html,js,output\">updated JSBIN</a></p>\n\n<p>Member link functin </p>\n\n<pre><code>link: function (scope, element, attrs) {            \n\n            element.append(\"&lt;collection&gt;&lt;/collection&gt;\"); \n            $compile(element.contents())(scope);\n\n            scope.get_path = function() { \n                var temp = scope.$parent.get_path();\n                temp.push(scope.member.name);\n                return temp;\n            };\n            scope.path = scope.get_path();\n\n            scope.add_child_task = function() {\n                scope.add_task(scope.path,\"child of \" + scope.member.name);\n            };\n        }\n</code></pre>\n\n<p><strong>EDIT 2</strong>\nDroped the for loops as well - just exchanging references, nothing left but a function being executed twice !</p>\n\n<p><a href=\"http://jsbin.com/aTOrIkIS/7/edit?html,js,output\">updated JSBIN</a></p>\n",
            "last_activity_date": 1386694170,
            "question_id": 20496922,
            "score": 7,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "Why is this function executed twice?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I've found some solution with custom filter and momentjs library:</p>\n\n<pre><code>app.filter('moment', function() {  \n    return function(input, format) {  \n        return moment(parseInt(input)).utc().format(format);  \n    };  \n});  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I'm looking for idea how to format unix timestamp with AngularJS date helper?</p>\n\n<p>In <a href=\"http://docs.angularjs.org/api/ng.filter%3adate\" rel=\"nofollow\">official documentation</a>, there is only explanation for string inputs (If no timezone is specified in the string input, the time is considered to be in the local timezone), but what about timestamp? Any hint?</p>\n",
            "last_activity_date": 1398593021,
            "question_id": 20470139,
            "score": 7,
            "tags": [
                "javascript",
                "angularjs",
                "date",
                "datetime"
            ],
            "title": "Angularjs: timestamp to formatted UTC time with date helper"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>There is nothing that jQuery can make as fast as native DOM and that is for a reason: it works hard to make your code cross-browser compliant. Then, it will build a jQuery object out of most method calls. In fact, jQuery will be a lot slower no matter what you do.</p>\n\n<p>Let's compare these two \"similar\" calls:</p>\n\n<p><strong>document.getElementById(\"box\"):</strong> Native method iterates over DOM elements at lower level than JavaScript. When it's done searching, it returns the DOM element that is already loaded in memory. One of the fastest methods.</p>\n\n<p><strong>$('#box'):</strong> Here, jQuery will begin with some parsing over what you ask it to do. For example, it will validate that it is a well-formed selector, then try to recognize what type of selector it is. Once he is done with it, it will try to get the element with ID \"box\". After then, he will start to build a jQuery object, filling every attributes in a way that older browsers won't fail to understand. This includes a lot of fall backs and compliance tests. When the object is ready-to-use, you get the element with ID \"box\".</p>\n\n<p>In the end, when you compare native methods to jQuery, you are comparing a skinny runner with a fat TV watcher. However, I still love jQuery for what it's made for - definitely not for speed.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is the amount of code jquery goes through when we use a simple <strong><em>$('selector')</em></strong></p>\n\n<p><a href=\"http://james.padolsey.com/jquery/#v=1.10.2&amp;fn=init\">http://james.padolsey.com/jquery/#v=1.10.2&amp;fn=init</a></p>\n\n<p>As you can see,there are plenty of validation done,regex matches,cross browser tricks etc.</p>\n\n<p>Its important to realise that jquery is a framework built on javascript.Javascript executes directly on the browser.Where as jquery processes quite a lot of javascript code before being executed by the browser.</p>\n\n<p>I personally prefer jquery.I am really not bothered about saving those nano seconds.The level of simplicity that jquery provides is phenomenal and an artpiece in itself.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I've added another test case for <code>jQuery.fn.init(document.getElementById('id'))</code> which was faster than most other methods because it does neither parse string nor create new jQuery object (it was about 50% behind getElementById, <a href=\"http://jsperf.com/jqueryspeed/2\" rel=\"nofollow\">jsperf</a>), and when I see the source of jquery code that executes during <code>jQuery.fn.init</code> call:</p>\n\n<pre><code>function (selector, context, rootjQuery){\n  if (selector.nodeType) {\n          this.context = this[0] = selector;\n          this.length = 1;\n          return this;\n  }\n}\n</code></pre>\n\n<p>I can only conclude that Chrome and Firefox engineers did very good job at optimizing native DOM operations.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I know this topic has been debated in general several times already, but I am looking for a more technical and detailed insight to understand what is really going on.</p>\n\n<p>I devised a series of tests to compare speed of jQuery's most basic selectors '#id' and '.class' to various native DOM methods. </p>\n\n<p>What I wish is to find out exactly why the results are what they are. </p>\n\n<p>Here are the tests : <a href=\"http://jsperf.com/jqueryspeed\">http://jsperf.com/jqueryspeed</a></p>\n\n<p>The main thing noticeable, is that getElementById is clearely the fastest of all. \nTo compare, I added both jQuery('#id') and jQuery.fn.init('#id') as tests, the difference between the two is that the first one does instanciate a whole new jQuery object, while the second one only runs the prototype function, and is thus faster. So, the difference between those two is understandable.</p>\n\n<p>The main difference that I do NOT understand however, is the huge gap between the speed of getElementById and the speed of jQuery.fn.init, which has a simple test to handle a simple ('#id') request in a specific way, falling back to a call to getElementById itself.</p>\n\n<p>So, why for example on Chrome, is this method about 8 times slower than the native one, even though it basicly is just a wrapper for it ?</p>\n\n<p>It is also about 3-4 times slower than the wrapped getElementById $(document.getElementById('#id'))...</p>\n\n<p>Any ideas please ? </p>\n",
            "last_activity_date": 1386448410,
            "question_id": 20444882,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "performance",
                "dom",
                "getelementbyid"
            ],
            "title": "Why is jQuery selector function so slow compared to native DOM methods"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Try to remove the line:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"phonegap.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>from your <code>index.html</code>. If you take a closer look you will see that <code>phonegap.js</code> and <code>cordova.js</code> are the same size. Apparently <code>phonegap.js</code> exists for legacy support reasons, but you should use only <code>cordova.js</code>.</p>\n\n<p>This is what it's actually suggested in the <a href=\"https://github.com/phonegap/phonegap-cli/issues/134\">GitHub Issue</a> referenced in the comments, and it did the trick for me, I stopped getting the <code>Could not find cordova.js script tag</code> message.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I have resolved this issue by completely reinstall of everything and setting up enviroment back again but now BY CORDOVA TERMINAL COMMANDS not phonegap.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>I replaced the <code>phonegap.js</code> with <code>cordova.js</code> and it worked, as referenced here: <a href=\"https://github.com/phonegap/phonegap-cli/issues/134#issuecomment-22035314\" rel=\"nofollow\">https://github.com/phonegap/phonegap-cli/issues/134#issuecomment-22035314</a></p>\n\n<p>Remove from <code>index.html</code>:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"phonegap.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>and add:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"cordova.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I use my connected phone as an ADB device.</p>\n\n<p>\u2192 phonegap -v\n3.1.0-0.15.0</p>\n\n<p>I have almost nothing in my index.html</p>\n\n<pre><code>    &lt;script type=\"text/javascript\" src=\"phonegap.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"cordova.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/jquery-1.10.2.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/bootstrap.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/angular.min.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"js/main.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>When i run </p>\n\n<pre><code>\u2192 phonegap local run android  \n[phonegap] compiling Android...\n[phonegap] successfully compiled Android app\n[phonegap] trying to install app onto device\n[phonegap] successfully installed onto device\n</code></pre>\n\n<p>I can see my app runing and before did not notice the error in console. Then i tried more complicated things like ngRoute but it did not work. I decided to remove all data to almost empty project as you can see(to be sure something else does not cause this error).</p>\n\n<p>Then i checked the console via:</p>\n\n<pre><code>adb logcat | grep -i console\n</code></pre>\n\n<p>And i see:</p>\n\n<pre><code>I/Web Console( 3946): Could not find cordova.js script tag. Plugin loading may \n\nfail.:1511\nE/Web Console( 3946): Uncaught module cordova/plugin_list already defined:76\nI/Web Console( 4329): exception firing pause event from native:1\nI/Web Console( 4329): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 4329): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 5006): Could not find cordova.js script tag. Plugin loading may fail.:1511\nE/Web Console( 5006): Uncaught module cordova/plugin_list already defined:76\nI/Web Console( 5476): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 5949): Could not find cordova.js script tag. Plugin loading may fail.:1511\nE/Web Console( 5949): Uncaught module cordova/plugin_list already defined:76\nI/Web Console( 6374): Could not find cordova.js script tag. Plugin loading may fail.:1511\nE/Web Console( 6374): Uncaught module cordova/plugin_list already defined:76\nI/Web Console( 6762): exception firing pause event from native:1\nI/Web Console( 6762): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 7141): exception firing pause event from native:1\nI/Web Console( 7141): Could not find cordova.js script tag. Plugin loading may fail.:1511\nE/Web Console( 7141): Uncaught module cordova/plugin_list already defined:76\nI/Web Console( 7267): exception firing pause event from native:1\nI/Web Console( 7267): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 7383): exception firing pause event from native:1\nI/Web Console( 7383): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 7557): exception firing pause event from native:1\nI/Web Console( 7557): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 7697): exception firing pause event from native:1\nI/Web Console( 7697): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 7998): exception firing pause event from native:1\nI/Web Console( 7998): Could not find cordova.js script tag. Plugin loading may fail.:1511\nI/Web Console( 8156): exception firing pause event from native:1\nI/Web Console( 8156): Could not find cordova.js script tag. Plugin loading may fail.:1511\nE/Web Console( 8156): Uncaught ReferenceError: angular is not defined:10\nI/Web Console( 8491): exception firing pause event from native:1\nI/Web Console( 8491): Could not find cordova.js script tag. Plugin loading may fail.:1511\nE/Web Console( 8491): Uncaught module cordova/plugin_list already defined:76\n</code></pre>\n\n<p>But it does not makes sence. I have this script tag in my index.html as you can see + this file exists in:</p>\n\n<pre><code>platforms/android/assets/www/\n</code></pre>\n\n<p>I also copied this file into my normal www directory.</p>\n\n<p>So what's the problem please?</p>\n",
            "last_activity_date": 1390917524,
            "question_id": 20076433,
            "score": 7,
            "tags": [
                "javascript",
                "android",
                "cordova"
            ],
            "title": "phonegap cordova.js is missing"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Because it will be saving your array as a flat string and <code>d</code> is the first character (position <code>0</code>) of the string.</p>\n\n<hr>\n\n<p>I believe this goes years back into the old Navigator statusbar days (remember those ticker status bars). The status could only output as string --- arrays, when set to string, are flattened and comma-delimited (e.g. <code>var ar=['foo','bar']; alert(ar);</code>)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>When you do </p>\n\n<p><code>status = [...];</code></p>\n\n<p>You are essentially writing or better stated, modifying the status variable on the window object.</p>\n\n<p><code>window.status = [...];</code></p>\n\n<p>If <code>status</code> is set as a new variable: <code>var status = [...]</code> then this will resolve the issue. I know you have <code>var</code> status in your example above but without it is the only way I can think of that would cause the issue.</p>\n\n<p><strong>Update</strong></p>\n\n<p>As Felix Kling states, the variable, being defined in a global scope and not encapsulated, will face this issue since it is a member variable on the window object. </p>\n\n<p>I would suggest changing the name of the variable, or encapsulating it.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You're modifying <code>window.status</code> which cannot be set to an array:</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.status\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Window.status</a></p>\n\n<hr>\n\n<p>There is some unexplained behaviour in Firefox. While both <code>status</code> and <code>var status</code> at the global scope provide references to the <code>window.status</code> property, <code>var status</code> doesn't flatten the array:</p>\n\n<pre><code>status = [\"meagar\"];\nconsole.log(window.status[0]); // 'm'\n</code></pre>\n\n<p>vs</p>\n\n<pre><code>var status = [\"meagar\"];\nconsole.log(window.status[0]); // 'meagar'\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>You have reassigned the 'status' variable to a string that begins with 'd' (i.e. day, dusk, or dawn).</p>\n\n<pre><code>var status = 'day';\nconsole.log(status[0]) // d\nconsole.log(status[1]) // a \n// etc...\n</code></pre>\n\n<p>Strings are treated as arrays of characters so you are accessing the individual characters with the brackets.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>While creating a small counter based game, I had an array like this:</p>\n\n<pre><code>var status = [\"day\",\"dusk\",\"night\",\"dawn\"];\n</code></pre>\n\n<p>If I tried to access the first index of the array, I would get:</p>\n\n<pre><code>console.log(status[0]); //yields \"d\"\n</code></pre>\n\n<p>@monners mentioned it might be a reserved word, so I changed the variable name to <code>xstatus</code> and it worked fine.</p>\n\n<p>My question is: why would <code>status[0]</code> return only the first letter of the first index?</p>\n",
            "last_activity_date": 1401304725,
            "question_id": 20063127,
            "score": 7,
            "tags": [
                "javascript",
                "arrays"
            ],
            "title": "Reserved Word Behavior"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>All elements (including <code>div</code> and <code>img</code>) are ready as soon as DOMReady fires - that's what it means.</p>\n\n<p>However, you can use the <code>load()</code> event to run some code when an <code>img</code> tag has fully loaded the image in it's <code>src</code> attribute:</p>\n\n<pre><code>$('img').load(function() {\n   console.log('image loaded');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There is no event fired when an arbitrary DOM element such as a <code>&lt;div&gt;</code> becomes ready.  Images have their own <code>load</code> event to tell you when the image data has been loaded and has been rendered and a few other special types of elements have an event.  But, regular DOM elements do not have such an event.</p>\n\n<p>If you want javascript code to be executed as soon as an arbitrary DOM element is ready, the only way to do that is to place a function call in an inline script right after that DOM element.  At that point that DOM element will be ready, but the rest of the DOM afterwards may not yet be ready.  Otherwise, the script can be placed at the end of the document or the script can be fired when the whole document is ready.</p>\n\n<p>Here are the existing load events expressed in jQuery form (these can all be done in plain JS too):</p>\n\n<pre><code>// when a particular image has finished loading the image data\n$(\"#myImage\").load(fn);\n\n// when all elements in the document are loaded and ready for manipulation\n$(document).ready(fn);\n\n// when the DOM and all dynamically loaded resources such as images are ready\n$(window).load(fn);\n</code></pre>\n\n<p>In jQuery, you can also dynamically load content and be notified when that content has been loaded using the <code>.load()</code> method like this:</p>\n\n<pre><code>$( \"#result\" ).load( \"ajax/test.html\", function() {\n  alert( \"Load was performed.\" );\n});\n</code></pre>\n\n<p>Internally, this just does an ajax call to fetch the data and then calls the callback after the data has been retrieved by ajax and then inserted into the document.  It isn't a native event.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I am using jQuery JavaScript library.\nI like the event listener <strong>ready</strong> on <code>$(document)</code> that fires when the DOM is set up. </p>\n\n<p>( Pretty similar to .onload )</p>\n\n<p>I would find it very useful, if there was an event listener wich has a very similar behaviour to this, but fires when an <strong>element</strong> is fully loaded. (f.e.: Picture, a Div, such )</p>\n\n<p>I would appreciate both jQuery or JavaScript methods.</p>\n",
            "last_activity_date": 1421052653,
            "question_id": 19355791,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "onload",
                "document.ready"
            ],
            "title": "jQuery.ready() equalent event listener on elements?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I think you would need to escape the +, * and ?, since they've got special meaning in most regex languages</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This is because characters like <code>+</code> and <code>*</code> have special meaning in Regex.</p>\n\n<p>Change your join from <code>|</code> to <code>|\\</code> and you should be fine, escaping the literals.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>escape needed for regex related characters +,-,(,),*,?</p>\n\n<pre><code>var x = \"adfds+fsdf-sdf\";\n\nvar separators = [' ', '\\\\\\+', '-', '\\\\\\(', '\\\\\\)', '\\\\*', '/', ':', '\\\\\\?'];\nconsole.log(separators.join('|'));\nvar tokens = x.split(new RegExp(separators.join('|'), 'g'));\nconsole.log(tokens);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/cpdjZ/\">http://jsfiddle.net/cpdjZ/</a></p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>This should work:</p>\n\n<pre><code>var separators = [' ', '+', '(', ')', '*', '\\\\/', ':', '?', '-'];\nvar tokens = x.split(new RegExp('[' + separators.join('') + ']', 'g'));\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p>Generated regex will be using <strong>regex character class: <code>/[ +()*\\/:?-]/g</code></strong></p>\n\n<p>This way you don't need to escape anything.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The following would be an easier way of accomplishing the same thing.</p>\n\n<pre><code>var tokens = x.split(new RegExp('[-+()*/:? ]', 'g'));\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p>Note that <code>-</code> must come first (or be escaped), otherwise it will think it is the <code>range</code> operator (e.g. <code>a-z</code>)</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I was trying to split a string based on multiple delimiters by referring <a href=\"http://stackoverflow.com/questions/13867182/how-split-a-string-in-jquery-with-multiple-strings-as-separator\">How split a string in jquery with multiple strings as separator</a></p>\n\n<p>Since multiple delimiters I decided to follow</p>\n\n<pre><code>var separators = [' ', '+', '-', '(', ')', '*', '/', ':', '?'];\nvar tokens = x.split(new RegExp(separators.join('|'), 'g'));\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\n</code></pre>\n\n<p>But I'm getting error</p>\n\n<pre><code>Uncaught SyntaxError: Invalid regular expression: / |+|-|(|)|*|/|:|?/: Nothing to repeat \n</code></pre>\n\n<p>How to solve it?</p>\n",
            "last_activity_date": 1381483628,
            "question_id": 19313541,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "regex",
                "string",
                "split"
            ],
            "title": "Split a string based on multiple delimiters"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I ran into this problem as well, and found a couple ways to solve it.</p>\n\n<p>The first thing I tried was to combine <code>ng-if</code> and <code>ng-repeat</code> into a custom directive. I'll push that up to github sometime soon, but it's kludgy.</p>\n\n<p>The simpler way to do it is to modify your <code>route.routes</code> collection (or create a placeholder collection)</p>\n\n<pre><code>$scope.filteredRoutes = {};\nangular.forEach($scope.route.routes, function(item, key) {\n    if (item.nav) { $scope.filteredRoutes[key] = item; }\n};\n</code></pre>\n\n<p>and in your view</p>\n\n<pre><code>...\n&lt;a  ng-repeat=\"(key, item) in filteredRoutes\"\n...\n</code></pre>\n\n<p>If you need it to be dynamically updated, just set up watches, etc.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Instead of <code>ng-if</code> you should use a filter (<a href=\"http://docs.angularjs.org/api/ng.filter:filter\" rel=\"nofollow\">http://docs.angularjs.org/api/ng.filter:filter</a>) on you <code>ng-repeat</code> to exclude certain items from your list. </p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You should use a filter in your <code>ng-repeat</code> instead of using <code>ng-if</code>.</p>\n\n<p>This should work:</p>\n\n<pre><code>&lt;section class=\"nav\"&gt;\n    &lt;a  ng-repeat=\"(key, item) in route.routes | filter:item.nav\"\n        ng-href=\"{{key}}\"&gt;\n            {{item.label}}\n    &lt;/a&gt;\n&lt;/section&gt;\n</code></pre>\n\n<p>Warning: I haven't actually tested this code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's probably a better solution, but after reading the replies above, you can try making your own custom filter:</p>\n\n<pre><code>angular.module('yourModule').filter('filterNavItems', function() {\n  return function(input) {\n    var inputArray = [];\n\n    for(var item in input) {\n      inputArray.push(input[item]);\n    }\n\n    return inputArray.filter(function(v) { return v.nav; });\n  };\n});\n</code></pre>\n\n<p>Then to use it:</p>\n\n<pre><code>&lt;section class=\"nav\"&gt;\n    &lt;a  ng-repeat=\"(key, item) in routes | filterNavItems\"\n        ng-href=\"{{key}}\"&gt;\n            {{item.label}}\n    &lt;/a&gt;\n&lt;/section&gt;\n</code></pre>\n\n<p>Here's the Plunker: <a href=\"http://plnkr.co/edit/srMbxK?p=preview\">http://plnkr.co/edit/srMbxK?p=preview</a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I have a simple nav object setup that lists the nav items (and whether they should appear in the primary nav or not). It seems though when I try to mix ng-if with ng-repeat, things fall apart, but when I mix ng-show with ng-repeat it works fine (but I end up with a bunch of hidden elements that I don't want appended to the DOM).  </p>\n\n<pre><code>   &lt;section class=\"nav\"&gt;\n        &lt;a  ng-repeat=\"(key, item) in route.routes\"\n            ng-href=\"{{key}}\"\n            ng-show=\"item.nav\"\n        &gt;\n                {{item.label}}\n        &lt;/a&gt;\n    &lt;/section&gt;\n</code></pre>\n\n<p>But the following doesn't work (note the <code>ng-show</code> is now <code>ng-if</code>):</p>\n\n<pre><code>    &lt;section class=\"nav\"&gt;\n    &lt;a  ng-repeat=\"(key, item) in route.routes\"\n        ng-href=\"{{key}}\"\n        ng-if=\"item.nav\"\n    &gt;\n            {{item.label}}\n    &lt;/a&gt;\n&lt;/section&gt;\n</code></pre>\n\n<p>The routes object looks like </p>\n\n<pre><code>routes: {\n    '/home': { label: 'Home', nav: true },\n    '/contact': { label: 'Contact', nav: false},\n   // etc\n}\n</code></pre>\n\n<p>I receive the following error when trying to use <code>ng-if</code>:</p>\n\n<blockquote>\n  <p>Error: Multiple directives [ngIf, ngRepeat] asking for transclusion on: </p>\n</blockquote>\n\n<p>I guess it's trying to tell me that I can't state it's declaration for existing twice. I could use <code>ng-if</code> on an inner element, but I think I would still end up with a bunch of empty outer <code>a</code> tags. </p>\n",
            "last_activity_date": 1381189969,
            "question_id": 19235385,
            "score": 7,
            "tags": [
                "javascript",
                "angularjs"
            ],
            "title": "How to use ng-if with ng-repeat?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use <a href=\"https://github.com/caolan/async\" rel=\"nofollow\">Async.js libray</a>. and try the <a href=\"https://github.com/caolan/async#each\" rel=\"nofollow\">each</a> function.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's possible to do what you're asking. HOWEVER, the server you are sending your requests to probably has a reason for the limit they enforce. As someone who works in web development and has seen first hand how annoying DDOS, scraping, and other abuses of APIs can be, I would suggest conforming to their limit.</p>\n\n<p>That being said, here's how you can do it.</p>\n\n<p>$.ajax actually returns a deferred object, so you can use that to your advantage. Also $.when can accept any number of deferred objects. Combining these two facts can solve your problem.</p>\n\n<pre><code>var deferreds = [];\n$.each(groupedStats, function(index, stat){\n    deferreds.push(\n        // No success handler - don't want to trigger the deferred object\n        $.ajax({\n            url: '/some/url',\n            data: {stat: stat},\n            type: 'POST'\n        })\n    );\n});\n// Can't pass a literal array, so use apply.\n$.when.apply($, deferreds).then(function(){\n    // Do your success stuff\n}).fail(function(){\n    // Probably want to catch failure\n}).always(function(){\n    // Or use always if you want to do the same thing\n    // whether the call succeeds or fails\n});\n</code></pre>\n\n<p>Note that this is not a race condition. Although $.ajax is asynchronous, $.each is not, so your list of deferreds will be the total list before you get to $.when and $.then/$.fail/$.always will only be triggered once they all complete.</p>\n\n<p>EDIT: I forgot to add the splitting by 5s, but this illustrates the general idea. You can probably figure out from here how to apply it to your problem. Incidentally, you could just use array.splice(0,5) to get the next 5 results from the array. .splice is safe to use; if the total number of elements is less than 5, it will just take all the remaining elements.</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I am trying to load a bunch of data from an API Async and when all the data is loaded I want to trigger an event that all the data is loaded. The problem I am having is that the API I am using limits the number of response objects to five. And I would potentially need to retrieve 30-40 response objects. </p>\n\n<p>So what I want to do is create a when - then statement that loops trough the data items and makes request for every five items then when all the items are loaded I want to fire a loaded event. The issue I am having is that the when-then statement is completing before the success of the ajax request.</p>\n\n<p>onto the code I have tried. </p>\n\n<pre><code> function loadsLotsOfStats(stats, dataType, eventName, dataName, callback) {\n     var groupedStats = [];\n     while (stats.length &gt; 0) {\n         groupedStats.push(stats.splice(0, 5).join('/'));\n     }\n    j$.when(\n        groupedStats.forEach(function (d) {\n            loadJSONToData(model.apiUrl.replace(\"{IDS}\", d), \"json\", \"\", dataName, function (d) { /*console.log(d);*/ }, true)\n        })\n    ).then(function () {\n        j$(eventSource).trigger('dataLoaded', eventName);\n    });\n</code></pre>\n\n<p>The loadJSONToData function is basically just a wrapper function for an Async $.ajax.</p>\n\n<p>so yeah the event is getting triggered before the data is actually loaded. Also for some reason if I try to put for loop right in the when( statement it through a syntax error? </p>\n\n<p>Does anyone have any advice on how I could make a bunch of Ajax requests and wait until they all are compeleted before triggering an event? Or a away to fix what I currently have? </p>\n\n<p>Thanks in advance for the help. </p>\n",
            "last_activity_date": 1377399776,
            "question_id": 18424712,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "ajax"
            ],
            "title": "How to loop through Ajax Requests inside a JQuery When - Then statment?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>A function has <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length?redirectlocale=en-US&amp;redirectslug=JavaScript/Reference/Global_Objects/Function/length\" rel=\"nofollow\">a <code>length</code> property</a> which tells you how many <em>named</em> arguments it accepts. Note however, a function can use the <code>arguments</code> variable to access variables, even if it doesn't name them; <code>length</code> doesn't cater for this (nor is there an alternative which does).</p>\n\n<pre><code>function foo(a, b) {\n    for (var i=0;i&lt;arguments.length;i++) {\n        console.log(arguments[i]);\n    }\n}\n\nconsole.log(foo.length); // reports 2, even though `foo` can access all your arguments!\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>I want to evaluate callback function before accepting it. This means I need to know at least the count of accepted argumens - if count doesn't match, I'll leave warning in console. \nBut I can't find out, whether a javascript function object has a property that would help me get that information.<br>\nSo can this be achieved <strong>without</strong> parsing function as string (not worth it)?</p>\n",
            "last_activity_date": 1412095395,
            "question_id": 18422501,
            "score": 7,
            "tags": [
                "javascript",
                "function",
                "object"
            ],
            "title": "Get argument count (or even names) of javascript function object"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>Solution:</strong> Put the javascript after the morris.js div</p>\n\n<p>From this post from tiraeth:\n<a href=\"https://github.com/morrisjs/morris.js/issues/137\">https://github.com/morrisjs/morris.js/issues/137</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>JavaScript's code gets executed before the DOM contains #annual element. Put the javascript after the div or use jQuery.ready()</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why am I getting an exception  \"Uncaught Error: Graph container element not found\" when using morris.js?</p>\n",
            "last_activity_date": 1424093382,
            "question_id": 18176755,
            "score": 7,
            "tags": [
                "javascript",
                "morris.js"
            ],
            "title": "morris.js Graph container element not found"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Had a similar problem on a single page web app.</p>\n\n<p>The only solution I found to this problem was effectively creating static versions of pages for the purpose of making something navigable by the Google (and other) bots.</p>\n\n<p>You could do this yourself, but there are also services that do exactly this and create your static cache for you (and serve up the snapshots to the bots over their CDN).</p>\n\n<p>I ended up using SEO4Ajax, although other similar services are available!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I was having the exact same problem. For now, I've modified .htaccess like so:</p>\n\n<pre><code>RewriteCond %{QUERY_STRING} ^_escaped_fragment_=(.*)$\nRewriteRule ^$ /snapshots/index.html? [L,NC]\nRewriteCond %{QUERY_STRING} ^_escaped_fragment_=(.*)$\nRewriteRule ^(.*)$ /snapshots/$1.html? [L,NC]\n</code></pre>\n\n<p>Not sure if there's a better solution, but it's working for me so far. <strong>Just be sure to have the directory structure for your snapshots match the URL structure.</strong></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm using Symfony2, and although I'm told by other devs that Googlebot and Bingbot execute Javascript well enough to generate their own HTML snippets, I don't feel confident. I also feel that serving static resources is a better alternative for ppl running with JS turned off (however unlikely that is) and so am interested in serving HTML snippets anyway, so long as it's not a hassle. Below is a method I'm thinking of using but haven't tried:</p>\n\n<p>Here are other SO questions that are similar (one is mine).\n<br><a href=\"http://stackoverflow.com/questions/26200740/angularjs-vs-seo-vs-pushstate/27954211#27954211\">Angularjs vs SEO vs pushState</a>\n<br><a href=\"http://stackoverflow.com/questions/27953170/html-snippets-for-angularjs-app-that-uses-pushstate\">HTML snippets for AngularJS app that uses pushState?</a></p>\n\n<p>Here's a solution I posted in that question and am considering for myself in case I want to send HTML snippets to bots. This would be a solution for a <strong>Symfony2 backend</strong>:</p>\n\n<ol>\n<li>Use prerender or another service to generate static snippets of all your pages. Store them somewhere accessible by your router.</li>\n<li><p>In your Symfony2 routing file, create a route that matches your SPA. I have a test SPA running at localhost.com/ng-test/, so my route would look like this:</p>\n\n<p><code># Adding a trailing / to this route breaks it. Not sure why.</code><br>\n<code># This is also not formatting correctly in StackOverflow. This is yaml.</code><br>\n<code>NgTestReroute:</code><br>\n<code>----path: /ng-test/{one}/{two}/{three}/{four}</code><br>\n<code>----defaults:</code><br>\n<code>--------_controller: DriverSideSiteBundle:NgTest:ngTestReroute</code><br>\n<code>--------'one': null</code><br>\n<code>--------'two': null</code><br>\n<code>--------'three': null</code><br>\n<code>--------'four': null</code><br>\n<code>----methods: [GET]</code></p></li>\n<li><p>In your Symfony2 controller, check user-agent to see if it's googlebot or bingbot. You should be able to do this with the code below, and then use this list to target the bots you're interested in (<a href=\"http://www.searchenginedictionary.com/spider-names.shtml\" rel=\"nofollow\">http://www.searchenginedictionary.com/spider-names.shtml</a>)...</p>\n\n<p><code>if(strstr(strtolower($_SERVER['HTTP_USER_AGENT']), \"googlebot\"))</code><br>\n<code>{</code><br>\n    <code>// what to do</code><br>\n<code>}</code></p></li>\n<li><p>If your controller finds a match to a bot, send it the HTML snippet. Otherwise, as in the case with my AngularJS app, just send the user to the index page and Angular will correctly do the rest.</p></li>\n</ol>\n\n<p>Also, if your question been answered please select one so I and others can tell what worked for you.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm using PhantomJS to generate static snapshots of my pages. My directory structure is only one level deep (<code>root</code> and <code>/projects</code>), so I have two .htaccess files, in which I redirect to a PHP file (<code>index-bots.php</code>) that starts a PhantomJS process pointed at my SPA <code>index.html</code> and prints out the rendered static pages.</p>\n\n<p>The .htaccess files look like this:</p>\n\n<p><strong>/.htaccess</strong></p>\n\n<pre><code># redirect search engine bots to index-bots.php\n# in order to serve rendered HTML via phantomjs\nRewriteCond %{HTTP_USER_AGENT} (bot|crawl|slurp|spider) [NC]\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_URI} !^/index-bots\\.php [NC]\nRewriteRule ^(.*)$ index-bots.php?url=%{REQUEST_URI} [L,QSA]\n</code></pre>\n\n<p><strong>/projects/.htaccess</strong></p>\n\n<pre><code># redirect search engine bots to index-bots.php\n# in order to serve rendered HTML via phantomjs\nRewriteCond %{HTTP_USER_AGENT} (bot|crawl|slurp|spider) [NC]\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule ^(.*)$ ../index-bots.php?url=%{REQUEST_URI} [L,QSA]\n</code></pre>\n\n<p>A couple of notes:</p>\n\n<ul>\n<li>The <code>!-f</code> <code>RewriteCond</code> is critical! Since .htaccess will apply <code>RewriteRule</code>s to all requests, assets on your page will each be rewritten to the PHP file, spinning up multiple instances of PhantomJS and bringing your server to its knees.</li>\n<li>It's also important to exempt <code>index-bots.php</code> from the rewrites to avoid an endless loop.</li>\n<li>I strip out the JS in my PhantomJS runner script, to ensure the JS doesn't do anything when bots that support it come across the 'static' pages.</li>\n<li>I'm no .htaccess wizard, so there's probably a better way to do this. I'd love to hear it if so.</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Using a <code>pushState</code> enabled page, normally you redirect SEO bots using the <code>escaped_fragment</code> convention. You can read more about that <strong><a href=\"https://developers.google.com/webmasters/ajax-crawling/docs/specification\">here</a></strong>.</p>\n\n<p>The convention assumes that you will be using a (<code>#!</code>) hashbang prefix before all of your URI's on a single page application. SEO bots will escape these fragments by replacing the hashbang with it's own recognizable convention <code>escaped_fragment</code> when making a page request.</p>\n\n<pre><code>//Your page\nhttp://example.com/#!home\n\n//Requested by bots as\nhttp://example.com/?_escaped_fragment=home\n</code></pre>\n\n<p>This allows the site administrator to detect bots, and redirect them to a cached prerendered page.</p>\n\n<pre><code>RewriteCond %{QUERY_STRING} ^_escaped_fragment_=(.*)$\nRewriteRule ^(.*)$  https://s3.amazonaws.com/mybucket/$1 [P,QSA,L]\n</code></pre>\n\n<p>The problem is that the hashbang is getting phased out quickly with the widely adapted <code>pushState</code> support. It's also really ugly and isn't very intuitive to a user.</p>\n\n<p>So what if we used HTML5 mode where pushState guides the <em>entire</em> user application?</p>\n\n<pre><code>//Your index is using pushState\nhttp://example.com/\n\n//Your category is using pushState (not a folder)\nhttp://example.com/category\n\n//Your category/subcategory is using pushState\nhttp://example.com/category/subcategory\n</code></pre>\n\n<p>Can rewrite rules guide bots to your cached version using this newer convention? <a href=\"http://stackoverflow.com/questions/17108931/how-to-do-a-specific-condition-for-escaped-fragment-with-rewrite-rule-in-htacce\">Related but only accounts for index edge case.</a> Google also <strong><a href=\"https://developers.google.com/webmasters/ajax-crawling/docs/specification\">has an article</a></strong> that suggests using an <em>opt-in</em> method for this single edge case using <code>&lt;meta name=\"fragment\" content=\"!\"&gt;</code> in the <code>&lt;head&gt;</code> of the page. Again, this is for a single edge case. Here we are talking about handling every page as an <em>opt-in</em> senario.</p>\n\n<pre><code>http://example.com/?escaped_fragment=\nhttp://example.com/category?escaped_fragment=\nhttp://example.com/category/subcategory?escaped_fragment=\n</code></pre>\n\n<p>I'm thinking that the <code>escaped_fragment</code> could still be used as an identifier for SEO bots, and that I could extract everything inbetween the the domain and this identifier to append to my bucket location like:</p>\n\n<pre><code>RewriteCond %{QUERY_STRING} ^_escaped_fragment_=$\n# (high level example I have no idea how to do this)\n# extract \"category/subcategory\" == $2\n# from http://example.com/category/subcategory?escaped_fragment=\nRewriteRule ^(.*)$  https://s3.amazonaws.com/mybucket/$2 [P,QSA,L]\n</code></pre>\n\n<p>What's the best way to handle this? </p>\n",
            "last_activity_date": 1423548190,
            "question_id": 17926219,
            "score": 7,
            "tags": [
                "javascript",
                ".htaccess",
                "web-crawler",
                "single-page-application"
            ],
            "title": ".htaccess for SEO bots crawling single page applications without hashbangs"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>The reason why only the <code>for</code> loop is so slow is because it's the only correct test case; all the other test cases <strong>never</strong> reset, amongst others, the value of <code>d</code>, so the first iteration is normal and the rest is obviously super fast :)</p>\n\n<p>This <a href=\"http://jsperf.com/rgb-to-rgba/7\" rel=\"nofollow\">jsperf</a> gives a better outcome, whereby the for-loop is only slightly slower than the fastest result.</p>\n\n<p><strong>Update</strong></p>\n\n<p>As <a href=\"http://stackoverflow.com/users/825789/bfavaretto\">bfavaretto</a> suggested, you should also reset <code>s</code> and the target array that you're building for a more consistent result. His results can be found <a href=\"http://jsperf.com/rgb-to-rgba/9\" rel=\"nofollow\">here</a>.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>This is, in a way, a follow-up to my <a href=\"http://stackoverflow.com/questions/17533652/fast-way-to-make-rgb-array-into-rgba-array-in-javascript\">previous question</a>.</p>\n\n<p>I created <a href=\"http://jsperf.com/rgb-to-rgba/5\">a jsPerf</a> which compares a number of ways to take a 1-dimensional array of <strong>RGB</strong> pixel values</p>\n\n<pre><code>var rgb = [R, G, B, R, G, B...]\n</code></pre>\n\n<p>And convert those into <strong>RGBA</strong> values for an HTML5 canvas (where the alpha channel is <em>always 255</em>, fully opaque).</p>\n\n<pre><code>var rgba = [R, G, B, 255, R, G, B, 255...]\n</code></pre>\n\n<p>In my tests, I found that one of the loops I tested, titled \"For Loop\", is astronomically slower than the other loops. Where other loops were completing the operation <strong>hundreds of millions of times per second</strong>, it weighed in at <strong>a whopping 86 times per second</strong>. The loop can be found in the jsPerf link above, but here's a bit of code with \"For Loop\" and \"4*unrolled, skip alpha\", one of the faster loops in the test.</p>\n\n<pre><code>//Setup for each test\nfunction newFilledArray(length, val) {\n    var array = Array(length);\n    for (var i = 0; i &lt; length; i++) {\n        array[i] = val;\n    }\n    return array;\n}\n\nvar w = 160;  //width\nvar h = 144;  //height\n\nvar n = 4 * w * h; //number of length of RGBA arrays\nvar s = 0, d = 0;  //s is the source array index, d is the destination array index\n\nvar rgba_filled = newFilledArray(w*h*4, 255);  //an RGBA array to be written to a canvas, prefilled with 255's (so writing to the alpha channel can be skipped\nvar rgb = newFilledArray(w*h*3, 128);  //our source RGB array (from an emulator's internal framebuffer)\n\n//4*unrolled, skip alpha - loop completes (exits) 185,693,068 times per second\nwhile (d &lt; n) {\n    rgba_filled[d++] = rgb[s++];\n    rgba_filled[d++] = rgb[s++];\n    rgba_filled[d++] = rgb[s++];\n    d++;\n}\n\n//For Loop - loop completes (exits) 85.87 times per second\nfor (var d = 0; d &lt; n; ++d) {\n    rgba_filled[d++] = rgb[s++];\n    rgba_filled[d++] = rgb[s++];\n    rgba_filled[d++] = rgb[s++];\n}\n</code></pre>\n\n<p>How can it be so incredibly similar in syntax, yet is so far removed in terms of performance?</p>\n",
            "last_activity_date": 1373342042,
            "question_id": 17539310,
            "score": 7,
            "tags": [
                "javascript",
                "performance",
                "loops"
            ],
            "title": "Exceptionally slow Javascript loop"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Because in second case <code>this</code> is still not exist when you define <code>both</code>. if you will turn <code>both</code> to method, like in this example : <a href=\"http://jsfiddle.net/YyWMQ/\">http://jsfiddle.net/YyWMQ/</a> , it will work.</p>\n\n<pre><code>both: function(){ return this.texts.text1 + ' ' + this.texts.text2 + '!'}  \n</code></pre>\n\n<p>Imho , good question , +1</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<pre><code>var message = {\n    texts: {\n        text1: 'Hello',\n        text2: 'World'\n    },\n    // here this refers to the scope where message is defined \n    both: this.texts.text1 + ' ' + this.texts.text2 + '!', \n    greet: function() {\n        console.log(this.both);\n    }\n}\nmessage.greet();\n</code></pre>\n\n<p>To understand it you can try as given below</p>\n\n<pre><code>this.texts =  {\n            text1: 'Alternate Hello',\n            text2: 'World'\n        };\n\nvar message = {\n        texts: {\n            text1: 'Hello',\n            text2: 'World'\n        },\n        // here this refers to the scope where message is defined \n        both: this.texts.text1 + ' ' + this.texts.text2 + '!', \n        greet: function() {\n            console.log(this.both);\n        }\n    }\nmessage.greet();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Your misunderstanding is at the following line:</p>\n\n<pre><code>both: this.texts.text1 + ' ' + this.texts.text2 + '!',\n</code></pre>\n\n<p>You could use as function and return a value like:</p>\n\n<pre><code>both: function(){ return this.texts.text1 + ' ' + this.texts.text2 + '!'; } ,\n</code></pre>\n\n<p>And finally</p>\n\n<pre><code> greet: function() {\n        console.log(this.both());\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>When calling greet, `this' will be the parent obj, message. This is not the case when you're actually constructing the message object. You could write something similar like:</p>\n\n<pre><code>var Message = function () {\n    this.texts = {\n        text1: 'Hello',\n        text2: 'Word'\n    }\n    this.both = this.texts.text1 + ' ' + this.texts.text2 + '!';\n}\n\nMessage.prototype.greet = function () {\n    console.log(this.both);\n}\n\nmessage = new Message();\nmessage.greet();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Why does this code work...</p>\n\n<pre><code>var message = {\n    texts: {\n        text1: 'Hello',\n        text2: 'World'\n    },\n    greet: function() {\n        console.log(this.texts.text1 + ' ' + this.texts.text2 + '!');\n    }\n}\nmessage.greet();\n</code></pre>\n\n<p>...but this doesn't?</p>\n\n<pre><code>var message = {\n    texts: {\n        text1: 'Hello',\n        text2: 'World'\n    },\n    both: this.texts.text1 + ' ' + this.texts.text2 + '!',\n    greet: function() {\n        console.log(this.both);\n    }\n}\nmessage.greet();\n</code></pre>\n\n<p>It gives me \"both is not defined\" error. What am I missing here? Something's wrong with<code>this.both</code>? I'm total newbie when it comes to object literal</p>\n",
            "last_activity_date": 1371818524,
            "question_id": 17235258,
            "score": 7,
            "tags": [
                "javascript",
                "object-literal"
            ],
            "title": "Can&#39;t define variable in JavaScript object literal"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This article shows how to clone the javascript events along with node when we use the cloneNode method</p>\n\n<p>javascript cloneNode do shallow copy, it doesn't copy the event handler attached to that node or it children. following method will help you to attach javascript events after cloning.</p>\n\n<p><a href=\"http://blog.sivavaka.com/2010/11/javascript-clonenode-doesnt-copy-event.html\" rel=\"nofollow\">http://blog.sivavaka.com/2010/11/javascript-clonenode-doesnt-copy-event.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can maybe use <code>getEventListeners</code> on nodes? Don't know how the support is, or if it's only supported in the console?</p>\n\n<pre><code>var cloneMassive = function(node) {\n    // Clone the node, don't clone the childNodes right now...\n    var dupNode = node.cloneNode(false),\n        // Get the events attached to the node\n        events = getEventListeners(node);\n\n    // Iterate over all the events\n    for( var p in events ) {\n        // All events is in an array so iterate that array:\n        events[p].forEach(function(ev) {\n            // {listener: Function, useCapture: Boolean}\n            dupNode.addEventListener(p, ev.listener, ev.useCapture);\n        });\n    }\n    // Also do the same to all childNodes and append em.\n    if ( node.childNodes.length ) {\n        // Transform .childNodes to an array so we have .forEach:\n        [].slice.call(node.childNodes).forEach(function(node) {\n            // Add the child but process it through cloneMassive:\n            dupNode.appendChild(cloneMassive(node));\n        });\n    }\n    // Return the dupNode so we can call it recursive\n    return dupNode;\n}\n</code></pre>\n\n<hr>\n\n<pre><code>var dupBody = cloneMassive(document.body);\n</code></pre>\n\n<p>But it seems that <code>getEventListeners</code> isn't really supported:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/9046741/get-event-listeners-attached-to-node-using-addeventlistener\">Get event listeners attached to node using addEventListener</a></p>\n\n<hr>\n\n<p>If you need to copy all event properties on the node as well you will need a list of all, and then simply copy them over:</p>\n\n<pre><code>['onclick', 'onmouseover', '...'].forEach(function(method) {\n    dupNode[method] = node[method];\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm cloning a textarea in a page but the cloned element doesn't have any event of the primary element, is there any way to clone all events in cloned element?</p>\n\n<pre><code>var dupNode = node.cloneNode(deep);\n</code></pre>\n",
            "last_activity_date": 1370435178,
            "question_id": 16939335,
            "score": 7,
            "tags": [
                "javascript",
                "javascript-events",
                "clonenode"
            ],
            "title": "Clone element with all its events"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Add identity to that <code>element</code> then use it as follows </p>\n\n<pre><code>$(\"#div_element\").append('&lt;a id=\"tester\" href=\"#\"&gt;test&lt;/a&gt;');\n\n\n$('#tester').on('click', function(event) {\nconsole.log('tester clicked');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do this:</p>\n\n<pre><code>var el = $('&lt;a href=\"#\"&gt;test&lt;/a&gt;');\n\n$(\"#div_element\").append(el);\n\nel.click(function(){alert(\"test\")});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Why not save a reference to the new element before you append it:</p>\n\n<pre><code>var newElement = $('&lt;a href=\"#\"&gt;test&lt;/a&gt;');\n$(\"#div_element\").append(newElement);\nnewElement.click(function(){alert(\"test\")});  \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The last element would be the new element</p>\n\n<pre><code>$('a:last','#div_element').on('click',function(){\n    // do something\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can attach event to element when you create it --</p>\n\n<pre><code>var ele =$(\"&lt;a href='#'&gt;Link&lt;/a&gt;\");\n\nele.on(\"click\",function(){\n    alert(\"clicked\");\n});\n\n\n$(\"#div_element\").append(ele);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just attach the click handler to the anchor BEFORE you append it.</p>\n\n<pre><code>$(\"#div_element\").append($('&lt;a href=\"#\"&gt;test&lt;/a&gt;').click(function(){alert(\"test\")}));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>var $a = $('&lt;a /&gt;', {href:\"#\"})\n  .text(\"test\")\n  .on('click', function(e) { \n     alert('Hello') \n  })\n  .appendTo('#div_element');\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/33jX4/\" rel=\"nofollow\">http://jsfiddle.net/33jX4/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am simply appending an element that is on the DOM like:</p>\n\n<pre><code>$(\"#div_element\").append('&lt;a href=\"#\"&gt;test&lt;/a&gt;');\n</code></pre>\n\n<p>Right after I append it I need access to the element I just made in order to bind an click function to it, I tried:</p>\n\n<pre><code>$(\"#div_element\").append('&lt;a href=\"#\"&gt;test&lt;/a&gt;').click(function(){alert(\"test\")});\n</code></pre>\n\n<p>But the above didn't work. I could uniquely id the element but that seems like a bit to much work when perhaps there is a way I can get the element right after I append it.</p>\n",
            "last_activity_date": 1366382896,
            "question_id": 16107267,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "append"
            ],
            "title": "Getting access to a jquery element that was just appended to the DOM"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>From the <a href=\"http://raphaeljs.com/reference.html#Element.animateWith\">Raphael documentation</a>:</p>\n\n<blockquote>\n  <p><strong>Parameters</strong>: </p>\n  \n  <p><em>element</em> - [object] element to sync with</p>\n  \n  <p><em>anim</em> - [object] animation to sync with</p>\n  \n  <p><em>animation</em> - [object] animation object, see Raphael.animation</p>\n</blockquote>\n\n<p>So I think your code just need to separate the <em>animation</em> and pass that into second parameter for <code>.animateWith()</code>:</p>\n\n<p>The <em>animation</em> portion is just:</p>\n\n<pre><code>{\n    \"50%\": { transform:\"R20 \" + x + \",\" + y, easing: \"sinoid\", callback: animationDone },\n    \"100%\": { transform:\"R-20 \" + x + \",\" + y, easing: \"sinoid\", callback: animationDone }\n} \n</code></pre>\n\n<p>So you can do this:</p>\n\n<pre><code>var animationDone = function() { \n    tick(this, repeats, done); \n};\n\nvar ticktockAnimationParam = {\n    \"50%\": { transform:\"R20 \" + x + \",\" + y, easing: \"sinoid\", callback: animationDone },\n    \"100%\": { transform:\"R-20 \" + x + \",\" + y, easing: \"sinoid\", callback: animationDone }\n};\nvar ticktock = Raphael.animation(ticktockAnimationParam, interval).repeat(repeats / 2);\narm.animate(ticktock);\nweight.animateWith(arm, ticktockAnimationParam, ticktock);    \n</code></pre>\n\n<p>See fiddle: <a href=\"http://jsfiddle.net/wDwsW/7/\">http://jsfiddle.net/wDwsW/7/</a></p>\n\n<p>Fyi , I moved the callback function outside, instead of using anonymous functions.</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>Has anyone used <code>.animateWith()</code> in Raphael to successfully keep fast animations in sync? It is poorly documented. The library's creator has a <a href=\"http://dmitry.baranovskiy.com/post/raphael-1-2-1\">video demonstration</a> but no code I can find.</p>\n\n<p>I have a Javascript metronome that consists of a line (the arm of the metronome) and a trapezoidal shaped \"weight\" that will eventually move up and down to signify tempo. I have a working fiddle <a href=\"http://jsfiddle.net/wDwsW/5/\">here</a>, and the lines in question are:</p>\n\n<pre><code>        var ticktock = Raphael.animation({\n            \"50%\": { transform:\"R20 \" + x + \",\" + y, easing: \"sinoid\", callback: function() { tick(this, repeats, done); }},\n            \"100%\": { transform:\"R-20 \" + x + \",\" + y, easing: \"sinoid\", callback: function() { tick(this, repeats, done); }}\n        }, interval).repeat(repeats / 2);\n        arm.animate(ticktock);\n        weight.animateWith(arm, ticktock, ticktock);    \n</code></pre>\n\n<p>If you check out the fiddle and give it a high tempo and about 20 ticks, you should see the weight lag behind the arm. (Please try it a few times if not -- Murphy's Law etc.) I thought this was precisely what animateWith() prevented. Maybe I am using it incorrectly.</p>\n\n<p>If you look at the <a href=\"https://github.com/DmitryBaranovskiy/raphael/blob/master/raphael.core.js#L4087\">Raphael source</a> for the .animateWith() function, you see it syncs the .start param of each animation, FWIW.</p>\n",
            "last_activity_date": 1366135378,
            "question_id": 15886606,
            "score": 7,
            "tags": [
                "javascript",
                "animation",
                "raphael"
            ],
            "title": "How to use Raphael .animateWith()"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>        vvvvvvv [0]\n(![]+[])[[]-[]]                            = \"false\"[0]\n^^^^^^^^ \"false\"\n\n                  vvvvvvv again [0]\n(([]+[])+([][[]]))[[]-[]]                  = \"undefined\"[0]\n^^^^^^^^^^^^^^^^^^ \"undefined\"\n\n                  vvvvvvvvv this time [1]\n(([]+[])+([][[]]))[!![]-[]]                = \"undefined\"[1]\n^^^^^^^^^^^^^^^^^^ again \"undefined\"\n</code></pre>\n\n<p>Thus you get <code>\"f\"+\"u\"+\"n\" === \"fun\"</code>.</p>\n\n<h2>Further explanation</h2>\n\n<h3><code>\"false\"</code></h3>\n\n<p><code>![]</code> is <code>false</code>. <code>+[]</code> simply acts as a transformation into a string. Thus we gain the string <code>\"false\"</code>.</p>\n\n<h3><code>\"undefined\"</code></h3>\n\n<p>One of the operands needs to be a string. This is being done by <code>[]+[]</code>. The actual <code>undefined</code> is created in the right hand side: <code>[][[]]</code> === <code>[][0]</code>, the first entry of an empty array is <code>undefined</code>.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<pre><code>alert(\n    (![]+[])[[]-[]]+\n    (([]+[])+([][[]]))[[]-[]]+\n    (([]+[])+([][[]]))[!![]-[]]\n);\n</code></pre>\n\n<p>Heres' the fiddle: <a href=\"http://jsfiddle.net/leeny/6VugZ/\">http://jsfiddle.net/leeny/6VugZ/</a></p>\n\n<p>How exactly is this cryptic piece of code working? </p>\n",
            "last_activity_date": 1362776802,
            "question_id": 15302915,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How/why does this javascript code print &#39;fun&#39;?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Assuming you got your server side response in a javascript object called <code>response</code> you could parse the <code>tags</code> string property using the <code>$.parseJSON</code> function. But first you will need to fix your server side code so that it returns a valid JSON string for the tags property (in JSON property names must be enclosed in quotes):</p>\n\n<pre><code>// This came from the server\nvar response = {\"tags\":\"[{\\\"value\\\": 2,\\\"label\\\": \\\"Dubstep\\\"},{\\\"value\\\": 3,\\\"label\\\": \\\"BoysIIMen\\\"},{\\\"value\\\": 4,\\\"label\\\":\\\"Sylenth1\\\"}]\"};\n\n// Now you could parse the tags string property into a corresponding\n// javascript array:\nvar tags = $.parseJSON(response.tags);\n\n// and at this stage the tags object will contain the desired array\n// and you could access individual elements from it:\nalert(tags[0].label);\n</code></pre>\n\n<p>If for some reason you cannot modify your server side script to provide a valid JSON in the <code>tags</code> property you could still use <code>eval</code> instead of <code>$.parseJSON</code>:</p>\n\n<pre><code>var tags = eval(response.tags);\n</code></pre>\n\n<p>It's not a recommended approach, normally you should avoid using <code>eval</code> because it will execute arbitrary javascript.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>initSelection: function (element, callback) {\n                    var data = $(element).val();\n                    callback($.parseJSON(data));\n                }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am currently receiving a JSON Object From the Server side of my application, the result is this</p>\n\n<pre><code>{\"tags\":\"[{value: 2,label: 'Dubstep'},{value: 3,label: 'BoysIIMen'},{value: 4,label:'Sylenth1'}]\"}\n</code></pre>\n\n<p>But then I don't really need the \"tags\" and the double quotes in the result.</p>\n\n<p>So what I want is an array representation of that JSON object</p>\n\n<p>therefore how would I convert this</p>\n\n<pre><code>{\"tags\":\"[{value: 2,label: 'Dubstep'},{value: 3,label: 'BoysIIMen'},{value: 4,label:'Sylenth1'}]\"}\n</code></pre>\n\n<p>to this</p>\n\n<pre><code>[{value: 2,label: 'Dubstep'},{value: 3,label: 'BoysIIMen'},{value: 4,label:'Sylenth1'}]\n</code></pre>\n\n<p>Here's the loop that creates the array</p>\n\n<pre><code>String k = \"[\"; \n        List&lt;Tag&gt; tg = audioTaggingService.findTagsByName(q);\n        for(int i = 0; i&lt;audioTaggingService.findTagsByName(q).size();i++){\n            Tag t = tg.get(i);\n            if(i == (tg.size() - 1)){\n                k+=\"{value: \"+t.getId()+\",label:'\"+t.getName()+\"'}\";\n            }else{\n                k+=\"{value: \"+t.getId()+\",label:'\"+t.getName()+\"'}\";\n            }\n        }\n        k+=\"]\";\n</code></pre>\n\n<p>The result of the code above is this</p>\n\n<pre><code>[{value: 2,label: 'Dubstep'},{value: 3,label: 'BoysIIMen'},{value: 4,label:'Sylenth1'}]\n</code></pre>\n",
            "last_activity_date": 1416333093,
            "question_id": 14601494,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "json"
            ],
            "title": "Convert JSON To Array Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>Db.connect</code> opens a pool of 5 connections, by default.  If you want to limit it to a single connection you can do that via the <a href=\"http://mongodb.github.com/node-mongodb-native/api-generated/server.html?highlight=server#Server\"><code>server</code></a> options like this:</p>\n\n<pre><code>mongo.Db.connect(\n    'mongodb://localhost:27017/testDB', \n    {server: {poolSize: 1}}, \n    function(err, db) { ...\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>You can also pass it like that </p>\n\n<pre><code>var mongoclient = new mongodb.MongoClient(new mongodb.Server(\n    'localhost', 27017, {'native_parser': true, 'poolSize': 1} \n));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm new to nodejs and mongdb, which I'll use in a project of mine, and as soon as I got the db connection working I was shocked to see how many database connections my code really does. So, given this simple snippet code:</p>\n\n<pre><code>var express = require('express');\nvar mongo = require('mongodb');  \nvar app = express();\n\n// Further details:\n// nodejs: v0.8.18\n// mongod: v2.2.2\n// node's mongodb driver: v1.2.10\n\napp.get('/', function(req, res){\n    res.send('&lt;h1&gt;Ok&lt;/h1&gt;');\n});\n\nvar setUp = function() {   \n    // get a handler to the testDB Database\n    mongo.Db.connect('mongodb://localhost:27017/testDB', function(err, db) {\n        if (err)\n            throw err;\n        // create a test collection in the database\n        db.createCollection('test', function(err, test) {\n            if (err)\n                throw err;\n            // insert a dummy document into the test collection          \n            test.insert({'name':'admin', 'pass':'admin'});\n\n            app.listen(3000); \n            console.log('App listening on port 3000');\n        });\n    });\n}\n\nsetUp();\n</code></pre>\n\n<p>the mongo daemon outputs this bit of log when the nodejs process fires up:</p>\n\n<pre><code>... connection accepted from 127.0.0.1:40963 #34 (1 connection now open)\n... connection accepted from 127.0.0.1:40964 #35 (2 connections now open)\n... connection accepted from 127.0.0.1:40965 #36 (3 connections now open)\n... connection accepted from 127.0.0.1:40966 #37 (4 connections now open)\n... connection accepted from 127.0.0.1:40967 #38 (5 connections now open)\n... connection accepted from 127.0.0.1:40968 #39 (6 connections now open)\n... end connection 127.0.0.1:40963 (5 connections now open)\n... allocating new datafile /var/data/testDB.ns, filling with zeroes...\n...\n</code></pre>\n\n<p>and this one when the process is terminated:</p>\n\n<pre><code>... connection 127.0.0.1:40964 (4 connections now open)\n... connection 127.0.0.1:40965 (3 connections now open)\n... connection 127.0.0.1:40966 (2 connections now open)\n... connection 127.0.0.1:40967 (1 connection now open)\n... connection 127.0.0.1:40968 (0 connections now open)\n</code></pre>\n\n<p>Does the mongo driver really need to make that many connections to mongod in order to get a single db handler, or is there something wrong with the way I implemented this? I really expected to see just one open connection in there...</p>\n",
            "last_activity_date": 1376600624,
            "question_id": 14593814,
            "score": 7,
            "tags": [
                "javascript",
                "node.js",
                "mongodb"
            ],
            "title": "MongoDB: &gt;5 open connections for a single db handler"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Not only is the second syntax easier to read and not only will it work under any condition, but the first syntax might not work under all conditions:</p>\n\n<pre><code>function Object() {\n    // Oh crap, we have redefined Object!\n    return [];    // return an array because we are EVIL\n}\n\nvar person = new Object();   // not what we think it is\n</code></pre>\n\n<p>But <code>{}</code>, being a syntactic construct, is immune to such evil trickery.</p>\n\n<p>In addition, the object literal notation can be partially optimized at parse time, since after all there's only one object type that could be created. That may result in a minuscule performance increase.</p>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/4597926/creating-objects-new-object-or-object-literal-notation\">creating objects - new object or object literal notation?</a><br>\n  <a href=\"http://stackoverflow.com/questions/12356994/literal-notation-vs-constructor-to-create-objects-in-javascript\">Literal notation VS. constructor to create objects in JavaScript</a>  </p>\n</blockquote>\n\n\n\n<p>I'm going through my very first Javascript tutorial.</p>\n\n<p>I just found two ways to create a JS object.</p>\n\n<pre><code>var person = new Object();\nperson.name = \"Tom\";\nperson.age = \"17\";\n</code></pre>\n\n<p>and</p>\n\n<pre><code>var person = {};\nperson.name = \"Tom\";\nperson.name = \"17\"\n</code></pre>\n\n<p>Any difference between these two ways of object creation? Since the second looks simpler, can we always use it under any condition? </p>\n",
            "last_activity_date": 1357690479,
            "question_id": 14226299,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "Javascript object constructor vs object literal"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>A simpler solution would be to use <a href=\"https://developer.mozilla.org/en-US/docs/DOM/Storage#sessionStorage\" rel=\"nofollow\"><code>sessionStorage</code></a>, in this case:</p>\n\n<pre><code>var myVariable = true;\n\nsessionStorage['myvariable'] = myVariable;\nmyVariable = sessionStorage['myvariable'];\n</code></pre>\n\n<p>However, keep in mind that <code>sessionStorage</code> saves everything as a string, so when working with arrays / objects, you can use JSON to store them:</p>\n\n<pre><code>var myVariable = {a:[1,2,3,4], b:\"some text\"};\n\nsessionStorage['myvariable'] = JSON.stringify(myVariable);\nmyVariable = JSON.parse(sessionStorage['myvariable']);\n</code></pre>\n\n<blockquote>\n  <p>A page session lasts for as long as the browser is open and survives over page reloads and restores. Opening a page in a new tab or window will cause a new session to be initiated.</p>\n</blockquote>\n\n<p>So, when you close the page / tab, the data is lost.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Yes that is correct. Not putting an expires part in, will create a session cookie, whether it is created in javascript or on the server.</p>\n\n<p>See <a href=\"http://stackoverflow.com/a/532660/1901857\">http://stackoverflow.com/a/532660/1901857</a></p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>For creating session only cookie with java script, you can use the following. This works for me.</p>\n\n<pre><code>document.cookie = \"cookiename=value; expires=0; path=/\";\n</code></pre>\n\n<p>then get cookie value as following</p>\n\n<pre><code> //get cookie \nvar cookiename = getCookie(\"cookiename\");\nif (cookiename == \"value\") {\n    //write your script\n}\n\n//function getCookie        \nfunction getCookie(cname) {\n    var name = cname + \"=\";\n    var ca = document.cookie.split(';');\n    for (var i = 0; i &lt; ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') c = c.substring(1);\n        if (c.indexOf(name) != -1) return c.substring(name.length, c.length);\n    }\n    return \"\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -2
                }
            ],
            "body": "<p>I was wondering if it's possible to create session only cookies with Javascript. When the browser is closed the cookies should be removed. </p>\n\n<p>I can't use anything on the server as the website is HTML only ... so no server side script is used.</p>\n\n<p>I read something about this here:\n<a href=\"http://blog.lysender.com/2011/08/setting-session-only-cookie-via-javascript/\">http://blog.lysender.com/2011/08/setting-session-only-cookie-via-javascript/</a>\nbut i can't find any more information about this ... so i was wondering if this method is reliable.</p>\n",
            "last_activity_date": 1408378646,
            "question_id": 14196671,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "html5"
            ],
            "title": "Session only cookies with Javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This can be done using the jQuery <code>eq</code> method.</p>\n\n<pre><code>var $tds = $(\"td\"); // get all tds beforehand, so jquery doesn't \n                    // need to hit the DOM every click\n\n$(\"td\").on(\"click\", function () {\n    var position = $(this).index(),\n        $tdsInColumn = $tds.filter(\":nth-child(\" + index + \")\");\n\n    // manipulate $tdsInColumn in any way\n    $tdsInColumn.addClass(\"selected\");\n});\n</code></pre>\n\n<p>Not sure if this is the most efficient way of doing so, but it is the solution I came up with when faced with the same problem a while back.</p>\n\n<h1>Reference</h1>\n\n<p><a href=\"http://api.jquery.com/eq/\" rel=\"nofollow\">jQuery.eq</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Your attempt is right, all you need to do is use <a href=\"http://api.jquery.com/index\" rel=\"nofollow\"><code>.index</code></a> to find the column number\u2014the index of the <code>&lt;td&gt;</code> within the row. You also need to use the <a href=\"http://api.jquery.com/nth-child-selector\" rel=\"nofollow\">nth-child-selector</a> to match the column indices of the other <code>&lt;td&gt;</code> elements.</p>\n\n<pre><code>$(\"td\").click(function(){\n    var columnNo = $(this).index();\n    $(this).closest(\"table\")\n        .find(\"tr td:nth-child(\" + (columnNo+1) + \")\")\n        .css(\"color\", \"red\");\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>Given a multirow, multicolumn table, how can I select all cells in the same <em>column</em> as any arbitrary cell (e.g. a cell that is clicked on).</p>\n\n<p>Something like:</p>\n\n<pre><code>$(\"td\").click(function(){\n    var columnNo = $(this).columnNo?\n    $(this).closest(\"table\").find(\"tr td:eq(\"+columnNo+\")\").css(\"color\", \"red\");\n});\n</code></pre>\n\n<p>I need to do this without naming the columns individually. E.g. it should work on simple generic <code>table</code> markup without extra classes or IDs..</p>\n",
            "last_activity_date": 1356643519,
            "question_id": 14061123,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery selector to grab cells in the same column"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You could just copy Array methods from the iframe:</p>\n\n<pre><code>Array.prototype.slice = function() {\n    return \"trololol\";\n};\nvar a = document.createElement(\"iframe\");\na.src = \"about:blank\";\ndocument.body.appendChild(a);\nvar prototype = a.contentWindow.Array.prototype;\nvar fn = [\"toString\", \"toLocaleString\", \"join\", \"pop\", \"push\", \"concat\", \"reverse\", \"shift\", \"unshift\", \"slice\", \"splice\", \"sort\", \"filter\", \"forEach\", \"some\", \"every\", \"map\", \"indexOf\", \"lastIndexOf\", \"reduce\", \"reduceRight\"];\nfor (var i = 0; i &lt; fn.length; ++i) {\n    var methodName = fn[i];\n    var method = prototype[methodName];\n    if (method) {\n        Array.prototype[methodName] = method;\n    }\n}\ndocument.body.removeChild(a);\n</code></pre>\n\n<p>\u200b\nHere's the jsfiddle that works in chrome and IE9, don't have time to figure out IE7-8. <a href=\"http://jsfiddle.net/jMUur/1/\" rel=\"nofollow\">http://jsfiddle.net/jMUur/1/</a></p>\n\n<p>To check if an object is an Array without relying on references:</p>\n\n<pre><code>function isArray( obj ) {\n     return {}.toString.call( obj ) === \"[object Array]\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>OP's probably already figured something out by now, but for anyone else coming in from a Google search or wherever, here's a function that <strong>returns the unmodified version of <em>any</em> default constructor passed to it:</strong></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>// Note: the double name assignment below is intentional.\n// Only change this part if you want to use a different variable name.\n//  \u2502\u2502\u2502\u2502\u2502 The other one here needs to stay the same for internal reference.\n//  \u2193\u2193\u2193\u2193\u2193            \u2193\u2193\u2193\u2193\u2193\nvar reset = function reset(constructor) {\n    if (!(constructor.name in reset)) {\n        var iframe = document.createElement('iframe');\n        iframe.src = 'about:blank';\n        document.body.appendChild(iframe);\n        reset[constructor.name] = iframe.contentWindow[constructor.name];\n        document.body.removeChild(iframe);\n    } return reset[constructor.name];\n}\n</code></pre>\n\n<hr>\n\n<h2>Usage goes like this:</h2>\n\n<p><strong>The Problem</strong></p>\n\n<p><em>Somebody does something stupid to a default prototype...</em></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>Array.prototype.push = function () {\n    var that = this;\n    [].forEach.call(arguments, function (argument) {\n        that.splice(Math.round(Math.random()*that.length), 0, argument)\n    }); return 'Trolololo';\n}\n</code></pre>\n\n<p><em>...and your code becomes a broken mess.</em></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var myArray = new Array(0, 1, 2, 3);\n//-&gt; undefined\n    // Ok, I made an array.\nmyArray;\n//-&gt; [0, 1, 2, 3]\n    // So far so good...\nmyArray.push(4, 5);\n//-&gt; \"Trolololo\"\n    // What?\nmyArray;\n//-&gt; [5, 0, 1, 2, 4, 3]\n    // WHAT!?\n</code></pre>\n\n<p><strong>The Solution</strong></p>\n\n<p><em>So you throw that function into the mix...</em></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var reset = function reset(constructor) {\n    if (!(constructor.name in reset)) {\n        var iframe = document.createElement('iframe');\n        iframe.src = 'about:blank';\n        document.body.appendChild(iframe);\n        reset[constructor.name] = iframe.contentWindow[constructor.name];\n        document.body.removeChild(iframe);\n    } return reset[constructor.name];\n}\n</code></pre>\n\n<p><em>...and put it to use like so.</em></p>\n\n<pre class=\"lang-js prettyprint-override\"><code>var myArray = new reset(Array)(0, 1, 2, 3);\n//-&gt; undefined\n    // Looks the same\nmyArray;\n//-&gt; [0, 1, 2, 3]\n    // Still looks the same\nmyArray.push(4, 5);\n//-&gt; 6\n    // Hey, it returned what it's supposed to...\nmyArray;\n//-&gt; [0, 1, 2, 3, 4, 5]\n    // ...and all's right with the world again!\n</code></pre>\n\n<p><em>Also, because each reset constructor is cached the first time it's returned, you can save a character if you want to by referencing the cache directly (<code>reset.Array</code>) instead of through the function (<code>reset(Array)</code>) every time after that.</em></p>\n\n<hr>\n\n<p>Good luck!</p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p><strong>General question:</strong> When a default Javascript prototype like Array has been modified, hacked, changed and twisted to the point of being unusable, is there any way to create instances of (or re-implement) the original, un-modified prototype?</p>\n\n<hr>\n\n<p><strong>My case:</strong> I've got some code that is failing in the 'edit' mode of a (horrible, proprietary, closed source...) content management system, because the javascript for the interface of the 'edit' mode of the content management  system hacks the absolute living hell out of the <code>Array</code> prototype.</p>\n\n<p>My code will work in the non-edit mode of the CMS, but, to get there, it has be tested in the 'edit' mode. <a href=\"http://stackoverflow.com/questions/574584/\">It's possible to test if a prototype has been modified</a>. Is it possible to re-implement the default Array prototype so I could do something like this:</p>\n\n<pre><code>var hasArrayBeenTrashed = // boolean based on http://stackoverflow.com/questions/574584/\nvar normalArray.prototype = // based on answer to this question \nvar myArray = !hasArrayBeenTrashed ? [] : new normalArray;\n</code></pre>\n",
            "last_activity_date": 1362103099,
            "question_id": 13990187,
            "score": 7,
            "tags": [
                "javascript",
                "arrays",
                "object",
                "prototype"
            ],
            "title": "Create a reset of javascript Array prototype when Array.prototype has been modified?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>For z-index to work, you also have to set position = relative, absolute, or fixed. Also putting z-index something like 5000 might help. (the modal is at a z index in the 2000's. </p>\n\n<p>so in your css i would add this:</p>\n\n<pre><code>.class-of-dropdown {\n    position: relative;\n    z-index: 5000;\n}\n</code></pre>\n\n<p><strong>Edit:</strong>\n<code>.modal-body</code> class has a  <code>overflow-y: auto</code> property. You might need to change this to:</p>\n\n<pre><code>.modal-body {\n    overflow-y:visible;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>I was also having this same problem and couldn't get @hajpoj's to work.  I did get it working by setting the following css:</p>\n\n<pre><code>.modal-body { \n    position: static; \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using a modal box based on the example from twitter bootstrap.  I have a select element that uses chosen.  When the chosen select drops down, it is cut off by the modal footer.  I tried to add the z-index value on the chosen elements, but nothing works.  I'm looking at it in tilt, and wonder if it is just because the select element is with divs that are before the modal footer div?  I'm using the default CSS from chosen and bootstrap for this as well, so I haven't modified anything.</p>\n\n<p>example.\n<img src=\"http://i.stack.imgur.com/FOul7.png\" alt=\"enter image description here\"></p>\n\n<p>HTML:</p>\n\n<pre><code>            &lt;div class=\"modal-header\"&gt;\n                &lt;button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;\n                    \u00d7&lt;/button&gt;\n                &lt;h3&gt;\n                    Add Tag&lt;/h3&gt;\n            &lt;/div&gt;\n            &lt;div class=\"modal-body\"&gt;\n                &lt;div class=\"control-group\"&gt;\n                    &lt;label for=\"addedTags\"&gt;\n                        Add tags (separated by commas)\n                    &lt;/label&gt;\n                    &lt;input id=\"addedTags\" style=\"width: inherit\" type=\"text\"&gt;\n                &lt;/div&gt;\n                &lt;div class=\"control-group\"&gt;\n                    &lt;label for=\"deleteTags\"&gt;\n                        Delete tags\n                    &lt;/label&gt;\n                    &lt;select style=\"display: none;\" class=\"tags chzn-done\" id=\"deleteTags\" multiple=\"multiple\" name=\"deleteTags\"&gt;&lt;option value=\"49\"&gt;Accessories&lt;/option&gt;\n    &lt;option value=\"69\"&gt;AG_Adriano_Goldschmied&lt;/option&gt;\n    &lt;option value=\"37\"&gt;BCBG&lt;/option&gt;\n    &lt;option value=\"38\"&gt;Bebe&lt;/option&gt;\n    &lt;option value=\"45\"&gt;Bernie_Dexter&lt;/option&gt;\n    &lt;option value=\"19\"&gt;Black&lt;/option&gt;\n    &lt;option value=\"6\"&gt;Blue&lt;/option&gt;\n    &lt;option value=\"66\"&gt;Body-Con&lt;/option&gt;\n    &lt;option value=\"71\"&gt;Casual&lt;/option&gt;\n    &lt;option value=\"39\"&gt;Christian_Louboutin&lt;/option&gt;\n    &lt;option value=\"64\"&gt;Clear&lt;/option&gt;\n    &lt;option value=\"50\"&gt;Coach&lt;/option&gt;\n    &lt;/select&gt;&lt;div style=\"width: [object Object]px;\" class=\"chzn-container chzn-container-multi chzn-container-active\" id=\"deleteTags_chzn\"&gt;\n&lt;ul class=\"chzn-choices\"&gt;&lt;li class=\"search-field\"&gt;&lt;input value=\"Select Some Options\" class=\"default\" autocomplete=\"off\" style=\"width: 149px;\" type=\"text\"&gt;&lt;/li&gt;&lt;/ul&gt;\n&lt;div class=\"chzn-drop\" style=\"left: 0px; top: 29px;\"&gt;&lt;ul class=\"chzn-results\"&gt;&lt;li id=\"deleteTags_chzn_o_0\" class=\"active-result highlighted\" style=\"\"&gt;Accessories&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_1\" class=\"active-result\" style=\"\"&gt;AG_Adriano_Goldschmied&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_2\" class=\"active-result\" style=\"\"&gt;BCBG&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_3\" class=\"active-result\" style=\"\"&gt;Bebe&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_4\" class=\"active-result\" style=\"\"&gt;Bernie_Dexter&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_5\" class=\"active-result\" style=\"\"&gt;Black&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_6\" class=\"active-result\" style=\"\"&gt;Blue&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_7\" class=\"active-result\" style=\"\"&gt;Body-Con&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_8\" class=\"active-result\" style=\"\"&gt;Casual&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_9\" class=\"active-result\" style=\"\"&gt;Christian_Louboutin&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_10\" class=\"active-result\" style=\"\"&gt;Clear&lt;/li&gt;&lt;li id=\"deleteTags_chzn_o_11\" class=\"active-result\" style=\"\"&gt;Coach&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=\"modal-footer\"&gt;\n                &lt;button class=\"btn\" data-dismiss=\"modal\" aria-hidden=\"true\"&gt;\n                    Close&lt;/button&gt;\n                &lt;input class=\"btn btn-primary\" id=\"btnAddTags\" value=\"Save\" type=\"button\"&gt;\n                &lt;span class=\"loader\"&gt;&lt;/span&gt;\n            &lt;/div&gt;\n            &lt;div class=\"alert alert-error hide\"&gt;\n                &lt;button type=\"button\" class=\"close\" data-dismiss=\"alert\"&gt;\n                    \u00d7&lt;/button&gt;\n                &lt;strong&gt;Error&lt;/strong&gt; &lt;span class=\"alert-msg\"&gt;&lt;/span&gt;\n            &lt;/div&gt;\n            &lt;div class=\"alert alert-success hide\"&gt;\n                &lt;button type=\"button\" class=\"close\" data-dismiss=\"alert\"&gt;\n                    \u00d7&lt;/button&gt;\n                &lt;strong&gt;Success&lt;/strong&gt; &lt;span class=\"alert-msg\"&gt;&lt;/span&gt;\n            &lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1376569234,
            "question_id": 13768382,
            "score": 7,
            "tags": [
                "javascript",
                "css",
                "twitter-bootstrap",
                "jquery-chosen"
            ],
            "title": "Bootstrap Modal Footer Issue"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I did a proof of concept with some modifications from what you originally had. See below,</p>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/cgy69/\" rel=\"nofollow\">http://jsfiddle.net/cgy69/</a></p>\n\n<pre><code>$(function() {\n    $('div').focus();\n    var x = ['SELECT', 'WHERE', 'FROM'];\n    $('div').keyup(function(e) {\n        //console.log(e.keyCode) ;\n        if (e.keyCode == 32) {\n\n            //using .text() remove prev span inserts\n            var text = $.trim($(this).text()).split(' ');            \n            $.each(text, function(i, v) {\n                $.each(x, function(j, xv) {\n                    if (v.toUpperCase() === xv) {\n                        text[i] = '&lt;span style=\"color: blue; text-transform: uppercase;\"&gt;' + v + '&lt;/span&gt;';    \n                    }                                        \n                });\n            });\n\n            $(this).html(text.join(' ') + '&amp;nbsp;');\n\n            setEndOfContenteditable(this);\n        }\n    });\n\n    function setEndOfContenteditable(contentEditableElement) {\n        var range, selection;\n        if (document.createRange) //Firefox, Chrome, Opera, Safari, IE 9+\n        {\n            range = document.createRange(); //Create a range (a range is a like the selection but invisible)\n            range.selectNodeContents(contentEditableElement); //Select the entire contents of the element with the range\n            range.collapse(false); //collapse the range to the end point. false means collapse to end rather than the start\n            selection = window.getSelection(); //get the selection object (allows you to change selection)\n            selection.removeAllRanges(); //remove any selections already made\n            selection.addRange(range); //make the range you have just created the visible selection\n        }\n        else if (document.selection) //IE 8 and lower\n        {\n            range = document.body.createTextRange(); //Create a range (a range is a like the selection but invisible)\n            range.moveToElementText(contentEditableElement); //Select the entire contents of the element with the range\n            range.collapse(false); //collapse the range to the end point. false means collapse to end rather than the start\n            range.select(); //Select the range (make it the visible selection\n        }\n    }\n});\n</code></pre>\n\n<p>You going to extend this further to handle</p>\n\n<ol>\n<li><s>Backspace</s></li>\n<li><s>HTML contents from previous inserts</s></li>\n<li><s>Cursor position</s> Partially done, editing in the middle would still mess up the caret.</li>\n</ol>\n\n<p>and more..</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Starting with a <code>contenteditable</code> element we can replace the markup as we need by operating directly on its <code>innerHtml</code>:</p>\n\n<pre><code>$('#query-container').on('keyup', function(e){\n  var $this = $(this);\n  //(?!\\&lt;\\/b\\&gt;) negative lookahead is used so that anything already wrapped\n  //into a markup tag would not get wrapped again\n  $this.html($this.html().replace(/(SELECT|UPDATE|DELETE)(?!\\&lt;\\/b\\&gt;)/gi, '&lt;b&gt;$1&lt;/b&gt;'));\n  setEndOfContenteditable(this);\n});\n</code></pre>\n\n<p>IMO this is a more readable option. Add the rangeselect method from the previous answer and we have <a href=\"http://jsfiddle.net/ovfiddle/tFnzG/\" rel=\"nofollow\">a working fiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have the following <code>div</code>:</p>\n\n<pre><code>&lt;div id=\"query\" style=\"width:500px; height:200px;border:1px solid black\"\n spellcheck=\"false\" contenteditable=\"true\"&gt;&lt;/div&gt;\u200b\n</code></pre>\n\n<p>where Clients can write their <code>SQL</code> queries.  What I was trying to do is wrap words the client enters right after hitting <kbd>Space</kbd> with a <code>span</code> and give this span a certain <code>class</code> according to the word typed:</p>\n\n<p><em>example</em></p>\n\n<p>If the client types <code>select</code> i need to wrap this select word like this in the div:</p>\n\n<pre><code>&lt;span class='select'&gt; SELECT &lt;/span&gt; &lt;span&gt; emp_name &lt;/span&gt;\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>.select{color:blue ;text-transform:uppercase;}\n</code></pre>\n\n<p>It is something very similar to what <code>jsFiddle</code> does. How can i achieve this?</p>\n\n<p>Here is what i have tried so far : <a href=\"http://jsfiddle.net/esu7A/1/\" rel=\"nofollow\">jsFiddle</a></p>\n\n<pre><code>$(function(){\n    $('div').focus() ;\n    $('div').keyup(function(e){\n        //console.log(e.keyCode) ;\n        if(e.keyCode == 32){\n            var txt = $('div').text() ;\n            var x = 'SELECT' ;\n            $('div:contains(\"'+x+'\")').wrap(\"&lt;span style='color:blue ;\n      text-transform:uppercase;'&gt;\") ;\n            if(txt == 'SELECT'){\n                console.log('found') ; // why This Doesn't do any thing  ?\n            }\n\n        }\n    });\n\n});\n</code></pre>\n",
            "last_activity_date": 1352250199,
            "question_id": 13259872,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Wrap certain word with &lt;span&gt; using jquery"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>SEE UPDATE AT THE END, THIS IS NOW POSSIBLE... Leaving the below as I think it's still relevant.</strong></p>\n\n<p>There is an alternative if you don't need the location of the label to be \"Dynamic\" (i.e. there are multiple labels that need to have specific positions).</p>\n\n<p>You can use the <code>&lt;tspan&gt;</code> element.</p>\n\n<p>As Kendo renders the old school SVG rather than the HTML5 Canvas, html tags don't work.  You have to use SVG tags.  These are not great as the SVG 1.1 spec doesn't easily allow for text wrapping.  The recommendation for text wrapping in SVGs is the tspan.</p>\n\n<p>e.g.</p>\n\n<pre><code>&lt;tspan x=\"30\" dy=\"0\" text-anchor=\"middle\"&gt;Test&lt;/tspan&gt;\n&lt;tspan x=\"30\" dy=\"1.5em\"text-anchor=\"middle\"&gt;Other 7&lt;/tspan&gt;\n</code></pre>\n\n<p>if you set the above as your label, it will get you closer, but until Kendo upgrade to HTML5 technologies like Canvas (highly unlikely), or SVG 1.2 comes in (August 2014) as this brings <code>&lt;tbreak/&gt;</code>, this is about the best we have.</p>\n\n<p>There is also another problem in that the rendering of the chart doesn't appear to take into account the graphical representation of the text, so you might get some unwanted clipping.</p>\n\n<p><strong>UPDATE (17/01/2014)</strong></p>\n\n<p>According to this UserVoice <a href=\"http://kendoui-feedback.telerik.com/forums/127393-telerik-kendo-ui-feedback/suggestions/3434807-chart-multi-line-labels\" rel=\"nofollow\">http://kendoui-feedback.telerik.com/forums/127393-telerik-kendo-ui-feedback/suggestions/3434807-chart-multi-line-labels</a></p>\n\n<p>They are planning to implement the functionality in Q1 2014, I'll update the answer once it's generally available.</p>\n\n<p><strong>UPDATE (27/04/2014)</strong>\nThey've said that this will now be planned for after Q1... who knows when now... oh well...</p>\n\n<p><strong>UPDATE (09/01/2015)</strong>\nConfirmed it works in Kendo UI v2014.3.1119 with \"\\n\". See documentation: <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-categoryAxis.title.text\" rel=\"nofollow\">http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-categoryAxis.title.text</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Finally implemented by Telerik</p>\n\n<p>See <a href=\"http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-categoryAxis.title.text\" rel=\"nofollow\">http://docs.telerik.com/kendo-ui/api/javascript/dataviz/ui/chart#configuration-categoryAxis.title.text</a></p>\n\n<p>The text can be split into multiple lines by using line feed characters (\"\\n\").</p>\n\n<p>Happens to text, titles, labels, notes anywere!</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a chart where the labels contain two parts, a name an a number.\nI want the number to appear below the name, illustrated by the <code>&lt;br/&gt;</code> tag:</p>\n\n<p><img src=\"http://i.stack.imgur.com/jA8p4.png\" alt=\"line break\"></p>\n\n<p>I load the contents of the chart, and set the label in my controller:\n<img src=\"http://i.stack.imgur.com/RrT1t.png\" alt=\"label\"></p>\n\n<p>When i try to use a template on the label, the text after the line break appears at the bottom of the chart along with the rest of the text of the chart:</p>\n\n<p><img src=\"http://i.stack.imgur.com/ONidt.png\" alt=\"enter image description here\"></p>\n\n<p>javascript code:</p>\n\n<pre><code>$(\"#chart1\").kendoChart({\n        theme: \"BlueOpal\",\n        title: { text: \"My reported hours\" },\n        legend: { position: \"bottom\" },\n        seriesDefaults: { type: \"column\" },\n        dataSource: {\n            transport: {\n                read: {\n                    url: dataUrl,\n                    dataType: \"json\"\n                }\n            }\n        },\n        series: [{ field: \"SeriesField\" }],\n        categoryAxis: {\n            field: \"CategoryAxis\",\n            labels: {\n                rotation: 0,\n                template: \"#=value#&lt;br/&gt;newline\"\n            },\n\n        },\n        valueAxis: {\n            labels: { format: \"{0}h\" },\n            min: 0\n        },\n        tooltip: {\n            visible: true,\n            template: \"#= formatDecimal(value) #&lt;br/&gt; newline\"\n        },\n        seriesClick: onSeriesClick\n    });\n</code></pre>\n\n<p>How do i make the line break work?</p>\n",
            "last_activity_date": 1420843952,
            "question_id": 13247577,
            "score": 7,
            "tags": [
                "javascript",
                "asp.net-mvc",
                "kendo-ui"
            ],
            "title": "Line break in category label of kendo-ui chart"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Assuming your timestamp is in milliseconds (or you can convert to milliseconds easily) then you can use the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date\"><code>Date</code> constructor</a> and the <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toISOString\"><code>date.toISOString()</code> method</a>.</p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>var s = new Date(1331209044000).toISOString();\ns; // =&gt; \"2012-03-08T12:17:24.000Z\"\n</code></pre>\n\n<p>If you target older browsers which do not support EMCAScript 5th Edition then you can use the strategies listed in this question: <a href=\"http://stackoverflow.com/questions/2573521/how-do-i-output-an-iso-8601-formatted-string-in-javascript\">How do I output an ISO-8601 formatted string in Javascript?</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>The solution i used, thanks to the links provided</p>\n\n<pre><code>// convert to ISO 8601 timestamp\nfunction ISODateString(d){\n    function pad(n){return n&lt;10 ? '0'+n : n}\n    return d.getUTCFullYear()+'-'\n        + pad(d.getUTCMonth()+1)+'-'\n        + pad(d.getUTCDate())+'T'\n        + pad(d.getUTCHours())+':'\n        + pad(d.getUTCMinutes())+':'\n        + pad(d.getUTCSeconds())+'Z'\n}\n\nvar d = new Date(parseInt(date));\nconsole.log(ISODateString(d));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to use the jquery timeago plugin - <a href=\"http://timeago.yarp.com/\">http://timeago.yarp.com/</a></p>\n\n<p>I have timestamps like this <code>1331209044000</code> and the docs say i need an ISO 8601 timestamp.</p>\n\n<p>To be honest i have never heard of ISO 8601.</p>\n\n<p>How can i convert it?</p>\n\n<p>Cheers</p>\n",
            "last_activity_date": 1350156759,
            "question_id": 12868176,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "timeago"
            ],
            "title": "Convert Unix timestamp to ISO 8601"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you use <code>Modernizr</code> you can download only the code necessary to perform this kind of task</p>\n\n<p><a href=\"http://modernizr.com/download/#-backgroundsize-testprop-testallprops-domprefixes\" rel=\"nofollow\">http://modernizr.com/download/#-backgroundsize-testprop-testallprops-domprefixes</a></p>\n\n<p>then you can test with</p>\n\n<pre><code>if (Modernizr.backgroundsize) {\n    /* backgroundSize supported */\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you are trying to detect low functioning browsers to avoid having a postage stamp image stuck in the middle of things, then one quick and dirty workaround is to</p>\n\n<pre><code>var rules = document.styleSheets[0].cssRules;\n</code></pre>\n\n<p>If it's undefined, then you know you have a low functioning browser and should probably go with your fallback approach. YMMV.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could do</p>\n\n<p><code>div.styles.hasOwnProperty('backgroundSize')</code></p>\n\n<p>Assuming that if it supports <code>background-size</code> it would allow the value <code>cover</code>, which is the case, I think.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is with javascript alone, no jquery just check the version of browser you delealing with</p>\n\n<pre><code>//check if Is bad IE. \nvar noBGSizeSupport = window.attachEvent &amp;&amp; !window.addEventListener \n\nif(noBGSizeSupport){\n    //does not support BG size property\n} else {\n  // supports background size property\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is a save way to detect support for CSS3 <em>background-size: cover</em>, especially in IE &lt; 9?  </p>\n\n<p>Following test returns a false positive in IE &lt; 9, because it actually sets <em>background-size</em> to <em>cover</em>:</p>\n\n<pre><code>div.style.backgroundSize = 'cover';\n</code></pre>\n\n<p>The only true result I get when testing for:</p>\n\n<pre><code>if ('backgroundSize' in div.style)\n</code></pre>\n\n<p>But according to the site <a href=\"http://www.standardista.com/css3/css3-background-properties/#bg11\">http://www.standardista.com/css3/css3-background-properties/#bg11</a>, IE 6/7/8 should return <em>auto</em>, only <em>cover</em> and <em>contain</em> are not supported.</p>\n\n<p><strong>Edit:</strong> </p>\n\n<p>I would like to use my own solution, but I have checked the <a href=\"https://github.com/Modernizr/Modernizr/blob/master/feature-detects/css-backgroundsizecover.js\">code used by Modernizr</a>.\nIt seems they use the same technique that gives me false positive results in IE &lt; 9:\nSet <em>backgroundSize = 'cover'</em> and then check for <em>style.backgroundSize == 'cover'</em>.</p>\n\n<p>See my <a href=\"http://jsfiddle.net/cx6DP/1/\">JSFiddle</a>.</p>\n",
            "last_activity_date": 1416389202,
            "question_id": 12244598,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "css3"
            ],
            "title": "Detect support for background-size: cover"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Depends specifically on the console. For custom objects in Chrome's developer console, and Firebug you'll need both the <code>length</code> and <code>splice</code> properties. <code>splice</code> will also have to be a function.</p>\n\n<pre><code>a = {\n    length: 0,\n    splice: function () {}\n}\nconsole.log(a); //[]\n</code></pre>\n\n<p>It's important to note, however, that there is no official standard.</p>\n\n<p>The following code is used by jQuery (v1.11.1) internally to determine if an object should use a <code>for</code> loop or a <code>for..in</code> loop:</p>\n\n<pre><code>function isArraylike( obj ) {\n    var length = obj.length,\n        type = jQuery.type( obj );\n\n    if ( type === \"function\" || jQuery.isWindow( obj ) ) {\n        return false;\n    }\n\n    if ( obj.nodeType === 1 &amp;&amp; length ) {\n        return true;\n    }\n\n    return type === \"array\" || length === 0 ||\n        typeof length === \"number\" &amp;&amp; length &gt; 0 &amp;&amp; ( length - 1 ) in obj;\n}\n</code></pre>\n\n<p>Note that it's possible to have an object that appears in the console as an array (<code>[]</code>) but that gets iterated over with a <code>for..in</code> loop in jQuery, or an object that appears as an object in the console (<code>{}</code>) but that gets iterated over with a <code>for</code> loop in jQuery.</p>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>Is this any use: <a href=\"http://kenegozi.com/blog/2009/04/13/javascript-and-the-extended-array-prototype\" rel=\"nofollow\">extended array prototype</a>, seems like he's doing what you did and creating the prototype as an array, but including an extra method (that may or may not work, I've not tested this):</p>\n\n<pre><code>var MyArray = function() {\n};\n\nMyArray.prototype = new Array;\n\nMyArray.prototype.forEach = function(action) {\n    for (var i = 0, l=this.length; i &lt; l, ++i) {\n        action(this[i]);\n    }\n};\n</code></pre>\n\n<p>Hope it helps in some way.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I think <a href=\"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Object/toString?redirectlocale=en-US&amp;redirectslug=Core_JavaScript_1.5_Reference/Global_Objects/Object/toString\" rel=\"nofollow\">this</a> is what you are looking for.\nOverride the toString function.</p>\n\n<pre><code>foo.prototype.toString = function()\n{\n    return \"[object Foo &lt;\" + this[0] +\"&gt;]\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In JavaScript, there are objects that pretend to be arrays (or are \"array-like\").  Such objects are <code>arguments</code>, <code>NodeList</code>s (returned from <code>getElementsByClassName</code>, etc.), and jQuery objects.</p>\n\n<p>When <code>console.log</code>ged, they appear as arrays, but they are not.  I know that in order to be array-like, an object must have a <code>length</code> property.</p>\n\n<p>So I made an \"object\" like this:</p>\n\n<pre><code>function foo(){\n    this.length = 1;\n    this[0] = \"bar\";\n}\n\nvar test = new foo;\n</code></pre>\n\n<p>When I <code>console log(test)</code>, I get (as expected) a <code>foo</code> object.  I can \"convert\" it to an array using</p>\n\n<pre><code>Array.prototype.slice.call(test)\n</code></pre>\n\n<p>But, I don't want to convert it, I want it to be array-like. How do I make an array-like object, so that when it's <code>console.log</code>ged, it appears as an array?</p>\n\n<p>I tried setting <code>foo.prototype = Array.prototype</code>, but <code>console.log(new foo)</code> still shows a <code>foo</code> object, and not an array.</p>\n",
            "last_activity_date": 1406303932,
            "question_id": 11886578,
            "score": 7,
            "tags": [
                "javascript",
                "arrays",
                "object"
            ],
            "title": "Creating array-like objects in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>It looks like it's just a shorthand way to display the repeated 'undefined' values. eg:</p>\n\n<pre><code>&gt; [,,,]\n  [ undefined x 3 ]\n</code></pre>\n\n<p>But <code>[]</code> is not the same as <code>[undefined]</code> at all. I'd double check that if I were you.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><code>[,]</code> is a <a href=\"http://stackoverflow.com/q/1510778/1048572\">sparse array</a>. It has a length of <code>1</code>, but no values (<code>0 in [,] === false</code>). It can also be written as <code>new Array(1)</code>.</p>\n\n<p><code>[undefined]</code> is an array of length <code>1</code> with the value <code>undefined</code> at index <code>0</code>.</p>\n\n<p>When accessing the property \"<code>0</code>\", both will return <code>undefined</code> - the first because that property is not defined, the second because the value is \"undefined\". However, the arrays are different, and so is their <a href=\"http://stackoverflow.com/questions/10683773/what-is-undefined-x-1-in-javascript\">output in the console</a>.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Thats odd <code>[]</code> outputs just <code>[]</code> again for me on Chrome 21.</p>\n\n<p>Anyway <code>[a, b, c, ...]</code> is the array notation of Javascript so you are basically defining an array with no values.</p>\n\n<p>However an ending <code>,</code> is acceptable to make array generation easier. So what Chrome is telling you is there is one undefined value in the array. See code for examples.</p>\n\n<pre><code>[,,]\n&gt; [undefined x2]\n[1,2,]\n&gt; [1, 2]\n[1,2,,]\n&gt; [1, 2, undefined \u00d7 1]\n[1,2,,,]\n&gt; [1, 2, undefined \u00d7 2]\n[1,2,,3,4,,,6]\n&gt; [1, 2, undefined \u00d7 1, 3, 4, undefined \u00d7 2, 6]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>[,]</code> creates an array with length of 1 and no indices.</p>\n\n<p><code>[undefined]</code> creates an array with length of 1 with <code>undefined</code> value at index <code>0</code>.</p>\n\n<p>Chrome's <code>undefined \u00d7 x</code> is for sparse arrays that don't have sequential indices:</p>\n\n<pre><code>var a = [];\n\na[8] = void 0; //set the 8th index to undefined, this will make the array's length to be 9 as specified. The array is sparse\nconsole.log(a) //Logs undefined \u00d7 8, undefined, which means there are 8 missing indices and then a value `undefined`\n</code></pre>\n\n<p>If you were to use <code>.forEach</code> on a sparse array, it skips the indices that don't exist.</p>\n\n<pre><code>a.forEach(function() {\n    console.log(true); //Only logs one true even though the array's length is 9\n});\n</code></pre>\n\n<p>Where as if you do a normal <code>.length</code> based loop:</p>\n\n<pre><code>for (var i = 0; i &lt; a.length; ++i) {\n    console.log(true); //will of course log 9 times because it's only .length based\n}\n</code></pre>\n\n<p>There is a gotcha if you expect <code>.forEach</code> to behave the same as non-standard implementations.</p>\n\n<pre><code>new Array(50).forEach( function() {\n    //Not called, the array doesn't have any indices\n});\n\n$.each( new Array(50), function() {\n    //Typical custom implementation calls this 50 times\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/10683773/what-is-undefined-x-1-in-javascript\">What is &ldquo;undefined x 1&rdquo; in JavaScript?</a>  </p>\n</blockquote>\n\n\n\n<p>In Chrome 21, feeding <code>[,]</code> to the console outputs</p>\n\n<blockquote>\n  <p>[undefined x 1]</p>\n</blockquote>\n\n<p>and feeding <code>[undefined]</code> outputs</p>\n\n<blockquote>\n  <p>[undefined]</p>\n</blockquote>\n\n<p>What is the difference between <code>[undefined]</code> and <code>[undefined x 1]</code>?</p>\n\n<p>What is the notation <code>[undefined x 1]</code>?</p>\n",
            "last_activity_date": 1344087652,
            "question_id": 11808946,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "What is the difference between [undefined] and [,]?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Your assumption that <code>order</code> is no longer supported is correct. It was removed in favour of the <code>shim</code> configuration option:</p>\n\n<blockquote>\n  <p>So, the the order plugin has been removed and following the lead of\n  Tim Branyen and Dave Geddes, of use and wrap respectively, requirejs\n  2.0 integrates that kind of dependency tree specification directly in requirejs.</p>\n</blockquote>\n\n<p>Require 2.0 upgrade notes - <a href=\"https://github.com/jrburke/requirejs/wiki/Upgrading-to-RequireJS-2.0\">https://github.com/jrburke/requirejs/wiki/Upgrading-to-RequireJS-2.0</a></p>\n\n<p>Also, check the <code>shim</code> documentation on the RequireJS site - <a href=\"http://requirejs.org/docs/api.html#config-shim\">http://requirejs.org/docs/api.html#config-shim</a></p>\n",
                    "is_accepted": true,
                    "score": 17
                },
                {
                    "body": "<p>Oh figured it out.</p>\n\n<pre><code>//This is our main applicatoon boot loader or bootstrap\n//here we are loading necessary scripts dependencies like\n//jquery, jqm.config, mobile, text\n\n\nrequirejs.config({\n    baseUrl: 'js/libs',\n    //except, if the module ID starts with \"app\",\n    //load it from the js/app directory. paths\n    //config is relative to the baseUrl, and\n    //never includes a \".js\" extension since\n    //the paths config could be for a directory.\n    paths: {\n        app: '../app',\n        assets: '../assets',\n        views: '../app/views',\n        templates: '../app/templates',\n        collections: '../app/collections',\n        models: '../app/models'\n    }\n});\n\n// Start the main app logic.\n\nrequire([\"jquery\",\"assets/jqm.config\",\"jquery/mobile\",\"text\",\"app\"], \n    function(\n    $,\n    config,\n    mobile,\n    text,\n    App\n    ) {\n    //the jquery.alpha.js and jquery.beta.js plugins have been loaded.\n    $(function() {\n        App.initialize();\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p><a href=\"http://requirejs.org/\">http://requirejs.org/</a></p>\n\n<p>I recently downloaded require.js 2.0 and I am getting error in my console:</p>\n\n<pre><code>Uncaught TypeError: Object function (){var g=ga.call(arguments,0),e;if(f&amp;&amp;v(e=g[g.length-1]))e.__requireJsBuild=!0;g.push(d);return b.apply(null,g)} has no method 'nameToUrl'\n</code></pre>\n\n<p>Is order.js plugin still supported by requirejs? I don't see its documentation in the website.</p>\n\n<p>When I try to remove the file the script breaks.</p>\n\n<p>In my index file, I included requirejs script in the head section:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;\n            My Mobile Application\n        &lt;/title&gt;\n        &lt;link rel=\"stylesheet\" href=\"http://code.jquery.com/mobile/1.1.0/jquery.mobile-1.1.0.min.css\" /&gt;\n        &lt;link rel=\"stylesheet\" href=\"public/css/style.css\" /&gt;\n        &lt;script data-main=\"scripts/main.js\" src=\"scripts/require.js\"&gt;&lt;/script&gt;\n    &lt;/head&gt;\n    &lt;body&gt;&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Then in my main.js file:</p>\n\n<pre><code>requirejs.config({\n    //By default load any module IDs from js/lib\n    baseUrl: 'js/lib',\n    //except, if the module ID starts with \"app\",\n    //load it from the js/app directory. paths\n    //config is relative to the baseUrl, and\n    //never includes a \".js\" extension since\n    //the paths config could be for a directory.\n    paths: {\n        app: '../app',\n        assets: '../assets',\n        views: '../app/views',\n        templates: '../app/templates',\n        collections: '../app/collections',\n        models: '../app/models'\n    }\n});\n\n// Start the main app logic.\nrequirejs([\n    'jquery/jquery',\n    'assets/jqm.config',\n    'jquery/mobile',\n    'text'\n]);\n\nrequire([\n    'app'\n    ],\n    function( App ){\n        $(document).ready( function(){\n            App.initialize();\n        });\n    }\n);\n</code></pre>\n\n<p>I sees to it that App.initialize doesn't have any errors and what App.initialize is doing is just simple geo location. The requirejs simply ask for order.js, and when I put the code it's having the same error as mentioned above.</p>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1338508885,
            "question_id": 10841522,
            "score": 7,
            "tags": [
                "javascript",
                "requirejs"
            ],
            "title": "RequireJS plugin( order.js )"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>How about this:</p>\n\n<pre><code>Array.prototype.each_slice = function (size, callback){\n  for (var i = 0, l = this.length; i &lt; l; i += size){\n    callback.call(this, this.slice(i, i + size));\n  }\n};\n\n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].each_slice(3, function (slice){\n  console.log(slice);\n});\n</code></pre>\n\n<p>Output (in Node.js):</p>\n\n<pre><code>[ 1, 2, 3 ]\n[ 4, 5, 6 ]\n[ 7, 8, 9 ]\n[ 10 ]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I would modify Brandan's answer slightly to fit better within  the environment of JavaScript plus underscore.js:</p>\n\n<pre><code>_.mixin({ \"eachSlice\": function(obj, size, iterator, context) {\n    for (var i=0, l=obj.length; i &lt; l; i+=size) {\n      iterator.call(context, obj.slice(i,i+size), i, obj);\n    } }});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I am looking for an equivalent of Ruby's Enumerable#each_slice in Javascript.</p>\n\n<p>I am already using the great underscore.js that has each(), map(), inject()...</p>\n\n<p>Basically, in Ruby this great method does this :</p>\n\n<pre><code>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].each_slice(3) {|a| p a}\n\n# outputs below\n[1, 2, 3]\n[4, 5, 6]\n[7, 8, 9]\n[10]\n</code></pre>\n",
            "last_activity_date": 1346768653,
            "question_id": 10249658,
            "score": 7,
            "tags": [
                "javascript",
                "underscore.js"
            ],
            "title": "Equivalent of Ruby Enumerable#each_slice in Javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Whenever your '<code>map</code>' div changes its sizes, you need to trigger '<code>resize</code>' event explicitly on Google Maps component:</p>\n\n<blockquote>\n  <p>Developers should trigger this event on the map when the div changes\n  size: google.maps.event.trigger(map, 'resize') .</p>\n</blockquote>\n\n<p><a href=\"https://developers.google.com/maps/documentation/javascript/reference#Map\">https://developers.google.com/maps/documentation/javascript/reference#Map</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>It's kinda hard to explain so I uploaded a screen shot of the issue:\n<img src=\"http://i.stack.imgur.com/9q9RL.png\" alt=\"enter image description here\"></p>\n\n<p>As you can see, despite the div real-estate on the map (this is actual size), it only displays 1/6th of the map! This little widget can be resized but even when it is it is cut off. I'm sure I'm doing something wrong but can't figure it out. Here's the CSS code for the div that contains the map:</p>\n\n<pre><code>#map {\nborder-right-color: black;\nborder-left-color: black;\nborder-right-width: 1px;\nborder-left-width: 1px;\nposition: absolute;\nmargin-top: 0px;\ntop: 38px;\nleft: 0px;\nwidth: auto;\nheight: auto;\nright: 0px;\nbottom: 10px;\nbackground-color: rgb(204, 204, 204);\nborder-bottom-style: solid;\nborder-top-style: solid;\nborder-bottom-width: 1px;\nborder-top-width: 1px;\nborder-bottom-color: rgb(204, 204, 204);\nborder-top-color: rgb(204, 204, 204);\noverflow: hidden;\n}\n</code></pre>\n\n<p>here's the javascript that is making the map:</p>\n\n<pre><code> //google maps apis\n var marker;\n var setLocation =  new google.maps.LatLng(59.32522, 18.07002);\n\n var marker;\n\n function placeMarker(location) {\n   if ( marker ) {\n     marker.setPosition(location);\n   } else {\n     marker = new google.maps.Marker({\n  position: location,\n  map: map,\n  draggable: true\n     });\n   }\n }\n\n  function searchGoogleMaps(event) { \nvar address =event.target.value;\ngeocoder.geocode( { 'address': address}, function(results, status) {\n  if (status == google.maps.GeocoderStatus.OK) {\n    map.setCenter(results[0].geometry.location);\n\n        placeMarker(results[0].geometry.location)\n\n\n  } else {\n    alert(\"Geocode was not successful for the following reason: \" + status);\n  }\n     });\n   }  \n\n\n  var geocoder;\n   var map;\n   function initialize() {\n     geocoder = new google.maps.Geocoder();\n     var latlng = new google.maps.LatLng(-34.397, 150.644);\n     var myOptions = {\n  zoom: 2,\n  center: latlng,\n  mapTypeId: google.maps.MapTypeId.ROADMAP\n}\nmap = new google.maps.Map(document.getElementById(\"map\"), myOptions);\n   }\n\n\n   function toggleBounce() {\n\nif (marker.getAnimation() != null) {\n  marker.setAnimation(null);\n} else {\n  marker.setAnimation(google.maps.Animation.BOUNCE);\n}\n   }\n</code></pre>\n\n<p>and finally the javascript file that is being called to make this all happen:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://maps.googleapis.com/maps/api/js?libraries=places&amp;amp;sensor=false\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>Thanks in advance, especially for taking the time to read a long question like this!</p>\n",
            "last_activity_date": 1333524649,
            "question_id": 10006618,
            "score": 7,
            "tags": [
                "javascript",
                "css",
                "google-maps-api-3"
            ],
            "title": "My google maps is cut off, I&#39;m wondering why? Javascript, V"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>var L = jsonArray.length;\nfor (var i = 0; i &lt; L; i++) {\n    var obj = jsonArray[i];\n    for (var j in obj) {\n        alert(j);\n    }\n}\n</code></pre>\n\n<p>I've also made some modifications of your current code (like <code>length</code> caching).</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>Loop through the object properties, and select the first \"real\" one (which given your data schema should be the <em>only</em> real one).</p>\n\n<pre><code>var jsonArray = [{\"k1\":\"v1\"},{\"k2\":\"v2\"},{\"k3\":\"v3\"},{\"k4\":\"v4\"},{\"k5\":\"v5\"}]\n\nfor (var i = 0; i &lt; jsonArray.length; i++) {\n    for (var prop in jsonArray[i]) {\n        if (jsonArray[i].hasOwnProperty(prop)) {\n            var key = prop;\n            break;\n        }\n    }\n    alert(key);\n}\n</code></pre>\n\n<p>See <a href=\"http://stackoverflow.com/questions/2820573/how-to-loop-through-items-in-a-js-object\">How to loop through items in a js object?</a> for an explanation of why it's important to use <code>hasOwnProperty</code> here.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>jsonArray.reduce(function(keys, element){ \n    for (key in element) {\n       keys.push(key);\n    } \n    return keys; \n},[]);\n</code></pre>\n\n<p>This should also work for multiple keys in the array objects. </p>\n\n<p>If you're supporting old browsers that don't have reduce and map, then consider using a <a href=\"https://github.com/kriskowal/es5-shim/\" rel=\"nofollow\">shim</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Why don't you use a</p>\n\n<pre><code>var jsonObject = {\"k1\":\"v1\",\"k2\":\"v2\",\"k3\":\"v3\",\"k4\":\"v4\",\"k5\":\"v5\"}\n</code></pre>\n\n<p>instead of your</p>\n\n<pre><code>var jsonArray = [{\"k1\":\"v1\"},{\"k2\":\"v2\"},{\"k3\":\"v3\"},{\"k4\":\"v4\"},{\"k5\":\"v5\"}]\n</code></pre>\n\n<p>? Then the solution would be so simple: <code>Object.keys(jsonObject)</code>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>I have a JSON array like below:</p>\n\n<pre><code>var jsonArray = [{\"k1\":\"v1\"},{\"k2\":\"v2\"},{\"k3\":\"v3\"},{\"k4\":\"v4\"},{\"k5\":\"v5\"}]\n</code></pre>\n\n<p>I don't know any keys(k1....k5) exist in this array.\nNow I would like to get all keys existing in this array.</p>\n\n<p>It should be possible something like this:</p>\n\n<pre><code>for(i=0;i&lt;jsonArray.lenght;i++){\n  // something like-  key = jsonArray[i].key\n  // alert(key);\n}\n</code></pre>\n\n<p>Please tell me the method or way to get all keys existing in Json array.</p>\n\n<p>Regards</p>\n",
            "last_activity_date": 1394194274,
            "question_id": 9767133,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "json",
                "jquery-ui"
            ],
            "title": "Javascript: Getting all existing keys in a JSON array"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You could use the <code>Collate</code> object in your webpage.</p>\n\n<pre><code>function Collate(timeout) {\n  this.timeout = timeout || 1000;\n}\nCollate.prototype = {\n  time: 0,\n\n  idle: function() {\n    var t = new Date().getTime();\n    return (t - this.time &gt; this.timeout &amp;&amp; (this.time = t));\n  },\n\n  prefer: function(func) {\n    this.func = func;\n    clearTimeout(this.timer);\n    this.timer = setTimeout(func, this.timeout);\n  }\n};\n</code></pre>\n\n<p>If you want a function to run once and not run again within the next 1 second.\nLike if you want to prevent the user from submitting a form many times, you do this:</p>\n\n<pre><code>var timer = new Collate(3000);  //3 seconds\nbutton1.onclick = function() {\n    if(timer.idle()) {\n        button1.form.submit();\n    } else alert(\"Don't click too quickly!\");\n}\n\n//or on the form tag\n\n&lt;script&gt;var submitTimer = new Collate(3000);&lt;/script&gt;\n&lt;form action=\"post\" onsubmit=\"return submitTimer.idle();\"&gt;\n</code></pre>\n\n<p>If you expect an event to fire multiple times and only want to react to the last time it fires.\nLike if you want to search after a user has finished typing, you do this:</p>\n\n<pre><code>var timer = new Collate(700); //0.7 seconds\ntextfield1.onkeyup = function() {\n    timer.prefer(function() {\n        autocomplete.search(textfield1.value);\n    });\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Someone made me aware of some flaws in an application I'm working on (mostly within my JavaScript on the front-end), that leaves open the possibility of, say, clicking a ton of buttons at once and sending out a ton of transactional emails. This is clearly not good.</p>\n\n<p>I think one way to handle this in ExpressJS is by using <code>app.all()</code> to count the number of requests that happen within a certain timeframe. I'd store this in the session metadata with timestamps, and if more than X requests happen in Y time, I cut them off for awhile until the limit expires.</p>\n\n<p>Has anyone done this before or have any tips/hints to help me out? Something that's easy to drop in and out of my app is preferable. Thanks!</p>\n",
            "last_activity_date": 1330064975,
            "question_id": 9424422,
            "score": 7,
            "tags": [
                "javascript",
                "node.js",
                "rate-limiting",
                "express"
            ],
            "title": "Rate limiting to prevent malicious behavior in ExpressJS"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>jQuery UI doesn't include the standard jQuery library by default. You'll need to add a <code>&lt;script&gt;</code> tag to include the standard jQuery library before including any plugins that use it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>your </p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;&lt;/script&gt; \n</code></pre>\n\n<p>needs to be called before jquery ui &lt; script > tags.</p>\n\n<p>Should appear like this:</p>\n\n<pre><code> &lt;script type=\"text/javascript\" src=\"jquery.js\"&gt;&lt;/script&gt; &lt;-- put me here --&gt;\n &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js\"&gt;&lt;/script&gt;\n &lt;script src=\"http://bainternet-js-cdn.googlecode.com/svn/trunk/js/jQuery%20BlockUI%20Plugin/2.39/jquery.blockUI.js\"&gt;&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p><strong>Rails fix</strong>: make sure <code>&lt;%= javascript_include_tag \"application\" %&gt;</code> is before any script loading so that jquery gets loaded first. </p>\n\n<p>This seems really odd. When I load my page I get 2 js errors (in Chrome): </p>\n\n<pre><code>jquery-ui.min.js:17  Uncaught ReferenceError: jQuery is not defined\njquery.blockUI.js:499  Uncaught ReferenceError: jQuery is not defined\n</code></pre>\n\n<p>Ok, that seems... odd. So I look at my script includes. My first two script includes on my page: </p>\n\n<pre><code> &lt;script src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.9/jquery-ui.min.js\"&gt;&lt;/script&gt;\n  &lt;script src=\"http://bainternet-js-cdn.googlecode.com/svn/trunk/js/jQuery%20BlockUI%20Plugin/2.39/jquery.blockUI.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>So the first include is getting a javascript error related to itself? That seems unlikely. This looks like a case of a misdirection error (the real error is somewhere else). What can I do to fix this? JS errors on pages look a little unprofessional (at least to other devs). I wasn't getting this error the other day -- even reverted the code to make sure.  </p>\n",
            "last_activity_date": 1398436005,
            "question_id": 9266657,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "ruby-on-rails-3"
            ],
            "title": "how to fix &#39;jQuery is not defined&#39; error in jquery library?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>You need to store <code>this</code> in a separate variable:</p>\n\n<pre><code>$('.item').each(function () {\n  var me = $(this);\n  setTimeout(function () {\n    me.fadeIn(1000);\n  }, Math.floor(Math.random() * 1000));\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Create/Utilize a <code>closure</code>:</p>\n\n<pre><code>$('.item').each(function () {\n  var that = this;\n\n  setTimeout(function () {\n    $(that).fadeIn(1000);\n  }, Math.floor(Math.random() * 1000));\n})\n</code></pre>\n\n<p><a href=\"http://jibbering.com/faq/notes/closures/\">http://jibbering.com/faq/notes/closures/</a></p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Guide/Closures\">https://developer.mozilla.org/en/JavaScript/Guide/Closures</a></p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>The trick here is to save <code>this</code> into a local that can be evaluated safely in the <code>setTimeout</code> callback</p>\n\n<pre><code>$('.item').each(function () {\n  var self = this;\n  setTimeout(function () {\n    $(self).fadeIn(1000);\n  }, Math.floor(Math.random() * 1000));\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>$('.item').each(function () {\n var myVar = $(this);\nsetTimeout(function () {\nmyVar.fadeIn(1000);\n}, Math.floor(Math.random() * 1000));\n})\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this insteed:</p>\n\n<pre><code>    $('.item').each(function () {\n        var elm = this;\n      setTimeout(function () {\n        $(elm).fadeIn(1000);\n      }, Math.floor(Math.random() * 1000));\n    })\n</code></pre>\n\n<p>I can't explain why it works, but i think this is a reference to another \"this\" in your setTimeout.</p>\n\n<p><a href=\"http://jsfiddle.net/Pdrfz/\" rel=\"nofollow\">http://jsfiddle.net/Pdrfz/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code> $('.item').each(function () {\n    var item =$(this);\n    setTimeout(function () {\n            item.fadeIn(1000);\n        },\n        Math.floor(Math.random() * 1000));\n   });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Before <code>setTimeout</code> executes <code>each</code> loop would have finished executing, it will not wait. Also inside <code>setTimeout</code> function <code>this</code> will not refer to the DOM element.</p>\n\n<p>Try something like this.</p>\n\n<pre><code>function fadeItem(item){\n   item.fadeIn(1000);\n}\n\n$('.item').each(function () {\n  var $item = $(this);\n  setTimeout(function () {\n    fadeItem($item);\n  }, Math.floor(Math.random() * 1000));\n});\n</code></pre>\n\n<p>You can also try something like this.</p>\n\n<pre><code>var $items = $('.item'), count = 0;\n\nfunction fadeItem(item){\n   item.fadeIn(1000);\n    if(count &lt; $items.length){\n       setTimeout(function(){\n            fadeItem($items.eq(count++));\n       }, Math.floor(Math.random() * 1000));\n    }\n}\nsetTimeout(function(){\n    fadeItem($items.eq(count++));\n}, Math.floor(Math.random() * 1000));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Do not use setTimeout, use jQuery own tools.</p>\n\n<pre><code>$('.item').each(function () {\n   $(this).delay(Math.random() * 1000).fadeIn();\n})\n</code></pre>\n\n<p><a href=\"http://api.jquery.com/delay/\">http://api.jquery.com/delay/</a></p>\n\n<p>Working example: <a href=\"http://jsfiddle.net/qENhd/\">http://jsfiddle.net/qENhd/</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p><em>css</em></p>\n\n<pre><code>.item {\n  display: none;\n}\n</code></pre>\n\n<p><em>html</em></p>\n\n<pre><code>&lt;div&gt;\n  &lt;div class=\"item\"&gt;machin&lt;/div&gt;\n  &lt;div class=\"item\"&gt;chose&lt;/div&gt;\n  &lt;div class=\"item\"&gt;chouette&lt;/div&gt;\n  &lt;div class=\"item\"&gt;prout&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>I'm using jQuery and I'd like to make each <code>.item</code> appearing after a random little timer like:</p>\n\n<p><em>javascript</em></p>\n\n<pre><code>$('.item').each(function () {\n  itm = $(this);\n  setTimeout(function () {\n    itm.fadeIn(1000);\n  }, Math.floor(Math.random() * 1000));\n})\n</code></pre>\n\n<p>Here <code>itm</code> will always contain the last item because the function is evaluated after all assignments.<br>\nI can't use the 3rd parameter of <code>setTimeout()</code> because it will not work on IE.<br>\nIt's not advised to use <code>setTimeout()</code> with the <em>eval</em> method for security reasons.</p>\n\n<p>So how can I access to my object through <code>setTimeout()</code> ?</p>\n\n<hr>\n\n<p><strong>Edit</strong></p>\n\n<p>I know that this question have already been posted.<br>\nBut I though that it were slightly specific with the <code>each()</code> context.<br>\nNow someone have entirely changed the title of my question that was originally something like <em>'setTimeout() - jQuery.each() this object parameter'</em></p>\n",
            "last_activity_date": 1328549280,
            "question_id": 9163818,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "scope",
                "settimeout"
            ],
            "title": "How to pass &#39;this&#39; into a setTimeout callback"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Change all your :hover to a class (e.g. \".hover\"). Add mouseover/mouseout events to add the \"hover\" class in a setTimeout. The setTimeout should check if the user is still hovering over the element.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>I think what you're looking for is hoverIntent</p>\n\n<p><a href=\"http://cherne.net/brian/resources/jquery.hoverIntent.html\" rel=\"nofollow\">http://cherne.net/brian/resources/jquery.hoverIntent.html</a></p>\n\n<p>This accomplishes what you want to do. If you are new to javascript, it will take some playing around with, but it isn't not that hard.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have dropdown using CSS and HTML below:</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;title&gt;Main Menu&lt;/title&gt;\n    &lt;style&gt;\n    .menu\n    {\n        float:left;\n        background:#CCC;\n        margin:0px;\n        padding:0px;\n    }\n\n    .menu  li\n    {\n        position:relative;\n        float:left;\n        width:180px;\n        padding: 5px 0px;\n        list-style: none;\n    }\n\n    .menu li:hover\n    {\n        background:#999;\n    }\n\n    .menu ul\n    {       \n        display:none;\n        position:absolute;\n        background:#CCC;\n        padding:0;\n        margin:5px 0 0 0;\n    }\n\n    .menu ul li ul\n    {\n        left:100%;\n        top:0;\n        margin:0px;\n    }\n\n    .menu li:hover ul ul, .menu li:hover ul ul ul\n    {\n        display: none;\n    }\n\n    .menu li:hover ul, .menu ul li:hover ul, .menu ul ul li:hover ul\n    {\n        display: block;\n    }   \n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;ul class=\"menu\"&gt;\n        &lt;li&gt;Home&lt;/li&gt;\n        &lt;li&gt;\n            Categories\n            &lt;ul&gt;\n                &lt;li&gt;Lorem Ipsum&lt;/li&gt;\n                &lt;li&gt;Dolor Sit Amet&lt;/li&gt;\n                &lt;li&gt;Consectetuer&lt;/li&gt;\n                &lt;li&gt;\n                    Adipiscing\n                    &lt;ul&gt;\n                        &lt;li&gt;Child Elit Set Diam Nonummy&lt;/li&gt;\n                        &lt;li&gt;\n                            Child Suspendisse sed\n                            &lt;ul&gt;\n                                &lt;li&gt;Grand Child Nulla dolor dui&lt;/li&gt;\n                                &lt;li&gt;Grand Child Venenatis feugiat&lt;/li&gt;\n                                &lt;li&gt;Grand Child Morbi ac lectus&lt;/li&gt;\n                                &lt;li&gt;Grand Child Nulla dolor dui&lt;/li&gt;\n                                &lt;li&gt;Grand Child Venenatis feugiat&lt;/li&gt;\n                                &lt;li&gt;Grand Child Morbi ac lectus&lt;/li&gt;\n                            &lt;/ul&gt;\n                        &lt;/li&gt;\n                        &lt;li&gt;Child Nulla dolor dui&lt;/li&gt;\n                        &lt;li&gt;Child Venenatis feugiat&lt;/li&gt;\n                        &lt;li&gt;Child Morbi ac lectus&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n                &lt;li&gt;Elit Set Diam Nonummy&lt;/li&gt;\n                &lt;li&gt;Suspendisse sed&lt;/li&gt;\n                &lt;li&gt;\n                    Nulla dolor dui\n                    &lt;ul&gt;\n                        &lt;li&gt;Child Elit Set Diam Nonummy&lt;/li&gt;\n                        &lt;li&gt;Child Suspendisse sed&lt;/li&gt;\n                        &lt;li&gt;Child Nulla dolor dui&lt;/li&gt;\n                        &lt;li&gt;Child Venenatis feugiat&lt;/li&gt;\n                        &lt;li&gt;Child Morbi ac lectus&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n                &lt;li&gt;Venenatis feugiat&lt;/li&gt;\n                &lt;li&gt;Morbi ac lectus&lt;/li&gt;\n                &lt;li&gt;pharetra&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/li&gt;\n        &lt;li&gt;Order&lt;/li&gt;\n        &lt;li&gt;Payment&lt;/li&gt;\n        &lt;li&gt;Contact&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>JSBIN:<br>\n<a href=\"http://jsbin.com/anojif\">http://jsbin.com/anojif</a></p>\n\n<p>I want to add delay in this dropdown, so when the mouse is moved out, child menu still appear for seconds. I have try some tutorial out there, but it so confuse. </p>\n\n<p>I dont want using any jquery dropdown menu for some reason. Can you help me how to make this happen using javascript. </p>\n\n<p><strong>SOLVED: <a href=\"http://jsbin.com/otapex/2\">http://jsbin.com/otapex/2</a></strong></p>\n",
            "last_activity_date": 1342785110,
            "question_id": 8422123,
            "score": 7,
            "tags": [
                "javascript",
                "css",
                "drop-down-menu"
            ],
            "title": "CSS Dropdown Menu: Add delay on mouse out"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>This might help you, I just found it on the internet. It's apparently a replacement for <code>Math.random()</code></p>\n\n<p><a href=\"http://davidbau.com/encode/seedrandom.js\">http://davidbau.com/encode/seedrandom.js</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>That would be fairly easy :-)</p>\n\n<p><a href=\"http://xkcd.com/221/\"><img src=\"http://imgs.xkcd.com/comics/random_number.png\" alt=\"alt text\"></a></p>\n\n<blockquote>\n  <p>RFC 1149.5 specifies 4 as the standard IEEE-vetted random number</p>\n</blockquote>\n\n<p>(found through <a href=\"http://stats.stackexchange.com/questions/423/what-is-your-favorite-data-analysis-cartoon\">stats.SE</a>)</p>\n",
                    "is_accepted": false,
                    "score": 12
                }
            ],
            "body": "<p>I'm looking for a random number generator in JavaScript which I can initialize with a certain seed and gives a deterministic result (according to that seed). It should be capable of providing random integers within a certain range, however I can work with a random number generator that spits doubles, too (just like Math.random()).</p>\n\n<p>Basically I'm looking for an equivalent to java.util.Random as known in the Java World for JavaScript.</p>\n\n<p>Is there something like this already built into JavaScript? Is there some (maybe HTML5 related API) which specifies such a thing? Is there a library providing such a random number generator?</p>\n\n<p>I'm implementing a genetic algorithm in JavaScript and I need to be able to harvest the same results for the same inputs (including seed) for research.</p>\n",
            "last_activity_date": 1322681831,
            "question_id": 8330102,
            "score": 7,
            "tags": [
                "javascript",
                "random",
                "javascript-library"
            ],
            "title": "Seedable Random number generator in JavaScript"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You could keep track of the last time requestAnimFrame was called.</p>\n\n<pre><code>var lastCalledTime;\nvar fps;\n\nfunction requestAnimFrame() {\n\n  if(!lastCalledTime) {\n     lastCalledTime = Date.now();\n     fps = 0;\n     return;\n  }\n  delta = (new Date().getTime() - lastCalledTime)/1000;\n  lastCalledTime = Date.now();\n  fps = 1/delta;\n} \n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/vZP3u/\" rel=\"nofollow\">http://jsfiddle.net/vZP3u/</a></p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Just check the difference in time between the AFR-callbacks. AFR already passes the time as an argument to the callback. I updated your fiddle to show it: <a href=\"http://jsfiddle.net/WCKhH/1/\" rel=\"nofollow\">http://jsfiddle.net/WCKhH/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just a proof of concept. Very simple code. All we do is set our frames per second and intervals between each frame. In the drawing function we deduct our last frame\u2019s execution time from the current time to check whether the time elapsed since the last frame is more than our interval (which is based on the fps) or not. If the condition evaluates to true, we set the time for our current frame which is going to be the \u201clast frame execution time\u201d in the next drawing call.</p>\n\n<pre><code>var GameLoop = function(fn, fps){\n    var now;\n    var delta;\n    var interval;\n    var then = new Date().getTime();\n\n    var frames;\n    var oldtime = 0;\n\n    return (function loop(time){\n        requestAnimationFrame(loop);\n\n        interval = 1000 / (this.fps || fps || 60);\n        now = new Date().getTime();\n        delta = now - then;\n\n        if (delta &gt; interval) {\n            // update time stuffs\n            then = now - (delta % interval);\n\n            // calculate the frames per second\n            frames = 1000 / (time - oldtime)\n            oldtime = time;\n\n            // call the fn\n            // and pass current fps to it\n            fn(frames);\n        }\n    }(0));\n};\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>var set;\ndocument.onclick = function(){\n    set = true;\n};\n\nGameLoop(function(fps){\n    if(set) this.fps = 30;\n    console.log(fps);\n}, 5);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/ARTsinn/rPAeN/\" rel=\"nofollow\">http://jsfiddle.net/ARTsinn/rPAeN/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have a different approach, because if you calculate the the FPS you'll get this flickering when returning the number. I decided to count every Frame and return it once a second</p>\n\n<pre><code>window.countFPS = (function () {\n  var lastLoop = (new Date()).getMilliseconds();\n  var count = 1;\n  var fps = 0;\n\n  return function () {\n    var currentLoop = (new Date()).getMilliseconds();\n    if (lastLoop &gt; currentLoop) {\n      fps = count;\n      count = 1;\n    } else {\n      count += 1;\n    }\n    lastLoop = currentLoop;\n    return fps;\n  };\n}());\n\nrequestAnimationFrame(function () {\n  console.log(countFPS());\n});\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/krnlde/u1fL1cs5\" rel=\"nofollow\">jsfiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>How could I calculate the FPS of a canvas game application? I've seen some examples, but none of them use requestAnimationFrame, and im not sure how to apply their solutions there. This is my code:</p>\n\n<p><a href=\"http://jsfiddle.net/WCKhH/\">http://jsfiddle.net/WCKhH/</a></p>\n\n<p>By the way, is there any library I could add to surpervise performance?</p>\n",
            "last_activity_date": 1421146261,
            "question_id": 8279729,
            "score": 7,
            "tags": [
                "javascript",
                "canvas"
            ],
            "title": "calculate FPS in Canvas using requestAnimationFrame"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Try this:\n<a href=\"http://blog.crondesign.com/2011/02/actionscriptjavascript-colour-mode.html\" rel=\"nofollow\">http://blog.crondesign.com/2011/02/actionscriptjavascript-colour-mode.html</a>\nIts for actionscript but they're almost the same so just do some tweaking.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try Color.js</p>\n\n<p><a href=\"https://github.com/eligrey/color.js\" rel=\"nofollow\">https://github.com/eligrey/color.js</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you need/prefer a jQuery plugin, you could look at <a href=\"http://enideo.com/code/jquery-colors-plugin/\" rel=\"nofollow\">jquery-colors</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Here is a standalone function:</p>\n\n<pre><code>function rgb2hsv () {\n    var rr, gg, bb,\n        r = arguments[0] / 255,\n        g = arguments[1] / 255,\n        b = arguments[2] / 255,\n        h, s,\n        v = Math.max(r, g, b),\n        diff = v - Math.min(r, g, b),\n        diffc = function(c){\n            return (v - c) / 6 / diff + 1 / 2;\n        };\n\n    if (diff == 0) {\n        h = s = 0;\n    } else {\n        s = diff / v;\n        rr = diffc(r);\n        gg = diffc(g);\n        bb = diffc(b);\n\n        if (r === v) {\n            h = bb - gg;\n        }else if (g === v) {\n            h = (1 / 3) + rr - bb;\n        }else if (b === v) {\n            h = (2 / 3) + gg - rr;\n        }\n        if (h &lt; 0) {\n            h += 1;\n        }else if (h &gt; 1) {\n            h -= 1;\n        }\n    }\n    return {\n        h: Math.round(h * 360),\n        s: Math.round(s * 100),\n        v: Math.round(v * 100)\n    };\n}\n</code></pre>\n\n<p>And how to use it:</p>\n\n<pre><code>console.log( rgb2hsv(60, 120, 180) );\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You can use <a href=\"http://bgrins.github.com/TinyColor/\">TinyColor</a>.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Does anyone know a function in javascript that converts RGB color to HSV color format?</p>\n\n<p>(or jQuery)</p>\n",
            "last_activity_date": 1332459843,
            "question_id": 8022885,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "colors"
            ],
            "title": "RGB to HSV color in javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Form onsubmit is a more correct approach, for the simple reason that a form can also be submitted with the <code>&lt;ENTER&gt;</code> key, and not just by clicking the submit button.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Which would be the reasons to ever use the onclick of a submit button to determine whether or not the form should be submitted?</p>\n\n<p>I believe strongly that</p>\n\n<ol>\n<li>to execute something before submit and cancel the submit in case of error, the form's onsubmit event is the obvious place to put it</li>\n<li>If you use the onclick of a submit button and later decide to use type=\"image\" the event handler will fail in many browsers</li>\n<li>if you change the submit to a button, you will have to add a submit to the onclick event handler too.</li>\n</ol>\n\n<p>I am looking for strong reasons to prefer using a submit button's onclick event over the form's onsubmit.</p>\n\n<p>UPDATE: Please not that I am personally well aware of many of the issues around form submission and validation.<br>\nFor example that submitting by javascript will not trigger the onsubmit \n<a href=\"http://jsfiddle.net/mplungjan/3A4Ha/\" rel=\"nofollow\">http://jsfiddle.net/mplungjan/3A4Ha/</a></p>\n\n<pre><code>&lt;form onsubmit=\"alert('onSubmit called')\"&gt;\n    &lt;input type=\"text\" value=\"This will submit on enter but in IE the onclick is not triggered\" style=\"width:100%\"/&gt;&lt;br/&gt;\n    &lt;input type=\"submit\" onclick=\"alert('Clicked')\" /&gt;\n&lt;/form&gt;&lt;br /&gt;\n&lt;a href=\"#\" onclick=\"alert('Submitting by script'); return false\"&gt;Submit by script will not trigger onsubmit&lt;/a&gt;\n</code></pre>\n\n<p>Also that IE will not trigger the onclick if you hit enter in the form in my fiddle</p>\n\n<hr>\n\n<p><strong>History:</strong></p>\n\n<p>Got into a discussion here</p>\n\n<p><a href=\"http://stackoverflow.com/questions/6899883/html-button-not-clickable-without-being-disabled/6899961#6899961\">html button not clickable without being disabled</a></p>\n\n<p>I have an intense dislike of using the onclick of a submit button for ANYTHING due to <strong>many</strong><sup>1</sup> years of seeing this not work in a number of browsers, mostly older version of IE.\nI have listed a few of the obvious reasons, but I am sure they will not convince the hardened user.</p>\n\n<p>Can SO's community help me nail this one to the wall, like they nailed w3schools?\nAlso feel free to give comments as to how I can phrase this question in an acceptable manner.</p>\n\n<p><strong>UPDATE</strong>\nFrom <a href=\"https://twitter.com/BrendanEich/status/349934275208028161\" rel=\"nofollow\">@BrendanEich</a>\n \u200f</p>\n\n<blockquote>\n  <p>@mplungjan onclick of submit just falls out of that being a button; form onsubmit is clearly better.</p>\n</blockquote>\n\n<hr>\n\n<p><sup>1: since the days of NS2.x and IE3.02</sup></p>\n",
            "last_activity_date": 1372266301,
            "question_id": 6908187,
            "score": 7,
            "tags": [
                "javascript",
                "onclick",
                "onsubmit"
            ],
            "title": "form onsubmit versus submit button onclick"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I'm not sure if this is what you're looking for, but it seems like a similar issue:\n<a href=\"http://www.velocityreviews.com/forums/t506018-how-to-cancel-http-request-from-javascript.html\" rel=\"nofollow\">http://www.velocityreviews.com/forums/t506018-how-to-cancel-http-request-from-javascript.html</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Would it be ok for you to use a JS framework? If so, MooTools has this functionality built into its <a href=\"http://mootools.net/docs/more/Request/Request.JSONP\" rel=\"nofollow\">Request.JSONP</a> object</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This is entirely shooting from the hip, but if the script tag has not finished loading you can probably simply <code>script.parentElement.removeChild( script )</code>. That is more or less what mootools does anyway. (Technically, they replace <code>/\\s+/</code> with <code>' '</code> first, but that does not seem to be terribly important).</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The solution is simple: for creating HTTP requests, use <code>&lt;img&gt;</code> instead of <code>&lt;script&gt;</code> element. Also you always have to change the <code>src</code> attribute of the <strong>same</strong> element.</p>\n\n<pre><code>var img;\nfunction fire()\n{\n    var text = document.getElementById('text').value;\n    var im = img || (img = new Image());\n    im.src = \"url\"+\"?param=\"+text;\n}\n</code></pre>\n\n<p>You may ascertain that it actually works by doing the following: the URL you request should have a huge response time (you can ensure this using e.g. PHP's <code>sleep</code> function). Then, open Net tab in Firebug. If you click the button multiple times, you'll see that all incomplete requests are aborted.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>To get around the cross-domain issue, you might be able to use CORS instead (assuming you can change what's on the server):\n<a href=\"http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/\" rel=\"nofollow\">http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/</a></p>\n\n<p>If you do this, you could then use the more standard XMLHttpRequest's abort() function.</p>\n\n<p>CORS is compatible with all the major modern browsers except Opera (http://caniuse.com/cors).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>i have a page on which there an event handler attached to an <code>onclick</code> event. when the event fires it passes contents of a textbox to a <code>GET</code> request. since <strong>the url is not in the same domain</strong> so i create a script tag and and attach the url to its source like this </p>\n\n<pre><code>elem.onclick=fire;\n\nfunction fire()\n{\nvar text=document.getElementById('text').value;\nvar script=document.createElement(\"script\");\nscript.className=\"temp\";\nscript.src=\"some url\"+\"?param=\"+text;\ndocument.body.appendChild(script);\n}\n</code></pre>\n\n<p>now if that event is fired and more than one time i want to cancel all the previous <code>GET</code> request(because they still might be receiving response) and make the <code>GET</code> request with latest text. But for this i need to cancel the previous requests. \ni tried </p>\n\n<pre><code>document.body.removeChild(script);\nscript.src=null;\n</code></pre>\n\n<p><strong>but this does not work in <code>Firefox</code>(i am using <code>Firefox 5</code>) although this works in <code>Google Chrome</code></strong>.Does anyone know if these requests can be cancelled in Firefox and if yes then how?</p>\n\n<hr>\n\n<p><strong>UPDATE</strong>\nAs suggested by Alfred, i used <code>window.stop</code> to cancel a request but does not cancel a request but hangs it up. It means that when i look into firebug it looks like the request is being made but there is no response.</p>\n",
            "last_activity_date": 1312794240,
            "question_id": 6865574,
            "score": 7,
            "tags": [
                "javascript",
                "events",
                "firefox",
                "dom",
                "request-cancelling"
            ],
            "title": "how to cancel http request using javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>No, there is no concept of multiple text span selection. The selection is associated with the caret. One caret - one selection.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No. Firefox is the only mainstream browser to support multiple selected ranges. I think the main use case for it was to allow selection of individual columns within tables, which is not possible otherwise.</p>\n\n<p>WebKit are not planning to support multiple selected ranges any time soon, from what I can gather. IE overhauled its Range and Selection APIs for IE 9 and didn't implement it. No idea about whether Opera has any plans to support it. See <a href=\"http://lists.whatwg.org/htdig.cgi/whatwg-whatwg.org/2011-January/030102.html\" rel=\"nofollow\">this thread from the WHATWG mailing list</a> for some information: </p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p><em><strong>Update</em></strong></p>\n\n<p>I recently discovered you can programatically create selections with Chrome which aren't continuous, by either replacing elements / textnodes inbetween in the parts you want unselected or hiding and then showing them. </p>\n\n<p>Example of non-continuous selections for Chrome: <a href=\"http://jsfiddle.net/niklasvh/YKJBW/\" rel=\"nofollow\">http://jsfiddle.net/niklasvh/YKJBW/</a></p>\n\n<pre><code>var t = $('div').contents().get(0);\n\n\n$.each(t.nodeValue.split(\" \"),function(i,e){\n   t = t.splitText(e.length);\n     if (t.length&gt;0){\n     t = t.splitText(1);\n     }\n});\n\n\n\nvar c = $('div').contents();\n\n$.each(c,function(i,e){    \n    if (i&gt;0){\n    if (i%3) { }else{\n             e.parentNode.replaceChild($('&lt;unselect /&gt;').text(e.nodeValue).get(0),e);                           \n    }    \n}   \n});\n\n$('unselect').hide(); \nwindow.setTimeout(function(){\n   $('unselect').show();     \n},0);\n</code></pre>\n\n<p><strong>However</strong> when performing the copy event, the whole selection does get selected (even if it has gaps in-between), but of course the same method can be used to programatically alter the selection before the copy event is performed.</p>\n\n<p>The tricky part now is that can you actually make this functionality usuable by holding Ctrl down like you can in Firefox to create non-continous selections. The current method I use in the example breaks the TextNodes into many pieces, which for visual purposes does no difference. It however, also uses additional tags to break the selection, which as far as I've discovered, cannot be removed. However, the same functionality can be reached by deleting TextNodes and adding new ones in place for them. The problem is that it will only take into account the last node added, so if you have multiple spaces in your selection, it will only take into account the last DOM change you applied.</p>\n\n<p>Can anyone think of any non-document breaking ways to apply this non-continous selections <strong>which</strong> does not make any permanent changes to the selection and its elements?</p>\n\n<p><em><strong>The original question</em></strong></p>\n\n<p>Is it possible to make selections which are non continous in Google Chrome? For example if you have an element with text like this:</p>\n\n<p><code>&lt;div&gt;this is some random text&lt;/div&gt;</code></p>\n\n<p>Is it possible to make a selection which contains for example <code>this is</code> and <code>text</code> making the text in-between unselected?</p>\n\n<p>This seems to work fine in FF, where you can <a href=\"https://developer.mozilla.org/en/DOM/Selection/addRange\" rel=\"nofollow\">addRanges</a> which aren't next to each other, and the selection is made accordingly.</p>\n\n<p>For IE, there doesn't seem to be anything that would allow you to have multiple ranges, but IE's selection object has a lot of other methods that compensate for it.</p>\n\n<p>With non-continous selections, you could always append or prepend a selection a certain section from a website for example when performing copy actions, or force the user to unselect certain portions of their selections, which you don't want them to copy.</p>\n\n<p>Example of non-continous selection:</p>\n\n<p><img src=\"http://i.stack.imgur.com/s76f4.jpg\" alt=\"enter image description here\"></p>\n\n<p><a href=\"http://www.hertzen.com/experiments/textanimation/\" rel=\"nofollow\">working example</a> (working at least in FF4).</p>\n\n<p><strong>edit</strong>\nTo perform the same type of selection manually, you can with firefox hold ctrl down and start dragging text in different positions, but performing it on chrome doesn't work.</p>\n\n<p><strong>edit 2</strong>\nI guess <a href=\"http://lists.whatwg.org/pipermail/whatwg-whatwg.org/2011-January/030100.html\" rel=\"nofollow\">this</a> and <a href=\"http://html5.org/specs/dom-range.html#dom-selection-addrange\" rel=\"nofollow\">this</a> sum it up quite well. Looks like there isn't anything to be expected as far as webkit browsers are concerned.</p>\n",
            "last_activity_date": 1309965095,
            "question_id": 6349451,
            "score": 7,
            "tags": [
                "javascript",
                "google-chrome",
                "selection"
            ],
            "title": "Non-continuous selections in chrome?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>According to this article <a href=\"http://support.apple.com/kb/ht1484\">http://support.apple.com/kb/ht1484</a> you cannot scroll anything inside a frame when using Safari on the iPad. The frames always get resized to fit their content (this also applies to iframes). To do this, Safari even dismisses the values for \"cols\" or \"rows\" you made in the frameset-tag and seems to use whatever value is needed. Unfortunately, the frame does not resize properly for PDFs so they get cut off.</p>\n\n<p>I think your best choice might be to link the pdf directly...</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>You could hide empty divs at certain positions in the frame, and use jQuery to scroll to those positions. So the user wouldn't be able to scroll the frame, but they could click navigation which would move the frame to the pproper section.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Have you tried the <a href=\"http://www.sencha.com/products/extjs/\" rel=\"nofollow\">Ext JS 4</a> JavaScript Framework? On their forum they speak of the <a href=\"http://forums.ext.net/archive/index.php/t-335.html?s=7f8752c5b4f856948f25e7fbe1138115\" rel=\"nofollow\">possibility to show a PDF in a panel</a>. The forum thread contains example code. The solution is not specific to iPad but I hear that in general Ext JS works very well on iPad. Anyone else have experience with this framework?</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>I think the problem is that you are trying to display a PDF. The 2-finger swipe approach should work for regular HTML frames. </p>\n\n<p>One option is to use Google Docs Viewer (http://docs.google.com/viewer) in your application.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have noticed when browsing StackOverflow on an IPad that any code in a frame that scrolls outside visible is not accessible.  I think it may simply be a limitation of Safari on the IPad / IPhone</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I cannot scroll a pdf called inside a frame in iPad Safari</p>\n\n<pre><code>&lt;frame src=\"ebook.pdf\" title=\"Content Frame\" name=\"content\" id=\"content\" \nframeborder=\"0\" border=\"0\" noresize scrolling=\"yes\" marginwidth=\"0\" marginheight=\"0\" \nnoresizescrolling=\"AUTO\" framespacing=\"0\" /&gt; \n</code></pre>\n\n<p>I have already tried 2 things:</p>\n\n<ol>\n<li>2-finger scroll</li>\n<li>Using object/embed instead of frame</li>\n</ol>\n\n<p>But this does not work. </p>\n\n<p>In fact I have tried a lot of things...overflow, height, etc..</p>\n\n<p>Please help me. Thank you in advance.</p>\n",
            "last_activity_date": 1383647368,
            "question_id": 5791251,
            "score": 7,
            "tags": [
                "javascript",
                "css",
                "ipad",
                "osx",
                "safari"
            ],
            "title": "iPad - cannot scroll inside frame"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Try with:</p>\n\n<pre><code>var url = 'http://mysite.com/section-with-dashes/';\nvar section = url.match(/^http[s]?:\\/\\/.*?\\/([a-zA-Z-_]+).*$/)[0];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$url = 'http://mysite.com/section/subsection';\n\n$path = parse_url($url, PHP_URL_PATH);\n\n$components = explode('/', $path);\n\n$first_part = $components[0];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>My regex is pretty bad, so I will improvise with a less efficient solution :P</p>\n\n<pre><code>// The first part is to ensure you can handle both URLs with the http:// and those without\n\nx = window.location.href.split(\"http:\\/\\/\")\nx = x[x.length-1];\nx = x.split(\"\\/\")[1]; //Result is in x\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Non-regex.</p>\n\n<pre><code>var link = document.location.href.split('/');\nalert(link[3]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>JavaScript with RegEx. This will match anything after the first / until we encounter another /.</p>\n\n<pre><code>window.location.pathname.replace(/^\\/([^\\/]*).*$/, '$1');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>Here is the quick way to get that in javascript</p>\n\n<pre><code>var urlPath = window.location.pathname.split(\"/\");\nif (urlPath.length &gt; 1) {\n  var first_part = urlPath[1];\n  alert(first_part); \n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Exploding an url in javascript can be done using the official <a href=\"http://tools.ietf.org/html/rfc2396\" rel=\"nofollow\">rfc2396 regex</a>:</p>\n\n<pre><code>var url = \"http://www.domain.com/path/to/something?query#fragment\";\nvar exp = url.split(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/);\n</code></pre>\n\n<p>This will gives you:</p>\n\n<pre><code>[\"\", \"http:\", \"http\", \"//www.domain.com\", \"www.domain.com\", \"/path/to/something\", \"?query\", \"query\", \"#fragment\", \"fragment\", \"\"]\n</code></pre>\n\n<p>Where you can, in your case, easily retrieve you path with:</p>\n\n<pre><code>var firstPortion = exp[5].split(\"/\")[1]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I need to get the first word after slash in a url in javascript, I assume using a regex would be ideal.</p>\n\n<p>Here's an idea of what the URLs can possibly look like :</p>\n\n<ul>\n<li><a href=\"http://mysite.com/\">http://mysite.com/</a><strong>section</strong>/</li>\n<li><a href=\"http://mysite.com/\">http://mysite.com/</a><strong>section</strong>/subsection/</li>\n<li><a href=\"http://mysite.com/\">http://mysite.com/</a><strong>section-with-dashes</strong>/</li>\n<li><a href=\"http://mysite.com/\">http://mysite.com/</a><strong>section_with_underscores</strong>/</li>\n</ul>\n\n<p>In bold is what I need the regex to match for each scenario, so basically only the first portion after the slash, no matter how many further slashes there are.</p>\n\n<p>I'm at a complete loss here, appreciate the help.</p>\n",
            "last_activity_date": 1326810505,
            "question_id": 5735483,
            "score": 7,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Regex to get first word after slash in URL"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Taken from YAHOOs library:</p>\n\n<pre><code>YAHOO.Tools.printf = function() { \n  var num = arguments.length; \n  var oStr = arguments[0];   \n  for (var i = 1; i &lt; num; i++) { \n    var pattern = \"\\\\{\" + (i-1) + \"\\\\}\"; \n    var re = new RegExp(pattern, \"g\"); \n    oStr = oStr.replace(re, arguments[i]); \n  } \n  return oStr; \n} \n</code></pre>\n\n<p>Call it like: </p>\n\n<pre><code>bar1 = 'foobar'\nbar2 = 'jumped'\nbar3 = 'dog'\n\nfoo = YAHOO.Tools.printf('The lazy {0} {1} over the {2}', bar3, bar2, bar1); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>JavaScript doesn't have such a function AFAIK.</p>\n\n<p>You could create one by modifying the String class's prototype object to add a format() method which takes a variable number of arguments.</p>\n\n<p>In the format method you'd have to get the String's instance value (the actual string) and then parse it for '{}' and insert the appropriate argument.</p>\n\n<p>Then return the new string to the caller.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here's my first attempt. Feel free to point out flaws.</p>\n\n<p><strong>Example:</strong> <a href=\"http://jsfiddle.net/wFb2p/5/\" rel=\"nofollow\">http://jsfiddle.net/wFb2p/5/</a></p>\n\n<pre><code>String.prototype.format = function() {\n    var str = this;\n    var i = 0;\n    var len = arguments.length;\n    var matches = str.match(/{}/g);\n    if( !matches || matches.length !== len ) {\n        throw \"wrong number of arguments\";\n    }\n    while( i &lt; len ) {\n        str = str.replace(/{}/, arguments[i] );\n        i++;\n    }\n    return str;\n};\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT:</strong> Made it a bit more efficient by eliminating the <code>.match()</code> call in the <code>while</code> statement.</p>\n\n<p><strong>EDIT:</strong> Changed it so that the same error is thrown if you don't pass any arguments.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>JavaScript does not have a string formatting function by default, although you can create your own or use one someone else has made (such as <a href=\"http://www.diveintojavascript.com/projects/javascript-sprintf\" rel=\"nofollow\">sprintf</a>)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Another approach, using the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/replace\"><code>String.prototype.replace</code></a> method, with a \"replacer\" function as second argument:</p>\n\n<pre><code>String.prototype.format = function () {\n  var i = 0, args = arguments;\n  return this.replace(/{}/g, function () {\n    return typeof args[i] != 'undefined' ? args[i++] : '';\n  });\n};\n\nvar bar1 = 'foobar',\n    bar2 = 'jumped',\n    bar3 = 'dog';\n\n'The lazy {} {} over the {}'.format(bar3, bar2, bar1);\n// \"The lazy dog jumped over the foobar\"\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Looking for an answer for the same question, I just found this: <a href=\"https://github.com/davidchambers/string-format\" rel=\"nofollow\">https://github.com/davidchambers/string-format</a>, which is \"JavaScript string formatting inspired by Python\u2019s <code>str.format()</code>\". It seem it's pretty much the same as python's <code>format()</code> function.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This code allows you to specify exactly which brackets to replace with which strings. The brackets don't need to be in the same order as the arguments, and multiple brackets are possible. The format function takes an array of values as its parameter, with each key being one of the bracketed 'variables' which is replaced by its corresponding value.</p>\n\n<pre><code>String.prototype.format = function (arguments) {\n    var this_string = '';\n    for (var char_pos = 0; char_pos &lt; this.length; char_pos++) {\n        this_string = this_string + this[char_pos];\n    }\n\n    for (var key in arguments) {\n        var string_key = '{' + key + '}'\n        this_string = this_string.replace(new RegExp(string_key, 'g'), arguments[key]);\n    }\n    return this_string;\n};\n\n'The time is {time} and today is {day}, {day}, {day}. Oh, and did I mention that the time is {time}.'.format({day:'Monday',time:'2:13'});\n//'The time is 2:13 and today is Monday, Monday, Monday. Oh, and did I mention that the time is 2:13.'\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>JS:</p>\n\n<pre><code>String.prototype.format = function () {\n    var str = this;\n    for (var i = 0; i &lt; arguments.length; i++) {\n        str = str.replace('{' + i + '}', arguments[i]);\n    }\n    return str;\n}\n\nbar1 = 'foobar';\nbar2 = 'jumped';\nbar3 = 'dog';\n\npython_format = 'The lazy {2} {1} over the {0}'.format(bar1,bar2,bar3);\n\ndocument.getElementById(\"demo\").innerHTML = \"JavaScript equivalent of Python's format() function:&lt;br&gt;&lt;span id='python_str'&gt;\" + python_format + \"&lt;/span&gt;\";\n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;p id=\"demo\"&gt;&lt;/p&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>span#python_str {\n    color: red;\n    font-style: italic;\n}\n</code></pre>\n\n<p>OUTPUT:</p>\n\n<blockquote>\n  <p>JavaScript equivalent of Python's format() function:</p>\n  \n  <p>The lazy dog jumped over the foobar</p>\n</blockquote>\n\n<p>DEMO:</p>\n\n<p><a href=\"https://jsfiddle.net/mitma/w7bcdqLj/embedded/result/\" rel=\"nofollow\">jsFiddle</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Python has this beautiful function to turn this:</p>\n\n<pre><code>bar1 = 'foobar'\nbar2 = 'jumped'\nbar3 = 'dog'\n\nfoo = 'The lazy ' + bar3 + ' ' + bar2 ' over the ' + bar1\n# The lazy dog jumped over the foobar\n</code></pre>\n\n<p>Into this:</p>\n\n<pre><code>bar1 = 'foobar'\nbar2 = 'jumped'\nbar3 = 'dog'\n\nfoo = 'The lazy {} {} over the {}'.format(bar3, bar2, bar1)\n# The lazy dog jumped over the foobar\n</code></pre>\n\n<p>Does JavaScript have such a function? If not, how would I create one which follows the same syntax as Python's implementation?</p>\n",
            "last_activity_date": 1424679024,
            "question_id": 4974238,
            "score": 7,
            "tags": [
                "javascript",
                "python",
                "format"
            ],
            "title": "JavaScript equivalent of Python&#39;s format() function?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I'm pretty sure it's not possible; if it is then it's a big security hole - Javascript should not be able to get bytes from the user's hard drive.</p>\n\n<p>So you're stuck using the native input type=file or using pre-existing desktop bytes, like Flash. Several popular uploaders use this method...my favorite is <a href=\"http://www.uploadify.com/\" rel=\"nofollow\">Uploadify</a>. Take a look at that, and see if that doesn't suit your needs.</p>\n\n<p>HTH.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you can dictate which browsers your app is accessed through (e.g. it's an internal business app), it's worth checking out the new <a href=\"http://www.w3.org/TR/FileAPI/\" rel=\"nofollow\">File API</a> which is part of the \"HTML5\" stack of technologies that are beginning to show up in the latest browsers. This gives you direct access to files via clientside Javascript without the need to post the file to the server first.</p>\n\n<p>If your app is public-facing then you can still use the File API, but you will need to <a href=\"http://stackoverflow.com/questions/2311887/how-to-determine-presence-of-html5-dragndrop-file-upload-api-like-the-one-from\">check for support</a> for it in your code and apply some kind of fallback mechanism (such as <a href=\"http://www.uploadify.com/\" rel=\"nofollow\">Uploadify</a>) for those with older browsers.</p>\n\n<p>You can read more about the File API <a href=\"https://developer.mozilla.org/en/using_files_from_web_applications\" rel=\"nofollow\">here</a> and <a href=\"http://html5demos.com/file-api\" rel=\"nofollow\">here</a> amongst other places.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You have what boils down to three options when you are uploading files to a server. You can use native html file-upload features, Flash or Java. Javascript cannot upload a file to a server, it can only decorate the built in html functionality. With that said I can only assume you are attempting to mimic ajax like uploading functionality. If that is so there is a way to upload files using an iframe which will look like you are using ajax. </p>\n\n<p>You will be creating a form </p>\n\n<pre><code>&lt;form id=\"file_upload_form\" method=\"post\" enctype=\"multipart/form-data\" action=\"upload.aspx\"&gt;\n    &lt;input name=\"file\" id=\"file\" size=\"27\" type=\"file\" /&gt;&lt;br /&gt;\n    &lt;input type=\"submit\" name=\"action\" value=\"Upload\" /&gt;&lt;br /&gt;\n    &lt;iframe id=\"upload_target\" name=\"upload_target\" src=\"\" style=\"width:0;height:0;border:0px solid #fff;\"&gt;&lt;/iframe&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>This form uses the iframe to post the file, which will cause the main page to never refresh. You can hook up your jquery to process the response the iframe returns and handle user information. </p>\n\n<p>If this is not the part of the equation you were looking for please feel free to comment and clarify what it is you are looking to accomplish.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'm using the uploadify plugin (http://www.uploadify.com/) - as Jeremy said, it's not in javascript - It's not possible. It's in flash. It's very easy to install.</p>\n\n<pre><code>$('#file_upload').uploadify({\n   'uploader'  : '/uploadify/uploadify.swf',\n   'script'    : '/uploadify/uploadify.ashx',\n   'cancelImg' : '/uploadify/cancel.png',\n   'folder'    : '/uploads',\n   'auto'      : true,      \n   'fileExt': '*.xls;*.xlsx;*.csv',\n   'buttonText': 'Select your file',\n   'onError'     : function (event,ID,fileObj,errorObj) {\n\n  alert(errorObj.type + ' Error: ' + errorObj.info);\n\n},\n'onComplete'  : function(event, ID, fileObj, response, data) \n                {\n                    var obj = jQuery.parseJSON(response);\n                    if (obj.error != \"\" &amp; obj.errror != null)\n                    {\n                        lblTable.html(\"error : \" + obj.error);\n                    }\n                    else\n\n\n                    {\n                        lblTable.html(obj.table);\n                       lblEditData.show();\n                       lblTable.hide();\n                    }\n\n                }\n });\n</code></pre>\n\n<p>And on the uploadify.ashx :</p>\n\n<pre><code>public class uploadify : IHttpHandler\n{\n\n    public void ProcessRequest(HttpContext context)\n    {\n        System.Web.HttpPostedFile file = context.Request.Files[\"Filedata\"];\n\n        //Check extension\n        string extension = \"\";\n        try\n        {\n            extension = file.FileName.Split('.')[file.FileName.Split('.').Length - 1];\n            if (extension != \"xls\" &amp; extension != \"xlsx\" &amp; extension != \"csv\") throw new Exception(\"Error of the extension\");\n        }\n        catch\n        {\n            context.Response.Write(\"{\\\"error\\\",\\\"Error with the extension of the file\\\"\");\n        }\n\n\n        string linkFile = System.Web.HttpContext.Current.Server.MapPath(\"~\") + \"uploads\" + \"\\\\\" + DateTime.Now.ToString(\"yyMMddHHmm\") + APIReportPro.DocumentPDF.RandomString(4) + \".\" + extension;\n\n        file.SaveAs(linkFile);\n\n\n  ...etc...\n</code></pre>\n\n<p>This is the nicest solution I found for asp.net</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I have implemented an ASP.NET Handler for uploading file using Valums ajax Upload control. You can check solution here. You can also upload large file. This handler supports IE, FF and Chrome browser. You can also drag drop multiple files from FF and Chrome (HTML 5)</p>\n\n<p><a href=\"http://ciintelligence.blogspot.com/2011/05/aspnet-server-side-handler-for-valums.html\" rel=\"nofollow\">http://ciintelligence.blogspot.com/2011/05/aspnet-server-side-handler-for-valums.html</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Using jquery you can do something like:</p>\n\n<pre><code>&lt;input type=\"file\" name=\"file\" id=\"file1\" runat=\"server\" /&gt;\n\n$(\"#&lt;%=file1.ClientID%&gt;\").change(function () {\n  //Do stuff\n   $(this).upload('youHandler.ashx', function (res) {\n     //do stuff on success\n   }\n}\n</code></pre>\n\n<p>Now on yourHandler.ashx you can do something like that:</p>\n\n<pre><code>public void ProcessRequest(HttpContext context)\n{\n   if (context.Request.Files.Count &gt; 0)\n   {\n      var fileCount = context.Request.Files.Count;\n      var fileStram = var file = context.Request.Files[0].InputStream;\n\n      //Do whatever you want\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to solve a small issue. I have built an entire web ASP.NET application using mostly client side (JQuery/JavaScript) code. I use generic handlers to do some lazy loading of data, as well as for auto-completes and the likes.</p>\n\n<p>One of the requirements is that one page needs to be able to upload a file, as well as display meta information about the uploadead files.</p>\n\n<p>I as wondering if there is a way to upload a file entirely out of JQuery/JavaScript. I researched a whole ot of plugins but they all rely on having a php backend. </p>\n\n<p>My thought was to create a post:</p>\n\n<pre><code>$(function(){\n    $('#submit').live('click', function(event){\n\n        $.post('/SomeOtherHandler.ashx',  //can be '/someotherpage.aspx'\n        { \n            filename: $('#fileUpload').val(), \n            timestamp: (new Date()).toString() \n        }, function(data){\n             //do something if the post is successful.\n        });\n\n    });\n});\n</code></pre>\n\n<p>Would that work? I know that if you include the json object <code>{ filename: value, timestamp: value }</code> it will show up in the <code>HttpContext.Request.Params</code> collection where I can read it without problems.</p>\n\n<p>The problem is however that I don't know how this will work since the FileUpload html control only stores the file name in its value. Therefore I would be sending a string to my server with the filename, not an array of bytes.</p>\n\n<p>Any thoughts on this would be greatly appreciated! </p>\n",
            "last_activity_date": 1334729120,
            "question_id": 4972607,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "asp.net",
                "jquery-plugins",
                "file-upload"
            ],
            "title": "File upload with JQuery and ASP.NET Generic Handler - Is it possible?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Hover binds mouseEnter() and mouseLeave() to the object. I think you'll have better luck with mouseOver() in this case, though I haven't tried it.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/1104344/what-is-the-difference-between-the-mouseover-and-mouseenter-events\">What is the difference between the mouseover and mouseenter events?</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've got a solution that works in Chrome and IE (haven't tested in Safari). Basically I trigger the mouseover() event of the element under the mouse in the animate() callback event if the thumbnails have moved. The solution is only implemented for list-1.</p>\n\n<pre><code>// list 1\nvar idx = 0;\n$('#list-1 li').hover(function() {\n    $(this).addClass('hover');\n}, function() {\n    $(this).removeClass('hover');\n}).click(function() {\n    $('#list-1 &gt; li').removeClass('active');\n    var $active = $(this);\n    $active.addClass('active');\n    var id = $('#list-1 li.active').data('index') - 2; // take scroll param and subtract 2 to keep selected image in the middle\n\n    var moveAmount = 90;\n    idy = Math.max(0, id * moveAmount);\n    var oldPos = $active.parent().position().top;\n\n    $active.parent().animate({\n        'top': -idy + 'px'\n    }, function(){\n\n        var newPos = $(this).position().top;\n\n        // Check if we moved\n        if(oldPos - newPos != 0)\n        {\n            var movement = (oldPos - newPos) / moveAmount;\n            $($(this).children()[$active.index() + movement])\n                .trigger(\"mouseover\");\n\n        }\n\n    });\n    return false;\n}).css('cursor', 'pointer').each(function() {\n    $(this).data('index', idx);\n    ++idx;\n});\n</code></pre>\n\n<p>And here's the link to my fork in jsfiddle if you wan't to test it out over there - <a href=\"http://jsfiddle.net/jimmysv/3tzAt/15/\" rel=\"nofollow\">http://jsfiddle.net/jimmysv/3tzAt/15/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I only worked on the top list but I think I got it all working. let me know if it is what you are looking for.</p>\n\n<p>Here is the <a href=\"http://jsfiddle.net/colemande/c2u5b/\" rel=\"nofollow\">fiddler</a></p>\n\n<pre><code>var idx = 0;\n$('#list-1 li').hover(function() {\n    $(this).addClass('hover');\n}, function() {\n    $(this).removeClass('hover');\n}).click\n\n(function() {\n    var currentindex = $('.active').index();\n    var selectedindex = $(this).index();\n    var nexthoverindex = selectedindex + (selectedindex - currentindex);\n\n\n//counter for starting on index 1\nif(currentindex === 1 &amp;&amp; selectedindex &gt; 2){\n    nexthoverindex = nexthoverindex - 1;\n}\n\n//counter for starting on index 0\nif(currentindex === 0 &amp;&amp; selectedindex &gt; 2){\n    nexthoverindex = nexthoverindex - 2;\n}\n\n//make sure the selection never goes below 0\nif(nexthoverindex &lt; 0){\n    nexthoverindex = 0;\n}\n\n$('#list-1 &gt; li').removeClass('active');\n$(this).addClass('active');\nvar id = $('#list-1 li.active').data('index') - 2; // take scroll param and subtract 2 to keep selected image in the middle\nidy = Math.max(0, id * 90);\n$(this).parent().animate({\n    'top': -idy + 'px'\n},200, function(){           \n    $('.hover').removeClass('hover');\n    if(currentindex &gt; 2 || selectedindex &gt; 2){\n    $('#list-1 &gt; li').eq(nexthoverindex).addClass('hover');\n    }\n});\nreturn false;\n}).css('cursor', 'pointer').each(function() {\n    $(this).data('index', idx);\n    ++idx;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I have this row of thumbnails that I am animating with jQuery.<br />\nEach of these thumbnails has a hover and active class.</p>\n\n<p>They work fine but when I animate the list, the new thumbnail under the mousecursor does not apply the hover? I have to move the mouse a little bit after each click?</p>\n\n<p>It's kinda difficult to exaplain.. I have made a fiddle here: <a href=\"http://jsfiddle.net/nZGYA/\" rel=\"nofollow\">http://jsfiddle.net/nZGYA/</a><br />\nWhen you start clicking after thumb 3 without moving the mouse you see what I mean...</p>\n\n<p>It works fine in FireFox, NOT Safari, Chrome, IE etc.<br />\nIs there something I can do about this?</p>\n\n<p>For reference here is my code:</p>\n\n<pre><code>&lt;style type=\"text/css\"&gt;\n    .container { position: relative; overflow: hidden; width: 140px; height: 460px; float: left; margin-right: 100px; background: silver;  }            \n    ul { position: absolute; top: 10; list-style: none; margin: 10px; padding: 0; }\n    li { margin-bottom: 10px; width: 120px; height: 80px; background: gray; }\n    #list-2 li a { display: block; width: 120px; height: 80px; outline: none; }\n    #list-2 li a:hover { background: teal; }\n    #list-2 li a.active { background: navy; }\n&lt;/style&gt;\n\n$(document).ready(function() {\n    var idx_2 = 0;\n    $('#list-2 li a')\n    .click(function() {\n        $('#list-2 &gt; li a').removeClass('active');\n        $(this).addClass('active');         \n        var id =  $('#list-2 li a.active').data('index') - 2;\n        idy = Math.max(0, id * 90);\n        $(this).parent().parent().animate({ 'top' : -idy + 'px' });\n        return false;\n    })\n    .each(function() {\n        $(this).data('index', idx_2);\n        ++idx_2;\n    });\n});\n\n&lt;div class=\"container\"&gt;\n    &lt;ul id=\"list-2\"&gt;\n        &lt;li&gt;&lt;a class=\"active\" href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n&lt;/div&gt;\n</code></pre>\n",
            "last_activity_date": 1348666323,
            "question_id": 4925550,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "hover",
                "jquery-animate",
                "mouse"
            ],
            "title": "Losing hover when animating with jQuery (without moving mouse)"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you don't need to escape html tags (ie replacing <code>&lt;a&gt;</code> with <code>&amp;lt;a&amp;gt;</code>) then .html might be faster.  Also yes it does need to empty the divs before replacing it with the new content.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If the text you are inserting does <strong>NOT</strong> need to be escaped, then you might want to try the following:</p>\n\n<pre><code>$(\".div\").each(function(){\n  this.innerHTML = \"default\";\n});\n</code></pre>\n\n<p>jQuery does some processing to the text when you use the <a href=\"http://api.jquery.com/text#text2\" rel=\"nofollow\">method <code>.text()</code></a>.</p>\n\n<blockquote>\n  <p>We need to be aware that this method\n  escapes the string provided as\n  necessary so that it will render\n  correctly in HTML. To do so, it calls\n  the DOM method <code>.createTextNode()</code>,\n  which replaces special characters with\n  their HTML entity equivalents (such as\n  &lt; for &lt;).</p>\n</blockquote>\n\n<p><strong>Edit</strong>\nTo avoid the penalty of the <code>.each()</code> method you can try the following:</p>\n\n<pre><code>var divs = $(\".divs\"),\n    i = 0,\n    len = divs.length;\nwhile(len--) {\n  divs[len].innerHTML = \"default\";\n}\n</code></pre>\n\n<p>If that doesn't get you any performance gains then it's definitely a browser implementation issue. At least that would rule out jQuery performance issues/bugs.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Yes, the reason for this method to be slower when elements have child elements is because jQuery's <code>.text()</code> method first runs the <code>.empty()</code> method and then <code>.append(document.createTextNode(text))</code></p>\n\n<p>From jQuery.text</p>\n\n<pre><code>// ...\nreturn this.empty().append( (this[0] &amp;&amp; this[0].ownerDocument || document).createTextNode( text ) );\n// ...\n</code></pre>\n\n<p>The reason I'm pointing out this is that <code>.empty()</code> method calls <code>.cleanData()</code> method that removes any data and/or events associated with its child nodes, and then, does a standard <code>.removeChild()</code> method on all its child nodes to remove them, which is the main reason why divs that already contain text are slower to update.</p>\n\n<p>The solution to your problem, is to write your own, vanilla, javaScript functions for updating the text of your divs, but make sure you're not attaching any click events or data to them via jQuery, since you will most definitely have some memory leaks.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you want the fastest solution for all browsers use <code>textContent</code> if supported and fallback to <code>innerText</code> / <code>innerHTML</code> otherwise <strong>[<a href=\"http://jsperf.com/jquery-text-html/\" rel=\"nofollow\">Test</a>]</strong> (knowing the <em><a href=\"http://stackoverflow.com/questions/1359469/innertext-works-in-ie-but-not-in-firefox/1359822#1359822\">gotchas</a></em>).</p>\n\n<pre><code>/**\n * Replaces text for all elements in the given array.\n * @param {Array} elems\n * @param {String} text\n */\nvar replaceText = (function(){\n  var dummy = document.createElement(\"div\");\n  dummy.innerHTML = \"text\";\n  var TEXT = (dummy.textContent === 'text') ? 'textContent' : 'innerText';\n  return function(elems, text) {\n    for (var i = elems.length; i--;) {\n      elems[i][TEXT] = text;\n    } \n  };\n})();\n</code></pre>\n\n<p><strong>Faster</strong> than jQuery text:</p>\n\n<ul>\n<li><strong>4x</strong>  on IE 8</li>\n<li><strong>2.2x</strong> on Firefox 4b11</li>\n<li><strong>1.3x</strong> on Chrome</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>You can gain performance by reusing an existing text node.</p>\n\n<p>A DIV element that contains only text, is a DOM element that contains one child node whose type is a text node. The text content is stored within this text node, and not within its parent DIV element.</p>\n\n<p>The main problem with methods such as .text() in JQuery, or .innerHTML() in HTML DOM, or even .innerText() and .textContent(), is that they all create a <em>new</em> text node (even if one exists already). More specifically, all methods listed above start by removing <em>all</em> DOM child nodes, including an eventually pre-existing text node (this is also done by the implementations of innerHTML, innerText and textContent). This leaves the context element (the DIV, in your case) empty, without any children at all. They then create a <em>new</em> child node of type text node, assigning the new text to it, and appending it to the context element. innerHTML furthermore attempts to parse the input HTML string and constructs a DOM fragment out of it.</p>\n\n<p>The fastest method that I know for replacing an existing text node is as follows:</p>\n\n<pre><code>var divs = $(\".divs\").get(),  \n     len = divs.length;  \nwhile(--len) {  \n  divs[len].firstChild.data = \"default\";  \n}\n</code></pre>\n\n<p>This method does not create a new child node, but merely replaces the text of the existing text node. Obviously, this method assumes that the text node exists already.\nFor this to work, your initial document may be initialized with any non-empty text inside the DIVs (and excluding any other child elements).</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In Firefox, I am inserting text into ~500 DIVs using this code:</p>\n\n<pre><code>$(\".divs\").text(\"default\"); // ~500 DIVs\n</code></pre>\n\n<p>On my computer, this consistently takes <strong>9ms</strong> <em>if the DIVs are empty</em>. However, this same code consistently takes <strong>18ms</strong> <em>if the DIVs already contain text</em>.</p>\n\n<p>Why is it that an empty DIV is 2x faster at inserting text (does jQuery need to empty the DIV first)? And, is there any way to improve the performance of replacing text in a DIV that already contains text?</p>\n\n<p>Note: In IE 7, the speed differences were not as dramatic. Inserting text in an empty DIV was about 1.5x faster.</p>\n",
            "last_activity_date": 1415157139,
            "question_id": 4738592,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "How to improve performance of inserting text into an HTML element?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>It is indeed E4X. It does the same thing as the single dot operator, which selects children, but it selects all descendants. (It's by analogy with XPath's <code>/</code> operator selecting children of an element that match the selector and <code>//</code> selecting all descendants that match the selector.)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It is an E4X operator.</p>\n\n<p>From <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide:Processing_XML_with_E4X\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide:Processing_XML_with_E4X</a>:</p>\n\n<blockquote>\n  <p>While the . operator accesses direct children of the given node, the .. operator accesses all children no matter how deeply nested:</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Not to be confused with the decimal point and dot:</p>\n\n<pre><code>var val= 1000..toExponential()\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 13
                }
            ],
            "body": "<p>I'm doing some work with the Parser API in Spidermonkey. <a href=\"https://developer.mozilla.org/en/SpiderMonkey/Parser_API#Miscellaneous\">The docs</a> show that there's a binary operator <code>..</code>. Anybody have <em>any</em> idea what this is/does? I'd love to know. I've never seen it before. If I were forced to guess, I'd have to say it's something with E4X, but that's only because I know nothing about E4X.</p>\n",
            "last_activity_date": 1326825246,
            "question_id": 4211037,
            "score": 7,
            "tags": [
                "javascript",
                "operator-keyword"
            ],
            "title": "What is the double-dot operator (..) in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var setname = 'set_1', \n    elements = {};\n\nelements[setname] = ['beer','water','wine'];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can do what you'd like to like so:</p>\n\n<pre><code>var setname = 'set_1', elements = {};\nelements[setname] = ['beer','water','wine'];\nalert(elements['set_1']); // beer,water,wine\n</code></pre>\n\n<p>See this in action at <a href=\"http://jsfiddle.net/x5KRD/\">http://jsfiddle.net/x5KRD/</a>.</p>\n\n<p>All objects in JS can be accessed using <em>dot notation</em> (<code>obj.method()</code> or <code>obj.property</code>), or <em>bracket notation</em> (<code>obj['method']()</code> or <code>obj['property']</code>). Using bracket notation lets you dynamically specify method/property/key names.</p>\n\n<p>For example, while clumsy, <code>window['alert']('hi')</code> is equivalent to <code>window.alert('hi')</code>.</p>\n\n<p>Note that your code won't work as-is, anyways, because you're using object literal notation (<code>{'beer','water','wine'}</code>) to contain an array (it should be in square brackets <code>['beer','water','wine']</code> instead). Object literals need to have key-value pairs.</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>You have to understand that there's really no such thing as \"JSON notation\" in Javascript - it's native Javascript notation that we're talking about. What jQuery wants is a Javascript value for the POST data, not necessarily a Javascript object constant.</p>\n\n<p>Thus, your code will prepare your POST data like this:</p>\n\n<pre><code>var elements = {};\nelements[setName] = { /* something */ };\nelements[somethingElse] = { /* something else */ };\n</code></pre>\n\n<p>and so on. When you're ready to do the POST, you'd just use \"elements\":</p>\n\n<pre><code>$.post(url, elements, function() { /* callback code */ });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I need to define a hash for posting some ajax data using jQuery.\nThe hash will look something like:</p>\n\n<pre><code>var setname = 'set_1';\nelements = { set_1: {'beer','water','wine'} };\n</code></pre>\n\n<p>The challenge I need to solve is 'set-1' (the key of Array elements) should be dynamically named based on the value of <code>var setname</code>.</p>\n\n<p>I want to avoid using <code>eval()</code> of course..\nin PHP it can be done using the double dollar sign like this: <code>$$setname</code>, but what's the way to do this in JavaScript?</p>\n",
            "last_activity_date": 1289944019,
            "question_id": 4199126,
            "score": 7,
            "tags": [
                "javascript",
                "variables"
            ],
            "title": "how to assign variable value as variable name in a hash?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think you could accomplish this with a timer (<code>setInterval</code>) that starts in the <code>onbeforeunload</code> callback. Javascript execution will be paused while the confirm dialog is up, then if the user cancels out the timed function could reset the <code>alreadyPrompted</code> variable back to false, and clear the interval.</p>\n\n<p>Just an idea.</p>\n\n<p>Ok I did a quick test based on your comment.</p>\n\n<pre><code>&lt;span id=\"counter\"&gt;0&lt;/span&gt;\nwindow.onbeforeunload = function () {\n   setInterval(function () { $('#counter').html(++counter); }, 1);\n   return \"are you sure?\";\n}\nwindow.onunload = function () { alert($('#counter').html()) };\n</code></pre>\n\n<p>In between the two callbacks <code>#counter</code> never got higher than 2 (ms). It seems like using these two callbacks in conjunction gives you what you need.</p>\n\n<p><strong>EDIT - answer to comment:</strong></p>\n\n<p>Close. This is what i was thinking</p>\n\n<pre><code>var promptBeforeLeaving = true,\n    alreadPrompted = false,\n    timeoutID = 0,\n    reset = function () {\n        alreadPrompted = false;\n        timeoutID = 0;\n    };\n\nwindow.onbeforeunload = function () {\n    if (promptBeforeLeaving &amp;&amp; !alreadPrompted) {\n        alreadPrompted = true;\n        timeoutID = setTimeout(reset, 100);\n        return \"Changes have been made to this page.\";\n    }\n};\n\nwindow.onunload = function () {\n    clearTimeout(timeoutID);\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I have encapsulated the answers from above in an easy to use function:</p>\n\n<pre><code>function registerUnload(msg, onunloadFunc) {\n    var alreadPrompted = false,\n        timeoutID = 0,\n        reset = function() {\n            alreadPrompted = false;\n            timeoutID = 0;\n        };\n\n    if (msg || onunloadFunc) { // register\n        window.onbeforeunload = function() {\n            if (msg &amp;&amp; !alreadPrompted) {\n                alreadPrompted = true;\n                timeoutID = setTimeout(reset, 100);\n                return msg;\n            }\n        };\n\n        window.onunload = function() {\n            clearTimeout(timeoutID);\n            if (onunloadFunc) onunloadFunc();\n        };\n    } else { // unregister\n        window.onbeforeunload = null;\n        window.onunload = null;\n    }\n}\n</code></pre>\n\n<p>To register use:</p>\n\n<pre><code>registerUnload(\"Leaving page\", function() { /* unload work */ });\n</code></pre>\n\n<p>To unregister use:</p>\n\n<pre><code>registerUnload();\n</code></pre>\n\n<p>Hope this helps ..</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h2>Just because you don't see use for a feature doesn't mean it isn't useful.</h2>\n\n<p>The Stack Exchange network, GMail, Grooveshark, Yahoo! Mail, and Hotmail use the onbeforeunload prompt to prevent/warn users that they are leaving a page after they have begun editing something. Oh yah, <strong>nearly every single desktop program</strong> that accepts saveable user-input data utilizes this prompt-user-before-leaving UX pattern.</p>\n\n<hr>\n\n<p>I have a function which behaves similarly to this one:</p>\n\n<pre><code>window.onbeforeunload = function(){\n    // only prompt if the flag has been set... \n    if(promptBeforeLeaving === true){\n        return \"Are you sure you want to leave this page?\";\n    }\n}\n</code></pre>\n\n<p>When a user attempts navigates away from the page the browser presents them with the option to leave or stay on the page. If the user selects the \"Leave this page option\" and then they quickly click on a link again before the page unloads completely the dialog fires again.</p>\n\n<p>Are there any foolproof solutions to this problem?</p>\n\n<hr>\n\n<p>Note: The following NOT the solution: </p>\n\n<pre><code>var alreadyPrompted = false;\nwindow.onbeforeunload = function(){\n    // only prompt if the flag has been set... \n    if(promptBeforeLeaving === true &amp;&amp; alreadyPrompted === false){\n        alreadyPrompted = true;\n        return \"Are you sure you want to leave this page?\";\n    }\n}\n</code></pre>\n\n<p>because the user might select the \"Stay on the page\" option which would cause future <code>onbeforeunload</code>s to stop working.</p>\n",
            "last_activity_date": 1376355667,
            "question_id": 4126820,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "onbeforeunload"
            ],
            "title": "window.onbeforeunload may fire multiple times"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>$(\"iframe\").contents().find(\"*:not(#loginInnerBox)\").remove();\n</code></pre>\n\n<p>Be aware this would only work on iframes loaded from the same domain (<a href=\"http://en.wikipedia.org/wiki/Same_origin_policy\" rel=\"nofollow\">same origin policy</a>)</p>\n\n<p><strong>EDIT</strong>: Probably this removes children of <code>loginInnerBox</code> as well. In that case you could try to clone it before:</p>\n\n<pre><code>var iframe   = $(\"iframe\").contents(),\n    loginBox = iframe.find(\"#loginInnerBox\").clone();\n\niframe.find(\"*\").remove();\niframe.append(loginBox);\n</code></pre>\n\n<p>Something like that..</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Add this to the <code>&lt;iframe&gt;</code>-elememt:</p>\n\n<pre><code>onload=\"$('body&gt;*',this.contentWindow.document).not('#ctl00_CLPMainContent_Login1').hide();\"\n</code></pre>\n\n<p>it will hide every child of the body except #ctl00_CLPMainContent_Login1 </p>\n\n<p>If #ctl00_CLPMainContent_Login1 contains more than the loginbox, you have to use the suggestion using clone() posted by pex.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>With jQuery, you can load not just the contents of a URL, but a specific CSS selector from within that URL. This would be a much cleaner approach. It's like this. </p>\n\n<pre><code>$(\"#area\").load(\"something.html #content\");\n</code></pre>\n\n<p>Via <a href=\"http://css-tricks.com/ajax-load-container-contents/\" rel=\"nofollow\">CSS Tricks</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>First just let me say I'm open to ideas on a different approach altogether.</p>\n\n<p>I have and iframe as such:</p>\n\n<pre><code>&lt;div id=\"testloadlogin\"&gt;\n      &lt;iframe src=\"../security/login.aspx\" width=\"400\" height=\"500\"\n             scrolling=\"auto\" frameborder=\"1\"&gt;\n      [Your user agent does not support frames or is currently configured\n      not to display frames. However, you may visit\n      &lt;a href=\"../security/login.aspx\"&gt;the related document.&lt;/a&gt;]\n      &lt;/iframe&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>The page being loaded with the iframe has a div called loginInnerBox. I only want to display the loginInnerBox and everything inside of it.</p>\n\n<p>Any ideas on how to do this? I was thinking of using Jquery or javascript of some kind to remove everything else on the page loaded by the iframe, not sure how to access that though...</p>\n\n<p>Just to be clear I want everything on my page outside of the iframe to remain intact. I want the equivalent of saying $.('testloadlogin').load('../security/login.aspx' #loginInnerBox) which would just get loginInnerBox's html and place it in the testloadlogin div. However I need the back-end processing from the other page which is supported by iframe, but not by the Jquery load.</p>\n\n<p>The markup of the page loaded by the iframe is </p>\n\n<pre><code>&lt;body&gt;\n    &lt;div&gt;\n    &lt;/div&gt;.......\n    &lt;div class=\"AspNet-Login\" id=\"ctl00_CLPMainContent_Login1\"&gt;\n        &lt;div id=\"loginInnerBox\"&gt;\n            &lt;div id=\"loginCreds\"&gt;\n                &lt;table&gt;\n                &lt;/table&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;div&gt;\n    &lt;/div&gt;....\n&lt;/body&gt;\n</code></pre>\n\n<p>Do you need more information than that?</p>\n\n<p>I tried this, it had no effect:</p>\n\n<pre><code>&lt;div class=\"ui-corner-all\" id=\"RefRes\"&gt;\n        &lt;div id=\"testloadlogin\"&gt;\n        &lt;iframe onload=\"javascript:loadlogin()\" id=\"loginiframe\" src=\"../security/login.aspx\"\n             scrolling=\"auto\" frameborder=\"1\"&gt;\n      [Your user agent does not support frames or is currently configured\n      not to display frames. However, you may visit\n      &lt;a href=\"../security/login.aspx\"&gt;the related document.&lt;/a&gt;]\n      &lt;/iframe&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function loadlogin() {\n            $('&lt;body&gt;*', this.contentWindow.document).not('#ctl00_CLPMainContent_Login1').hide();\n        }\n    &lt;/script&gt;\n</code></pre>\n",
            "last_activity_date": 1343028617,
            "question_id": 4086876,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "iframe",
                "html"
            ],
            "title": "show only one div within an iframe (javascript, JQuery...)"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you had the following HTML</p>\n\n<pre><code>&lt;form id=\"form_one\"&gt;\n    &lt;input type=\"submit\" value=\"Submit 1\" /&gt;\n&lt;/form&gt;\n&lt;form id=\"form_two\"&gt;\n    &lt;input type=\"submit\" value=\"Submit 2\" /&gt;\n&lt;/form&gt;\n</code></pre>\n\n<p>Then you could have a bit of jQuery as follows</p>\n\n<pre><code>$(document).ready(function() {\n    $(this).keydown(function(e) {\n        if (e.keyCode == '13') {\n            $(\"#form_one\").submit();\n        }\n    });\n});\n</code></pre>\n\n<p>Obviously you'd have to put in the logic to decide which form to submit. </p>\n\n<p>Also as far as I know if a control in \"form_one\" had focus and you hit enter it would automatically submit that form the control is contained within.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>There's no way. The simplest solution is just to ensure that the first submit button in the form is the one you want triggered by the <kbd>Enter</kbd> button.</p>\n\n<p>Note that this submit button can be a duplicate of a button elsewhere in the form, and it doesn't have to be <em>visible</em>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>You can use simple JS to catch the onkeypress event:</p>\n\n<pre><code>onkeypress=\"if ((event.keyCode | event.which) == 13) { document.getElementById('MySubmitButton').click(); return false; }\"\n</code></pre>\n\n<p>Just add this to the textbox tag and replace \"MySubmitButton\" with the ID of the desired submit button.</p>\n\n<p>Note: use ID, not name.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can just define a javascript method on the \"onclick\" or \"onkeypress\" event of the button, from which u wanted to get the form submitted. But u have to define the process to occur in the javascript function</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have a form with a simple text field and multiple submit buttons. When the user presses enter, I want to submit the form with a specific submit button, but it looks like the form just chooses the first button instead. Is there any way to tell the browser which submit button to choose when user presses enter? Preferrably without javascript, but I'll take it if that's the only solution.</p>\n\n<p>Edit: I have no other choice than having multiple submit buttons. This is a legacy app.</p>\n",
            "last_activity_date": 1288608376,
            "question_id": 4068082,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "forms"
            ],
            "title": "Submitting a form with the enter button in a form with several submit buttons"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>[^,]*$\n</code></pre>\n\n<p>might do.  (Matches everything after the last comma).</p>\n\n<p>Explanation: <code>[^,]</code> matches every character except for <code>,</code>.  The <code>*</code> denotes that the regexp matches any number of repetition of <code>[^,]</code>.  The <code>$</code> sign matches the end of the line.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This should work</p>\n\n<pre><code>preg_match_all('@.*\\,(.*)@', '{{your data}}', $arr, PREG_PATTERN_ORDER);\n</code></pre>\n\n<p>You can test it here: <a href=\"http://www.spaweditor.com/scripts/regex/index.php\" rel=\"nofollow\">http://www.spaweditor.com/scripts/regex/index.php</a></p>\n\n<p>RegEx: <code>.*\\,(.*)</code></p>\n\n<p>Same RegEx test here for JavaScript:\n<a href=\"http://www.regular-expressions.info/javascriptexample.html\" rel=\"nofollow\">http://www.regular-expressions.info/javascriptexample.html</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>string pattern = \",(?&lt;anyAfterComma&gt;.*)\\b\";\nmatch.Groups[\"anyAfterComma\"].Value;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>.+,(.+)\n</code></pre>\n\n<p>Explanation:</p>\n\n<pre><code>.+,\n</code></pre>\n\n<p>will search for everything before the comma, including the comma.</p>\n\n<pre><code>(.+) \n</code></pre>\n\n<p>will search for everything after the comma, and depending on your regex environment, </p>\n\n<pre><code>\\1\n</code></pre>\n\n<p>is the reference for the first parentheses captured group that you need, in this example, everything after the comma.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<h3>Short answer</h3>\n\n<p>Either:</p>\n\n<ul>\n<li><p><code>,[\\s\\S]*$</code> or <code>,.*$</code> to match everything after the first comma (see explanation for which one to use); or</p></li>\n<li><p><code>[^,]*$</code> to match everything after the last comma (which is probably what you want).</p></li>\n</ul>\n\n<p>You can use, for example, <code>/[^,]*/.exec(s)[0]</code> in JavaScript, where <em>s</em> is the original string. If you wanted to use multiline mode and find all matches that way, you could use <code>s.match(/[^,]*/mg)</code> to get an array (if you have more than one of your posted example lines in the variable on separate lines).</p>\n\n<h3>Explanation</h3>\n\n<ul>\n<li><code>[\\s\\S]</code> is a character class that matches both whitespace and non-whitespace characters (i.e. all of them). This is different from <code>.</code> in that it matches newlines.</li>\n<li>`[^,] is a negated character class that matches everything except for commas.</li>\n<li><code>*</code> means that the previous item can repeat 0 or more times.</li>\n<li><code>$</code> is the anchor that requires that the end of the match be at the end of the string (or end of line if using the /m multiline flag).</li>\n</ul>\n\n<p>For the first match, the first regex finds the first comma <code>,</code> and then matches all characters afterward until the end of line <code>[\\s\\S]*$</code>, including commas.</p>\n\n<p>The second regex matches as many non-comma characters as possible before the end of line. Thus, the entire match will be after the last comma.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>You don't need regex to do this. Here's an example :</p>\n\n<pre><code>var str = \"'SELECT___100E___7',24\";\nvar afterComma = str.substr(str.indexOf(\",\") + 1); // Contains 24 //\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 30
                },
                {
                    "body": "<p>Another idea is to do myVar.split(',')[1];</p>\n\n<p>For simple case, not using a regexp is a good idea...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Need a Regex to get all characters after <code>,</code> (not including it) from a variable. This variable can contain for example </p>\n\n<pre><code>'SELECT___100E___7',24\n'SELECT___100E___7',1\n'SELECT___100E___7',286\n'SELECT___100E___7',5147\n</code></pre>\n\n<p>Note: There can be any length of characters after the <code>,</code> in this variable. </p>\n\n<p>An explanation of the regexp would be a added help for the novice :)</p>\n\n<p>Edit: a javascript answer would be just as good</p>\n",
            "last_activity_date": 1288448732,
            "question_id": 4058923,
            "score": 7,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "get all characters after &quot;,&quot; character"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>for(var i=0; i&lt;links.length; i++) {    \nif (links[i].nextChild.nodeName==\"DIV\")\n    alert(\"This is a DIV\")\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The <code>nextSibling</code> property of DOM nodes works perfectly in all browsers and does exactly what you'd expect. If there is no next sibling, it returns <code>null</code>.</p>\n\n<p>Iterating over a <code>NodeList</code> (which is what <code>getElementsByTagName</code> returns) is identical to iterating over an array using a standard <code>for</code> loop. The following will iterate over the links and alert each time it finds one whose next sibling is a <code>&lt;div&gt;</code>:</p>\n\n<pre><code>var menu = document.getElementById('menu');\nvar links = menu.getElementsByTagName('a');\n\n// Iterate over the links\nfor (var i = 0, len = links.length, link; i &lt; len; ++i) {\n    link = links[i];\n    if (link.nextSibling &amp;&amp; link.nextSibling.nodeName == \"DIV\") {\n        alert(\"Next sibling is DIV! \" + link.innerHTML);\n    }\n}\n</code></pre>\n\n<p>Note that in non-IE browsers, whitespace between elements in HTML is considered a text node. You may want to ignore these whitespace nodes when considering what the next sibling of each link is. The following will do that:</p>\n\n<pre><code>function isWhitespace(node) {\n    return node.nodeType == 3 &amp;&amp; /^\\s*$/.test(node.data);\n}\n\n// Iterate over the links\nfor (var i = 0, len = links.length, link, next; i &lt; len; ++i) {\n    link = links[i];\n    next = link.nextSibling;\n    if (next &amp;&amp; isWhitespace(next)) {\n        next = next.nextSibling;\n    }\n    if (next &amp;&amp; next.nodeName == \"DIV\") {\n        alert(\"Next sibling is DIV! \" + link.innerHTML);\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>Could someone show me how to loop through the anchor tags within a div and find the next sibling?</p>\n\n<p>I have this so far.</p>\n\n<pre><code>var menu = document.getElementById('menu');\nvar links = menu.getElementsByTagName('a');\n</code></pre>\n\n<p>How do I loop through the links? Can I use <code>.nextSibling</code> to find if the next sibling is a div?</p>\n",
            "last_activity_date": 1409684676,
            "question_id": 4051612,
            "score": 7,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "JavaScript next sibling?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Interesting question... One plain JavaScript solution is to create an index for your objects in a separate array, based on the <code>'Surname'</code> property. Something like this<sup>1</sup>:</p>\n\n<pre><code>var peopleobj = { \n   \"0291\" : { \"Forename\" : \"Jeremy\", \"Surname\" : \"Dyson\" },\n   \"0398\" : { \"Forename\" : \"Billy\", \"Surname\" : \"Bunter\" },\n   \"6714\" : { \"Forename\" : \"Harry\", \"Surname\" : \"Peterson\" },\n   \"9080\" : { \"Forename\" : \"Barry\", \"Surname\" : \"Mainwaring\" }\n};\n\nvar index = [];\n\n// build the index\nfor (var x in peopleobj) {\n   index.push({ 'key': x, 'Surname': peopleobj[x]['Surname'] });\n}\n\n// sort the index\nindex.sort(function (a, b) { \n   var as = a['Surname'], \n       bs = b['Surname']; \n\n   return as == bs ? 0 : (as &gt; bs ? 1 : -1); \n}); \n</code></pre>\n\n<p>Now you would be able to iterate over your <code>index</code> array:</p>\n\n<pre><code>for (var i = 0; i &lt; index.length; i++) {\n   console.log(peopleobj[index[i]['key']]['Surname']);\n}\n</code></pre>\n\n<p>Result (Tested in Firebug console):</p>\n\n<pre><code>Bunter\nDyson\nMainwaring\nPeterson\n</code></pre>\n\n<p>You may want to wrap this up into some sort of reusable Iterator object, even though it would be difficult to get as terse as Perl:</p>\n\n<pre><code>// Our reusable Iterator class:\nfunction MyIterator (o, key) {\n   this.index = [];\n   this.i = 0;\n   this.o = o;\n\n   for (var x in o) {\n      this.index.push({ 'key': x, 'order': o[x][key] });\n   }\n\n   this.index.sort(function (a, b) { \n      var as = a['order'], \n          bs = b['order']; \n\n      return as == bs ? 0 : (as &gt; bs ? 1 : -1); \n   }); \n\n   this.len = this.index.length;\n}\n\nMyIterator.prototype.next = function () {\n   return this.i &lt; this.len ?\n          this.o[this.index[this.i++]['key']] :\n          null;\n};\n</code></pre>\n\n<p>Then use it as follows:</p>\n\n<pre><code>// Our JavaScript object:\nvar peopleobj = { \n   \"0291\" : { \"Forename\" : \"Jeremy\", \"Surname\" : \"Dyson\" },\n   \"0398\" : { \"Forename\" : \"Billy\", \"Surname\" : \"Bunter\" },\n   \"6714\" : { \"Forename\" : \"Harry\", \"Surname\" : \"Peterson\" },\n   \"9080\" : { \"Forename\" : \"Barry\", \"Surname\" : \"Mainwaring\" }\n};\n\n// Build the Iterator object, using the 'Surname' field:\nvar surnameIter = new MyIterator(peopleobj, 'Surname');\n\n// Iterate:\nvar i;\n\nwhile (i = surnameIter.next()) {\n   console.log(i['Surname'] + ' ' + i['Forename']);\n}\n</code></pre>\n\n<p>Result: </p>\n\n<pre><code>Bunter Billy\nDyson Jeremy\nMainwaring Barry\nPeterson Harry\n</code></pre>\n\n<hr>\n\n<p><sup>1</sup> You may want to use the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/hasOwnProperty\"><code>hasOwnProperty()</code></a> method to ensure that the properties belong to your object and are not inherited from <code>Object.prototype</code>:</p>\n\n<pre><code>for (var x in peopleobj) {\n   if (peopleobj.hasOwnProperty(x)) {\n      index.push({ 'key': x, 'Surname': peopleobj[x]['Surname'] });\n   }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Short version: I'm looking for the JavaScript equivalent of Perl's</p>\n\n<pre><code>for my $key ( sort { $hash{$a}{foo} cmp $hash{$b}{foo} } keys %hash ) {\n    # do something with $key\n}\n</code></pre>\n\n<p>More detail:</p>\n\n<p>I have a JSON object which consists of a bunch of other JSON objects which have identical properties to each other, like a hash of hashes in Perl: eg:</p>\n\n<pre><code>var peopleobj = { \n    \"0291\" : { \"Forename\" : \"Jeremy\", \"Surname\" : \"Dyson\" },\n    \"0398\" : { \"Forename\" : \"Billy\", \"Surname\" : \"Bunter\" },\n    \"6714\" : { \"Forename\" : \"Harry\", \"Surname\" : \"Peterson\" },\n    \"9080\" : { \"Forename\" : \"Barry\", \"Surname\" : \"Mainwaring\"}\n}\n</code></pre>\n\n<p>I want to iterate through the objects in <code>peopleobj</code> in order of the surname values, eg to print out the names in surname order. Plain JavaScript or jQuery solutions will work in the context in which this is being deployed.</p>\n\n<p>Thanks in advance for your valuable time.</p>\n",
            "last_activity_date": 1288306674,
            "question_id": 4041762,
            "score": 7,
            "tags": [
                "javascript",
                "json",
                "sorting",
                "hashtable",
                "iteration"
            ],
            "title": "Iterating over a JavaScript object in sort order based on particular key value of a child object"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<ul>\n<li><a href=\"http://msdn.microsoft.com/en-us/magazine/cc163419.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/magazine/cc163419.aspx</a></li>\n<li><a href=\"http://www.dustindiaz.com/namespace-your-javascript/\" rel=\"nofollow\">http://www.dustindiaz.com/namespace-your-javascript/</a></li>\n<li><a href=\"http://vimeo.com/9998565\" rel=\"nofollow\">http://vimeo.com/9998565</a></li>\n</ul>\n\n<h3>frameworks for oop js</h3>\n\n<ul>\n<li><a href=\"http://jsclass.jcoglan.com/\" rel=\"nofollow\">http://jsclass.jcoglan.com/</a></li>\n<li><a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">http://www.prototypejs.org/</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>OOP is definitely possible.  While Javascript doesn't have \"classes\" like most OO languages do, what it does have is called \"prototypes\".  Basically, objects are defined in terms of other objects rather than classes.  (Objects can also emulate classes to some degree, for those who can't wrap their minds around prototypal inheritance.)</p>\n\n<p>One could argue JS's OO capabilities exceed those of most languages, considering objects play an even more essential role than in languages with classes.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>OOP is central to Javascript, but it's not classical OOP. Javascript uses prototypes, not classes.</p>\n\n<p>Douglas Crockford is a Javascript genius, so his <a href=\"http://javascript.crockford.com/prototypal.html\">Prototypal Inheritance in Javascript</a> is a nice starting point. A Google search for <a href=\"http://www.google.com/search?q=javascript+oop\">\"Javascript OOP\"</a> likely will turn up some neat articles to peruse, as well \u2014 I like <a href=\"http://mckoss.com/jscript/object.htm\">the article by Mike Koss</a>.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Javascript is an intrinsically OOP language. Like others have said, it is classless, but you have a choice of how you want to create objects.</p>\n\n<p>You can create objects that make use of different types of inheritance.</p>\n\n<ol>\n<li>A pseudo-classical inheritance. Here you build constructor functions and use new to create classes. This will look most like the typical class based OOP.</li>\n<li>Prototypal inheritance. - This is what many of the other answer referred to.</li>\n<li>Functional inheritance. - In this mode you make use of closures, anonymous functions, and strategic returns to create truly private and protected variables.</li>\n</ol>\n\n<p>There's a fair amount of cross over among these types. Suffice it to say that Javascript is a very flexible and powerful language for OOP.</p>\n\n<p>I'm just learning about OOP in JS as well. Here is an example of functional inheritance I put together:</p>\n\n<p><a href=\"http://jsfiddle.net/ghMA6/\" rel=\"nofollow\"><strong>jsFiddle</strong></a></p>\n\n<pre><code>// Object constructor\nvar parent = function (initial) {\n    var that, privateNumber, hiddenVar; \n    that = {};    \n\n    // Public variables\n    that.share = initial - 32;\n\n    // Public methods\n    that.getNumber = function () {\n        return privateNumber;                \n    };\n\n    // Private properties\n    privateNumber = initial; \n    hiddenVar = \"haha can't get me\";    \n\n    return that;\n};\n\n// Second object constructor that inherits from parent\nvar child = function (initial) {\n    var that, privateName;\n\n    // Inherit from parent\n    that = parent(initial);\n\n    // Public methods\n    that.getName = function () {\n        return privateName;                \n    };\n\n    // Private poroperties\n    privateName = \"Ludwig the \" + initial + \"th\";\n\n    return that;\n};\n\n// Create objects\nvar newPar1 = parent(42);\nvar newPar2 = parent(10);   \n\nvar newChild1 = child(0);\nvar newChild2 = child(100);\n\n// Output on the jsFiddle page refed above: http://jsfiddle.net/ghMA6/\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://pluralsight.com/training/Courses/TableOfContents/js4cs\" rel=\"nofollow\">Pluralsight - JavaScript for C# Developers -  Shawn Wildermuth - 2h  5m</a></p>\n\n<ol>\n<li>JavaScript Basics</li>\n<li>JavaScript Functions    </li>\n<li><strong>Object-Oriented JavaScript</strong></li>\n<li>Practical Application</li>\n</ol>\n\n<p>and</p>\n\n<p><a href=\"http://rads.stackoverflow.com/amzn/click/1847194141\" rel=\"nofollow\">Object-Oriented JavaScript: Create scalable, reusable high-quality JavaScript applications and libraries - 356 pages -2008 -packed publishing</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes. It is possible. I have ever using the Script# to build javascript application, It allow you writing C# code, and translate to JavaScript.\nit is an good experience, especially for large project, it will force your thinking in the OOP way to order your code.</p>\n\n<p>The tool can be found at: (it is open source but write by an Microsoft employee)\n<a href=\"http://scriptsharp.com\" rel=\"nofollow\">http://scriptsharp.com</a></p>\n\n<p>If you are not familiar with C# you can also find the similar tool for writing javascript in Java.</p>\n\n<p>And if you don't want to using those too, you can investigate how it convert the code to understand how it implement the OOP feature. </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is an example of accomplishing an OO structure in javascript that is utilizing a library(not required, recommended) </p>\n\n<pre><code>//Create and define Global NameSpace Object\n( function(GlobalObject, $, undefined) \n{\n    GlobalObject.PublicMethod = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    GlobalObject.Functionality = {}\n\n}) (GlobalObject = GlobalObject || {}, jQuery);\n\n//New object for specific functionality\n( function(Events, $, undefined)\n{\n    //Member Variables \n    var Variable; // (Used for) , (type)\n\n    // Initialize\n    Events.Init = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    // public method\n    Events.PublicMethod = function(oParam) \n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n        ///&lt;param type=\"\"&gt;&lt;/param&gt;\n    }\n\n    // protected method (typically define in global object, but can be made available from here)\n    GlobalObject.Functionality.ProtectedMethod = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    // internal method (typically define in global object, but can be made available from here)\n    GlobalObject.InternalMethod = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    // private method\n    var privateMethod = function()\n    {\n        ///&lt;summary&gt;&lt;/summary&gt;\n    }\n\n    Events.PublicProperty = \"Howdy Universe\";\n}) (GlobalObject.Functionality.Events = GlobalObject.Funcitonality.Events || {}, jQuery )\n\n// Reusable \"class\" object\nvar oMultiInstanceClass = function()\n{\n    // Memeber Variables again\n    var oMember = null; // \n\n    // Public method\n    this.Init = function(oParam)\n    {\n        oMember = oParam;\n    }\n}\n</code></pre>\n\n<p>The strength to this is that it initializes the Global object automatically, allows you to maintain the integrity of your code, and organizes each piece of functionality into a specific grouping by your definition.</p>\n\n<p>This structure is solid, presenting all of the basic syntactical things you would expect from OOP without the key words.</p>\n\n<p>There are even some ingenious ways to set up interfaces as well. If you choose to go that far, a simple search will give you some good tutorials and tips.</p>\n\n<p>Even setting up intellisense is possible with javascript and visual studio, and then defining each piece and referencing them makes writing javascript cleaner and more manageable.</p>\n\n<p>Using these three methods as needed by your situation helps keep the global namespace clean, keep your code organized and maintains separation of concerns for each object.. if used correctly. Remember, Object Oriented Design is of no use if you don't utilize the logic behind using objects!</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I recently found out that Javascript function can have classes, so I was wondering if OOP is also possible through javascript. Is It? If yes, Could you please point out some tutorials or site, where I can start with?</p>\n",
            "last_activity_date": 1410362502,
            "question_id": 3536048,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "IS OOP possible in Javascript?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>You can just redirect in your <code>success</code> handler, like this:</p>\n\n<pre><code>window.location.href = \"thankyou.php\";\n</code></pre>\n\n<p>Or since you're displaying results, wait a few seconds, for example this would wait 2 seconds:</p>\n\n<pre><code>setTimeout(function() {\n  window.location.href = \"thankyou.php\";\n}, 2000);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I think you can do that with: </p>\n\n<pre><code>window.location = \"your_url\";\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I suppose you could attack this in two ways;</p>\n\n<p>1) insert <code>window.location = 'http://www.yourdomain.com</code> into the success function.</p>\n\n<p>2) Use a further ajax call an inject this into an element on your page, further info on which you can find in the jQuery docs at <a href=\"http://api.jquery.com/jQuery.get/\" rel=\"nofollow\">http://api.jquery.com/jQuery.get/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sure. Just put something at the the end of your success function like:</p>\n\n<pre><code>if(result === \"no_errors\") location.href = \"http://www.example.com/ThankYou.html\"\n</code></pre>\n\n<p>where your server returns the response <code>no_errors</code> when there are no errors present.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Just do some error checking, and if everything passes then set <code>window.location</code> to redirect the user to a different page.</p>\n\n<pre><code>$.ajax({\n    url: 'mail3.php',\n    type: 'POST',\n    data: 'contactName=' + name + '&amp;contactEmail=' + email + '&amp;spam=' + spam,\n\n    success: function(result) {\n        //console.log(result);\n        $('#results,#errors').remove();\n        $('#contactWrapper').append('&lt;p id=\"results\"&gt;' + result + '&lt;/p&gt;');\n        $('#loading').fadeOut(500, function() {\n            $(this).remove();\n\n        });\n\n        if ( /*no errors*/ ) {\n            window.location='thank-you.html'\n        }\n\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>In your mail3.php file you should trap errors in a try {} catch {}</p>\n\n<pre><code>try {\n    /*code here for email*/\n} catch (Exception $e) {\n    header('HTTP/1.1 500 Internal Server Error');\n}\n</code></pre>\n\n<p>Then in your <code>success</code> call you wont have to worry about your errors, because it will never return as a success.</p>\n\n<p>and you can use: <code>window.location.href = \"thankyou.php\";</code> inside your success function like Nick stated.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>// Create lag time before redirecting \nsetTimeout(function() {\n  window.location.href = \"thankyou.php\";\n}, 2000);\n\n$errors=null; \n\nif ( ($name == \"Name\") ) {\n    $errors = $nameError; // no name entered\n}\nif ( ($email == \"E-mail address\") ) {\n    $errors .= $emailError; // no email address entered\n}\nif ( !(preg_match($match,$email)) ) {\n    $errors .= $invalidEmailError; // checks validity of email\n}\nif ( $spam != \"10\" ) {\n    $errors .= $spamError; // spam error\n}\n\nif ( !($errors) ) {\n    mail ($to, $subject, $message, $headers);\n    echo \"Your message was successfully sent!\";\n    //instead of echoing this message, I want a page redirect to thankyou.html\n    // redirect\n    setTimeout();\n} else {\n    echo \"&lt;p id='errors'&gt;\";\n    echo $errors;\n    echo \"&lt;/p&gt;\";\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I have a form that uses Ajax for client-side verification. The end of the form is the following:</p>\n\n<pre><code>$.ajax({\n        url: 'mail3.php',\n        type: 'POST',\n        data: 'contactName=' + name + '&amp;contactEmail=' + email + '&amp;spam=' + spam,\n\n        success: function(result) {\n            //console.log(result);\n            $('#results,#errors').remove();\n            $('#contactWrapper').append('&lt;p id=\"results\"&gt;' + result + '&lt;/p&gt;');\n            $('#loading').fadeOut(500, function() {\n                $(this).remove();\n\n            });\n\n        }\n    });\n</code></pre>\n\n<p>EDIT: this is my mail3.php file dealing with errors:</p>\n\n<pre><code>$errors=null; \n\nif ( ($name == \"Name\") ) {\n    $errors = $nameError; // no name entered\n}\nif ( ($email == \"E-mail address\") ) {\n    $errors .= $emailError; // no email address entered\n}\nif ( !(preg_match($match,$email)) ) {\n    $errors .= $invalidEmailError; // checks validity of email\n}\nif ( $spam != \"10\" ) {\n    $errors .= $spamError; // spam error\n}\n\nif ( !($errors) ) {\n    mail ($to, $subject, $message, $headers);\n    //header (\"Location: thankyou.html\");\n    echo \"Your message was successfully sent!\";\n    //instead of echoing this message, I want a page redirect to thankyou.html\n\n} else {\n    echo \"&lt;p id='errors'&gt;\";\n    echo $errors;\n    echo \"&lt;/p&gt;\";\n}\n</code></pre>\n\n<p>I was wondering if it's possible to redirect the user to a Thank You page if the ajax request is successful and no errors are present. Is this possible?</p>\n\n<p>Thanks!\nAmit</p>\n",
            "last_activity_date": 1410530117,
            "question_id": 3513971,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "redirect"
            ],
            "title": "Page redirect with successful Ajax request"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Nothing. Absolutely nothing. </p>\n\n<p>Three semicolons, ten semicolons, a hundred semicolons, they all get interpreted to the same result: <strong>nothing</strong>.</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>They are empty statements and have no effect. It is possible that the interpreter or compiler will remove them unless a statement is required by the syntax. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It makes people ask questions on StackOverflow.</p>\n\n<p>Other than that, it does nothing.</p>\n",
                    "is_accepted": false,
                    "score": 23
                },
                {
                    "body": "<p>Ends an empty statement 3 times.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Lines starting with three semicolons are there for debug code: it indicates that those lines should not appear in the production environment. The Javascript is run through a compressor or some other algorithm that removes <code>;;;</code> lines when creating the optimized JS file.</p>\n\n<pre><code>;;; console.log(\"only run this line when debugging!\");\n</code></pre>\n\n<p>As indicated above, three semicolons actually does nothing in Javascript: it just ends three consecutive empty statements. If an actual comment was used</p>\n\n<pre><code>// console.log(\"only run this line when debugging!\");\n</code></pre>\n\n<p>then you'd have to go in and manually remove all comments when you wanted to enter debug mode, and then go in and put them back when you were done. The other solution is to create a <code>DEBUG</code> variable and wrap all debug lines in a condition:</p>\n\n<pre><code>var DEBUG = true;\nif(DEBUG){\n     console.log(\"only run this line when debugging!\");\n}\n</code></pre>\n\n<p>but this is a little cumbersome and actually adds unneeded code to your Javascript document. Of course you could run the JS through a compressor to remove the <code>DEBUG</code> conditions, but at that point you might as well just use the <code>;;;</code> method, which is simpler.</p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/2934509/exclude-debug-javascript-code-during-minification\">this question</a> for a real life example of this. BTW,  I think the syntax comes from <a href=\"http://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\">emacs</a>.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I've seen a triple semicolon in a few expressions here and there.<br>\nDoes it have any logical effect?  </p>\n\n<p>The closest thing I've seen for an explanation is that it tells the Dean Edwards compressor to ignore that line.  </p>\n\n<pre><code>;;; var someVar = 'Rebel';\n</code></pre>\n",
            "last_activity_date": 1414518698,
            "question_id": 3268517,
            "score": 7,
            "tags": [
                "javascript",
                "compression",
                "minify"
            ],
            "title": "What does three semicolons in a javascript expression do?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There isn't a way to tie it to just the refresh action, but you may want to look into <code>window.onbeforeunload</code>.  This will allow you to run a function that returns a string just before the page is unloaded.  If this string is not empty, then a popup confirmation dialog, containing this string and some other boilerplate text provided from the browser.</p>\n\n<p>For example:</p>\n\n<pre><code>window.onbeforeunload = function () {\n    if (someConditionThatIndicatesIShouldConfirm) {\n        return \"If you reload this page, your previous action will be repeated\";\n    } else {\n        return \"\";\n    }\n}\n</code></pre>\n\n<p><strong>Also</strong>, if the current page was loaded via a <code>POST</code> operation, then the browser should already display a confirmation box when the user tries to refresh it.  As a general rule, any action that changes the state of the data on the server should be done through a <code>POST</code> request, rather than a <code>GET</code>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This is not possible. The best you can do is use the <code>onbeforeunload</code> event but that will fire on <em>any</em> event leaving the current page. It is not possible to target the refresh button specifically.</p>\n\n<p>See e.g. <a href=\"http://stackoverflow.com/questions/1802930/setting-onbeforeunload-on-body-element-in-chrome-and-ie-using-jquery\">this question</a> on onbeforeunload</p>\n\n<p>It might be better though to build a duplicate check into your database. That would catch accidental submissions using the \"back\" button as well.</p>\n\n<p>An alternative would be using a random one-time token that gets built into the form. If two operations are attempted using the same token, you would stop it. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can do it like this:</p>\n\n<pre><code>window.onbeforeunload = function() {\n  return \"Data will be lost if you leave the page, are you sure?\";\n};\n</code></pre>\n\n<p>This would show a prompt to the user allowing them to cancel.  It's not refresh specific, but for your purposes (like editing a question on SO) that doesn't seem to matter, it's loss of info no matter where you're leaving to.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>There are two possible ways forward with this, both quite different.</p>\n\n<p>One way would be to have an event handler bound to <code>onbeforeunload</code> event so that you can detect when the user is <em>browsing away</em> from the current page. If my memory serves me correctly however, <code>onbeforeunload</code> is not consistent across browsers (I don't think Opera responds to it IIRC, but have no way to currently test). Of course, this solution fails if the user turns off JavaScript.</p>\n\n<p>The second and more robust way would be to implement the <strong><a href=\"http://en.wikipedia.org/wiki/Post/Redirect/Get\" rel=\"nofollow\">Post Redirect Get pattern</a></strong> which when used, prevents the data from being posted again when a user refreshes the page.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>you can use jquery for this...\n    for this you have to attach js file of jquery.</p>\n\n<pre><code>&lt;script&gt;\nvar count=0;\n$(document).ready(function(){\n    alert(\"hi\" + (count++));\n    confirm(\"sure?\")\n});\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If the user refreshes the page in question it will add another record to the database, so I want to warn the user through an alert box if they really want to refresh the page and if they click ok then the page should be refreshed otherwise if they click cancel it won't be.</p>\n\n<p>How to make this type of alert box appear when the browser's refresh button is clicked in a way that is cross browser compatible?</p>\n",
            "last_activity_date": 1408368109,
            "question_id": 3221161,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How to pop up an alert box when the browser&#39;s refresh button is clicked?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Javascript executes in a client-side context.</p>\n\n<p><a href=\"http://www.tek-tips.com/viewthread.cfm?qid=1171273&amp;page=1\" rel=\"nofollow\">http://www.tek-tips.com/viewthread.cfm?qid=1171273&amp;page=1</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>writing to the file system directly from a browser is prohibited for security reasons. With html5 however it'll be possible to have offline storage support. <a href=\"http://hacks.mozilla.org/?s=localStorage\" rel=\"nofollow\">Take a look here</a>.</p>\n\n<p>Grz, Kris.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Javascript from websites cannot access the local file system.</p>\n\n<p>If you like to store data either store it on the server or in a cookie.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>While everyone who's responded that javascript does not have the ability to write files on a remote server are correct, and this is true for security reasons, what you want to accomplish may still be possible.</p>\n\n<p>For example, if you wanted to make it possible to create a file on your website with the use of javascript, you can do so with some server side scripting language and and AJAX call.</p>\n\n<p>Example: </p>\n\n<p>You have a file on your server called <code>update_last_access.php</code> which will create a file which stores the last time the file was accessed in some arbitrary file.</p>\n\n<p>If you then had your javascript function make an AJAX call out to that script, for instance, in jquery</p>\n\n<pre><code>$.get(\"update_last_access.php\")\n</code></pre>\n\n<p>Then this would execute the server side script and write to the file.</p>\n\n<p>Before any more help can be provided for you, you're going to have to clarify what you're trying to do.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can read files from the filesystem in JavaScript with Firefox 3.6 - see my <a href=\"http://ditrw.com/booktorious/\" rel=\"nofollow\">EPUB reader proof of concept</a>, for example.</p>\n\n<p>You can't write files directly from JavaScript, though. You have to go via a server.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can write files in JavaScript in Firefox, but you have to use an XPCOM object (internal browser API). This is not allowed for JavaScript loaded from a web page, and it is intended to be used by JavaScript running inside a Firefox add-on (with high level of privileges).</p>\n\n<p>There is a way for unprivileged (web page) JavaScript to request more privileges and if the user grants it (there will be a pop up dialog asking for permission), the web page code would be able to write to a file.</p>\n\n<p>But before you read further, a warning:</p>\n\n<p>This is not standard JavaScript and I would not recommend this approach unless you are developing a very specific application, that will be used in a very specific way (like for example, <a href=\"http://www.tiddlywiki.com/\" rel=\"nofollow\">http://www.tiddlywiki.com/</a> a client-side JavaScript-HTML only wiki).</p>\n\n<p>Requesting XPCOM privileges on a website is a bad practice! It's basicly equivalent to running an .exe you just downloaded from a site. You are asking a user to grant full access to their computer (read, write, execute) with the identity of the user running Firefox.</p>\n\n<p>Request permission to use XPCOM (this will prompt the user for confirmation, no way to avoid it):</p>\n\n<pre><code>netscape.security.PrivilegeManager.enablePrivilege(\"UniversalXPConnect\");\n</code></pre>\n\n<p>Then, write to a file using an XPCOM object (example code from Mozilla Developer Network):</p>\n\n<pre><code>   1. // file is nsIFile, data is a string  \n   2. var foStream = Components.classes[\"@mozilla.org/network/file-output-stream;1\"].  \n   3.                          createInstance(Components.interfaces.nsIFileOutputStream);  \n   4.   \n   5. // use 0x02 | 0x10 to open file for appending.  \n   6. foStream.init(file, 0x02 | 0x08 | 0x20, 0666, 0);   \n   7. // write, create, truncate  \n   8. // In a c file operation, we have no need to set file mode with or operation,  \n   9. // directly using \"r\" or \"w\" usually.  \n  10.   \n  11. // if you are sure there will never ever be any non-ascii text in data you can   \n  12. // also call foStream.writeData directly  \n  13. var converter = Components.classes[\"@mozilla.org/intl/converter-output-stream;1\"].  \n  14.                           createInstance(Components.interfaces.nsIConverterOutputStream);  \n  15. converter.init(foStream, \"UTF-8\", 0, 0);  \n  16. converter.writeString(data);  \n  17. converter.close(); // this closes foStream  \n</code></pre>\n\n<p>You can find more information about I/O in Firefox using XPCOM here: <a href=\"https://developer.mozilla.org/en-US/docs/Code_snippets/File_I_O\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Code_snippets/File_I_O</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There will be an API for this.. File Writer API. The early specification is here:\n<a href=\"http://www.w3.org/TR/file-writer-api/\" rel=\"nofollow\">http://www.w3.org/TR/file-writer-api/</a>\nIt is not implemented in any browser yet.</p>\n\n<p><strong>Update:</strong> It seems there already exists an implementation. Check out <a href=\"http://caniuse.com/filesystem\" rel=\"nofollow\">http://caniuse.com/filesystem</a> and <a href=\"http://www.html5rocks.com/en/tutorials/file/filesystem/\" rel=\"nofollow\">http://www.html5rocks.com/en/tutorials/file/filesystem/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Mozilla is planning to include FileSaver to Gecko 9:\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=557540\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=557540</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to write a function in javascript which creates a file and write some content to it, iam working with firefox, can anybody help me in this case.</p>\n\n<p>Thanks...</p>\n",
            "last_activity_date": 1357095376,
            "question_id": 3067774,
            "score": 7,
            "tags": [
                "javascript",
                "firefox",
                "file",
                "operation"
            ],
            "title": "How to create a file using javascript in Mozilla Firefox"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Have a look at the ScriptManager class' <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.registerclientscriptblock.aspx\">RegisterClientScriptBlock</a> and <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.registerstartupscript.aspx\">RegisterStartupScript</a> methods.</p>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Something like:</p>\n\n<pre><code>btnSomething.ClientClick = \"alert('You pressed me!');\";\n</code></pre>\n\n<p>You might also want to read up on the ScriptManager control and outputting blocks of script.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The right answers usually is \"You don't\". It's better to define your code in a .js file and use jQuery to hook-up the desired events.   </p>\n\n<pre><code>$(document).ready(function() {  \n $('#myBtn').click(function() {\n  alert('Handler for .click() called.');\n});};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If you want to register a script that will be used in connection with an <code>UpdatePanel</code> (AJAX) use <code>ScriptManager</code> class as Sani Huttunen pointed.\nOtherwise you should use the class <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.clientscriptmanager%28VS.80%29.aspx\" rel=\"nofollow\">ClientScriptManager</a> (methods <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.clientscriptmanager.registerclientscriptblock%28VS.80%29.aspx\" rel=\"nofollow\">Page.ClientScript.RegisterClientScriptBlock</a> or <a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.clientscriptmanager.registerstartupscript%28VS.80%29.aspx\" rel=\"nofollow\">Page.ClientScript.RegisterStartupScript</a>)</p>\n\n<p>As other user pointed, normally registering a script on the code behind can and should be avoided. It's not a very nice practice and you should do it only in cases where you have no other option.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One way to put some javascript onto the page into a specific location do this:</p>\n\n<p>ASP.Net</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n&lt;asp:Literal id=\"litScript\" runat=\"server\" /&gt;\n&lt;/script&gt;\n</code></pre>\n\n<p>C#</p>\n\n<pre><code>litScript.Text = \"alert(\"Hello!\");\"\n</code></pre>\n\n<p>Of course, you can put anything in there, and I'd recommend a javascript library.</p>\n\n<p>Using the Scriptmanager is also an option.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Not an answer, but a suggestion.\nMixing your js within your code-behind can come back to haunt you, I agree with Adrian Magdas.\nAnytime you need to make a simple change/update to your javascript you'll have to re-build your project, which means re-deploying instead of simply pushing out a single .js file.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Actually, this is what you need:</p>\n\n<pre><code>string myScriptValue = \"function callMe() {alert('You pressed Me!'); }\";\nScriptManager.RegisterClientScriptBlock(this, this.GetType(), \"myScriptName\", myScriptValue, true);\n</code></pre>\n\n<p>Copy all of javascript into string and then register it into your aspx page in code-behind. Then in aspx page, you can call the javascript function whenever you want. You should write this code in Page_Load method in C# page.</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>Greetings,\nhow can I write JavaScript code in asp.net in code behind using C#.\nFor example, \nI have click button event when I click the button I want to invoke this java script code:</p>\n\n<pre><code>alert(\"You pressed Me!\"); \n</code></pre>\n\n<p>I want to know how to use java script from code behind.</p>\n\n<p>Thank you;</p>\n",
            "last_activity_date": 1360832675,
            "question_id": 2848359,
            "score": 7,
            "tags": [
                "c#",
                "asp.net",
                "javascript"
            ],
            "title": "how to write javascript in asp.net in code behind using C#"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>function hasLowerCase(str) {\n    if(str.toUpperCase() != str) {\n        return true;\n    }\n    return false;\n}\n\nalert(hasLowerCase(\"HeLLO\"));\nalert(hasLowerCase(\"HELLO\"));\n</code></pre>\n\n<p>Try it: <a href=\"http://jsfiddle.net/B2bvY/3/\">http://jsfiddle.net/B2bvY/3/</a></p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<p>also:</p>\n\n<pre><code>function hasLowerCase(str) {\n    return (/[a-z]/.test(str));\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<pre><code>function hasLowerCase(str) {\n    return str.toUpperCase() != str;\n}\n</code></pre>\n\n<p>or</p>\n\n<pre><code>function hasLowerCase(str) {\n    for(x=0;x&lt;str.length;x++)\n        if(str.charAt(x) &gt;= 'a' &amp;&amp; str.charAt(x) &lt;= 'z')\n            return true;\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>But in which context are you using your script? Are you just displaying user input, such as a prompt()? You could just force a desired output. </p>\n\n<pre><code>var inpt = prompt(\"Enter your name: \", \"\");\nvar uc = inpt.charAt(0);\nvar lc = inpt.slice(1);\nvar str1 = uc.toUpperCase();\nvar str2 = lc.toLowerCase();\nvar str = str1 + str2;\ndocument.write(str);\n</code></pre>\n\n<p>Depending on your usage, this may not be the one to choose...however if all you're trying to do is display user input this simple way could work for you. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Consider a JavaScript method that needs to check whether a given string is in all uppercase letters. The input strings are people's names. </p>\n\n<p>The current algorithm is to check for any lowercase letters. </p>\n\n<pre><code>var check1 = \"Jack Spratt\";    \nvar check2 = \"BARBARA FOO-BAR\"; \nvar check3 = \"JASON D'WIDGET\";  \n\nvar isUpper1 = HasLowercaseCharacters(check1);  \nvar isUpper2 = HasLowercaseCharacters(check2);\nvar isUpper3 = HasLowercaseCharacters(check3);\n\nfunction HasLowercaseCharacters(string input)\n{\n    //pattern for finding whether any lowercase alpha characters exist\n    var allLowercase; \n\n    return allLowercase.test(input);\n}\n</code></pre>\n\n<p>Is a regex the best way to go here?</p>\n\n<p>What pattern would you use to determine whether a string has any lower case alpha characters?</p>\n",
            "last_activity_date": 1418350590,
            "question_id": 2830826,
            "score": 7,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "JavaScript - checking for any lowercase letters in a string"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>instaed of making the iframe invisible by using <code>display:none</code>, you could try to...</p>\n\n<p>... set <code>visibility:hidden</code></p>\n\n<p>... set <code>position:abolute; top:-600px;</code></p>\n\n<p>... set <code>opacity:0</code></p>\n\n<p>or something else that makes jquery \"see\" the objects but not the user (and reset the used css-attributes in your <code>myFrame.onload</code>-function).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Some browsers assume that when \"display:none\" is applied to replaced elements (like Flash or an iframe) the visual info for that element is no longer needed. So, if the element is later displayed by the CSS, the browser will actually recreate the visual data form scratch.</p>\n\n<p>I imagine that having the iframe default to \"display:none;\" makes the browser skip the rendering of the HTML so the tags don't have any dimensions. I would set the visibility to \"hidden\" or position it off the page rather than use \"display:none;\".</p>\n\n<p>Good luck.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Hidden iframes are a huge security issue. Probably best to try to find another way to accomplish what you want, if it is legitimate, because hopefully future browsers will get rid of this feature altogether. <a href=\"http://blog.opendns.com/2012/07/10/opendns-security-team-blackhole-exploit/\" rel=\"nofollow\">http://blog.opendns.com/2012/07/10/opendns-security-team-blackhole-exploit/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p><code>visibility:collapse;\ndisplay:hidden;\nheight:0px;</code></p>\n\n<p>Will work to get rid of white space too..\nThe iframe will also load..</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a page that contains an <code>iframe</code> that gets loaded using Javascript:</p>\n\n<p><b>index.html</b></p>\n\n<pre><code>&lt;iframe id=\"myFrame\" width=\"800\" height=\"600\" style=\"display: none;\"&gt;&lt;/iframe&gt;\n&lt;div id=\"loader\"&gt;&lt;!-- some loading indicator --&gt;&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\nfunction someFunction() {\n  var myFrame = document.getElementById('myFrame');\n  var loader = document.getElementById('loader');\n\n  loader.style.display = 'block';\n\n  myFrame.src = 'myFrame.html';\n  myFrame.onload = function() {\n    myFrame.style.display = 'block';\n    loader.style.display = 'none';\n  };\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>The page that gets loaded in the <code>iframe</code> contains some Javascript logic which calculates the sizes of certain elements for the purposes of adding a JS driven scrollbar (jScrollPane + jQuery Dimensions).</p>\n\n<p><b>myFrame.html</b></p>\n\n<pre><code>&lt;div id=\"scrollingElement\" style=\"overflow: auto;\"&gt;\n  &lt;div id=\"several\"&gt;&lt;/div&gt;\n  &lt;div id=\"child\"&gt;&lt;/div&gt;\n  &lt;div id=\"elements\"&gt;&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n$(document).load(function() {\n  $('#scrollingElement').jScrollPane();\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>This works in Chrome (and probably other Webkit browsers), but fails in Firefox and IE because at the time <code>jScrollPane</code> gets called, all the elements are still invisble and jQuery Dimensions is unable to determine any element's dimensions.</p>\n\n<p>Is there a way to make sure my <code>iframe</code> is visible <em>before</em> <code>$(document).ready(...)</code> gets called? Other than using <code>setTimeout</code> to delay <code>jScrollPane</code>, which is something I definitely want to avoid.</p>\n",
            "last_activity_date": 1385488188,
            "question_id": 2730046,
            "score": 7,
            "tags": [
                "javascript",
                "iframe",
                "jscrollpane"
            ],
            "title": "Javascript problem with iframe that&#39;s hidden before loaded"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You are looking for something like <strong><a href=\"http://www.webtoolkit.info/javascript-trim.html\" rel=\"nofollow\">trim function</a></strong>, right?</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Include this function somewhere (in order to provide a trim function)</p>\n\n<pre><code>String.prototype.trim = function () {\n   return this.replace(/^\\s*(\\S*(\\s+\\S+)*)\\s*$/, \"$1\");\n};\n</code></pre>\n\n<p>see here <a href=\"http://javascript.crockford.com/remedial.html\" rel=\"nofollow\">http://javascript.crockford.com/remedial.html</a></p>\n\n<p>then...</p>\n\n<pre><code>if (document.forms['id_of_form'].elements['id_of_input'].value.trim()=='') {\n    //do xyz\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>var str = document.getElementById(\"myInput\").value;\nif (str.match(/^\\s*$/)) {\n    // nothing, or nothing but whitespace\n} else {\n    // something\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>What is the easiest way to check in Javascript whether the input text field is empty (contains nothing or white spaces only)?</p>\n",
            "last_activity_date": 1388871305,
            "question_id": 2662245,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How to check whether the input text field contains only white spaces?"
        }
    ]
}
