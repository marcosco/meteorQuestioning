{
    "items": [
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Number of <code>.parent a</code> elements that have an <code>id</code> attribute:</p>\n\n<pre><code>$('.parent a[id]').length\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Like this:</p>\n\n<pre><code>var $aWithId = $('.parent a[id]');\n</code></pre>\n\n<p>Following OP's comment, test it like this:</p>\n\n<pre><code>if($aWithId.length) //or without using variable: if ($('.parent a[id]').length)\n</code></pre>\n\n<p>Will return all anchor tags inside elements with class parent which have an attribute ID specified</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>You can do </p>\n\n<pre><code>document.getElementById(id) or \n$(id).length &gt; 0\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can using the following code:</p>\n\n<pre><code>   if($(\".parent a\").attr('id')){\n\n      //do something\n   }\n\n\n   $(\".parent a\").each(function(i,e){\n       if($(e).attr('id')){\n          //do something and check\n          //if you want to break the each\n          //return false;\n       }\n   });\n</code></pre>\n\n<p>The same question is you can find here: <a href=\"http://stackoverflow.com/questions/11137317/how-to-check-if-div-has-id-or-not\">how to check if div has id or not?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Simply use:</p>\n\n<pre><code>$(\".parent a[id]\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How would I select elements that have any ID? For example:</p>\n\n<pre><code>if ($(\".parent a\").hasId()) {\n    /* then do something here */\n}\n</code></pre>\n\n<p>I, by no means, am a master at jQuery.</p>\n",
            "last_activity_date": 1372084871,
            "question_id": 17277821,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery if Element has an ID?"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>You cannot assign two different functions to <code>window.onload</code>. The last one will always win. This explains why if you remove the last one, the first one starts to work as expected.</p>\n\n<p>Looks like you should just merge the second function's code into the first one.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>Try putting all you code into the same [and only 1] onload method !</p>\n\n<pre><code> window.onload = function(){\n        // All code comes here \n }\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>When you put the second function into <code>window.onload</code> basically what you are doing is replacing a value. As someone said before you can put the two functions into one function and set <code>window.onload</code> to that. If you are confused think about it this way, if you had an object <code>object</code>, and you did <code>object.value = 7; object.value = 20</code> the value would be 20 <code>window</code> is just another object </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>window.addEventListener(\"load\",function(event) {\n    var $input2 = document.getElementById('dec');\n    var $input1 = document.getElementById('parenta');\n    $input1.addEventListener('keyup', function() {\n        $input2.value = $input1.value;\n    });\n},false);\n\nwindow.addEventListener(\"load\",function(){\n    document.getElementById('enable').onchange=function(){\n        var txt = document.getElementById('gov1');\n        if(this.checked) txt.disabled=false;\n        else txt.disabled = true;\n    };\n},false);\n</code></pre>\n\n<p>Documentation is <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener\">here</a></p>\n\n<p>Note that this solution may not work across browsers. I think you need to rely on a 3-rd library, like jquery <code>$(document).ready</code> </p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>You can not bind several functions to window.onload and expect all of these functions will be executed. Another approach is using $(document).ready instead of window.onload, if you already use jQuery in your project.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Because you're overriding it. If you want to do it with <code>onload</code> you could just extend the previous function. Here's one way to do it:</p>\n\n<pre><code>Function.prototype.extend = function(fn) {\n  var self = this;\n  return function() {\n    self.apply(this, arguments);\n    fn.apply(this, arguments);\n  };\n};\n\nwindow.onload = function() {\n  console.log('foo');\n};\n\nwindow.onload = window.onload.extend(function() {\n  console.log('bar');\n});\n\n// Logs \"foo\" and \"bar\"\n</code></pre>\n\n<p><strong>Demo:</strong> <a href=\"http://jsbin.com/akegut/1/edit\" rel=\"nofollow\">http://jsbin.com/akegut/1/edit</a></p>\n\n<p><strong>Edit:</strong> If you want to extend with multiple functions you can use this:</p>\n\n<pre><code>Function.prototype.extend = function() {\n  var fns = [this].concat([].slice.call(arguments));\n  return function() {\n    for (var i=0; i&lt;fns.length; i++) {\n      fns[i].apply(this, arguments);\n    }\n  };\n};\n\nwindow.onload = window.onload.extend(function(){...}, function(){...}, ...);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you absolutely must have separate methods triggered as the result of <code>window.onload</code>, you could consider setting up a queue of callback functions which will be triggered.</p>\n\n<p>It could look like this in its simplest form:</p>\n\n<pre><code>var queue = [];\nvar loaded = false;\n\nfunction enqueue(callback)\n{\n    if(!loaded) queue.push(callback);\n    else callback();\n}\n\nwindow.onload = function()\n{\n    loaded = true;\n    for(var i = 0; i &lt; queue.length; i++)\n    {\n        queue[i]();\n    }\n}\n</code></pre>\n\n<p>And used in your case like so:</p>\n\n<pre><code>enqueue(function()\n{\n    var $input2 = document.getElementById('dec');\n    var $input1 = document.getElementById('parenta');\n    $input1.addEventListener('keyup', function()\n    {\n        $input2.value = $input1.value;\n\n    });\n\n});\n\nenqueue(function()\n{\n    document.getElementById('enable').onchange=function()\n    {\n        var txt = document.getElementById('gov1');\n        if(this.checked) txt.disabled=false;\n        else txt.disabled = true;\n    };\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you can't combine the functions for some reason, but you have control over one of them you can do something like:</p>\n\n<pre><code>window.onload = function () {\n    // first code here...\n};\n\nvar prev_handler = window.onload;\nwindow.onload = function () {\n    if (prev_handler) {\n        prev_handler();\n    }\n    // second code here...\n};\n</code></pre>\n\n<p>In this manner, both handlers get called.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>By keeping 2 window.onload(), the code in the last chunk is executed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For some time I used the above solution with:</p>\n\n<pre><code>window.onload = function () {\n    // first code here...\n};\n\nvar prev_handler = window.onload;\nwindow.onload = function () {\n    if (prev_handler) {\n        prev_handler();\n    }\n    // second code here...\n};\n</code></pre>\n\n<p>However it caused in some cases IE to throw a \"stack overflow error\" described here in this post:\n<a href=\"http://stackoverflow.com/questions/226102/stack-overflow-in-line-0-on-internet-explorer\">&quot;Stack overflow in line 0&quot; on Internet Explorer</a>\nand a good write-up on it <a href=\"http://www.cappuccino-project.org/blog/2010/03/internet-explorer-global-variables-and-stack-overflows.html\" rel=\"nofollow\">here</a></p>\n\n<p>After reading through all the suggested solutions and having in mind that jquery is not available, this is what I came up with(further expanding on Khanh TO's solution with some browser compatibility checking) do you think such an implementation would be appropriate:</p>\n\n<pre><code>function bindEvent(el, eventName, eventHandler) {\n            if (el.addEventListener){\n                    el.addEventListener(eventName, eventHandler, false); \n                } else if (el.attachEvent){\n                    el.attachEvent(\"on\"+eventName, eventHandler);\n                }\n            }\n      render_errors = function() {\n      //do something\n      }\n\n      bindEvent(window, \"load\", render_errors);\n\n      render_errors2 = function() {\n      //do something2\n      }\n\n      bindEvent(window, \"load\", render_errors2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have two functions on my form except one does not work if the other is active. Here is my code:</p>\n\n<pre><code>window.onload = function(event) {\n    var $input2 = document.getElementById('dec');\n    var $input1 = document.getElementById('parenta');\n    $input1.addEventListener('keyup', function() {\n        $input2.value = $input1.value;\n    });\n}\n\nwindow.onload=function(){\n    document.getElementById('enable').onchange=function(){\n        var txt = document.getElementById('gov1');\n        if(this.checked) txt.disabled=false;\n        else txt.disabled = true;\n    };\n};\n</code></pre>\n\n<p>What I mean is that when I have both these functions in my form the second function works fine but the first will not work, if take out the second function the first one will work like normal, why is this happening? Is it because of the names?</p>\n",
            "last_activity_date": 1386062166,
            "question_id": 16683176,
            "score": 7,
            "tags": [
                "javascript",
                "function"
            ],
            "title": "Add two functions to window.onload"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This might be a long winded way of doing this using javascript and jQuery, but here's a possible solution. </p>\n\n<p>Separate the <code>h</code>,<code>m</code> &amp; <code>s</code> from the original string. </p>\n\n<pre><code>string = $('#string').text();\n\nhD = string.substr(0,2)\nh = \"&lt;span&gt;\"+string.substr(2,1)+\"&lt;/span&gt;\";\nmD = string.substr(3,2)\nm = \"&lt;span&gt;\"+string.substr(5,1)+\"&lt;/span&gt;\";\nsD = string.substr(6,2)\ns = \"&lt;span&gt;\"+string.substr(8,1)+\"&lt;/span&gt;\";\n\nfinalString = hD + h + mD + m + sD + s;\n\n$('#string').html(finalString);\n</code></pre>\n\n<p>Then you can style the spans within <code>#string</code> with CSS. </p>\n\n<pre><code>#string{font-size:1.2em}\n#string &gt; span{font-size:0.8em}\n</code></pre>\n\n<p>Here is a <a href=\"http://jsfiddle.net/sLgZE/\" rel=\"nofollow\">demo fiddle showing the above</a>. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Performance-wise, I'd recommend a <code>span</code> hell.</p>\n\n<pre><code>&lt;span id=\"string\"&gt;&lt;span id=\"h\"&gt;12&lt;/span&gt;&lt;span class=\"h\"&gt;h&lt;/span&gt;&lt;span id=\"m\"&gt;12&lt;/span&gt;&lt;span class=\"m\"&gt;m&lt;/span&gt;&lt;span id=\"s\"&gt;12&lt;/span&gt;&lt;span class=\"s\"&gt;s&lt;/span&gt;&lt;/span&gt;\n</code></pre>\n\n<p>One span for each <code>h</code>, <code>m</code> and <code>s</code> letters so you can style them properly (can apply either the same or different styling for each).</p>\n\n<p>And another span for each number so you can cache the references. In sum, here's a JS for a very simplistic local-time clock:</p>\n\n<pre><code>//cache number container element references\nvar h = document.getElementById('h'),\n    m = document.getElementById('m'),\n    s = document.getElementById('s'),\n    //IE feature detection\n    textProp = h.textContent !== undefined ? 'textContent' : 'innerText';\n\nfunction tick() {\n    var date = new Date(),\n        hours = date.getHours(),\n        mins = date.getMinutes(),\n        secs = date.getSeconds();\n    h[textProp] = hours &lt; 10 ? '0'+hours : hours;\n    m[textProp] = mins &lt; 10 ? '0'+mins : mins;\n    s[textProp] = secs &lt; 10 ? '0'+secs : secs;\n}\ntick();\nsetInterval(tick, 1000);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/rsfax/2/\" rel=\"nofollow\"><strong>Fiddle</strong></a></p>\n\n<p>This illustrates the basic idea of cached selectors. By not re-creating the elements, you also have a good performance boost.</p>\n\n<p>Though, once a second isn't very heavy work for something so simple (unless you have hundreds of clocks in your page).</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>This only throws the letters in spans and gives them all the same class. Maybe worth an honorable mention lol :-)</p>\n\n<p><a href=\"http://jsfiddle.net/rsGQ9/11/\" rel=\"nofollow\">jsFiddle</a></p>\n\n<p>JavaScript:</p>\n\n<pre><code>var str = document.getElementById('string'),\n    chars = str.innerHTML.split('');\n\nfor (var i = 0; i &lt; chars.length; i++) {\n    if (chars[i].match(/[hms]/)) {\n        chars[i] = \"&lt;span class='smaller'&gt;\" + chars[i] + \"&lt;/span&gt;\";\n    }\n}\nstr.innerHTML = chars.join(''); \n</code></pre>\n\n<p>HTML:</p>\n\n<pre><code>&lt;body&gt;\n    &lt;span id=\"string\"&gt;12h12m12s&lt;/span&gt;        \n&lt;/body&gt;\n</code></pre>\n\n<p>CSS:</p>\n\n<pre><code>.smaller {\n    font-size: 10px;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have:</p>\n\n<pre><code>&lt;span id=\"string\"&gt;12h12m12s&lt;/span&gt;\n</code></pre>\n\n<p>and I'm looking to make the <code>h</code>, <code>m</code> and <code>s</code> smaller than the rest of the text. I've heard of the <code>nth-letter</code> pseudo element in css, but it doesn't seem to be working:</p>\n\n<pre class=\"lang-css prettyprint-override\"><code>#string:nth-letter(3),\n#string:nth-letter(6),\n#string:nth-letter(9) {\n    font-size: 2em;\n}\n</code></pre>\n\n<p>I know I could use javascript to parse the string and replace the letter with surrounding <code>span</code> tags and style the tags. However, the string is updated every second and it seems parsing that often would be ressource intensive.</p>\n",
            "last_activity_date": 1382964545,
            "question_id": 15994270,
            "score": 7,
            "tags": [
                "javascript",
                "css",
                "styling",
                "pseudo-class"
            ],
            "title": "Style the nth letter in a span using CSS"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Well, I came up with <em>a</em> solution, rather straightforward as well.</p>\n\n<p>If <code>.text</code> looks like this:</p>\n\n<pre><code>&lt;p class=\"text\"&gt;Line one\n&lt;a class=\"space\"&gt;&lt;/a&gt;Line two\n&lt;a class=\"space\"&gt;&lt;/a&gt;Line three&lt;/p&gt;\n</code></pre>\n\n<p>With the exact markup and line breaks as above, then I can find each <code>\\n</code> and replace it with a spacer element. </p>\n\n<pre><code>if (textStr.indexOf(\"\\n\") &gt;= 0) {\n    textStr = textStr.replace(/\\n/g, \"\\n&lt;a class='space'&gt;&lt;/a&gt;\");\n}\n</code></pre>\n\n<p>This isn't versatile at all, and will fail if there are more than one line breaks, if the tags are different, etc. So, I encourage anyone who has a better method to answer the question! It can't be that hard, I figured it out.</p>\n",
                    "is_accepted": true,
                    "score": -1
                },
                {
                    "body": "<p>Here is a solution that supports all the features from your requirements:</p>\n\n<p><strong>HTML</strong>:</p>\n\n<pre><code>&lt;p class=\"text\"&gt;\n    First Line\n    &lt;a class=\"space\"&gt;&lt;/a&gt;\n    &lt;a class=\"space\"&gt;&lt;/a&gt;\n    Second Line\n    &lt;span class=\"space\"&gt;&lt;/span&gt;\n    Third Line\n    &lt;label class=\"space\"&gt;&lt;/label&gt;\n    Forth Line\n&lt;/p&gt;\n&lt;ul class=\"output\"&gt;&lt;/ul&gt;\n</code></pre>\n\n<p><strong>CSS</strong>:</p>\n\n<pre><code>.space {\n    display: inline-block;\n    width: 100%;\n}\n.highlighting {\n    background-color: green;\n}\n</code></pre>\n\n<p><strong>JavaScript</strong>:</p>\n\n<pre><code>var text,\n    output,\n    unwrapContents,\n    mergeElements,\n    clearSelection,\n    clearHighlighting,\n    mergeHighlighting,\n    handleCopy;\n\nunwrapContents = function unwrapContents(element) {\n    while(element.firstChild !== null) {\n        element.parentNode.insertBefore(element.firstChild, element);\n    }\n    element.parentNode.removeChild(element);\n};\n\nmergeElements = function mergeElements(startElement, endElement) {\n    var currentElement;\n    endElement = endElement.nextSibling;\n    while((currentElement = startElement.nextSibling) !== endElement) {\n        startElement.appendChild(currentElement);\n    }\n};\n\nclearSelection = function clearSelection() {\n    if (document.selection) {\n        document.selection.empty();\n    } else if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n    }\n};\n\nclearHighlighting = function clearHighlighting(target, exception) {\n    $('.highlighting', target).each(function(index, highlighting) {\n        if(highlighting !== exception) {\n            unwrapContents(highlighting);\n        }\n    });\n    target.normalize();\n};\n\nmergeHighlighting = function mergeHighlighting() {\n    var i, j;\n    // Remove internal highlights\n    $('.highlighting', text).filter(function() {\n        return this.parentNode.className === 'highlighting';\n    }).each(function(index, highlighting) {\n        unwrapContents(highlighting);\n    });\n    text.normalize();\n    // Merge adjacent highlights\n    first:\n    for(i=0; i&lt;text.childNodes.length-1; i++) {\n        if(text.childNodes[i].className === 'highlighting') {\n            for(j=i+1; j&lt;text.childNodes.length; j++) {\n                if(text.childNodes[j].className === 'highlighting') {\n                    mergeElements(text.childNodes[i], text.childNodes[j--]);\n                    unwrapContents(text.childNodes[i].lastChild);\n                } else {\n                    switch(text.childNodes[j].nodeType) {\n                        case 1:\n                            if(text.childNodes[j].className !== 'space') {\n                                continue first;\n                            }\n                            break;\n                        case 3:\n                            if(text.childNodes[j].textContent.trim() !== '') {\n                                continue first;\n                            }\n                            break;\n                    }\n                }\n            }\n        }\n    }\n};\n\nhandleCopy = function handleCopy() {\n    var range,\n        highlighting,\n        item;\n\n    // Highlighting\n    range = window.getSelection().getRangeAt(0);\n    highlighting = document.createElement('span');\n    highlighting.className = 'highlighting';\n    highlighting.appendChild(range.cloneContents());\n    range.deleteContents();\n    range.insertNode(highlighting);\n\n    // Output\n    item = document.createElement('li');\n    item.innerHTML = highlighting.innerHTML;\n    clearHighlighting(item);\n    output.appendChild(item);\n\n    // Cleanup\n    mergeHighlighting();\n    clearSelection();\n};\n\n$(function(){\n    text = $('.text')[0];\n    output = $('.output')[0];\n    $(text).on('copy', handleCopy);\n});\n</code></pre>\n\n<p>Here is a working example <a href=\"http://jsbin.com/efohit/3/edit\" rel=\"nofollow\">http://jsbin.com/efohit/3/edit</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<h2>Update #2</h2>\n\n<p>Okay, more testing ensues. It looks like the code works fine when I use a faux spacer, but the regex eventually fails. Specifically, the following scenarios work:</p>\n\n<ol>\n<li>Select words above or below the <code>a</code> tag</li>\n<li>You select only one line either directly above or below the <code>a</code> tag</li>\n<li>You select more than one line above/below the <code>a</code> tag</li>\n<li>You select more than one line specifically below any <code>a</code> tag</li>\n</ol>\n\n<p>The following scenarios do not work:</p>\n\n<ol>\n<li>You select the line/more lines above the <code>a</code> tag, and then the line/more lines below the <code>a</code> tag</li>\n</ol>\n\n<p>What happens when it \"doesn't work\" is that it removes the <code>a</code> tag spacer from the DOM. This is probably a problem with the regex...</p>\n\n<p><strong>Basically</strong>, it fails when you select text around the <code>a</code> tag.</p>\n\n<hr>\n\n<h2>Update:</h2>\n\n<p>I don't need to wrap each line in a <code>p</code> tag, I can instead use an inline element, such as an <code>a</code>, <code>span</code>, or <code>label</code> tag, with <code>display:inline-block</code> and a height + width to act as a new line element (<code>&lt;br /&gt;</code>). This should make it easier to modify the code, as the only part that should have to change is where I get the text in between the bounds. I should only have to change that part, <code>selectedText.textContent</code>, to retrieve the HTML that is also within the bounds instead of just the text.</p>\n\n<hr>\n\n<p>I am creating a Phonegap that requires the user to select text. I need fine control over the text selection, however, and can no longer plop the entire text content in a <code>pre</code> styled <code>p</code> tag. Instead, I need represent a linebreak with something like <code>&lt;a class=\"space\"&gt;&lt;/a&gt;</code>, so that the correct words can be highlighted precisely. When my text looks like this:</p>\n\n<pre><code>&lt;p class=\"text\"&gt;This is line one\n\nLine two\n\nLine three\n&lt;/p&gt;\n</code></pre>\n\n<p>And has <code>.text{ white-space:pre-wrap }</code>, the following code allows me to select words, then wrap the text with <code>span</code> elements to show that the text is highlighted:</p>\n\n<pre><code>$(\"p\").on(\"copy\", highlight);\n\nfunction highlight() {\n    var text = window.getSelection().toString();\n    var selection = window.getSelection().getRangeAt(0);\n    var selectedText = selection.extractContents();\n    var span = $(\"&lt;span class='highlight'&gt;\" + selectedText.textContent + \"&lt;/span&gt;\");\n    selection.insertNode(span[0]);\n    if (selectedText.childNodes[1] != undefined) {\n        $(selectedText.childNodes[1]).remove();\n    }\n    var txt = $('.text').html();\n    $('.text').html(txt.replace(/&lt;\\/span&gt;(?:\\s)*&lt;span class=\"highlight\"&gt;/g, ''));\n    $(\".output ul\").html(\"\");\n    $(\".text .highlight\").each(function () {\n        $(\".output ul\").append(\"&lt;li&gt;\" + $(this).text() + \"&lt;/li&gt;\");\n    });\n    clearSelection();\n}\n\nfunction clearSelection() {\n    if (document.selection) {\n        document.selection.empty();\n    } else if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n    }\n}\n</code></pre>\n\n<p>This code works beautifully, but not when each line is separated by a spacer tag. The new text looks like this:</p>\n\n<pre><code>&lt;p class=\"text\"&gt;\n    Line one\n    &lt;a class=\"space\"&gt;&lt;/a&gt;\n    Line two\n    &lt;a class=\"space\"&gt;&lt;/a&gt;\n    Line three\n&lt;/p&gt;\n</code></pre>\n\n<p>When I modify the above code to work with have new lines represented by <code>&lt;a class=\"space\"&gt;&lt;/a&gt;</code>, the code fails. It only retrieves the text of the selection, and not the HTML (<code>selectedText.textContent</code>). I'm not sure if the regex will also fail with an <code>a</code> element acting as a new line either. The <code>a</code> element could be a <code>span</code> or <code>label</code>, or any normally inline positioned element, to trick iOS into allowing me to select letters instead of block elements.</p>\n\n<p>Is there anyway to change the code to preserve the new line elements?</p>\n\n<h2>jsFiddle: <a href=\"http://jsfiddle.net/charlescarver/39TZ9/2/\">http://jsfiddle.net/charlescarver/39TZ9/3/</a></h2>\n\n<h3>The desired output should look like this:</h3>\n\n<p>If the text \"Line one\" was highlighted:</p>\n\n<pre><code>&lt;p class=\"text\"&gt;\n    &lt;span class=\"highlight\"&gt;Line one&lt;/span&gt;\n    &lt;a class=\"space\"&gt;&lt;/a&gt;\n    Line two\n    &lt;a class=\"space\"&gt;&lt;/a&gt;\n    Line three\n&lt;/p&gt;\n</code></pre>\n\n<p>If the text \"Line one Line two\" was highlighted:</p>\n\n<pre><code>&lt;p class=\"text\"&gt;\n    &lt;span class=\"highlight\"&gt;Line one\n    &lt;a class=\"space\"&gt;&lt;/a&gt;\n    Line two&lt;/span&gt;\n    &lt;a class=\"space\"&gt;&lt;/a&gt;\n    Line three\n&lt;/p&gt;\n</code></pre>\n\n<p>Of course different parts and individual letters can and will be highlighted as well instead of full lines.</p>\n",
            "last_activity_date": 1365510761,
            "question_id": 15733349,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Insert character at specific point but preserving tags?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You have to pass <code>{validate:true}</code> param to <code>set</code> method e.g.</p>\n\n<p><code>person.set('age', -25, {validate:true});</code></p>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>Im just starting out backboneJs.</p>\n\n<p>I did a simple example using VisualStudio2012.\nI added backbone.</p>\n\n<p>in my main.js</p>\n\n<pre><code>var Person = Backbone.Model.extend({\ndefaults: {\n    name: 'Mr Steel',\n    age: 26,\n    occupation: 'FrontEnd Web Developer'\n},\n\nvalidate: function(attrs) {\n    if (attrs.age &lt; 0) {\n        return 'Age must be a positive number.';\n    }\n},\n\nwork: function() {\n    return this.get('name') + ' is working.';\n}\n});\n</code></pre>\n\n<p>But when I go to browser > console. And type the following in .. validate doesnt even get triggered. </p>\n\n<pre><code>var person = new Person();\nperson.get('age');//26\nperson.set('age', -25);//sets -25\n</code></pre>\n\n<p>And it sets the age to -25. thats weird!! please help.</p>\n",
            "last_activity_date": 1364747407,
            "question_id": 15731639,
            "score": 7,
            "tags": [
                "javascript",
                "validation",
                "backbone.js"
            ],
            "title": "Backbone validate not working"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You're not supposed to use <code>&lt;input type=number&gt;</code> for things that are not numbers (in very mathematical sense\u2014it won't work for phone numbers or zip codes either) and clearing of the value is deliberate.</p>\n\n<p>You can test whether device supports <code>type=number</code> and attach your fallback only if it doesn't:</p>\n\n<pre><code>var input = document.createElement('input');\ninput.setAttribute('type','number');\nif (input.type != 'number') { // JS property won't reflect DOM attribute\n   polyfill_number();\n}\n</code></pre>\n\n<p>Alternatively (especially if your number is a zip code, serial number, etc.) you can use:</p>\n\n<pre><code>&lt;input type=text pattern=\"[0-9]*\"&gt;\n</code></pre>\n\n<p>and this will change the keyboard too.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This is what I was looking for:</p>\n\n<pre><code>$('input[type=number]').keypress(function(e) {\n  if (!String.fromCharCode(e.keyCode).match(/[0-9\\.]/)) {\n    return false;\n  }\n});\n</code></pre>\n\n<p>I understand preventing user input can be annoying and this still allows invalid input such as <code>1.2.3</code> </p>\n\n<p>However in this situation it is exactly what I needed. Hopefully it will be of use to someone else. Thanks to @int32_t for the suggestion.</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p><a href=\"http://jsfiddle.net/pyS9c/\">This jsfiddle demonstrates the following issue.</a></p>\n\n<p>The simplest example is:</p>\n\n<pre><code>&lt;input id=\"number\" type=\"number\" value=\"1\"&gt;\nconsole.log(document.getElementById('number').value);\n</code></pre>\n\n<p>This logs 1 as expected. THIS however:</p>\n\n<pre><code>&lt;input id=\"number\" type=\"number\" value=\"1A\"&gt;\nconsole.log(document.getElementById('number').value);\n</code></pre>\n\n<p>Just logs an empty string '', because of the non-numeric character in the value. Some devices+browsers (e.g. Chrome) allow you to enter non-numeric characters in these inputs.</p>\n\n<p>This is annoying because I want the type=\"number\" input for devices that support it (e.g. iPhone, iPad number keyboard). However I want to use javascript to stop dirty input from being entered - which requires fetching the value on keyup - then regex replacing the non-numeric chars.</p>\n\n<p>It appears jQuery's .val() method gives the same result.</p>\n",
            "last_activity_date": 1364340106,
            "question_id": 15627341,
            "score": 7,
            "tags": [
                "javascript",
                "html5",
                "textinput"
            ],
            "title": "Get value of &lt;input type=&quot;number&quot;&gt; with JS when it contains non-numeric characters"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>window.addEventListener(\"message\", function(e) {if(e.data == 'jrc') console.log('loaded')}, false);\n</code></pre>\n\n<p>That should work in IE 8+ and all other browsers: <a href=\"http://caniuse.com/#feat=x-doc-messaging\" rel=\"nofollow\">http://caniuse.com/#feat=x-doc-messaging</a></p>\n\n<p>If that doesn't work in IE 8 (can't test in on my Mac right now), let me know. I believe I got some reasonably good understanding of the rs.js in the last hour. ;)</p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I'm working on a browser extension (think <a href=\"http://www.seoquake.com/\">SEOQuake</a>) - I need to display some data about the search results that are shown.</p>\n\n<p>Issue: If anything is added to the Google Instant results page while it's still in the process of being loaded, it'll overwrite any additions. I caught myself writing some really wonky setInterval business (waiting until the contents of <code>ol#rso</code> stop changing in size, stuff like that) so I suppose that means I'm not sure how to reliably determine if the page is done loading.</p>\n\n<p>I <em>could</em> just have it wait 1-2 seconds but I really want to start fetching the data as soon as the results are loaded to save maximum amount of time.</p>\n\n<p>Edit: Keep in mind, I can't use DOMElementWhatever because IE8 doesn't support it.</p>\n",
            "last_activity_date": 1365325555,
            "question_id": 15542052,
            "score": 7,
            "tags": [
                "javascript",
                "ajax",
                "browser-extension",
                "google-instant"
            ],
            "title": "How to detect that Google Instant page has loaded completely?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>By default, WCF does not represent <code>Dictionary</code> as JSON objects - it represents them as arrays of key/value pairs instead. So to send that map to the WCF service, you'll need to covert it appropriately (see code below).</p>\n\n<p>Another alternative is to use a custom message formatter, which knows how to populate dictionaries based on JSON objects. For more information on message formatters, check this <a href=\"http://blogs.msdn.com/b/carlosfigueira/archive/2011/05/03/wcf-extensibility-message-formatters.aspx\" rel=\"nofollow\">blog post</a>.</p>\n\n<p>This shows one way of passing that object to your service:</p>\n\n<p>Service.svc:</p>\n\n<pre><code>&lt;%@ ServiceHost Language=\"C#\" Debug=\"true\" Service=\"StackOverflow_15001755.Service\"\n                CodeBehind=\"StackOverflow_15001755.svc.cs\" \n                Factory=\"System.ServiceModel.Activation.WebServiceHostFactory\" %&gt;\n</code></pre>\n\n<p>Service.svc.cs:</p>\n\n<pre><code>using System.Collections.Generic;\nusing System.ServiceModel;\nusing System.ServiceModel.Web;\n\nnamespace StackOverflow_15001755\n{\n    [ServiceContract]\n    public class Service\n    {\n        static Dictionary&lt;string, int&gt; dictionary;\n\n        [WebInvoke(Method = \"POST\", BodyStyle = WebMessageBodyStyle.WrappedRequest, RequestFormat = WebMessageFormat.Json, ResponseFormat = WebMessageFormat.Json)]\n        public void setDictionary(Dictionary&lt;string, int&gt; myDictionary)\n        {\n            dictionary = myDictionary;\n        }\n\n        [WebGet(RequestFormat = WebMessageFormat.Json, ResponseFormat = WebMessageFormat.Json)]\n        public Dictionary&lt;string, int&gt; getDictionary()\n        {\n            return dictionary;\n        }\n    }\n}\n</code></pre>\n\n<p>Test.html (HTML/JS code, using jQuery for the ajax call):</p>\n\n<pre><code>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n    &lt;script type=\"text/javascript\" src=\"scripts/jquery-1.7.2.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" src=\"scripts/json2.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;script type=\"text/javascript\"&gt;\n        function StackOverflow_15001755_Test() {\n            function dictionaryToKVPArray(obj) {\n                var data = [];\n                for (var key in obj) {\n                    data.push({ Key: key, Value: obj[key] });\n                }\n\n                return data;\n            }\n\n            function KVPArrayToDictionary(arr) {\n                var result = {};\n                arr.forEach(function (item) {\n                    result[item.Key] = item.Value;\n                });\n\n                return result;\n            }\n\n            var map = {};\n            map['a'] = 1;\n            map['b'] = 2;\n            map['c'] = 3;\n            var data = dictionaryToKVPArray(map);\n\n            var baseUrl = \"/StackOverflow_15001755.svc\";\n            $.ajax({\n                type: 'POST',\n                url: baseUrl + '/setDictionary',\n                contentType: 'application/json',\n                data: JSON.stringify({ myDictionary: data }),\n                success: function (result) {\n                    $('#result').text('Sent the dictionary');\n                    $.ajax({\n                        type: 'GET',\n                        url: baseUrl + '/getDictionary',\n                        success: function (result) {\n                            var newMap = KVPArrayToDictionary(result);\n                            $('#result2').text(JSON.stringify(newMap));\n                        }\n                    });\n                }\n            });\n        }\n    &lt;/script&gt;\n    &lt;input type=\"button\" value=\"StackOverflow 15001755\" onclick=\"StackOverflow_15001755_Test();\" /&gt;&lt;br /&gt;\n    &lt;div id='result'&gt;&lt;/div&gt;&lt;br /&gt;\n    &lt;div id='result2'&gt;&lt;/div&gt;&lt;br /&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>I managed to get this working by using <code>JSON.stringify(map)</code> to get a serialized version of the map. Then passing it to WCF service as a string rather than a Dictionary and deserializing it myself in the method using the <a href=\"http://json.codeplex.com/\" rel=\"nofollow\">Json.Net framework</a>.</p>\n\n<p><strong>Serialized Map:</strong></p>\n\n<pre><code>{'a':'0','b':'1','c':'2'}\n</code></pre>\n\n<p><strong>WCF Service:</strong></p>\n\n<pre><code>[OperationContract][WebInvoke(Method = \"POST\", BodyStyle = WebMessageBodyStyle.WrappedRequest, RequestFormat = WebMessageFormat.Json, ResponseFormat = WebMessageFormat.Json)]\npublic void doDictionaryStuff(string serializedMap);\n</code></pre>\n\n<p><strong>Deserializing it in the WCF service using the <a href=\"http://json.codeplex.com/\" rel=\"nofollow\">Json.Net framework</a>:</strong></p>\n\n<pre><code>public void doDictionaryStuff(string serializedMap)\n{\n    Dictionary&lt;string, int&gt; map = JsonConvert.DeserializeObject&lt;Dictionary&lt;string,int&gt;&gt;(serializedMap);\n    //do stuff with the dictionary.\n}\n</code></pre>\n\n<p>It's not ideal, but does work.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I would like to pass an associative array to a json wcf service.</p>\n\n<p>So in JavaScript I have something akin to this:</p>\n\n<pre><code>var map = { };\nmap['a'] = 1;\nmap['b'] = 2;\nmap['c'] = 3;\n</code></pre>\n\n<p>And in my wcf service I want to expect a Dictionary:</p>\n\n<pre><code>[OperationContract][WebInvoke(Method = \"POST\", BodyStyle = WebMessageBodyStyle.WrappedRequest, RequestFormat = WebMessageFormat.Json, ResponseFormat = WebMessageFormat.Json)]\npublic void setDictionary(Dictionary&lt;string, int&gt; myDictionary);\n</code></pre>\n\n<p>But it sends the map as an [Object object] rather than serializing it because the 'map' is actually just an object I'm assigning properties to.</p>\n\n<p>Does anyone know how I can serialize it to correctly to get it deserialized as a Dictionary object by the WCF service?</p>\n",
            "last_activity_date": 1361523847,
            "question_id": 15001755,
            "score": 7,
            "tags": [
                "javascript",
                "json",
                "wcf",
                "dictionary",
                "map"
            ],
            "title": "Pass a javascript map to json wcf service"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>I'm struggling with the exact same problem. When I backup the Uint8Array with an ArrayBuffer, <strong>it does work in both Safari and Chrome</strong> (not tested in other browsers yet) but Chrome prints a warning message. Chrome says I have to wrap ArrayBuffer in a DataView before passing it to Blob() constructor.</p>\n\n<pre><code>// write the bytes of the string to an ArrayBuffer\nvar ab = new ArrayBuffer(byteString.length);\nvar ia = new Uint8Array(ab);\nfor (var i = 0; i &lt; byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n}\n\nnew Blob([ab], {type: mimeString});\n</code></pre>\n\n<p><strong>Edit</strong></p>\n\n<p>The exact Chrome deprecation message is: </p>\n\n<blockquote>\n  <p>ArrayBuffer values are deprecated in Blob Constructor. Use\n  ArrayBufferView instead.</p>\n</blockquote>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I try to create a Blob object and pass an Uint8Array to it\u2019s constructor \nIt works fine on chrome and firefox on windows\nIn chrome and safari on ios however the Blod does not contain the data of the Uint8Array but the text : [object Uint8Array] </p>\n\n<p>I need this to upload a canvas to the server.</p>\n\n<p>Is there a workaround?</p>\n",
            "last_activity_date": 1367857762,
            "question_id": 14340989,
            "score": 7,
            "tags": [
                "javascript",
                "ios",
                "google-chrome",
                "blob"
            ],
            "title": "blob does not accept Uint8Array on ios"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>As @bmleite already mentioned in the comments, you probably forgot to load angular.js.</p>\n\n<p>If I create a fiddle with angular directives in it, but don't include angular.js I get the exact same error in the Chrome console: <code>Uncaught ReferenceError: angular is not defined</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I have met a similar situation and i think you should put the include angular line first, before include any other js file</p>\n",
                    "is_accepted": false,
                    "score": 26
                },
                {
                    "body": "<p>Well in the way this is a single page application, the solution used was:</p>\n\n<p>load the content with AJAX, like any other controller, and then call:</p>\n\n<pre><code>angular.bootstrap($('#your_div_loaded_in_ajax'),[\"myApp\",\"other_module\"]);\n</code></pre>\n\n<p>Cheers</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>In case you'd happen to be using rails and the angular-rails gem then the problem is easily corrected by adding this missing line to application.js (or what ever is applicable in your situation):</p>\n\n<pre><code>//= require angular-resource\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I ran into this because I made a copy-and-paste of ngBoilerplate into my project on a Mac without Finder showing hidden files.  So .bower was not copied with the rest of ngBoilerplate.  Thus bower moved resources to bower_components (defult) instead of vendor (as configured) and my app didn't get angular.  Probably a corner case, but it might help someone here.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I think this will happen if you'll use 'async defer' for  (the file that contains the filter) while working with angularjs:</p>\n\n<pre><code>&lt;script src=\"js/filter.js\" type=\"text/javascript\" async defer&gt;&lt;/script&gt;\n</code></pre>\n\n<p>if you do, just remove 'async defer'.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I trying to add a custom filter, but if I use the following code:</p>\n\n<pre><code>angular.module('myApp',[]).filter('startFrom', function() {\n    return function(input, start) {\n        start = +start; //parse to int\n        return input.slice(start);\n    }\n});\n</code></pre>\n\n<p>But if I do so, I get: \"ReferenceError: angular is not defined\" in firebug.</p>\n\n<p>The rest of application is working fine, I am using ng-app in a tag div not in tag html, and <a href=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.0.3/angular.js\">https://ajax.googleapis.com/ajax/libs/angularjs/1.0.3/angular.js</a></p>\n",
            "last_activity_date": 1404290266,
            "question_id": 14260399,
            "score": 7,
            "tags": [
                "javascript",
                "angularjs",
                "singlepage"
            ],
            "title": "AngularJs ReferenceError: angular is not defined"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You should use this instead...</p>\n\n<pre><code>new RegExp(\"\\\\btest[a-z]*\", \"g\");\n</code></pre>\n\n<p>... as <code>\\b</code> will be interpolated into a <em>single</em> (slashless) character when JavaScript parser works through the corresponding string literal. The solution is to escape slash itself.</p>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/HDWBZ/1/\">http://jsfiddle.net/HDWBZ/1/</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I'm trying to convert following expression to \"new Regexp()\" style:</p>\n\n<p><a href=\"http://jsfiddle.net/HDWBZ/\">http://jsfiddle.net/HDWBZ/</a></p>\n\n<pre><code>var Wyrazenie = /\\btest[a-z]*/g;\n</code></pre>\n\n<p>I'm really confused with it and have no idea how to fix it. Below is what I've done but obviously it doesn't work.</p>\n\n<pre><code>var Wyraznie = new RegExp(\"\\btest[a-z]*\",\"g\");\n</code></pre>\n\n<p>Also have a question how would it look if instead of \"test\" I would use variable?</p>\n",
            "last_activity_date": 1355938944,
            "question_id": 13957998,
            "score": 7,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "new Regexp doesn&#39;t work"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>window.location</code> is of type <code>Location</code> while <code>.attr('data-href')</code> returns a string, so you have to assign it to <code>window.location.href</code> which is of string type too. For that replace your following line:</p>\n\n<pre><code>window.location = $link.attr('data-href');\n</code></pre>\n\n<p>for this one:</p>\n\n<pre><code>window.location.href = $link.attr('data-href');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 20
                },
                {
                    "body": "<p>you have missed the href: </p>\n\n<p>Standard, I believe, is to use window.location.href as window.location is technically an object containing: </p>\n\n<pre><code>Properties\nhash \nhost \nhostname\nhref    &lt;--- you need this\npathname (relative to the host)\nport \nprotocol \nsearch \n</code></pre>\n\n<p>try</p>\n\n<pre><code> window.location.href = $link.attr('data-href');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am getting an error with the following typescript code:</p>\n\n<pre><code> ///&lt;reference path='../../../Shared/typescript/jquery.d.ts' /&gt;\n ///&lt;reference path='../../../Shared/typescript/jqueryStatic.d.ts' /&gt;\n\n function accessControls(action: Action) {\n    $('#logoutLink')\n        .click(function () {\n            var $link = $(this);\n            window.location = $link.attr('data-href');\n        });\n\n }\n</code></pre>\n\n<p>I am getting an underline if red error for the following:</p>\n\n<pre><code>$link.attr('data-href'); \n</code></pre>\n\n<p>The message says: </p>\n\n<pre><code>Cannot convert 'string' to 'Location': Type 'String' is missing property 'reload' from type 'Location'\n</code></pre>\n\n<p>Does anyone know what this means?</p>\n",
            "last_activity_date": 1351407513,
            "question_id": 13106950,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "typescript"
            ],
            "title": "How can I set window.location with javascript / typescript. It&#39;s not working for me"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can create, and you can set/modify properties of that object.</p>\n\n<p>Modified code:</p>\n\n<pre><code>var obj = {}; //\nfor (i=0;i&lt;num;i++){\n  obj[i] = new myObject(\"param1\",\"param2\");\n  obj[i].someProperty = value;\n}\n</code></pre>\n\n<p>I recommend you to use array. as</p>\n\n<pre><code> var obj = []; //\n    for (i=0;i&lt;num;i++){\n      obj[i] = new myObject(\"param1\",\"param2\");\n      obj[i].someProperty = value;\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>That's what arrays are for, to hold a collection of something:</p>\n\n<pre><code>var objs = [];\nfor (i=0;i&lt;num;i++){\n  objs[i] = new myObject(\"param1\",\"param2\");\n  objs[i].someProperty = value;\n}\n</code></pre>\n\n<p>Dynamic variables are almost always a bad idea.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>This isn't recommended, but does what you're trying to do (if you're running in a browser and not some other js environment).</p>\n\n<pre><code>for (i = 0; i &lt; num; i++) {\n  window['obj' + i] = new myObject(\"param1\",\"param2\");\n  window['obj' + i].someProperty = value;\n}\nobj0.someProperty;\n</code></pre>\n\n<p>This works because global variables are actually properties of the window object (if you're running in the browser). You can access properties of an object using either dot notation (myObject.prop) or bracket notation (myObject['prop']). By assigning window['obj' + i], you're creating a global variable named 'obj' + i.</p>\n\n<p>The better option is to use an array or parent object to store your objects.</p>\n\n<pre><code>myObjs = {};\nfor (i = 0; i &lt; num; i++) {\n  myObjs['obj' + i] = new myObject(\"param1\",\"param2\");\n  myObjs['obj' + i].someProperty = value;\n}\nmyObjs.obj0.someProperty;\n</code></pre>\n\n<p>Or use an array like lots of other answers suggest.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/4385084/javascript-dynamic-variables\">javascript - dynamic variables</a><br>\n  <a href=\"http://stackoverflow.com/questions/7762502/dynamic-javascript-variable-names\">Dynamic Javascript variable names</a>  </p>\n</blockquote>\n\n\n\n<p>I need to create a number of objects on a page and want to name them sequentially. Is there a way to do this in JavaScript?</p>\n\n<pre><code>for (i=0;i&lt;num;i++){\n  var obj+i = new myObject(\"param1\",\"param2\");\n  obj+i.someProperty = value;\n}\n</code></pre>\n\n<p>This way I can dynamically create a varying number of objects (dependent on the value \"num\") and then set their properties appropriately.</p>\n\n<p>I can do this in PHP, is there a way to do it in JavaScript?</p>\n",
            "last_activity_date": 1349895285,
            "question_id": 12826154,
            "score": 7,
            "tags": [
                "javascript",
                "dynamic-variables"
            ],
            "title": "Can I create dynamic object names in JavaScript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>In Angular models are just a POJOs (plain old javascript objects).</p>\n\n<p>Services are something different, but you'll usually fetch the models with services. It is a good practice to have more services, so you can reuse them throughout your application. Also a big plus for services is, that they can be unit tested. And like everything else in software engineering, it's always better to split your application into little modules which are easier to maintain than a big chucks of code.</p>\n\n<p>You don't need to just mimic your models as service. You can later add some functions to them and keep your domain logic inside those services.</p>\n\n<p>I'm not an Angular specialist, but I hope this can help. </p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I apologize if this question has already been answered elsewhere, but I couldn't find a full, obvious (to me, at least) solution.</p>\n\n<p>I have experience with the idea of a Model in backbone. In my mind, it's similar to a class in any other OOP language - create a \"class\" using Backbone.Model.extend(), and call new on it when you want a new instance of that class. If I have a app namespace, I can store all of my objects there, and do something like App.getAllThisOrThatTypeModel().</p>\n\n<p>Is this a service in angular? Is it an ok \"best practice\" to have a LOT of services (one for each type of model), basically mimicking \"class\" with \"service\"?</p>\n\n<p>I'm just trying to wrap my head around the best way to deal with models as I try to migrate from backbone to angular to experiment - any advice for someone migrating in this direction would be greatly appreciated.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1370618610,
            "question_id": 12762574,
            "score": 7,
            "tags": [
                "javascript",
                "model-view-controller",
                "backbone.js",
                "angularjs"
            ],
            "title": "backbone-style models in angularjs?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Register to these events:</p>\n\n<pre><code>$('textarea').on('paste cut keydown', function(){...});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Try this function. The <code>value</code> argument should be your textarea value. </p>\n\n<pre><code>jQuery('textarea').val();\n\n\nfunction wordcount(value)\n{\n    value = value.replace(/\\s+/g,\" \");\n    var andchr = value.split(\" &amp; \").length - 1;\n    var char_count = value.length;\n    var fullStr = value + \" \";                      \n\n    //word count for regional language\n    v = value.split(' ');\n    var word_count1 = v.length;                         \n    var cheArr = Array('@','.','\"',\"'\",'_','-','+','=',';','&amp;','*','\\(','\\)','{','}','[','}','|','\\\\','\\,','/');                            \n    for(i=0; i&lt;=cheArr.length; i++)\n    {\n        word_count1 = word_count1 + value.split(cheArr[i]).length - 1;\n    } \n\n    //word count for all languages\n    var initial_whitespace_rExp = /^[^A-Za-z0-9]+/gi;\n    var left_trimmedStr = fullStr.replace(initial_whitespace_rExp, \"\");                     \n    var non_alphanumerics_rExp = rExp = /[^A-Za-z0-9]+/gi;\n\n    var cleanedStr = left_trimmedStr.replace(non_alphanumerics_rExp, \" \");                      \n    var splitString = cleanedStr.split(\" \");                        \n    var word_count = (splitString.length - 1) + andchr;                          \n    if(word_count1 &gt; word_count)\n    {\n        word_count = word_count1;\n    }                       \n    if(value == '' || value == null || typeof(value) == 'undefined'){\n        word_count = 0;\n    }\n\n    alert(word_count);\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(\"textarea\").keyup(function(){\n         var obj = $(this);\n         var maxLen = 150;\n         var val = obj.val();\n         var chars = val.length;\n         if(chars &gt; maxLen){\n              obj.val(val.substring(0,maxLen));\n         }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>/**\n * jQuery.textareaCounter\n * Version 1.0\n * Copyright (c) 2011 c.bavota - http://bavotasan.com\n * Dual licensed under MIT and GPL.\n * Date: 10/20/2011\n**/\n(function($){\n    $.fn.textareaCounter = function(options) {\n        // setting the defaults\n        // $(\"textarea\").textareaCounter({ limit: 100 });\n        var defaults = {\n            limit: 100\n        };  \n        var options = $.extend(defaults, options);\n\n        // and the plugin begins\n        return this.each(function() {\n            var obj, text, wordcount, limited;\n\n            obj = $(this);\n            obj.after('&lt;span style=\"font-size: 11px; clear: both; margin-top: 3px; display: block;\" id=\"counter-text\"&gt;Max. '+options.limit+' words&lt;/span&gt;');\n\n            obj.keyup(function() {\n                text = obj.val();\n                if(text === \"\") {\n                    wordcount = 0;\n                } else {\n                    wordcount = $.trim(text).split(\" \").length;\n                }\n                if(wordcount &gt; options.limit) {\n                    $(\"#counter-text\").html('&lt;span style=\"color: #DD0000;\"&gt;0 words left&lt;/span&gt;');\n                    limited = $.trim(text).split(\" \", options.limit);\n                    limited = limited.join(\" \");\n                    $(this).val(limited);\n                } else {\n                    $(\"#counter-text\").html((options.limit - wordcount)+' words left');\n                } \n            });\n        });\n    };\n})(jQuery);\n</code></pre>\n\n<p>Load that up and then you can use the following to make it work:</p>\n\n<pre><code>$(\"textarea\").textareaCounter({ limit: 100 });\n</code></pre>\n\n<p><a href=\"http://bavotasan.com/2011/simple-textarea-word-counter-jquery-plugin/\">http://bavotasan.com/2011/simple-textarea-word-counter-jquery-plugin/</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Check <a href=\"http://stackoverflow.com/questions/7422192/jquery-count-words-in-real-time\">jQuery: Count words in real time</a>\nand this example: <a href=\"http://jsfiddle.net/gilly3/YJVPZ/1/\" rel=\"nofollow\">http://jsfiddle.net/gilly3/YJVPZ/1/</a></p>\n\n<p>Then, if you want to cut the extra words... you could do something like:</p>\n\n<pre><code>var maxWords = 10;\nif(finalCount &gt; maxWords){\n    $(\"#a\").val(a.value.slice(0,-2)); // the -2 is to remove the extra space at the end\n};\n</code></pre>\n\n<p>Here is a working example <a href=\"http://jsfiddle.net/YJVPZ/80/\" rel=\"nofollow\">http://jsfiddle.net/YJVPZ/80/</a></p>\n\n<p>Hope it helps, Good Luck!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you want to prevent the typing itself (when count > 150)  you can do as following:</p>\n\n<ul>\n<li>Use keypress instead of keyup</li>\n<li>Instead of <code>return alert()</code> first do an <code>alert()</code> and then <code>return false;</code></li>\n</ul>\n\n<p>You may also want to add change (or blur) event handler to handle text pasting.</p>\n\n<pre><code>var maxWords = 150;\njQuery('textarea').keypress(function() {\n    var $this, wordcount;\n    $this = $(this);\n    wordcount = $this.val().split(/\\b[\\s,\\.-:;]*/).length;\n    if (wordcount &gt; maxWords) {\n        jQuery(\".word_count span\").text(\"\" + maxWords);\n        alert(\"You've reached the maximum allowed words.\");\n        return false;\n    } else {\n        return jQuery(\".word_count span\").text(wordcount);\n    }\n});\n\njQuery('textarea').change(function() {\n    var words = $(this).val().split(/\\b[\\s,\\.-:;]*/);\n    if (words.length &gt; maxWords) {\n        words.splice(maxWords);\n        $(this).val(words.join(\"\"));\n        alert(\"You've reached the maximum allowed words. Extra words removed.\");\n    }\n});\u200b\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/qPvch/\" rel=\"nofollow\">Fiddle here</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I have the following bind on keyup which alerts if they go over 150 characters, but you can just press okay and keep typing and then just keep pressing okay.</p>\n\n<p>I want to crop them at 150 words (not characters) and if they type over it, remove the extras. But I can't seem to figure out how to do it, I can figure out characters. But not words.</p>\n\n<pre><code>jQuery('textarea').keyup(function() {\n      var $this, wordcount;\n      $this = $(this);\n      wordcount = $this.val().split(/\\b[\\s,\\.-:;]*/).length;\n      if (wordcount &gt; 150) {\n        jQuery(\".word_count span\").text(\"150\");\n        return alert(\"You've reached the maximum allowed words.\");\n      } else {\n        return jQuery(\".word_count span\").text(wordcount);\n      }\n    });\n</code></pre>\n",
            "last_activity_date": 1367076246,
            "question_id": 12676453,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "textarea"
            ],
            "title": "Limit length of textarea in Words using Javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Javascript has intercept-able property accessors:</p>\n\n<p><a href=\"http://ejohn.org/blog/javascript-getters-and-setters/\">http://ejohn.org/blog/javascript-getters-and-setters/</a></p>\n\n<p>IMHO this is a far better solution to enforce the Uniform Access Principle than Java's more strict explicit getters, but that is also part of the simplicity and inflexibility of that language (Groovy for instance allows for similar interception).  </p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>I think the answer is that emulating classes in javascript is not the common practice, because the language is actually prototypal.</p>\n\n<p>Although it is possible to create class like structures (as in your example), they are not really like java classes, and as a programmer, you end up fighting with the nuances.</p>\n\n<p>If however, you embrace the prototypal nature of javascript, you are rewarded by a different, yet cohesive, and simple structure for the language.</p>\n\n<p>It is not necessary to use getters and setters with prototypal structure, as you can simply set an object by, well, setting it to a value, and get it by, calling it as a value.</p>\n\n<p>Javascript does not force you to write structured code, and does not stop you from doing so. I think the culture that has grown up around javascript has developed a good coding style, that is perfectly valid, and different from any other language I use.</p>\n\n<p>I know this answer is not definitive, and conclusive, but hopefully there are some ideas in there that help you to find the anser you are looking for.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I know my thoughts on the subject.</p>\n\n<p>Getters and setters are evil.</p>\n\n<p>Wait! Really! Bear with me a moment and let me explain.</p>\n\n<p>Just using a method to get and set a value is .. well .. kinda pointless.  It doesn't protect, not really, and what you put in is what you get out.</p>\n\n<p>On the other hand, I'm rather fond of methods that put information in, then get information back out.  BUT here is the magic part!  It isn't the same information.  Not directly.</p>\n\n<pre><code>function Person(name) {\n  this.getFullName = function() {return this.firstName + \" \" + this.lastName;};\n  this.setBirthday = function(date) { this.birthday = date; };\n\n  this.getAge = function() { /* Return age based on the birthday */ };\n  this.isOfLegalDrinkingAge function() { /* do your math here too */ };\n}\n</code></pre>\n\n<p>But most of the time I'm just shoving static data in and getting static data out.  What is the point of hiding it behind getters and setters?</p>\n\n<p>As a secondary reason, dealing with the DOM and most host objects, you set properties.  You don't play with getters and setters.  Not using them fits the rest of the 'flavor' of what JS coders do.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I apologize if I dont understand the question correctly, but self executing functions are one way to make members public/private</p>\n\n<pre><code>var Person = function(){\n  var _name = \"Roger\",\n      self = { getName : function (){ return _name; }};\n  return self;\n}()\n</code></pre>\n\n<p>You can then access Person.getName() from anywhere , but not set _name.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In Javascript, it seems like using property accessors is not all that common (unlike in other OO languages such as Java for example).</p>\n\n<p>If I have a <code>Person</code> object with a name, defined as</p>\n\n<pre><code>function Person(name) {\n   this.name = name;\n}\n</code></pre>\n\n<p>A person's name is not going to change, but I do want to be able to access it when needed, so I could do something like:</p>\n\n<pre><code>function Person(name) {\n   var name = name;\n   this.getName = function() {\n      return name;\n   }\n}\n</code></pre>\n\n<p>Even in a dynamic language, I think the principles of using getters and setters apply the same way they do to statically typed OO languages (e.g. encapsulation, adding validation, restricting access, etc)</p>\n\n<p>This question may get closed as subjective, but I'm curious as to why this behavior doesn't appear more often (e.g. Java developers would go crazy if everything was public).</p>\n\n<p>Is there a \"standard\" way to do this in javascript? I've seen <code>Object.defineProperty</code>, but not all browsers support that.</p>\n",
            "last_activity_date": 1373684851,
            "question_id": 12325791,
            "score": 7,
            "tags": [
                "javascript",
                "accessor"
            ],
            "title": "javascript property accessors"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If all you need is extend, then it's pretty simple to write that in a couple of lines. If you want recursive extension, it's tricky to do that completely generically if you want have circular structures, objects with complex prototype chains, etc. If it's just some nested plain objects, then this should work:</p>\n\n<pre><code>function extend (target, source) {\n  target = target || {};\n  for (var prop in source) {\n    if (typeof source[prop] === 'object') {\n      target[prop] = extend(target[prop], source[prop]);\n    } else {\n      target[prop] = source[prop];\n    }\n  }\n  return target;\n}\n</code></pre>\n\n<p>If you're looking for a lightweight library that does this (minus the recursion, for the reasons listed above) and other similar functions not provided by javascript, look at <a href=\"http://underscorejs.org\">Underscore</a> which is available via NPM for node too.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>One more example of simple standalone function for future pilgrims across this question with protection from merge of the properties of different types:</p>\n\n<pre><code>function extend(obj) {\n    Array.prototype.slice.call(arguments, 1).forEach(function(source) {\n        if (source) {\n            for (var prop in source) {\n                if (source[prop].constructor === Object) {\n                    if (!obj[prop] || obj[prop].constructor === Object) {\n                        obj[prop] = obj[prop] || {};\n                        extend(obj[prop], source[prop]);\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                } else {\n                    obj[prop] = source[prop];\n                }\n            }\n        }\n    });\n    return obj;\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>extend({ name:'Maria', address:{ city:'Moscow', street:'Lenina str, 52' } }, { name:'Marianna', address:{ zip:1200003 }})\n=&gt; { name:'Marianna', address:{ city:'Moscow', street:'Lenina str, 52', zip:1200003 } }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This solution creates a <strong>new object</strong> and is able to handle <strong>multiple objects</strong>.</p>\n\n<p>Furthermore, it is <strong>recursive</strong> and you can chose weather you <strong>want</strong> to <strong>overwrite Values</strong> and <strong>Objects</strong>.</p>\n\n<pre><code>    function extendObjects() {\n\n        var newObject        = {};\n        var overwriteValues  = false;\n        var overwriteObjects = false;\n\n        for ( var indexArgument = 0; indexArgument &lt; arguments.length; indexArgument++ ) {\n\n            if ( typeof arguments[indexArgument] !== 'object' ) {\n\n                if ( arguments[indexArgument] == 'overwriteValues_True' ) {\n\n                    overwriteValues = true;            \n                } else if ( arguments[indexArgument] == 'overwriteValues_False' ) {\n\n                    overwriteValues = false;                             \n                } else if ( arguments[indexArgument] == 'overwriteObjects_True' ) {\n\n                    overwriteObjects = true;     \n                } else if ( arguments[indexArgument] == 'overwriteObjects_False' ) {\n\n                    overwriteObjects = false; \n                }\n\n            } else {\n\n                extendObject( arguments[indexArgument], newObject, overwriteValues, overwriteObjects );\n            }\n\n        }\n\n        function extendObject( object, extendedObject, overwriteValues, overwriteObjects ) {\n\n            for ( var indexObject in object ) {\n\n                if ( typeof object[indexObject] === 'object' ) {\n\n                    if ( typeof extendedObject[indexObject] === \"undefined\" || overwriteObjects ) {\n                        extendedObject[indexObject] = object[indexObject];\n                    }\n\n                    extendObject( object[indexObject], extendedObject[indexObject], overwriteValues, overwriteObjects );\n\n                } else {\n\n                    if ( typeof extendedObject[indexObject] === \"undefined\" || overwriteValues ) {\n                        extendedObject[indexObject] = object[indexObject];\n                    }\n\n                }\n\n            }     \n\n            return extendedObject;\n\n        }\n\n        return newObject;\n    }\n\n    var object1           = { a : 1, b : 2, testArr : [888, { innArr : 1 }, 777 ], data : { e : 12, c : { lol : 1 }, rofl : { O : 3 } } };\n    var object2           = { a : 6, b : 9, data : { a : 17, b : 18, e : 13, rofl : { O : 99, copter : { mao : 1 } } }, hexa : { tetra : 66 } };\n    var object3           = { f : 13, g : 666, a : 333, data : { c : { xD : 45 } }, testArr : [888, { innArr : 3 }, 555 ]  };\n\n    var newExtendedObject = extendObjects( 'overwriteValues_False', 'overwriteObjects_False', object1, object2, object3 );\n</code></pre>\n\n<p><strong>Contents of newExtendedObject:</strong></p>\n\n<pre><code>{\"a\":1,\"b\":2,\"testArr\":[888,{\"innArr\":1},777],\"data\":{\"e\":12,\"c\":{\"lol\":1,\"xD\":45},\"rofl\":{\"O\":3,\"copter\":{\"mao\":1}},\"a\":17,\"b\":18},\"hexa\":{\"tetra\":66},\"f\":13,\"g\":666}\n</code></pre>\n\n<p>Fiddle: <a href=\"http://jsfiddle.net/o0gb2umb/\" rel=\"nofollow\">http://jsfiddle.net/o0gb2umb/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking for a way to merge two configuration objects together, something like:</p>\n\n<pre><code>var developmentConfig = {\n  url: \"localhost\",\n  port: 80\n};\n\nvar productionConfig = {\n  url: \"example.com\"\n};\n\nvar config = isDevelopment ? developmentConfig : jQuery.extend(developmentConfig, productionConfig);\n</code></pre>\n\n<p>However, this is a Node.js app and I don't want to include jQuery and am looking for something similar but standalone. I know I could write something similar myself but I'd rather use something tested and proven (there are edge cases, complications when the config objects use richer hierarchies etc.)</p>\n\n<p><strong>Edit</strong>: Simple iteration is not enough because that does not handle hierarchical structures. Neither does Underscore's <code>extend</code>.</p>\n",
            "last_activity_date": 1413236122,
            "question_id": 12317003,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "Something like jQuery.extend() but standalone?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Because <code>style.top</code> is a string with units on the end of it like <code>\"300px\"</code> you can only do math with it when you convert just the numeric part to an actual number.</p>\n\n<p>Assuming you have a positioned element (so setting the <code>top</code> value will do something) and you already have a <code>top</code> style set directly on the element and not set via CSS (so getting <code>obj.style.top</code> will actually get you something), you can do it by parsing the number out of the style value like this:</p>\n\n<pre><code>var obj = document.getElementById(\"something\");\nvar topVal = parseInt(obj.style.top, 10);\nobj.style.top = (topVal + 300) + \"px\";\n</code></pre>\n\n<p>Working example: <a href=\"http://jsfiddle.net/jfriend00/pt46X/\" rel=\"nofollow\">http://jsfiddle.net/jfriend00/pt46X/</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>That won't work fine because, for example, if <code>top</code> had a value of <code>200px</code>, it would become <code>\"200px300px\"</code>. Try this:</p>\n\n<pre><code>var elem = document.getElementById(\"something\");\nelem.style.top = parseInt(elem.style.top, 10) + 300 + \"px\"\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/u7uzf/\" rel=\"nofollow\">Demo WEEEE!!!!</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am trying to increment the position of an element by, say, <em>x</em> pixels. Here is what I've tried so far: </p>\n\n<pre><code>var top = document.getElementById(\"something\").style.top;\ntop = top + \"300px\"\n</code></pre>\n\n<p>I know that this is not going to work, but I was wondering if it was possible to increment a position value like this.</p>\n",
            "last_activity_date": 1345835894,
            "question_id": 12115258,
            "score": 7,
            "tags": [
                "javascript",
                "css"
            ],
            "title": "Using JavaScript to increment top/left/bottom/right values"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>jQuery does have a <code>.sort</code> method, it just isn't officially documented because it does not follow the usual format of jQuery methods.</p>\n\n<p>The only methods that are supported are the ones listed in the <a href=\"http://api.jquery.com\" rel=\"nofollow\">api</a>.</p>\n\n<p><code>.sort</code> is implemented as:</p>\n\n<pre><code>$.fn.sort = [].sort;\n</code></pre>\n\n<p>You can add your own additional array methods as needed in the same way.</p>\n\n<pre><code>$.fn.reverse = [].reverse;\n</code></pre>\n\n<p>If <code>.sort</code> isn't implemented in your version of jQuery, implement it yourself.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQuery objects currently support 3 array methods:</p>\n\n<pre><code>var methods = 'pop push reverse shift sort splice unshift concat join slice toString indexOf lastIndexOf filter forEach every map some reduce reduceRight'.split(' ')\nvar implemented = $.grep(methods, function(m) {\n    return $.prototype[m] == Array.prototype[m];\n});\nconsole.log(implemented); // =&gt; [\"push\", \"sort\", \"splice\"]\n</code></pre>\n\n<p>They also have <code>slice</code>, but it's not the same <code>slice</code> as arrays have:</p>\n\n<pre><code>$.prototype.slice === Array.prototype.slice // =&gt; false\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I was reading Learning jQuery 1.3 <code>jonathan chaffer and karl swedberg</code> and while sorting table , they used <code>.get()</code> before calling <code>.sort()</code>, and said <strong>we need to transform jqurey objects into array of DOM nodes. Even though jquery objects act like arrays in many respects , they don't have any of the native array methods avilable, such as .sort().</strong></p>\n\n<pre><code>$(\"#sort\").click(function() {\n        var posts = $(\"#posts_div .post\");\n        posts.sort(function(a, b) {\n           return ($(a).text()) &gt; ($(b).text());\n        });       \n        $.each(posts, function(index, post) { $(\"#posts_div\").append(post); });\n});\u200b\n</code></pre>\n\n<p>So I tried to do it without using <code>.get()</code>, but <strong>surprise it worked even without <code>.get()</code> with  latest jquery, but didn't work with 1.3</strong></p>\n\n<p>So made some fiddles to make it clear</p>\n\n<p><a href=\"http://jsfiddle.net/ztsDC/7/\" rel=\"nofollow\">*<em>Not working without <code>.get()</code> jquery 1.2.6 *</em></a></p>\n\n<p><a href=\"http://jsfiddle.net/ztsDC/8/\" rel=\"nofollow\">Working with <code>.get()</code> jquery 1.2.6</a></p>\n\n<p><a href=\"http://jsfiddle.net/ztsDC/5/\" rel=\"nofollow\">Working without <code>.get()</code> jquery 1.7.2 </a></p>\n\n<p><a href=\"http://jsfiddle.net/ztsDC/6/\" rel=\"nofollow\">Working with <code>.get()</code> jquery 1.7.2 </a></p>\n\n<p>So obviously earlier jquery objects didn't used to have <code>.sort()</code> function same as javascript arrays? But now they have..</p>\n\n<p><strong>So my question is what are the functions the jquery objects not support yet, so we can keep in mind to convert to javascript arrays, before use??</strong></p>\n",
            "last_activity_date": 1340398074,
            "question_id": 11158102,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "javascript-objects"
            ],
            "title": "javascript methods that can not be called from jquery objects?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No, you don't have to use the <code>$</code> sign. It's just an aesthetic choice usually.</p>\n\n<p>In your example code above, the function's argument is named form <code>function (link, form)</code>. Inside the function, the new variable being declared has a <code>$</code> to it so as to distinguish it from the argument variable <code>form</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>That is not neccessary. The dollar sign before a variable is most of the times used as an indication it is a JQuery variable. JQuery uses the dollar sign as a shortcut. Using it in a variable name has no extra meaning other than the aesthetic meaning for the developer that it is a JQuery object.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It has become best practice to use the $ sign to help you distinguish between Javascript variables representing regular DOM elements (and every other data type) and variables that hold a reference to a jQuery object. For the latter you use the $ sign.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><code>$</code> and <code>jQuery</code> are basically the jQuery instance.</p>\n\n<p>It's good understand that <code>$( &lt; place something here &gt;)</code> is a jQuery function call and <code>$your_variable_name</code> is just a variable with a dollar.</p>\n\n<p>Some people use <code>$</code> in their own variables to indicate that it is a jQuery object. With this naming convention your source code would like this.</p>\n\n<pre><code>var formSubmitHandler = function (link, form) {\n    var $form = $(form);\n    var val = $form.valid();\n    var action = $form.data('action');\n    var entity = $form.data('entity');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I have the following code:</p>\n\n<pre><code>var formSubmitHandler = function (link, form) {\n\n    //e.preventDefault();\n    var $form = form;\n    var val = $form.valid();\n    var action = $(form).data('action');\n    var entity = $(form).data('entity');\n</code></pre>\n\n<p>Do I need the line \"var $form = form\"?  Can I just later on do \"var val = form.valid(); ?</p>\n\n<p>It's not my code so I am wondering why the developer added the $ before the form and assigned it?</p>\n\n<p><strong>Update:</strong></p>\n\n<p>Thanks for all your replies. If as has been said it's just to indicate that it's a jQuery variable then could I just remove that line by changing the function parameters to (link, $form) ?</p>\n",
            "last_activity_date": 1336111871,
            "question_id": 10443463,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Do I need to put a dollar before variable names with javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Any references to the global <code>console</code> object will only work if the IE Developer Tools are open. If the developer tools are closed, the global <code>console</code> object is undefined.</p>\n\n<p>For example, the following code will only run if the developer tools are open. If they're closed, they'll throw an error about console being undefined:</p>\n\n<pre><code>console.log(\"test\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you have any console prints in your code, these would throw exceptions (hence breaking the javascript after it) if the page was loaded when the developer tools were closed.</p>\n\n<p>to fix this, wrap your prints in an if statement:</p>\n\n<pre><code>if (console) {\n   console.log('...');\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>Im using Google Maps Javascript API V3, and recently the icons on my map aren't showing up in IE9.</p>\n\n<p>To get to the bottom of it, <strong>I turned on IE's developer tools. When I refreshed the map, the icons appeared!</strong> However, <em>when I close out of IE and start anew, the icons aren't there</em>. Yet again, if I turn on the developer tools and refresh, the icons appear.</p>\n\n<p>My question is the title of this topic, what is enabled when accessing IE's developer tools, which is allowing my icons on my Google map to appear??</p>\n",
            "last_activity_date": 1388699919,
            "question_id": 10415519,
            "score": 7,
            "tags": [
                "javascript",
                "google-maps",
                "internet-explorer",
                "ie-developer-tools"
            ],
            "title": "Does IE9 enable &#39;something&#39; when using developer tools?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can try to use the following jQuery code:</p>\n\n<pre><code>$('input[type=text],textarea').bind('copy paste cut drag drop', function (e) {\n   e.preventDefault();\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>You can block some events, but preventing such user behaviour is not possible. User can always copy text from DOM node via browser console.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You maybe could do something like:</p>\n\n<pre><code>var txtArea = document.getElementById(\"YourTextAreaId\");\ntxtArea.oncopy = function() { return false; } \ntxtArea.onpaste = function() { return false; } \ntxtArea.oncut = function() { return false; } \n</code></pre>\n\n<p>But even then, the user can copy the content by other means, as suggested in your question.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Bind the event handlers and prevent the clipboard function like such:</p>\n\n<pre><code>$('textarea').on('copy paste cut drag drop', function (e) {\n   e.preventDefault();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am working on an online typing software. In the typing software, all is going well but I have the problem of dishonest users who might possibly type the text into the textarea, copy it, then reload the page (therefore resetting the timer) and pasting it in straightaway. So I was thinking along the lines of using something like <code>evt.preventDefault();</code> when javascript detects the pressing of the ctrl / cmd button along with the <code>C</code> key. But then I realized that the user could always go up to the menu bar to press <code>Edit -&gt; Copy</code>. So I was wondering, is there a cross-browser method to disable both methods of copying?</p>\n",
            "last_activity_date": 1346315584,
            "question_id": 10070939,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "textarea",
                "clipboard",
                "copy-paste"
            ],
            "title": "Cross-browser method to prevent all methods of text copying from a textarea?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here is how</p>\n\n<p>add <code>widgetVar=\"someVarName\"</code> to your <code>p:selectCheckboxMenu</code></p>\n\n<p>and modify your <code>p:\"ajax</code> by adding <code>oncomplete=\"someVarName.show()\"</code></p>\n\n<p>complete  code :</p>\n\n<pre><code>&lt;p:selectCheckboxMenu widgetVar=\"someVarName\" value=\"#{usersManagmentPage.selectedMovies}\" \n        label=\"#{usersManagmentPage.moviesLabel}\"   id=\"Movies\" &gt;\n    &lt;f:selectItems value=\"#{usersManagmentPage.movies}\" &gt;&lt;/f:selectItems&gt;\n    &lt;p:ajax oncomplete=\"someVarName.show()\" listener=\"#{usersManagmentPage.populateLabel}\" update=\"Movies\" &gt;&lt;/p:ajax&gt;\n&lt;/p:selectCheckboxMenu&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                }
            ],
            "body": "<p>There is one problem occurring when I am trying to dynamically generate the label from the backing bean. The problem is that the dropdown that appears vanishes for each selection but the label is updated properly. Is there a workaround for this?</p>\n\n<pre class=\"lang-xml prettyprint-override\"><code>&lt;p:selectCheckboxMenu value=\"#{formBean.selectedMovies}\" label=\"#{formBean.moviesLabel}\"    id=\"Movies\" &gt;\n    &lt;f:selectItems value=\"#{formBean.movies}\" &gt;&lt;/f:selectItems&gt;\n    &lt;p:ajax update=\"Movies\" listener=\"#{formBean.populateLabel}\"&gt;&lt;/p:ajax&gt;\n&lt;/p:selectCheckboxMenu&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>//Backing bean \npublic void populateLabel() {\n    /* Populating the label with the selected options */\n    moviesLabel = new String(\"\");\n    if (selectedMovies.size() == 0) {\n        moviesLabel = \"Select\";\n    } else {\n        for (int i = 0; i &lt; selectedMovies.size(); i++) {\n            if (moviesLabel.length() == 0) {\n                moviesLabel = selectedMovies.get(i);\n            } else {\n                moviesLabel = moviesLabel + \",\" + selectedMovies.get(i);\n            }\n        }\n    }\n}\n</code></pre>\n",
            "last_activity_date": 1392328028,
            "question_id": 9964759,
            "score": 7,
            "tags": [
                "java",
                "javascript",
                "ajax",
                "jsf-2",
                "primefaces"
            ],
            "title": "How to update the label of p:selectCheckboxMenu without the component being closed after ajax call in primefaces?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It's just three text nodes instead of one. It doesn't make a visible difference does it?</p>\n\n<p>If it's a problem, use the DOM <code>normalize</code> method to combine them:</p>\n\n<pre><code>$(...)[0].normalize();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(function(){\n\n   var newLbl=$(\"p\").clone().find(\"span\").remove().end().html();\n    alert(newLbl);\n\n});\u200b\n</code></pre>\n\n<p>Example : <a href=\"http://jsfiddle.net/7gWdM/6/\" rel=\"nofollow\">http://jsfiddle.net/7gWdM/6/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>There are several ways to do it. Jquery is the most easy way:</p>\n\n<pre><code>//grab and store inner span html\nvar content = $('p span').html;\n//\"Re\"set inner p html\n$('p').html(content);\n</code></pre>\n\n<p>Javascript can do the same using element.replace. (I don't remember the regex to do the replace in one stroke, but this is the easy way)</p>\n\n<pre><code>paragraphElement.replace(\"&lt;span&gt;\", \"\");\nparagraphElement.replace(\"&lt;/span&gt;\", \"\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>jQuery has easier ways:</p>\n\n<pre><code>var spans = $('span');\nspans.contents().unwrap();\n</code></pre>\n\n<p>With different selector methods, it is possible to remove deeply nested spans or just direct children spans of an element.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<pre><code>&lt;p&gt;The weather is sure &lt;span&gt;sunny&lt;/span&gt; today&lt;/p&gt;;\n\n\nvar span=document.getElementsByTagName('span')[0]; // get the span\nvar pa=span.parentNode;\nwhile(span.firstChild) pa.insertBefore(span.firstChild, span);\n\npa.removeChild(span);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>If you're not looking for a jQuery solution, here something that's a little more lightweight and focused on your scenario. </p>\n\n<p>I created a function called <code>getText()</code> and I used it recursively. In short, you can get the child nodes of your <code>p</code> element and retrieve all the text nodes within that <code>p</code> node. </p>\n\n<p>Just about everything in the DOM is a node of some sort. Looking up at the following links I found that text nodes have a numerical <code>nodeType</code> value of 3, and when you identify where your text nodes are, you get their <code>nodeValue</code>and return it to be concatenated to the entire, non-text-node-free value.  </p>\n\n<p><a href=\"https://developer.mozilla.org/en/nodeType\" rel=\"nofollow\">https://developer.mozilla.org/en/nodeType</a></p>\n\n<p><a href=\"https://developer.mozilla.org/En/DOM/Node.nodeValue\" rel=\"nofollow\">https://developer.mozilla.org/En/DOM/Node.nodeValue</a></p>\n\n<pre><code>var para = document.getElementById('p1')  // get your paragraphe \nvar texttext = getText(para);             // pass the paragraph to the function\npara.innerHTML = texttext                 // set the paragraph with the new text\n\nfunction getText(pNode) {\n\n    if (pNode.nodeType == 3) return pNode.nodeValue;\n\n    var pNodes = pNode.childNodes        // get the child nodes of the passed element\n    var nLen = pNodes.length             // count how many there are\n    var text = \"\";\n\n    for (var idx=0; idx &lt; nLen; idx++) {   // loop through the child nodes\n        if (pNodes[idx].nodeType != 3 ) {  // if the child not isn't a text node\n            text += getText(pNodes[idx]);  // pass it to the function again and \n                                           // concatenate it's value to your text string  \n        } else {\n            text += pNodes[idx].nodeValue  // otherwise concatenate the value of the text\n                                           // to the entire text\n        }\n\n    }\n\n    return text\n}\n</code></pre>\n\n<p>I haven't tested this for all scenarios, but it will do for what you're doing at the moment. It's a little more complex than a replace string since you're looking for the text node and not hardcoding to remove specific tags.</p>\n\n<p>Good Luck.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If someone is still looking for that, the complete solution that has worked for me is:</p>\n\n<p>Assuming we have:</p>\n\n<pre><code>&lt;p&gt;hello this is the &lt;span class=\"highlight\"&gt;text to unwrap&lt;/span&gt;&lt;/p&gt;\n</code></pre>\n\n<p>the js is:</p>\n\n<pre><code>// get the parent\nvar parentElem = $(\".highlight\").parent(); \n\n// replacing with the same contents\n$(\".highlight\").replaceWith( \n    function() { \n        return $(this).contents();\n    }\n);\n\n// normalize parent to strip extra text nodes\nparentElem.each(function(element,index){\n    $(this)[0].normalize();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am wondering if it is possible to remove a tag but leave the content in tact? For example, is it possible to remove the SPAN tag but leave SPAN's content there?</p>\n\n<pre><code>&lt;p&gt;The weather is sure &lt;span&gt;sunny&lt;/span&gt; today&lt;/p&gt; //original\n\n&lt;p&gt;The weather is sure sunny today&lt;/p&gt; //turn it into this\n</code></pre>\n\n<p>I have tried using <a href=\"http://stackoverflow.com/questions/1608547/jquery-remove-form-tag-not-content\">this</a> method of using replaceWith(), but it it turned the HTML into</p>\n\n<pre><code>&lt;p&gt;\n  \"The weather is sure \" \n  \"sunny\"\n  \" today\"\n&lt;/p&gt;\n</code></pre>\n\n<p>EDIT : After testing all of your answers, I realized that my code is at fault. The reason why I keep getting three split text nodes is due to the insertion of the SPAN tag. I'll create another question to try to fix my problem.</p>\n",
            "last_activity_date": 1384449450,
            "question_id": 9848465,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "JS - Remove a tag without deleting content"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I'm pretty sure that it's a font redraw/rendering glitch. I've seen it in Java. It probably has little to do with your JS and CSS (fortunately and unfortunately).</p>\n\n<p>The trick is to force it to redraw where the streak is being made. Fortunately, that's easily fixed in this scenario: just add <code>padding-right:1px;</code> to the <code>#b</code> element.</p>\n\n<hr>\n\n<p>Edit: You may want to consider submitting this bug to Google/Apple (as the problem occurs in both Chrome and Safari).</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>Interestingly, the lighter the BG color, the lighter the erroneous blue line. <a href=\"http://www.usabilitypost.com/2010/08/26/font-smoothing/\">Font-smoothing</a> did not fix it.</p>\n\n<p>1px <code>padding-right</code> fixes it (I added -1px <code>margin-right</code> to compensate).</p>\n\n<p><a href=\"http://jsfiddle.net/MqQG3/1/\">http://jsfiddle.net/MqQG3/1/</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>I had a similar problem and solved it using Math.floor() to integerise my width, height and background-size properties...</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have the following HTML:</p>\n\n<pre><code>&lt;div id=\"a\"&gt;&lt;div id=\"b\"&gt;aga ad gdas ga gs ds da dgs sd ds dg gdgsdgwa&lt;/div&gt;&lt;/div&gt;\n</code></pre>\n\n<p>And CSS:</p>\n\n<pre><code>#a, #b {\n    position: absolute; \n    height: 10px;\n    font-size: 10px;   \n    white-space:nowrap;\n    display: block;\n}\n#a {\n    width: 200px;   \n    overflow: hidden;\n}\n</code></pre>\n\n<p>And Javascript:</p>\n\n<pre><code>var x = 0;\n\nsetInterval(function() {\n    if ($('#b').position().left &lt; (-$('#b').width())) {\n        x = 305;\n    }\n    $('#b').css('left', (x--) + 'px')\n}, 50);\n</code></pre>\n\n<p>Which runs fine in Firefox and Internet Explorer, however on Google Chrome 17 it shows a blue line at the end of the sentence. <a href=\"http://jsfiddle.net/ujr8V/1/\" rel=\"nofollow\">See live jsfiddle demo</a>.</p>\n\n<p><img src=\"http://i.stack.imgur.com/O6tbF.png\" alt=\"Blue line on Google Chrome\"></p>\n\n<p>How can I fix it?</p>\n",
            "last_activity_date": 1387187085,
            "question_id": 9674267,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "google-chrome",
                "animation"
            ],
            "title": "Fix blue line on Google Chrome"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Figured it out! For anyone curious, make sure you link the <code>bootstrap.css</code> before <code>bootstrap-responsive.css</code></p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>Okay I'm just trying to do a basic navbar like they have over at the main bootstrap site. The problem is it's not working for some reason. I have the code pretty much exactly like they do. When I resize the window, the navigation goes away, but the icon in the top right with the three bars doesn't show up. So essentially the navigation just gets hidden. Any thoughts on this?</p>\n",
            "last_activity_date": 1358449079,
            "question_id": 9624918,
            "score": 7,
            "tags": [
                "javascript",
                "css",
                "twitter-bootstrap"
            ],
            "title": "nav-collapse not working [Twitter Bootstrap]"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you are targeting tablets and only tablets then this shouldn't be a problem. Just treat JQM as a Jquery plugin and JQuery UI as another plugin.</p>\n\n<p>Its possible you'll run into some UI errors, but it can be fixed. We've worked on an Enterprise Application for one of our clients using <em>JQM and Jquery UI (for the datagrid and a few goodies) and High-charts</em>. The target platform was iPad.</p>\n\n<p>EDIT: Its not an easy process, but you \"can\" make it work.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The current version of jQuery UI 1.10.4 and jQuery Mobile 1.4.2 do not play well together. Styles in Mobile are ruined as soon as you include jQuery UI into your page.</p>\n\n<p>However, if you need only particular functionality from jQuery UI, as in my case I only need Draggable/Droppable/Sortable interactions, you can create custom jQuery UI download at <a href=\"https://jqueryui.com/download/\" rel=\"nofollow\">https://jqueryui.com/download/</a> and include interactions only. Then you can simply delete everything except js/jquery-ui-1.10.4.custom.min.js file and all works well together again.</p>\n\n<p>I expect you'll run into issues using jQuery UI widgets even using this approach. But, it makes sense to use jQuery Mobile stuff only.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>We're thinking to combine JQuery UI and Mobile. Does somebody has some experience with this ?</p>\n\n<p>Past experience is proving  tricky <a href=\"http://forum.jquery.com/topic/mixing-jquery-mobile-with-jquery-ui-widgets-don-t\">jquery forum</a>, but it's a bit old. </p>\n\n<p>Any sharing of experience and ideas is welcomed.</p>\n\n<p>Some experience using the JQuery Mobile virtual events ?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1395138930,
            "question_id": 9139316,
            "score": 7,
            "tags": [
                "javascript",
                "jquery-ui",
                "jquery-mobile"
            ],
            "title": "Mixing JQuery Mobile &amp; JQuery UI"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>IE is having some known issues with  getElementById.This post may help .</p>\n\n<ol>\n<li><p><a href=\"http://webbugtrack.blogspot.com/2007/08/bug-152-getelementbyid-returns.html\" rel=\"nofollow\">http://webbugtrack.blogspot.com/2007/08/bug-152-getelementbyid-returns.html</a></p></li>\n<li><p><a href=\"http://www.impressivewebs.com/avoiding-problems-with-javascript-getelementbyid-method-in-internet-explorer-7/\" rel=\"nofollow\">http://www.impressivewebs.com/avoiding-problems-with-javascript-getelementbyid-method-in-internet-explorer-7/</a></p></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Without using function it can't work</p>\n\n<pre><code> window.onload = function() {\n   var popUp= document.getElementById('projectInfo');\n   popUp.style.left=(tempX-310)+'px';\n   popUp.style.top=(tempY-110)+'px';\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In previous versions of IE (and apparently Chrome and Firefox), getElementById would check for an object with the given id and if it didn't find it, it would take an element with that name.</p>\n\n<p>IE9 doesn't do this, so you need to make sure you have an element with id = projectInfo, not just name=projectInfo.  We just discovered this throughout one of our applications.  Not great.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm working on a popup and i'm having some hard time with Internet Explorer 9. This is the piece of code that gives me trouble:</p>\n\n<pre><code>var popUp= document.getElementById('projectInfo');\npopUp.style.left=(tempX-310)+'px';\npopUp.style.top=(tempY-110)+'px';\n</code></pre>\n\n<p>In IE9 (haven't tested in prior versions), popup is null. In adition, i've tried including my .js file just before the body closing tag and wrapping my function in a \"document.ready()\" function but none of this worked. The same code though works perfectly in Opera, Chrome and Firefox. \nDoes anyone know what's going on?</p>\n\n<p>Note: The function is called in the body's onLoad atribute of my html.</p>\n",
            "last_activity_date": 1349990609,
            "question_id": 8981337,
            "score": 7,
            "tags": [
                "javascript",
                "internet-explorer",
                "getelementbyid"
            ],
            "title": "document.getElementById() returns null on IE9"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You have your original element working well enough but I see that your commented out code breaks the functionality.</p>\n\n<p>Have a look at your droppable code:</p>\n\n<pre><code>accept: \"#topSquareList li\",\n</code></pre>\n\n<p>Your scaling function has made a clone which is not a part of #topSquareList. I suspect this is why.</p>\n\n<p>When you use clone(), this clone is not a child of #topSquareList (only the original is) which is why your selector does not match it in your droppable code. You need to sort out what you want to drop and make an appropriate selector.</p>\n\n<p><strong>Update:</strong></p>\n\n<p>After some fiddling around, I came up with this: <a href=\"http://jsfiddle.net/UXLAE/27/\" rel=\"nofollow\">http://jsfiddle.net/UXLAE/27/</a></p>\n\n<p>Your scale code is now working in conjunction with dragging/dropping/sorting. You should compare what I made to your original code to figure out why it wasn't working - there were more than a few reasons why. Does it help?</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>If you can use CSS transformations, then simply adding the following rule will accomplish the scaling without any JavaScript and therefore zero impact on the jQueryUI dragging, dropping or sorting.</p>\n\n<pre><code>.square:hover {\n    -webkit-transform:scale(1.2);\n    -ms-transform:scale(1.2);\n    -o-transform:scale(1.2);\n    -moz-transform:scale(1.2);\n    transform:scale(1.2);\n}\n</code></pre>\n\n<p>Native browser support for <a href=\"http://www.w3.org/TR/css3-2d-transforms/#transform-property\" rel=\"nofollow\"><code>transform</code></a> is not <a href=\"http://caniuse.com/#search=transform\" rel=\"nofollow\">complete</a>, but the major modern browsers are fully supported. There is a  <a href=\"http://www.webresourcesdepot.com/cross-browser-css-transforms-csssandpaper/\" rel=\"nofollow\">workaround</a> for IE &lt; v9 if you need to support those browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>i am trying to combine my draggable sortable stuff with some scale code that works well for me. i just failed to find a good solution yet.</p>\n\n<p>take a look at that:\n<a href=\"http://jsfiddle.net/UXLAE/7/\">http://jsfiddle.net/UXLAE/7/</a></p>\n\n<p>i've commented out the scale code so that you can see how the app should actually works.</p>\n\n<p>you have the top panel and can drag items from there to the bottom panel (items are cloned).\nin the bottom panel you must be able to sort the items.</p>\n\n<p>now i also want to be able to scale every item on mouseover, both in the top and the bottom panel. the scale must be an overlay and must have the same center as the source item. i failed to do it with .animate() or .effect(\"scale\") which would have made things a lot easier, but i managed to write some custom code that works pretty well (the part i commented out). my problem is that now i have no idea how to combine the custom code with what i already have. they kinda break each other ;) but look for yourself.</p>\n\n<p>would be nice if you could post some ideas or even a solution.</p>\n\n<p>greetings</p>\n",
            "last_activity_date": 1326844466,
            "question_id": 8882213,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "css",
                "jquery-ui"
            ],
            "title": "How to combine jquery ui draggable sortable stuff with custom scale code?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Something like this, maybe?</p>\n\n<pre><code>for( var x in window) {\n    if( window[x] instanceof Function) console.log(x);\n}\n</code></pre>\n\n<p>This will list all native functions in the console (excluding one in native objects, such as <code>Math.sin()</code>).</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>Is there a way in js to list all the builtin functions and some info on their parameterlists? I couldn't really find anything about reflection to do this sort of thing</p>\n\n<p>edit:\nThe functions such as Math.sin are actually the ones I want to list, actually all built-in functions.</p>\n",
            "last_activity_date": 1394525494,
            "question_id": 8693965,
            "score": 7,
            "tags": [
                "javascript",
                "function",
                "reflection",
                "built-in"
            ],
            "title": "List all built-in functions in javascript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If you want to do it in javascript code, You may select the anchor tag object and remove the class.</p>\n\n<p>Give an id to the element and call the removeClass method</p>\n\n<pre><code>&lt;a id=\"noFancy\" class=\"group\"&gt;some code here&lt;/a&gt;\n</code></pre>\n\n<p>Java Script</p>\n\n<pre><code> $(function(){\n     $(\"#noFancy\").removeClass(\"group\");\n\n });\n</code></pre>\n\n<p>If you have access to the HTML markup , why not just change to class to something else but with the same CSS values. then you dont need to execute the code to remove the class on documentready</p>\n\n<p>HTML</p>\n\n<pre><code>&lt;a class=\"groupNormal\"&gt;I dont want fancybox&lt;/a&gt;\n</code></pre>\n\n<p>CSS</p>\n\n<pre><code>.groupNormal\n{\n  // Put the CSS for group class\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$('.group').unbind('click.fb')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I have an anchor link with a class which identifies it to be called on fancybox.\nexample:</p>\n\n<pre><code>&lt;a class=\"group\"&gt;some code here&lt;/a&gt;\n</code></pre>\n\n<p>Fancybox binding:</p>\n\n<pre><code>$('.group').fancybox();\n</code></pre>\n\n<p>If I want to unbind fancybox with elements selected by $('.group'), how should I do that?\nI have tried <code>removeClass('group')</code> but its not working.</p>\n",
            "last_activity_date": 1333024909,
            "question_id": 8669804,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "fancybox"
            ],
            "title": "How to unbind fancybox from a selector"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You should use some modern Javascript library. It guards you from many of those small differences between browsers. I like <a href=\"http://jquery.com/\">jQuery</a>.</p>\n\n<p>So, with jquery your code</p>\n\n<pre><code>window.onload = function() {\n  var url = \"http://----.freeiz.com/gbSales/sales.json\";\n  var request = new XMLHttpRequest();\n  request.open(\"GET\", url);\n  request.onload = function () {\n    if (request.status == 200) {\n      updateSales(request.responseText);\n    }\n  };\n  request.send(null);\n}\nfunction updateSales(responseText) { \n  var salesDiv = document.getElementById(\"sales\");\n  salesDiv.innerHTML = responseText;\n}\n</code></pre>\n\n<p>becomes</p>\n\n<pre><code>$(document).load(function() {\n  var url = \"http://----.freeiz.com/gbSales/sales.json\";\n\n  $.get(url, {}, function(data) {\n    $('#sales').html(data);\n  });\n});\n</code></pre>\n\n<p>Shorter, cleaner and works in all browsers!</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>I think you want to use:</p>\n\n<pre><code>request.onreadystatechange = function() {\n</code></pre>\n\n<p>instead of:</p>\n\n<pre><code>request.onload = function() {\n</code></pre>\n\n<p>And change the way you check the return value.</p>\n\n<p>See the asynchronous request code example here: <a href=\"https://developer.mozilla.org/en/DOM/XMLHttpRequest/Using_XMLHttpRequest\" rel=\"nofollow\">https://developer.mozilla.org/en/DOM/XMLHttpRequest/Using_XMLHttpRequest</a> for more details.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just find that only the first form tag is removed so you can put an empty form () and the next one is keep in the code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>The data will not display in Chrome, unless i open an IE tab in Chrome go to the site then close it back to Chrome (sorry, if that doesn't make much sense).</p>\n\n<pre><code>window.onload = function() {\n    var url = \"http://----.freeiz.com/gbSales/sales.json\";\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url);\n    request.onload = function () {\n        if (request.status == 200) {\n            updateSales(request.responseText);\n        }\n    };\n    request.send(null);\n}\nfunction updateSales(responseText) { \n    var salesDiv = document.getElementById(\"sales\");\n    salesDiv.innerHTML = responseText;\n}\n</code></pre>\n\n<p>Im just starting to learn JavaScript so I really don't know much about it.</p>\n",
            "last_activity_date": 1368640946,
            "question_id": 8621278,
            "score": 7,
            "tags": [
                "javascript",
                "google-chrome",
                "innerhtml"
            ],
            "title": "innerHTML works in IE and Firefox, but not Chrome"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>If you want to check whether a number is a real number, you should also check whether it's finite:</p>\n\n<pre><code>function isNumber(n){\n    return typeof n == 'number' &amp;&amp; !isNaN(n) &amp;&amp; isFinite(n);\n }\n</code></pre>\n\n<p>Another method (explanation below):</p>\n\n<pre><code>function isNumber(n){\n    return typeof n == 'number' &amp;&amp; !isNaN(n - n);\n}\n</code></pre>\n\n<h2>Update: Two expressions to validate a real number</h2>\n\n<p>Since JavaScript numbers are representing real numbers, the substraction operand on the same number should produce the zero value <a href=\"http://en.wikipedia.org/wiki/Additive_identity\" rel=\"nofollow\">(additive identity)</a>. Numbers out of range should (and will) be invalid, <code>NaN</code>.</p>\n\n<pre><code>1        - 1        = 0    // OK\nInfinity - Infinity = NaN  // Expected\nNaN      - NaN      = NaN  // Expected\nNaN      - Infinity = NaN\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>It depends on what you wish to regard as a number. Your code classifies Infinity and -Infinity as numbers. If you don\u2019t want that, replace !isNaN(n) by isFinite(n).</p>\n\n<p>And your code classifies '42' (a string literal) as not being a number, due to the type check; but I supposed that\u2019s intentional.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you consider a number in its object wrapper to be a number, then it will fail with:</p>\n\n<pre><code>isNumber( new Number(123) )\n</code></pre>\n\n<hr>\n\n<p>Since a downvoter is having some comprehension troubles that couldn't be alleviated by a simple test, <code>new Number(123)</code> will return <code>'object'</code> from the <code>typeof</code> test, and as such will not pass.</p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>MY code is:</p>\n\n<pre><code>function isNumber(n){\nreturn typeof n == 'number' &amp;&amp; !isNaN(n);\n}\n\nwindow.onload=function(){\nvar a=0,b=1,c=2.2,d=-3,e=-4.4,f=10/3;\nvar shouldBeTrue=[a,b,c,d,e,f];\n\nvar aa=\"0\",bb=\"1\",cc=\"2.2\",dd=\"-3\",ee=\"-4.4\",ff=\"10/3\";\nvar shouldBeFalse=[aa,bb,cc,dd,ee,ff];\n\nvar aaa,bbb=true,ccc=false,ddd=document.getElementsByTagName('html');\nvar alsoTheseBeFalse=[aaa,bbb,ccc,ddd,\"\",\" \",,null,NaN];\n\nfor(var i=0;i&lt;shouldBeTrue.length;i++)\n    if(isNumber(shouldBeTrue[i]) != true) alert(\"x\");\nfor(i=0;i&lt;shouldBeFalse.length;i++)\n    if(isNumber(shouldBeFalse[i]) != false) alert(\"x\");\nfor(i=0;i&lt;alsoTheseBeFalse.length;i++)\n    if(isNumber(alsoTheseBeFalse[i]) != false) alert(\"x\");\n}\n</code></pre>\n\n<p>What else should I check against to ensure my function is 101% perfect in all ways? (also, if you know a better function please tell me)</p>\n",
            "last_activity_date": 1324228259,
            "question_id": 8525899,
            "score": 7,
            "tags": [
                "javascript",
                "numbers",
                "int"
            ],
            "title": "How to check if a JavaScript number is a real, valid number?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Technically, I think you're violating the Same Origin Policy on this one.  By definition, you can't do a JSON get from a domain other than your own....and getting data from Yahoo is certainly a different server than jsFiddle's.  There is a <a href=\"http://stackoverflow.com/questions/8364993/gwt-web-app-trying-to-get-json-from-php\">similar issue reported here.</a>  The CORS exceptions they list are IE up to version 10, which would explain the issue perfectly.</p>\n\n<p>The problem could be solved by using a \"?\" in your callback handler.  <a href=\"http://e-mats.org/2010/01/jquery-getjson-and-the-same-origin-policy/\">See this stack article</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Since its a old post this answer may be helpful to other seekers.</p>\n\n<p>There may be two reasons why getJson not working in IE.</p>\n\n<p>1.Either Jsonp requests which resolved by adding</p>\n\n<pre><code> &amp;callback=? or &amp;callback=?\n</code></pre>\n\n<p>2.Set ajax catch.</p>\n\n<pre><code>$.ajaxSetup({ cache: false });\n</code></pre>\n\n<p>If still you have problem, it may be because of the cross-platform API usage. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I'll go for the well known <a href=\"http://forum.jquery.com/topic/cross-domain-ajax-and-ie\" rel=\"nofollow\">cross domain policy issue with jquery and IE</a>.</p>\n\n<p>This article explain well the solution: </p>\n\n<p><a href=\"http://cypressnorth.com/programming/cross-domain-ajax-request-with-json-response-for-iefirefoxchrome-safari-jquery/\" rel=\"nofollow\">http://cypressnorth.com/programming/cross-domain-ajax-request-with-json-response-for-iefirefoxchrome-safari-jquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Ok, for some reason my getJson is not working. I am pulling some stock information and it works in all major browsers except IE. </p>\n\n<p>I have created a JSfiddle here: <a href=\"http://jsfiddle.net/qZhSk/\" rel=\"nofollow\">http://jsfiddle.net/qZhSk/</a></p>\n\n<p>If anyone can help me understand what I am doing wrong it will be SUPER helpful. </p>\n\n<p>thanks!</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>I found the solution myself. The issue was in my URL query. If anyone else has this issue here is the answer:</p>\n\n<pre><code>var url = \"http://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20yahoo.finance.quotes%20WHERE%20symbol%3D'NPO'&amp;format=json&amp;diagnostics=true&amp;env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys\";\n\n        $.getJSON(url + \"&amp;format=json&amp;callback=?\", function(data) {\n        var items = [];\n\n        $.each(data.query.results.quote, function(key, val) {\n\n            items.push('&lt;li id=\"' + key + '\"&gt;' + val + '&lt;/li&gt;');\n        });\n\n        $('&lt;ul/&gt;', {\n            'class': 'my-new-list',\n            html: items.join('')\n        }).appendTo('body');\n)};\n</code></pre>\n",
            "last_activity_date": 1382658388,
            "question_id": 8448934,
            "score": 7,
            "tags": [
                "javascript",
                "ajax",
                "jquery"
            ],
            "title": "$.getJson not working in IE"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>var matrix = [];\nfor(var i=0; i&lt;9; i++) {\n    matrix[i] = new Array(9);\n}\n</code></pre>\n\n<p>... or:</p>\n\n<pre><code>var matrix = [];\nfor(var i=0; i&lt;9; i++) {\n    matrix[i] = [];\n    for(var j=0; j&lt;9; j++) {\n        matrix[i][j] = undefined;\n    }\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Well, you can create an empty <strong>1-D</strong> array using the explicit Array constructor:</p>\n\n<p><code>a = new Array(9)</code></p>\n\n<p>To create an array of arrays, I think that you'll have to write a nested loop as Marc described.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can add functionality to an Array by extending its <code>prototype</code> object.</p>\n\n<pre><code>Array.prototype.nullify = function( n ) {\n    n = n &gt;&gt;&gt; 0;\n    for( var i = 0; i &lt; n; ++i ) {\n        this[ i ] = null;\n    }\n    return this;\n};\n</code></pre>\n\n<p>Then:</p>\n\n<pre><code>var arr = [].nullify(9);\n</code></pre>\n\n<p>or:</p>\n\n<pre><code>var arr = [].nullify(9).map(function() { return [].nullify(9); });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>The question is slightly ambiguous, since <code>None</code> can translate into either <code>undefined</code> or <code>null</code>. <code>null</code> is a better choice:</p>\n\n<pre><code>var a = [], b;\nvar i, j;\nfor (i = 0; i &lt; 9; i++) {\n  for (j = 0, b = []; j &lt; 9; j++) {\n    b.push(null);\n  }\n  a.push(b);\n}\n</code></pre>\n\n<p>If <code>undefined</code>, you can be sloppy and just don't bother, everything is <code>undefined</code> anyway. :)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>If you <strong>really</strong> like one-liners and there is a use for <a href=\"http://documentcloud.github.com/underscore/\" rel=\"nofollow\">underscore.js</a> in your project (which is a great library) you can do write-only things like:</p>\n\n<pre><code>_.range(9).map(function(n) { return _.range(9).map(function(n) { return null; }); });\n</code></pre>\n\n<p>But I would go with standard for-cycle version mentioned above.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Coffeescript to the rescue!</p>\n\n<p><code>[1..9].map -&gt; [1..9].map -&gt; null</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'll give it my shot as well</p>\n\n<pre><code>var c = Array;\n\nfor( var i = 0, a = c(9); i &lt; 9; a[i] = c(9), i++ );\n\nconsole.log( a.join(\",\") );\n//\",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\"\n</code></pre>\n\n<p>Readable and maintainable !</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This is an exact fix to your problem, but I would advise against initializing the matrix with a default value that represents '0' or 'undefined', as Arrays in javascript are just regular objects, so you wind up wasting effort.  <strong>If you want to default the cells to some meaningful value, then this snippet will work well, but if you want an uninitialized matrix, don't use this version</strong>:</p>\n\n<pre><code>/**\n* Generates a matrix (ie: 2-D Array) with: \n* 'm' columns, \n* 'n' rows, \n* every cell defaulting to 'd';\n*/\nfunction Matrix(m, n, d){\n    var mat = Array.apply(null, new Array(m)).map(\n        Array.prototype.valueOf,\n        Array.apply(null, new Array(n)).map(\n            function() {\n               return d;\n            }\n        )\n    );\n    return mat;\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>&lt; Matrix(3,2,'dobon');\n&gt; Array [ Array['dobon', 'dobon'], Array['dobon', 'dobon'], Array['dobon', 'dobon'] ]\n</code></pre>\n\n<p><strong>If you would rather just create an uninitialized 2-D Array, then this will be more efficient than unnecessarily initializing every entry</strong>:</p>\n\n<pre><code>/**\n* Generates a matrix (ie: 2-D Array) with: \n* 'm' columns, \n* 'n' rows, \n* every cell remains 'undefined';\n*/\nfunction Matrix(m, n){\n    var mat = Array.apply(null, new Array(m)).map(\n        Array.prototype.valueOf,\n        new Array(n)\n    );\n    return mat;\n}\n</code></pre>\n\n<p>Usage:</p>\n\n<pre><code>&lt; Matrix(3,2);\n&gt; Array [ Array[2], Array[2], Array[2] ]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In python, you can do this:</p>\n\n<pre><code>[([None] * 9) for x in range(9)]\n</code></pre>\n\n<p>and you'll get this:</p>\n\n<pre><code>[[None, None, None, None, None, None, None, None, None],\n [None, None, None, None, None, None, None, None, None],\n [None, None, None, None, None, None, None, None, None],\n [None, None, None, None, None, None, None, None, None],\n [None, None, None, None, None, None, None, None, None],\n [None, None, None, None, None, None, None, None, None],\n [None, None, None, None, None, None, None, None, None],\n [None, None, None, None, None, None, None, None, None],\n [None, None, None, None, None, None, None, None, None]]\n</code></pre>\n\n<p>How can I do the equivalent in javascript?</p>\n",
            "last_activity_date": 1407878799,
            "question_id": 8301400,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How do you easily create empty matrices javascript?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Probably not the answer you're looking for, but at 2.6kb, I would not try to reinvent the wheel and I'd use something like <a href=\"http://momentjs.com/\">moment.js</a>. Does not have any dependencies.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>this can be helpful for you:</p>\n\n<p><a href=\"http://romcartridge.blogspot.com/2010/01/javascript-function-to-calculate-age.html\" rel=\"nofollow\">http://romcartridge.blogspot.com/2010/01/javascript-function-to-calculate-age.html</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/4060004/calculate-age-in-javascript\">Calculate age in JavaScript</a></p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<pre><code>for(var y=birthyear; y &lt;= thisyear; y++){ \n\nif( (y % 4 == 0 &amp;&amp; y % 100 == 0) || y % 400 == 0 ) { \n days = days-366;\n number_of_long_years++; \n} else {\n    days=days-365;\n}\n\nyear++;\n\n}\n</code></pre>\n\n<hr>\n\n<p>can you try this way??</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No for-each loop, no extra jQuery plugin needed... Just call the below function.. Got from <a href=\"http://www.scriptol.com/javascript/dates-difference.php\" rel=\"nofollow\">Difference between two dates in years</a></p>\n\n<pre><code>        function dateDiffInYears(dateold, datenew) {\n            var ynew = datenew.getFullYear();\n            var mnew = datenew.getMonth();\n            var dnew = datenew.getDate();\n            var yold = dateold.getFullYear();\n            var mold = dateold.getMonth();\n            var dold = dateold.getDate();\n            var diff = ynew - yold;\n            if (mold &gt; mnew) diff--;\n            else {\n                if (mold == mnew) {\n                    if (dold &gt; dnew) diff--;\n                }\n            }\n            return diff;\n        }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Sleek foundation javascript function.</p>\n\n<pre><code> function calculateAge(birthday) { // birthday is a date\n   var ageDifMs = Date.now() - birthday.getTime();\n   var ageDate = new Date(ageDifMs); // miliseconds from epoch\n   return Math.abs(ageDate.getUTCFullYear() - 1970);\n }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to get the number of years between two dates. I can get the number of days between these two days, but if I divide it by 365 the result is incorrect because some years have 366 days.</p>\n\n<p>This is my code to get date difference:</p>\n\n<pre><code>var birthday = value;//format 01/02/1900\nvar dateParts = birthday.split(\"/\");\n\nvar checkindate = new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);   \nvar now = new Date();\nvar difference = now - checkindate;\nvar days = difference / (1000*60*60*24);\n\nvar thisyear = new Date().getFullYear();\nvar birthyear = dateParts[2];\n\n    var number_of_long_years = 0;\nfor(var y=birthyear; y &lt;= thisyear; y++){   \n\n    if( (y % 4 == 0 &amp;&amp; y % 100 == 0) || y % 400 == 0 ) {\n\n                    number_of_long_years++;             \n    }\n}   \n</code></pre>\n\n<p>The day count works perfectly. I am trying to do add the additional days when it is a 366-day year, and I'm doing something like this: </p>\n\n<pre><code>var years = ((days)*(thisyear-birthyear))\n            /((number_of_long_years*366) + ((thisyear-birthyear-number_of_long_years)*365) );\n</code></pre>\n\n<p>I'm getting the year count.  Is this correct, or is there a better way to do this?</p>\n",
            "last_activity_date": 1402567534,
            "question_id": 8152426,
            "score": 7,
            "tags": [
                "javascript",
                "datetime"
            ],
            "title": "How can I calculate the number of years betwen two dates?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>JSLint is based on Crockford's preferences (which I share in this case).</p>\n\n<p>It's a matter of opinion which is \"better\".</p>\n\n<p>(Although clearly his opinion is right ;)</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>JSLint is just being picky here. The guy who wrote it also baked in many stylistic suggestions in order to keep his own code more consistent.</p>\n\n<p>As for semicolon insertion, you shouldn't need to worry here. Inserting a semicolon before the else clause would lead to a syntax error and automatic semicolon insertion only occurs in situations where the resulting code would still be syntactically valid.</p>\n\n<p>If you want to read more on semicolon insertion, I recommend <a href=\"http://inimino.org/~inimino/blog/javascript_semicolons\" rel=\"nofollow\">this nice reference</a></p>\n\n<p>Basically if you insert semicolons everywhere you only need be careful about putting the argument to \"return\" or \"throw\" (or the label for \"break\" and \"continue\") on the same line.</p>\n\n<p>And when you accidentally forget a semicolon, the only common cases that are likely to bite you are if you start the next line with an array literal (it might parsed as the subscript operator) or a parenthsised expression (it might be parsed as a function call)</p>\n\n<blockquote>\n  <p>Conclusion</p>\n  \n  <p>Should you omit optional semicolons or not? The answer is a matter of\n  personal preference, but should be made on the basis of informed\n  choice rather than nebulous fears of unknown syntactical traps or\n  nonexistent browser bugs. If you remember the rules given here, you\n  are equipped to make your own choices, and to read any JavaScript\n  easily.</p>\n  \n  <p>If you choose to omit semicolons where possible, my advice is to\n  insert them immediately before the opening parenthesis or square\n  bracket in any statement that begins with one of those tokens, or any\n  which begins with one of the arithmetic operator tokens \"/\", \"+\", or\n  \"-\" if you should happen to write such a statement.</p>\n  \n  <p>Whether you omit semicolons or not, you must remember the restricted\n  productions (return, break, continue, throw, and the postfix increment\n  and decrement operators), and you should feel free to use linebreaks\n  everywhere else to improve the readability of your code.</p>\n</blockquote>\n\n<hr>\n\n<p>By the way, I personally think that the <code>} else {</code> version is prettier. Stop insisting in your evil ways and joins us on the light side of the force :P</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>JSLint is being very picky here, just enforcing a <em>style</em> that you might not share.</p>\n\n<p>Try <a href=\"http://www.jshint.com/\" rel=\"nofollow\">JSHint</a> instead:</p>\n\n<blockquote>\n  <p>The project originally started as an effort to make a more configurable version of JSLint\u2014the one that doesn't enforce one particular coding style on its users [...]</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It's not a matter of style.  It's how ECMAScript works.  </p>\n\n<p>For better or for worse, it will automatically insert semicolons at the end of statements where it feels necessary.</p>\n\n<p>JavaScript would interpret this: </p>\n\n<pre><code>function someFunc {\n    return\n    {\n        something: 'My Value'\n    };\n}\n</code></pre>\n\n<p>As this:</p>\n\n<pre><code>function someFunc {\n    return;\n    {\n        something: 'My Value'\n    };\n}\n</code></pre>\n\n<p>Which is certainly what you <strong>don't</strong> want.</p>\n\n<p>If you always put the bracket on the same line as the <code>if</code> and <code>if else</code> statement, you won't run into a problem like this.</p>\n\n<p>As with any coding language, the coding style chosen should be the one that minimizes potential risk the most.</p>\n\n<p>Mozilla Developer Network also promotes same line bracketing:  <a href=\"https://developer.mozilla.org/en-US/docs/User:GavinSharp_JS_Style_Guidelines#Brackets\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/User:GavinSharp_JS_Style_Guidelines#Brackets</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Why <a href=\"http://www.jslint.com/\">JSLint</a> report in code:</p>\n\n<pre><code>function cos(a) {\n    var b = 0;\n    if (a) {\n        b = 1;\n    }\n    else {\n        b = 2;\n    }\n\n    return b;\n}\n</code></pre>\n\n<p>error:</p>\n\n<pre><code>Problem at line 6 character 5: Expected exactly one space between '}' and 'else'.\n</code></pre>\n\n<p>This error can be turn off by disabling <em>Tolerate messy white space</em> option of JSLint.</p>\n\n<p>Or in other words -- why syntax:\n<code>} else {</code> is better then </p>\n\n<pre><code>...\n}\nelse {\n...\n</code></pre>\n\n<p><a href=\"http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml?showone=Code_formatting#Code_formatting\">Google also uses</a> syntax with <code>} else {</code> form.</p>\n\n<p>But I don't understand why. Google mentioned ''implicit semicolon insertion'', but in context of opening <code>{</code>, not closing one.</p>\n\n<p>Can Javascript insert semicolon after closing <code>}</code> of <code>if</code> block even if next token is <code>else</code> instruction?</p>\n\n<p>Sorry that my question is a bit chaotic -- I tried to <em>think loud</em>.</p>\n",
            "last_activity_date": 1396387371,
            "question_id": 8130134,
            "score": 7,
            "tags": [
                "javascript",
                "code-formatting",
                "jslint"
            ],
            "title": "JSLint, else and Expected exactly one space between &#39;}&#39; and &#39;else&#39; error"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I suggest attempting a more reliable form of date parsing. The example below uses <code>setFullYear()</code>. Does IE produce a different result with the code below?</p>\n\n<pre><code>/**Parses string formatted as YYYY-MM-DD to a Date object.\n   * If the supplied string does not match the format, an \n   * invalid Date (value NaN) is returned.\n   * @param {string} dateStringInRange format YYYY-MM-DD, with year in\n   * range of 0000-9999, inclusive.\n   * @return {Date} Date object representing the string.\n   */\n  function parseISO8601(dateStringInRange) {\n    var isoExp = /^\\s*(\\d{4})-(\\d\\d)-(\\d\\d)\\s*$/,\n        date = new Date(NaN), month,\n        parts = isoExp.exec(dateStringInRange);\n\n    if(parts) {\n      month = +parts[2];\n      date.setFullYear(parts[1], month - 1, parts[3]);\n      if(month != date.getMonth() + 1) {\n        date.setTime(NaN);\n      }\n    }\n    return date;\n  }\n</code></pre>\n\n<p>Source: <a href=\"http://jibbering.com/faq/#parseDate\" rel=\"nofollow\">http://jibbering.com/faq/#parseDate</a></p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>It's because of the date format. For some reason, IE and Safari get tripped up with <code>yyyy-mm-dd</code>. Use another date format and you should be all set. </p>\n\n<p>It's talked about here:<br/>\n<a href=\"http://biostall.com/javascript-new-date-returning-nan-in-ie-or-invalid-date-in-safari\" rel=\"nofollow\">http://biostall.com/javascript-new-date-returning-nan-in-ie-or-invalid-date-in-safari</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Just use slashes instead of hyphens if you can.</p>\n\n<hr>\n\n<p>EDIT: Expanded clarification...</p>\n\n<p>The <a href=\"http://en.wikipedia.org/wiki/ISO_8601\" rel=\"nofollow\">ISO 8601</a> standard format uses the hyphen as a date separator.  My answer does not mean you do not need to follow standards.  You can use slashes only for the Date constructor if necessary.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>And for those of us who want to know <em>how</em> to replace hyphens (aka dashes) with slashes:</p>\n\n<pre><code>new Date(dashToSlash(string));\n</code></pre>\n\n<p>That uses this function:</p>\n\n<pre><code>function dashToSlash(string){\n  var response = string.replace(/-/g,\"/\");\n  //The slash-g bit says: do this more than once\n  return response;\n}\n</code></pre>\n\n<p>In my case it's much easier to convert hyphens to slashes selectively (only where it's needed for the Date() function) than to replace the date format everywhere in my code.</p>\n\n<p>Note: you really need to define a separate 'response' variable and assign it the value of the replace operation result. If you don't, the string is returned unaltered in Chrome. That's not a huge problem, since Chrome doesn't have a problem with hyphenated date strings to begin with. But still...</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm using the Javascript Date(string) constructor with a date format of \"yyyy-mm-dd\". The constructor works just fine in IE 9 and Firefox unless the app is running on our testing VM which is running IIS. If it's on the VM, in IE 9 it returns 'NaN', but still works normally in Firefox.</p>\n\n<pre><code>    var dateAsString = \"2011-11-09\";\n    var dateCreated = new Date(dateAsString);\n</code></pre>\n\n<p>I was under the assumption that the server had nothing to do with client-side Javascript. Any suggestions?</p>\n",
            "last_activity_date": 1380875522,
            "question_id": 8098963,
            "score": 7,
            "tags": [
                "javascript",
                "internet-explorer",
                "iis",
                "date"
            ],
            "title": "Javascript Date(dateString) returns NaN on specific server and browser"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I guess jQuery iterates over all TextNodes and concatenates its nodeValue. IE stores this value differently than other browsers.</p>\n\n<pre><code>var title = document.getElementsByTagName('title')[ 0 ];\ntitle.firstChild // This would be the Text-Object with the characterdata of the title\n                 // Firefox: [object Text]\n                 // IE: null\n</code></pre>\n\n<p>This should be the reason you cannot get the textContent with <code>jQuery.text()</code>. <code>title.text</code> seems to be cross browser comp. I only tested it in IE 7 and Firefox 3.6 but <a href=\"http://jsfiddle.net/fw4zC/\">you can check the other browser</a> if you like. But why not using <code>document.title</code>?</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>try using <code>$('title').html()</code> which should work in all browsers</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm seeing this issue in Internet Explorer 8, but not in Safari or Firefox.  So far, I have not tested in other IE versions.</p>\n\n<p>I am developing my own jQuery plugin and, for this question, I've stripped it down to the two relevant lines.</p>\n\n<hr>\n\n<p>In IE 8, using the code below, <code>$('title').text()</code> does not do anything.  <code>docTitle</code> is blank because <code>title</code> is blank, as if the jQuery selector for <code>&lt;title&gt;</code>, <code>$('title')</code> is not working.  (Again, AFAIK, this is just in IE 8)</p>\n\n<pre><code>(function ($) {\n    $.fn.myPlugin = function (options) {\n\n        var title = $('title').text(),\n            docTitle = escape(title);\n\n    };\n})(jQuery);\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/sparky672/YMBQ2/\" rel=\"nofollow\">http://jsfiddle.net/sparky672/YMBQ2/</a></p>\n\n<hr>\n\n<p>However, using the plain JavaScript code below, <code>document.title</code> is working fine in everything including IE 8...</p>\n\n<pre><code>(function ($) {\n    $.fn.myPlugin = function (options) {\n\n        var docTitle = escape(document.title);\n\n    };\n})(jQuery);\n</code></pre>\n\n<hr>\n\n<p><strong>EDIT:</strong></p>\n\n<p>It does not matter that this code is inside a plugin.</p>\n\n<p>Same result in IE 8 with this...</p>\n\n<pre><code>$(document).ready(function () {    \n    var title = $('title').text();\n    alert(title);\n});\n</code></pre>\n\n<p>Just to clarify, I am not insisting on using this.  In fact, I fixed my plugin by simply using <code>document.title</code> instead.  <strong>If it wasn't clear initially, I'm just asking why this does not work in IE 8.</strong></p>\n\n<hr>\n\n<p>Can anyone explain <strong>why</strong>, or what stupid mistake I may have made here?</p>\n\n<hr>\n\n<p><strong>EDIT 2:</strong></p>\n\n<p>Here are some jQuery Bug reports on this issue</p>\n\n<p><a href=\"http://bugs.jquery.com/ticket/7025\" rel=\"nofollow\">http://bugs.jquery.com/ticket/7025</a></p>\n\n<p><a href=\"http://bugs.jquery.com/ticket/5881\" rel=\"nofollow\">http://bugs.jquery.com/ticket/5881</a></p>\n\n<p><a href=\"http://bugs.jquery.com/ticket/2755\" rel=\"nofollow\">http://bugs.jquery.com/ticket/2755</a></p>\n\n<p>And dozens of others reporting the same thing.  The official response is to state, <em>\"<code>document.title</code> is the only reliable cross-browser way and should be used instead\"</em> and the Ticket is closed.  So there you go.</p>\n",
            "last_activity_date": 1319595228,
            "question_id": 7897005,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "dom",
                "internet-explorer-8",
                "title"
            ],
            "title": "Cannot access document&#39;s title element with jQuery (IE 8)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>extended_valid_elements</code> is not the best choice here.\nHava a look at the <code>valid_elements</code> <a href=\"http://www.tinymce.com/wiki.php/Configuration%3avalid_elements\" rel=\"nofollow\">setting</a>. Here is an example</p>\n\n<pre><code>    // The valid_elements option defines which elements will remain in the edited text when the editor saves.\n    valid_elements: \"@[id|class|title|style|data-options|data*],\" +\n    \"a[name|href|target|title],\" +\n    \"#p,-ol,-ul,-li,br,img[src|height|width],-b,-i,-u,\" +\n    \"-span[data-mce-type],hr\",\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have to use the HTML 5 <a href=\"http://ejohn.org/blog/html-5-data-attributes/\">data attribute</a> in Tiny MCE, but the editor always clear them, as it's not an attribute known by the default <a href=\"http://www.tinymce.com/wiki.php/Configuration%3avalid_elements\">valid_elements</a> configuration.</p>\n\n<p>So I have 2 problems here:</p>\n\n<ul>\n<li>the data attribute is dynamic ( it could be data-options, data-test, data-foo, etc... ) So I would need a wildcard value or something.</li>\n<li>I want to allow the data attribute for all tags.</li>\n</ul>\n\n<p>So far, I've tried:</p>\n\n<pre><code>extended_valid_elements : '@[id|class|title|style|data-options]',\n</code></pre>\n\n<p>And:</p>\n\n<pre><code>extended_valid_elements : '*[id|class|title|style|data*]',\n</code></pre>\n\n<p>But it doesn't work :(</p>\n",
            "last_activity_date": 1350331122,
            "question_id": 7744903,
            "score": 7,
            "tags": [
                "javascript",
                "html5",
                "attributes",
                "tinymce",
                "rte"
            ],
            "title": "TinyMCE, allow data attribute"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>And why don't you easily use one working?</p>\n\n<pre><code>alert(jQuery(this).children('#Image_center').attr('src'));\n</code></pre>\n\n<p>change children to find</p>\n\n<pre><code>alert(jQuery(this).find('#Image_center').attr('src'));\n</code></pre>\n\n<p>It is probably the easiest solution, and when it work, why wouldn't you use it?</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>children</code> looks for immediate child elements only where as <code>find</code> looks for all the elements within it until its last child element down the dom tree. If you are saying <code>find</code> is working that means the element you are looking is not its immediate children.</p>\n\n<p>Try to alert this <code>jQuery(this).children('#Image_center').length</code> see what you get.</p>\n\n<p>FYI. Even when any element is not found jQuery will return an emtpy object it will never be null. So alert an emtpy object will always give you <code>[object Object]</code>. You should alwasy check for the <code>length</code> property of the jQuery object.</p>\n\n<p>Try this</p>\n\n<p><code>alert(jQuery(this).find('#Image_center').length);</code>//To check whether element is found or not.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>the problem is not in the <strong>attr('src')</strong> but in something else. The following snippet works in IE8:</p>\n\n<pre><code>    &lt;img id=\"xxx\" src=\"yrdd\"&gt;\n\n    &lt;script type=\"text/javascript\"&gt;\n\n        alert($('#xxx').attr('src'));\n\n    &lt;/script&gt;\n</code></pre>\n\n<p>But if you for example change the the <strong>text/javascript</strong> to <strong>application/javascript</strong> - this code will work in FF but will not work in IE8</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try to make a delay:</p>\n\n<pre><code>jQuery(document).ready(function() {\n\n  setTimeout(function () {\n\n    jQuery('.blogentry').each(function(){\n      // your code...\n    });\n\n  }, 100); // if doesn't work, try to set a higher value\n\n});\n</code></pre>\n\n<p>UPDATE</p>\n\n<p>Hope, this code will work.</p>\n\n<pre><code>$('.blogentry img').each(function(){\n  alert( $(this).attr('src') );\n});\n</code></pre>\n\n<p>UPDATE</p>\n\n<p>I'm not sure, but maybe IE can't read classes with uppercase first letter...\nTry to change \".Image_center\" to \".image_center\"</p>\n\n<p>UPDATE</p>\n\n<p>Check your code again. You definitely have some error. Try this jsfiddle in IE8, attr('src') is showed correctly. <a href=\"http://jsfiddle.net/qzFU8/\" rel=\"nofollow\">http://jsfiddle.net/qzFU8/</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Bing Bang Boom,</p>\n\n<pre><code>imgright = jQuery(\".Image_right\",this).attr('src');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This has gotten so far,that I will sum up what we found out:</p>\n\n<ul>\n<li><p>Inside the event handler the attribute src cannot be read in IE8 (FF works fine), neither with jQuery nor with usual javascript</p></li>\n<li><p>The only way to get the data was to get it outside the handler, write it to an array and read it afterwards from the inside of the handler</p></li>\n<li><p>But there was still no possibility to write to src (neither jQuery nor javascript worked - only for IE 8)</p></li>\n<li><p>I've got it working by writing the img elemts themselves to the document, but the reason behind this problem is no solved</p></li>\n</ul>\n\n<p><strong>The new code</strong></p>\n\n<pre><code>relcounter = 1;\nimgleft_array = new Array();\njQuery('.Image_left').each(function(){\n    imgleft_array[relcounter] = jQuery(this).attr('src');\n    relcounter++;\n});\nrelcounter = 1;\nimgcenter_array = new Array();\njQuery('.Image_center').each(function(){\n    imgcenter_array[relcounter] = jQuery(this).attr('src');\n    relcounter++;\n});\nrelcounter = 1;\nimgright_array = new Array();\njQuery('.Image_right').each(function(){\n    imgright_array[relcounter] = jQuery(this).attr('src');\n    relcounter++;\n});\n\n//view entry\njQuery('.blogentry').live('click',function(){\n    // Get contents\n    entryindex = jQuery(this).attr('rel');\n    blogtext = jQuery(this).children('.blogtext').html();\n    blogauthor = jQuery(this).children('.onlyblogauthor').html();\n    blogtitle = jQuery(this).children('.blogtitle').html();\n    profileimage = jQuery(this).children('.profileimage').html();\n    imgleft = imgleft_array[entryindex];\n    imgcenter = imgcenter_array[entryindex];\n    imgright = imgright_array[entryindex];\n\n    // Write contents\n    jQuery('#entryimages').html('');\n    jQuery('#entryimages').html('&lt;img class=\"rotate\" width=\"132\" height=\"138\" id=\"bild_left\" src=\"'+imgleft+'\" /&gt;&lt;img class=\"rotateright\" width=\"154\" height=\"162\" id=\"bild_center\" src=\"'+imgcenter+'\" /&gt;&lt;img class=\"rotate\" width=\"132\" height=\"138\" id=\"bild_right\" src=\"'+imgright+'\" /&gt;');\n\n    jQuery('.person').attr('src', profileimage);\n    jQuery('#g_fb_name').html(blogauthor);\n    jQuery('#g_titel').html(blogtitle);\n    jQuery('#g_text').html(blogtext);\n\n});\n</code></pre>\n\n<p>So I am just not using .attr('src') in the event handler....</p>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<pre><code>$(document).ready(function () {\n    $(\"#imgReload\").click(function () {\n        $('#&lt;%=imgCaptcha.ClientID %&gt;').removeAttr(\"src\");\n        $('#&lt;%=imgCaptcha.ClientID %&gt;').attr(\"src\", \"Captcha.ashx\");\n    });\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>This has gotten so far,that I will sum up what we found out:</p>\n\n<ul>\n<li><p>Inside the event handler the attribute src cannot be read in IE8 (FF works fine), neither with jQuery nor with usual javascript</p></li>\n<li><p>The only way to get the data was to get it outside the handler, write it to an array and read it afterwards from the inside of the handler</p></li>\n<li><p>But there was still no possibility to write to src (neither jQuery nor javascript worked - only for IE 8)</p></li>\n<li><p>I've got it working by writing the img elemts themselves to the document, but the reason behind this problem is no solved</p></li>\n</ul>\n\n<p>The snippet we have is used twice. </p>\n\n<p><strong>The old code</strong></p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\njQuery(document).ready(function() {\n//...\n//view entry\njQuery('.blogentry').live('click',function(){\n    // Get contents\n    blogtext = jQuery(this).children('.blogtext').html();\n    blogauthor = jQuery(this).children('.onlyblogauthor').html();\n    blogtitle = jQuery(this).children('.blogtitle').html();\n    profileimage = jQuery(this).children('.profileimage').html();\n    imgleft = jQuery(this).children('.Image_left').attr('src');\n    imgcenter = jQuery(this).children('.Image_center').attr('src');\n    imgright = jQuery(this).children('.Image_right').attr('src');\n\n    // Write contents\n    jQuery('#bild_left').attr('src', imgleft);\n    jQuery('#bild_center').attr('src', imgcenter);\n    jQuery('#bild_right').attr('src', imgright);\n    jQuery('.person').attr('src', profileimage);\n    jQuery('#g_fb_name').html(blogauthor);\n    jQuery('#g_titel').html(blogtitle);\n    jQuery('#g_text').html(blogtext);\n    //...\n});\n//...\n// Change entry\njQuery('.blogentry').each(function(){\n    entryindex = jQuery(this).attr('rel');\n    if (entry == entryindex)\n    {\n        // The following works fine (so 'children' works fine):\n        blogtext = jQuery(this).children('.blogtext').html();\n        blogauthor = jQuery(this).children('.onlyblogauthor').html();\n        blogtitle = jQuery(this).children('.blogtitle').html();\n        profileimage = jQuery(this).children('.profileimage').html();\n\n        // This does not work - only in IE 8, works in Firefox\n        imgleft = jQuery(this).children('.Image_left').attr('src');\n        imgcenter = jQuery(this).children('.Image_center').attr('src');\n        imgright = jQuery(this).children('.Image_right').attr('src');\n\n        //alert: 'undefined'\n        alert(jQuery(this).children('.Image_center').attr('src'));\n\n        //...\n    }\n}\n//...\n});\n&lt;/script&gt;\n</code></pre>\n\n<p><strong>The new code</strong></p>\n\n<p>Please see my own posted answer for the new code.</p>\n\n<p><strong>UPDATE:</strong></p>\n\n<p>This does <strong>not</strong> work if called inside of the click event!!!</p>\n\n<pre><code>jQuery('.Image_left').each(function(){\nalert(jQuery(this).attr('src'));\n});\n</code></pre>\n\n<p>SOLUTION TO GET THE IMAGE DATA:</p>\n\n<pre><code>relcounter = 1;\nimgleft_array = new Array();\njQuery('.Image_left').each(function(){\nimgleft_array[relcounter] = jQuery(this).attr('src');\nrelcounter++;\n});\nrelcounter = 1;\nimgcenter_array = new Array();\njQuery('.Image_center').each(function(){\nimgcenter_array[relcounter] = jQuery(this).attr('src');\nrelcounter++;\n});\nrelcounter = 1;\nimgright_array = new Array();\njQuery('.Image_right').each(function(){\nimgright_array[relcounter] = jQuery(this).attr('src');\nrelcounter++;\n});\n\n//... inside the eventhandler (entryindex = 'rel' of blogentry):\nimgleft = imgleft_array[entryindex];\nimgcenter = imgcenter_array[entryindex];\nimgright = imgright_array[entryindex];\n</code></pre>\n\n<p>This works because it is not called inside the event handler and the sources are saved beforehand</p>\n\n<p>BUT! <strong>I still cannot write the data, which is my aim:</strong></p>\n\n<pre><code>jQuery('#bild_left').attr('src', imgleft);\njQuery('#bild_center').attr('src', imgcenter);\njQuery('#bild_right').attr('src', imgright);\n</code></pre>\n\n<p>UPDATE!!!</p>\n\n<p>This is just crazy, I tried to write the data via usual javascript. This also works in FF, but no in IE8. Here really is some serious problem witt the attribute src:</p>\n\n<pre><code>document.getElementById('bild_left').src = imgleft;\ndocument.getElementById('bild_center').src = imgcenter;\ndocument.getElementById('bild_right').src = imgright;\n\nalert(document.getElementById('bild_left').src);\n</code></pre>\n\n<p>This works in FF, but not in IE8, the attribute src remains undefined after writing! This seems to be not a jQuery problem at all!</p>\n",
            "last_activity_date": 1370603494,
            "question_id": 7162794,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer-8"
            ],
            "title": "Jquery attr(&#39;src&#39;) undefined in IE 8 (works in FF)"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>With the <a href=\"http://api.jquery.com/attribute-equals-selector/\" rel=\"nofollow\">attribute selector</a>:</p>\n\n<pre><code>$(\"[tabindex=7]\") // all elements with tabindex=7\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can find the element by an attribute selector:</p>\n\n<pre><code>$('[tabindex=7]')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can get it with the following jQuery</p>\n\n<pre><code>$('input[tabindex=7]')\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>Using jquery or javascript, how can I find the input element in the DOM that has a particular tabindex set to it, eg.</p>\n\n<pre><code>&lt;input id=\"txtInput\" type=\"text\" maxlength=\"5\" tabindex=\"7\"&gt;\n</code></pre>\n\n<p>I would want this element returned if I was searching for the element with tabindex = 7.</p>\n",
            "last_activity_date": 1311938904,
            "question_id": 6872386,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "tabindex"
            ],
            "title": "find element based on tabindex"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The problem is that of <em>context</em>.  When you fire an object's function, it is fired with the object as the value of <code>this</code> (unless you specify otherwise).  <code>g = document.getElementById</code> puts the function <code>getElementById</code> into the variable <code>g</code>, but doesn't set the context.</p>\n\n<p>Therefore, when you run <code>g(someId)</code>, there is no context on which the function can run.  It is run with the global object <code>window</code> as the value of <code>this</code>, and that doesn't work.  (To be precise, it doesn't work because you could be operating with any <code>document</code> object, not just <code>window.document</code>, and you haven't specified one.)</p>\n\n<p>You <strong>could</strong> get around this with <code>call</code>, where you set the context:</p>\n\n<pre><code>g.call(document, someId);\n</code></pre>\n\n<p>However, this isn't an improvement over the original!</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>Because when you call \"g('somestr')\" the \"this\" value is bound to the \"window\" and \"document.getElementById\" seens to expect to be bound to \"document\" instead \"window\"(makes sense to me =) ). Doing:</p>\n\n<pre><code>var g = document.getElementById;\ng('somestr');\n</code></pre>\n\n<p>is like:</p>\n\n<pre><code>document.getElementById.call(window, 'somestr');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The problem is the <em>context</em>. <code>document.getElementById(xxx)</code> runs in the context of <code>document</code>, but when you assign it to something, you get a TypeError because the context is probably <code>window</code>. See this jsFiddle: <a href=\"http://jsfiddle.net/minitech/as3AQ/\" rel=\"nofollow\">http://jsfiddle.net/minitech/as3AQ/</a></p>\n\n<p>So, you could use <code>call</code> or <code>apply</code>, but that's ugly. Just do the second way instead, or assign it to <code>document</code> and assign <code>document</code> to something if your objective is to minify your code.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I recently answered a <a href=\"http://stackoverflow.com/questions/6290733/short-variable-for-dom-methods/6290767#6290767\">very similar question</a>. The summarized version is that it generally won't work and you should use a wrapper function instead.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@minitech and @Tim Down\nThanks a lot for your feedback.</p>\n\n<p>We have a lot of old code which worked like this </p>\n\n<pre><code>var $ = document.getElementById;\n$(\"First\");\n</code></pre>\n\n<p>It Failed with error message in modern browsers\nUncaught TypeError: Illegal invocation </p>\n\n<p>All i did is replaced it as </p>\n\n<pre><code>var $ = function(x) { return document.getElementById(x); };\n$(\"First\");\n</code></pre>\n\n<p>Now we are back in the game :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So I'm trying to define a function g() that is like document.getElementById. The following works just fine:</p>\n\n<pre><code>var g = function(id){return document.getElementById(id)};\n</code></pre>\n\n<p>But why doesn't this more direct code work?</p>\n\n<pre><code>var g = document.getElementById;\n</code></pre>\n",
            "last_activity_date": 1415888111,
            "question_id": 6318704,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "Why can&#39;t I directly assign document.getElementById to a different function?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If you have a form action and an input type=submit inside form tags, it's going to submit the old fashioned way and basically refresh the page.  When doing AJAX type transactions this isn't the desired effect.</p>\n\n<p>Remove the action.  Or remove the form altogether, though in cases it does come in handy to serialize to cut your workload.  If the form tags remain, move the button outside the form tags, or alternatively make it a link with an onclick or click handler as opposed to an input button.  Jquery UI Buttons works great in this case because you can mimic an input button with an a tag element.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Do you need to post the the form to an URL or do you only need to detect the submit-event? Because you can detect the submit-event by adding <code>onsubmit=\"javascript:alert('I do also submit');\"</code></p>\n\n<pre><code>&lt;form action=\"javascript:alert('submitted');\" method=\"post\" id=\"testForm\" onsubmit=\"javascript:alert('I do also submit');\"&gt;...&lt;/form&gt;\n</code></pre>\n\n<p>Not sure that this is what you are looking for though.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>it's because the name of the submit button is named \"submit\", change it to anything but \"submit\", try \"submitme\" and retry it.  It should then work.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Why not simply use the submit button to run the code you want. If your function returns false, it will cancel the submission.</p>\n\n<pre><code>$(\"#testForm\").submit(function() {\n    /* Do Something */\n    return false;\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>So can someone please tell why neither of these options will actually submit the form?  I am trying to do something more complicated but I have boiled it down to this to try and figure out why I can't seem to get this form to submit using a click event and submit()</p>\n\n<pre><code>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;\n&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;\n&lt;head&gt;\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;\n&lt;title&gt;Untitled Document&lt;/title&gt;\n&lt;script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n$(function() {\n   $('#submitButton').click(function(e) {\n        e.preventDefault();\n        $(\"#testForm\").submit();\n    });\n\n   $('#submitLink').click(function(e) {\n        e.preventDefault();\n        $(\"#testForm\").submit();\n    });\n});\n&lt;/script&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n&lt;form action=\"javascript:alert('submitted');\" method=\"post\" id=\"testForm\"&gt;\n    &lt;label&gt;Name&lt;/label&gt;\n    &lt;input type=\"text\" name=\"name\" value=\"\" /&gt;\n    &lt;input type=\"submit\" name=\"submit\" value=\"Submit\" id=\"submitButton\" /&gt;\n    &lt;p&gt;&lt;a href=\"#\" id=\"submitLink\"&gt;Submit Form&lt;/a&gt;&lt;/p&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Thank you!</p>\n",
            "last_activity_date": 1345220510,
            "question_id": 6299456,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "forms"
            ],
            "title": "submit form on click event using jquery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><a href=\"http://www.w3.org/TR/html4/interact/scripts.html#h-18.2.1\">You must include a closing script tag</a>.  The script element is not self closing, even when you're only including an external script.  </p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>I have also noticed you always need the <code>&lt;/script&gt;</code>. It's probably because it requires content between the tags (\"\" counts), even though you're using <code>src</code>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The <code>&lt;script&gt;</code> tag can only be self-closing in <em>truly</em> valid XHTML documents &ndash; that is, a XHTML page served with the <code>Content-Type</code> of <code>application/xhtml+xml</code> &ndash; <strong>and</strong> when viewed in a supporting browser (IE8 does not qualify; IE9+ does).</p>\n\n<p>In all other HTML documents, (<strong>regardless</strong> of what <code>DOCTYPE</code> is declared), the <code>&lt;script&gt;</code> tag is not self-closing and therefore <strong>must</strong> be closed with a <code>&lt;/script&gt;</code>.</p>\n\n<p><a href=\"http://stackoverflow.com/questions/97522/what-are-all-the-valid-self-closing-tags-in-xhtml-as-implemented-by-the-major-br/206409#206409\">Read more in this very detailed answer.</a></p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>I noticed today while doing some testing that the way I close my <code>&lt;script&gt;</code> tag either makes or breaks my page. For example, this works:</p>\n\n<pre><code>&lt;script src=\"scripts/jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>but this does not:</p>\n\n<pre><code>&lt;script src=\"scripts/jquery.js\" type=\"text/javascript\" /&gt;\n</code></pre>\n\n<p>The file appears to show up when I use IE's Developer Tools, but it seems like it just gets ignored. Has anyone ever seen this or know why it might be happening? Thanks in advance!</p>\n",
            "last_activity_date": 1386973180,
            "question_id": 6145094,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "scripting",
                "src"
            ],
            "title": "&lt;script&gt; tag must include separate &lt;/script&gt; tag?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var mystr = \"Doe\";\nmystr = \"John \" + mystr;\n</code></pre>\n\n<p>Wouldnt this work for you?</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>You could do it this way ..</p>\n\n<pre><code>mystr = mystr.replace (/^/,'John ');\n</code></pre>\n\n<p><em>disclaimer: <a href=\"http://xkcd.com/208/\" rel=\"nofollow\">http://xkcd.com/208/</a></em></p>\n\n<hr>\n\n<p><img src=\"http://i.stack.imgur.com/zFmVi.png\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can use</p>\n\n<pre><code>var mystr = \"Doe\";\nmystr = \"John \" + mystr;\nconsole.log(mystr)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>What is the shortest method, to add a new value (\"John\") <strong>at the beginning of a string</strong> ?</p>\n\n<pre><code>var mystr = \"Doe\";\n    mystr.specialConcat(\"John \")  // ??\n\nconsole.log(mystr)  // output: John Doe\n</code></pre>\n",
            "last_activity_date": 1412611772,
            "question_id": 6094117,
            "score": 7,
            "tags": [
                "javascript",
                "string",
                "concat"
            ],
            "title": "Javascript: concat to string at beginning?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>My answer is in sections</p>\n\n<ul>\n<li>The error</li>\n<li>But that does not even matter</li>\n<li>The real problem</li>\n<li>How someone could have found the cause/real problem</li>\n<li>A solution that includes error handling</li>\n</ul>\n\n<h2>The error</h2>\n\n<p>The error is because it is trying to parse <code>ContentRight.html</code> as an XML file. XML files are strict, so any little thing like a missing <code>&lt;/img&gt;</code> would cause a whole failure. In this case, there is more than one top level element. (in a normal HTML, there is only one top level element <code>&lt;html&gt;</code>). The second top level element is considered \"Junk after document element\". I am assuming that image is the second element that is causing the problem.</p>\n\n<h2>But that does not even matter</h2>\n\n<p>But this is all beside the point. There is no reason for you to parse the XML in the first page. You just want the HTML. Right? My guess is, it is trying to parse the XML and store it to <code>responseXML</code>. Because of the error, <code>resonseXML</code> is null. But you are using <code>responseText</code> so there should be no problem. (ignore the error)</p>\n\n<h2>The real problem</h2>\n\n<p>All that and now I see the problem. You are requiring HTTP status 200 with <code>req.status == 200</code>. Since you are not using <code>http://</code> and you are instead using <code>file://</code>, there is no status code and no possibility of a server error <code>500</code> and little chance of detecting a not found <code>404</code>. So all you will get is <code>0</code>. A good practice when you get something like this is to add alert lines</p>\n\n<h2>How someone could have found the cause/real problem</h2>\n\n<pre><code>req.onreadystatechange = function() {\n    alert(req.readyState)\n    if (req.readyState == 4 &amp;&amp; req.status == 200) {\n        document.getElementById(divId).innerHTML = req.responseText;\n    }\n}\n</code></pre>\n\n<p>would alert <code>1</code> <code>2</code> <code>3</code> <code>4</code> so you know <code>readyState</code> is 4. Then try</p>\n\n<pre><code>req.onreadystatechange = function() {\n    if(req.readyState == 4)\n        alert(req.status)\n    if (req.readyState == 4 &amp;&amp; req.status == 200) {\n        document.getElementById(divId).innerHTML = req.responseText;\n    }\n}\n</code></pre>\n\n<p>You would get <code>0</code> and you would be closer to the problem.</p>\n\n<h2>A solution that includes error handling</h2>\n\n<p>A good solution is</p>\n\n<pre><code>req.onreadystatechange = function() {\n    if (req.readyState == 4 &amp;&amp; (req.status == 200 || req.status == 0 &amp;&amp; req.responseText)) {\n        document.getElementById(divId).innerHTML = req.responseText;\n    } else {\n        document.getElementById(divId).innerHTML = '&lt;b&gt;Error. HTTP ' + req.status + '&lt;/b&gt;'\n    }\n}\n</code></pre>\n\n<p>Because if status is 0, that <strong>could</strong> mean internet connection failure in which case <code>responseText</code> would be blank and then you would get <code>Error. HTTP 0</code>. If it was not blank, that would mean it was <code>file://</code> and it would work like a charm.</p>\n\n<p>And of course a server-level error would give <code>Error. HTTP 500</code> or whatnot.</p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>Im using a page fetch script to dynamically load a web page into a div. Heres the code. BTW Im using Firefox w/ Kubuntu</p>\n\n<pre><code>function fetch(URL, divId) {\n        req = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n    req.open(\"GET\", URL);\n    req.onreadystatechange = function() {\n        if (req.readyState == 4 &amp;&amp; req.status == 200) {\n            document.getElementById(divId).innerHTML = req.responseText;\n        }\n    }\n    req.send(null);\n}\n</code></pre>\n\n<p>When i try to get it to load a page nothing happens and I get an error</p>\n\n<blockquote>\n  <p>Error: junk after document element<br>\n  Source File: file:///home/amnite/Stuff/MetalBraska/Shows/ContentRight.html<br>\n  Line: 2, Column: 1<br>\n  Source Code:<br>\n  <code>&lt;img src=\"Layout/HeaderDiv.jpg\" width=\"250px\" height=\"7px\"&gt;</code></p>\n</blockquote>\n",
            "last_activity_date": 1306020112,
            "question_id": 6084978,
            "score": 7,
            "tags": [
                "javascript",
                "ajax",
                "xmlhttprequest",
                "innerhtml"
            ],
            "title": "Firefox &amp; AJAX Junk after document element"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>textarea.scrollHeight\n</code></pre>\n\n<p>returns an integer (pixels)</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<p>I've got a textarea with a fixed height. When the user types text into the textarea a scrollbar will show up after the user typed some text in it.</p>\n\n<p>How can I get the scrollbar height using jQuery or plain JavaScript? I've been searching for this for hours, but couldn't find anything. I can't just insert a div and get the scrollbar height via the div offset because a textarea is not allowed to have child elements.</p>\n\n<p>Please don't give me a link to a jQuery Plug-In that does the job. I want to learn something. </p>\n",
            "last_activity_date": 1312971420,
            "question_id": 5980150,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "textarea",
                "scrollbar"
            ],
            "title": "jQuery / JS get the scrollbar height of an textarea"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Yeah something like that. Here is the relevant part from the <a href=\"http://ecma262-5.com/ELS5_HTML.htm\" rel=\"nofollow\">specification</a>:</p>\n\n<blockquote>\n  <p><strong><a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.8.6\" rel=\"nofollow\">11.8.6   The instanceof operator</a></strong>  </p>\n  \n  <p>The production <em>RelationalExpression</em>: <em>RelationalExpression</em> <strong>instanceof</strong> <em>ShiftExpression</em> is evaluated as follows:</p>\n  \n  <ol>\n  <li>Let <em>lref</em> be the result of evaluating <em>RelationalExpression</em>.</li>\n  <li>Let <em>lval</em> be GetValue(<em>lref</em>).</li>\n  <li>Let <em>rref</em> be the result of evaluating <em>ShiftExpression</em>.</li>\n  <li>Let <em>rval</em> be GetValue(<em>rref</em>).</li>\n  <li>If Type(<em>rval</em>) is not Object, throw a <strong>TypeError</strong> exception.</li>\n  <li>If <em>rval</em> does not have a [[HasInstance]] internal method, throw a <strong>TypeError</strong> exception.</li>\n  <li>Return the result of calling the [[HasInstance]] internal method of <em>rval</em> with argument <em>lval</em>.</li>\n  </ol>\n</blockquote>\n\n<p>where <em>calling the [[HasInstance]] method</em> is defined as</p>\n\n<blockquote>\n  <p><strong><a href=\"http://ecma262-5.com/ELS5_HTML.htm#Section_11.8.6\" rel=\"nofollow\">15.3.5.3   [[HasInstance]] (V)</a></strong></p>\n  \n  <p>Assume <em>F</em> is a Function object.</p>\n  \n  <p>When the [[HasInstance]] internal method of <em>F</em> is called with value <em>V</em>, the following steps are taken:</p>\n  \n  <ol>\n  <li>If <em>V</em> is not an object, return <strong>false</strong>.</li>\n  <li>Let <em>O</em> be the result of calling the [[Get]] internal method of <em>F</em> with property name \"<strong>prototype</strong>\".</li>\n  <li>If Type(<em>O</em>) is not Object, throw a <strong>TypeError</strong> exception.</li>\n  <li>Repeat<br>\n  a. Let <em>V</em> be the value of the [[Prototype]] internal property of <em>V</em>.<br>\n  b. If <em>V</em> is <strong>null</strong>, return <strong>false</strong>.<br>\n  c. If <em>O</em> and <em>V</em> refer to the same object, return <strong>true</strong>.</li>\n  </ol>\n</blockquote>\n\n<p>Regarding performance: This probably depends on the actual implementations in the browsers. There can be huge differences between them so the best thing would be to make some benchmarks, e.g. with <a href=\"http://jsperf.com/\" rel=\"nofollow\">http://jsperf.com/</a>.</p>\n\n<hr>\n\n<p>A problem with <code>instanceof</code> is that it might not work if you invoke it on elements from different contexts, such as a frame or iframe. For example, let <code>a</code> be an object you can access via <code>iframe.contentWindow.a</code> and you want to test whether it is an array, then </p>\n\n<pre><code>iframe.contentWindow.a instanceof Array\n</code></pre>\n\n<p>will return <code>false</code>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>in V8 (Chrome's JS engine), there seems to be little-to-no performance hit:</p>\n\n<pre><code>&gt; function A(){}\n&gt; function B(){}\n&gt; function C(){}\n&gt; function D(){}\n&gt; B.prototype = new A();\n&gt; C.prototype = new B();\n&gt; D.prototype = new C();\n&gt; \n&gt; var objA = new A();\n&gt; var objD = new D();\n&gt; \n&gt; var start = (+new Date()); for(var i=0; i&lt;10000000; i++){ objA instanceof A } console.log((+new Date()) - start);\n138\n&gt; var start = (+new Date()); for(var i=0; i&lt;10000000; i++){ objD instanceof A } console.log((+new Date()) - start);\n138\n</code></pre>\n\n<p>Firefox shows identical behavior.</p>\n\n<p>Going a bit crazy here, but:</p>\n\n<pre><code>&gt; var classes = [];\n&gt; for(var i=0; i&lt;10000; i++){\n&gt;   classes[i] = function(){};\n&gt;   i &amp;&amp; (classes[i].prototype = new (classes[i-1])());\n&gt; }\n&gt;\n&gt; var obj0 = new classes[0],\n&gt;  obj9999 = new classes[9999];\n&gt;\n&gt; var start = (+new Date()); for(var i=0; i&lt;10000000; i++){ obj0   instanceof classes[0] } console.log((+new Date()) - start);\n138\n&gt; var start = (+new Date()); for(var i=0; i&lt;10000000; i++){ obj999 instanceof classes[0] } console.log((+new Date()) - start);\n138\n</code></pre>\n\n<p>I think it's safe to assume there is no performance hit if it can drill through 10,000 classes and not see 1 ms performance difference :)</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>According to what Felix Kling quoted, all that instanceof does (excluding the error checks) is to check whether the prototype property(which has to be an object) of the Function can be found somewhere down the prototype chain</p>\n\n<pre><code>person instanceof Object\n// ROUGHTLY does\nreturn (\n     person.__proto__==Object.prototype\n  || person.__proto__.__proto__==Object.prototype\n  || ... );\n</code></pre>\n\n<p>Here's some pseudocode:</p>\n\n<pre><code>person instanceof Person\n//ROUGHTLY equals\nperson.instanceOf(Person)\n\nperson.instanceOf = function(Person) {\n    if(typeof Person!='object') throw new TypeError;\n    if(!([[HasInstance]] in Person)) throw new TypeError;\n    return Person.[[HasInstance]](this /* person */)\n}\n\n\nPerson.[[HasInstance]] = function(V) {\n    if(typeof V!='object') return false;\n    var O = this.prototype;\n    if(typeof O!='object') throw new TypeError;\n    while(true) {\n        V = V.__proto__; // [[prototype]] (hidden) property\n        if(V==null) return false;\n        if(V==O) return true;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I've got 2 questions regarding instanceof. if i do <strong>john instanceof Human</strong> does the <strong>instanceof</strong> travel up the prototype chain 1 by 1 and works something like this way: </p>\n\n<pre><code>var temp = john.constructor;\nwhile (true) {\n    if (temp === Human) {\n        return true;\n    }\n    temp = temp.prototype.constructor\n}\nreturn false;\n</code></pre>\n\n<p>and if so, is it true to say that instanceof is relatively slow, compared to say simply storing a unique interface id number in the property of every object. (i mean we can leave out the discussion on this would be troublesome because i'm sure there's some way to create a tool to automate it)</p>\n",
            "last_activity_date": 1350140978,
            "question_id": 5925063,
            "score": 7,
            "tags": [
                "javascript",
                "inheritance",
                "instanceof"
            ],
            "title": "how exactly does the instanceof works, and relatively, is it slow?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Are your paths defined relatively (small letters) or absolutely (capitals)?  If absolute, joining two paths is trivial, just append the values of the <code>d</code> attribute.  If you have two paths like this:</p>\n\n<pre><code>&lt;path id=\"Line1\" d=\"M50,50\n         A30,30 0 0,1 35,20\n         L100,100\"\n      style=\"stroke:#660000; fill:none;\"/&gt;\n&lt;path id=\"Line2\" d=\"M110,110\n         L100,0\"\n      style=\"stroke:#660000; fill:none;\"/&gt;\n</code></pre>\n\n<p>Then this JavaScript code:</p>\n\n<pre><code>var Line1 = document.getElementById(\"Line1\");\nvar Line2 = document.getElementById(\"Line2\");\n//Add paths together\nLine1.setAttribute('d', Line1.getAttribute('d') + ' ' + Line2.getAttribute('d'));\n//Remove unnecessary second path\nLine2.parentNode.removeChild(Line2);\n</code></pre>\n\n<p>Will lead to you having a single path like this:</p>\n\n<pre><code>&lt;path id=\"Line1\" d=\"M50,50\n         A30,30 0 0,1 35,20\n         L100,100 M110,110\n         L100,0\"\n      style=\"stroke:#660000; fill:none;\"/&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/J65HM/\" rel=\"nofollow\">Here's a jsFiddle</a>, it works in Firefox 4 (needs an HTML5 parser so you can have inline SVG).</p>\n\n<p>If your paths are relative then you're going to have to add something between the appended paths so that the second one starts in the correct place.</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I have drawn two path lines using SVG and I've saved these elements into two variables in my javascript code: 'Line1', and 'Line2', and I need to merge the two lines into one single path element. Is there a way to do so?</p>\n",
            "last_activity_date": 1375354066,
            "question_id": 5892549,
            "score": 7,
            "tags": [
                "javascript",
                "svg"
            ],
            "title": "Is there a way to merge two path elements (svg) using Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Your browser asks for that image with a specific HTTP GET request, as specificated in HTTP protocol. Once it asks for it, the http server starts the transfer.</p>\n\n<p>So, it is between the browser (as http client) and the http server.</p>\n\n<p>Since http protocol does not takes into account the option to abort a transfer, the browser should implement a out-of-standard mechanism to programmatically abort the connection. But since this is not specified in any standard, i think you won't find any way to do that with javascript or any client side code.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Although I can't find the bug report now, I believe this is a long-standing logged WebKit bug. Firefox (and IE I think) have more sane behavior.  I'm going back a bit in my brain, but if I recall on those browsers, resetting the img.src will in fact cancel outstanding downloads.  I am positive that Firefox does this when a download is \"waiting in line\" for a chance at an open HTTP connection, and I seem to recall that it will actually force close connections sometimes.</p>\n\n<p>I've never found a way to coax WebKit based browsers into cancelling an img download in progress, whether it is just queued or already actively downloading.</p>\n\n<p>This really sucks if you're making something like a mapping client and need more fine grained control over images.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Setting the .src property to an empty string should cancel the load:</p>\n\n<pre><code>//load image from url\nvar img = new Image();\nimg.src = 'http://somedomain.com/image.jpg';\n\n......\n\n//cancel load\nimg.src = '';\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Suppose in Javascript that you assign the SRC to an IMG tag.  It is a large SRC and you want to cancel it before it has finished loading.  Assigning the SRC to another image will not stop the data from loading.</p>\n\n<p>That is, in the middle of the load you can assign the SRC to another smaller image and the smaller image will be loaded and appear in your browser.  However, the original SRC still continues downloading.</p>\n\n<p>Similarly, deleting the IMG node will not prevent the SRC from continuing to download.  No guesses please, look at the repro steps.</p>\n\n<p>REPRO</p>\n\n<p>(1) Load this URL in Chrome in Windows:  <a href=\"http://68.178.240.17/imgLoadTest/imgLoadTest.htm\">http://68.178.240.17/imgLoadTest/imgLoadTest.htm</a></p>\n\n<p>(2) Open up the developer panel by pressing CTRL-SHIFT-J </p>\n\n<p>(3) On the top row of icons in the Chrome developer panel click the Network icon to watch network activity.  </p>\n\n<p>(4) On the web page loaded in Step 1 click the Load Image button and watch the developer panel as a large (32meg) image starts loading. </p>\n\n<p>(5) On the web page click the Try To Cancel button to load a different image. </p>\n\n<p>(6) A small image loads, but watch the network in the developer panel and notice that the large image continues to download.</p>\n",
            "last_activity_date": 1414062248,
            "question_id": 5278304,
            "score": 7,
            "tags": [
                "javascript",
                "tags",
                "load",
                "image"
            ],
            "title": "How to cancel an image from loading"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>This will largely depend on the browser you are using, as this is a quirk of browser design and not JavaScript.</p>\n\n<p>What happens in your case is when you click an <code>&lt;input type=\"button\"&gt;</code> while having a <code>&lt;div&gt;</code> highlighted, the <code>&lt;div&gt;</code> remains highlighted. However, when you click an <code>&lt;input type=\"button\"&gt;</code> while having an <code>&lt;input type=\"text\"&gt;</code> or <code>&lt;textarea&gt;</code> highlighted, they lose focus and the highlight is removed (thus making your code fail).</p>\n\n<p>I would take a closer look at what you are trying to accomplish and consider rethinking how you are approaching this problem.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>In most browsers, <code>window.getSelection()</code> only works with selections within text nodes and elements within the document. It doesn't apply to text within <code>&lt;input&gt;</code> and <code>&lt;textarea&gt;</code> elements (although in WebKit <code>window.getSelection().toString()</code> will return the selected text within a focussed text input or textarea. See <a href=\"http://jsfiddle.net/PUdaS/\" rel=\"nofollow\">http://jsfiddle.net/PUdaS/</a>). To get the selection within an input, use the input's <a href=\"https://developer.mozilla.org/en/DOM/HTMLTextAreaElement\" rel=\"nofollow\"><code>selectionStart</code> and <code>selectionEnd</code></a> properties:</p>\n\n<pre><code>&lt;input type=\"text\" id=\"test\" value=\"Some text\"&gt;\n\n&lt;input type=\"button\" value=\"Click me\"\n    onclick=\"alert(document.getElementById('test').selectionEnd);\"&gt;\n</code></pre>\n\n<p>Note that IE up to and including version 8 does not support the <code>selectionStart</code> and <code>selectionEnd</code> properties, and a <a href=\"http://stackoverflow.com/questions/235411/is-there-an-internet-explorer-approved-substitute-for-selectionstart-and-selectio/4207763#4207763\">different, more complicated solution</a> is required. IE doesn't support <code>window.getSelection()</code> either, so this code will work in all the browsers your original code does.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>2 remarks:</p>\n\n<p><em><code>&lt;input... &gt;</code></em> tag is not a  tag and shall be closed accordingly like <em><code>&lt;input ... /&gt;</code></em> otherwise you should use the <em><code>&lt;button&gt;</code></em> tag (but not within a  for X-browser compliance reasons)</p>\n\n<p>If you don't want to enter into a non-end story, you may reconsider the way to handle your point as follow : keep your <em><code>&lt;div&gt;</code></em> as it is and fireup a DOM event on that  (instead of using the onclick event on the  tag). If you can read french, I have summarized plenty of examples <a href=\"http://hornetbzz.developpez.com/tutoriels/javascript/dom/\" rel=\"nofollow\">here</a>. This way is significant heavier as your first way, but much more powerful afterwards as you can fire up events how you want on the DOM, use callback functions and so on..</p>\n\n<p>The principle is the following :<br>\nHTML page on one hand  </p>\n\n<pre><code>&lt;div id=\"test\"...&gt;Lorem..&lt;/div&gt;  \n&lt;script src=\"...\"/&gt;  \n</code></pre>\n\n<p>Non intrusive javascript code on the other hand</p>\n\n<pre><code>// your event handler here\nfunction Dothisorthat(e) {\n // pop up the dom content or edit it or start an ajax request or whatever you need here\n return false;\n}\n\n// This is read in the third place  \nfunction attacherAction() {\n// Attach the action \"Dothisorthat\" on the event \"onclick\" occuring on your div \"test\"\nid ='test'; // your div id\nif (document.getElementById(id)) {\n       zLink = document.getElementById(id);\n       zLink.onclick = function() {\n           Dothisorthat(this); // in your case, you can write a small function to pop up or edit the div content\n       }\n   }\n}  \n// This is read second\nfunction addLoadEvent(func) {  \n  var oldonload = window.onload;  \n  if (typeof window.onload != 'function') {  \n    window.onload = func;  \n  } else {  \n    window.onload = function() {  \n      if (oldonload) {  \n        oldonload();  \n      }  \n      func();\n    }\n  }\n}  \n    // This is read first\naddLoadEvent(attacherAction);  \n</code></pre>\n\n<p>Hope that helps</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a contenteditable div, like so:</p>\n\n<pre><code>&lt;div id=\"test\" contentEditable=\"true\" style=\"width: 600px; height:300px;\"&gt;Lorem ipsum dolor sit amet&lt;/div&gt;\n</code></pre>\n\n<p>for which I use the following code:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Click me\" onclick=\"alert(window.getSelection().focusOffset.toString());\"&gt;&lt;/button&gt;\n</code></pre>\n\n<p>Clicking on the button when I move the caret around in the div, returns to me the actual position (offset) of the caret within the div.</p>\n\n<p>The problem is when I replace the contenteditable div with an input type=text or password control, and keep the contenteditable property=true, and click on the button, I always get a zero. Why is this?</p>\n\n<p>Thanks for looking.</p>\n",
            "last_activity_date": 1355823571,
            "question_id": 5072155,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "contenteditable",
                "caret"
            ],
            "title": "How do I get window.getselection to work for an input type=text field"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>you can use the function parseInt() to transform the string stored in val1.value into a number:</p>\n\n<pre><code>var val2 = parseInt(val1.value) + 1;\n</code></pre>\n\n<p>Note that <code>Number(val1.value)</code> will also convert your value into a number.</p>\n\n<p><strong>-edit-</strong><br>\nAs yc suggest, is highly recommended to use <code>parseInt(val1.value, 10) + 1;</code> because if your string starts with a <code>\"0\"</code> the string is interpreted as octal. eg. <code>parseInt(\"0123\") == 83</code> and not 123 </p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>you must add number, so try it without quotes :-)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The simplest and also preferred way would be to use <code>+</code> to cast to a number.</p>\n\n<p><strong>Examples:</strong></p>\n\n<pre><code>+'234'; // 234\n+'042'; // 42! It does not convert to octal\n</code></pre>\n\n<p><strong>In your case:</strong></p>\n\n<pre><code>var val1 = +(document.getElementById('&lt;%= rng1.ClientID %&gt;').value); // () added just for the looks\nvar val2 = val1.value + 1; // if val1 is 5, val2 will be 6 hooray!\nalert(val2); // just val2, since it's a plain number not an html input element\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>In an external JavaScript file you can't use the <code>&lt;%=ControlID.ClientID %&gt;</code> to get the client id.</p>\n\n<p>If there you using an external JavaScript file you need to pass client id value to that function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>parseInt($('.scpContainer').height()+200)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm trying to add <code>1</code> to my JavaScript variable, but the following code doesn't give expected results:</p>\n\n<pre><code>var val1 = document.getElementById('&lt;%= rng1.ClientID %&gt;');\nvar val2 = val1.value + \"1\";\nalert(val2.value);\n</code></pre>\n\n<p>How can I do this?</p>\n",
            "last_activity_date": 1423041942,
            "question_id": 4897408,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How to add together numerical values that are stored in strings?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>This should do it for you:</p>\n\n<p><strong>Function:</strong></p>\n\n<pre><code>  function addCommas(nStr)\n    {\n        nStr += '';\n        x = nStr.split('.');\n        x1 = x[0];\n        x2 = x.length &gt; 1 ? '.' + x[1] : '';\n        var rgx = /(\\d+)(\\d{3})/;\n        while (rgx.test(x1)) {\n            x1 = x1.replace(rgx, '$1' + ',' + '$2');\n        }\n        return x1 + x2;\n    }\n</code></pre>\n\n<p><strong>Usage:</strong> </p>\n\n<pre><code>addCommas(1000)\n// 1,000\n\naddCommas(1231.897243)\n// 1,231.897243\n</code></pre>\n\n<p>Thanks to <a href=\"http://www.mredkj.com/javascript/nfbasic.html\">mredjk.com</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<pre><code>function addCommas(nStr)\n{\n    nStr += '';\n    x = nStr.split('.');\n    x1 = x[0];\n    x2 = x.length &gt; 1 ? '.' + x[1] : '';\n    var rgx = /(\\d+)(\\d{3})/;\n    while (rgx.test(x1)) {\n        x1 = x1.replace(rgx, '$1' + ',' + '$2');\n    }\n    return x1 + x2;\n}\n</code></pre>\n\n<p>via <a href=\"http://www.mredkj.com/javascript/nfbasic.html\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<pre><code>val.replace(/(\\d{1,3})(?=(?:\\d{3})+$)/g,\"$1,\")\n</code></pre>\n\n<p>:-)</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I'm not sure why the other answers split the number on a decimal point-\nyou can replace, starting with a digit,until there are no more digits.\nIt will quit when it runs out of digits or hits a non-digit.</p>\n\n<pre><code>function addCommas(n){\n    var rx= /(\\d+)(\\d{3})/;\n    return String(n).replace(/^\\d+/, function(w){\n        while(rx.test(w)) w= w.replace(rx,'$1,$2');\n        return w;\n    });\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>So I have a value in Javascript:</p>\n\n<pre><code>var val = Entry.val;\n</code></pre>\n\n<p>One example of this value is <code>277385</code>. How do I, in Javascript, convert this number to <code>277,385</code>, as well as any number to that so it has commas in the correct spots?</p>\n",
            "last_activity_date": 1296157337,
            "question_id": 4820482,
            "score": 7,
            "tags": [
                "javascript",
                "localization"
            ],
            "title": "Place commas in Javascript integers"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>place this code in the override file. Make sure the override file is included after the orginal one. </p>\n\n<pre><code>var orig_Mybasefunction = window.Mybasefunction;\nwindow.Mybasefunction = function(){\n    orig_Mybasefunction();\n    ...\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 17
                }
            ],
            "body": "<p>I have a JavaScript file, <code>Mybasefile.js</code>, which has the function <code>Mybasefunction()</code>. I want to override this function in another JavaScript file. When the function is called in a button click, I want the original <code>Mybasefunction()</code> to be executed along with some other code. How can I do this?</p>\n",
            "last_activity_date": 1389995531,
            "question_id": 4814550,
            "score": 7,
            "tags": [
                "javascript",
                "override"
            ],
            "title": "How to override a function in another javascript file?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Although you <em>can</em> prototype on the <code>HTMLElement</code> in many browsers - Internet Explorer (6,7,8) is <strong>NOT</strong> one of them. AFAIK, IE9 does support this (though I haven't tested it).</p>\n\n<p>For browsers that do handle it, you can do:</p>\n\n<pre><code>HTMLElement.prototype.doHello = function(thing){\n  alert('Hello World from ' + thing);\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>In a word, don't.  It is best <a href=\"http://www.nczonline.net/blog/2010/03/02/maintainable-javascript-dont-modify-objects-you-down-own/\" rel=\"nofollow\">not to modify objects you don't own</a>.</p>\n\n<p>This is particularly true for <code>HTMLElement</code>, which you cannot modify in some browsers.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This <a href=\"http://perfectionkills.com/whats-wrong-with-extending-the-dom/\" rel=\"nofollow\">article from perfectionkills.com</a> will probably give you some insight into how it's done, and why you <em>shouldn't</em> do it.</p>\n\n<p><em>(By the way, jQuery doesn't extend DOM elements. They use DOM wrappers instead.)</em></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would strongly suggest not attempting to do this, for a few reasons:</p>\n\n<ul>\n<li><strong>Browser compatibility</strong>. While it is possible in several browsers, it isn't possible in IE &lt;= 8.</li>\n<li><strong>DOM elements are host objects</strong>. Host objects (i.e. those provided by the environment that aren't native JavaScript objects) have no obligation to play by the same rules as native JavaScript objects and other than specified DOM behaviour can essentially do what they like. So, even if some browsers provide an <code>HTMLElement</code> prototype and allow you to augment it, there's no guarantee that it will work as you expect.</li>\n<li><strong>Compatibility with other code in your page</strong>. If any other code in your page (such as Prototype) messes with the <code>HTMLElement</code> prototype, you risk naming collisions and hard-to-detect bugs.</li>\n</ul>\n\n<p>Instead, I would suggest creating wrapper objects around DOM nodes as jQuery, YUI and other libraries do.</p>\n\n<p>Kangax has written a <a href=\"http://perfectionkills.com/whats-wrong-with-extending-the-dom/\" rel=\"nofollow\">good article on this</a>, covering all these points and more.</p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>For example for <code>this.parentNode</code> I would like to just write <code>this.p</code> or instead of\n<code>document.getElementById('someid')</code> just write <code>document.g('someid')</code>. Of course that are simple examples, I just want to know what is the correct way to do it.</p>\n\n<p>(I know I can use jQuery or Prototype, but I'd like to learn how it is really done in JS)</p>\n",
            "last_activity_date": 1381768814,
            "question_id": 4670361,
            "score": 7,
            "tags": [
                "javascript",
                "methods"
            ],
            "title": "How to add my own methods to HTMLElement object?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can use javascript's  escape function to encode the URL.</p>\n\n<pre><code>Example : \nescape(\"It's me!\") // result: It%27s%20me%21\n</code></pre>\n\n<p>URL Decoding in C# using Uri.UnescapeDataString() function.</p>\n\n<pre><code>Example : \ns = \"%46%69%67%68%74%20%74%68%65%20%70%6F%77\";\nUri.UnescapeDataString(s); \n</code></pre>\n\n<p>EDIT -------------------------</p>\n\n<p>To Parse Query parameters in C# use</p>\n\n<pre><code>NameValueCollection qscoll = HttpUtility.ParseQueryString(querystring);\n</code></pre>\n\n<p>Hope this will help.</p>\n\n<p>Thanks!</p>\n\n<p>Hussain</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You can use escape ( <a href=\"http://www.w3schools.com/jsref/jsref_escape.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/jsref_escape.asp</a> ) or encodeURI ( <a href=\"http://www.w3schools.com/jsref/jsref_encodeuri.asp\" rel=\"nofollow\">http://www.w3schools.com/jsref/jsref_encodeuri.asp</a> ) to encode on Javascript side.</p>\n\n<p>On server side:\nFor C# - Use System.Web.HttpUtility.UrlDecode to decode ( <a href=\"http://msdn.microsoft.com/en-us/library/adwtk1fy.aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/adwtk1fy.aspx</a> )\nFor Java - Use URLDecoder to decode ( <a href=\"http://download.oracle.com/javase/1.5.0/docs/api/java/net/URLDecoder.html\" rel=\"nofollow\">http://download.oracle.com/javase/1.5.0/docs/api/java/net/URLDecoder.html</a> )\nFor PHP - Use urldecode ( <a href=\"http://php.net/manual/en/function.urldecode.php\" rel=\"nofollow\">http://php.net/manual/en/function.urldecode.php</a> )</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a url with querystrings through which some data are passed. I want to retrieve the data in the server side. What is the solution for this problem</p>\n",
            "last_activity_date": 1294309845,
            "question_id": 4613430,
            "score": 7,
            "tags": [
                "c#",
                "javascript",
                "urldecode"
            ],
            "title": "How to encode url in javascript and decode it in C#"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>in php: definitely not - it's executed on your server without access to the cleints browser.</p>\n\n<p>maybe there's a solution using javascript (but i've never heard of that, and i'm pretty sure this isn't possible too - at least not as a cross-browser solution).</p>\n\n<p>i think the best chance you'll have (if there even is one) is using other client-side languages like flash, silverlight or a java-plugin as this ones can do a lot more than javascript - but i'm sorry i don't know any of these good enough to give more information or hints.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As far as determining the absolute tab index, I know of no way to do it with Javascript. You can identify windows by their names, but not anything else.</p>\n\n<p>In your example of two tabs containing the same web page, you should be able to uniquely identify them by making them aware of each other. You'd need to use cookies for this. Essentially, when a page is loaded, it would check for a cookie that tells it about other instances of the page that are currently loaded, and make decisions accordingly.</p>\n\n<p>In this scenario, your onload handler would check the cookies, and register the loading page. You'd also need an onunload handler to unset the cookie pertaining to the page being unloaded.</p>\n\n<p>See <a href=\"http://stackoverflow.com/questions/4079280/javascript-communication-between-browser-tabs-windows\">Javascript communication between browser tabs/windows</a> for more information on how to use cookies to communicate between windows with Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Strictly speaking.  TABS are on the end user's machine.  PHP works on the server.  PHP can't see what the end user's machine is doing, it can only <strong><em>serve</em></strong> the end user PHP'ed pages.</p>\n\n<p>Google does this with JavaScript and Cookies.   For every instance of the page opened, increment a cookie counter.  If the counter > 1, use AJAX to display an error message.  Also, prohibit the page from functioning if cookies or JavaScript is disabled.</p>\n\n<p>Look into jQuery.</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Don't waste anymore time on this mate. It isn't possible, mainly because any webpage inside browser will not be able to get this kind of information due to security restrictions.</p>\n\n<p>Try looking for an laternative approach as some of the other guys have suggested in their comments.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I am sure there is not a global variable for support that information. But maybe clever browsers such as Firefox or Google Chrome might support something on it. I have made a quick search on net and I came with these.</p>\n\n<p>First, check <a href=\"http://codesnippets.joyent.com/posts/show/1065\" rel=\"nofollow\">Mozilla Tab Helper</a> can be work with Mozilla. But be remember, this will never be a cross browser solution. Also, I am thinking there is not a cross browser solution.</p>\n\n<p>Second one is, if you want to use this for your own use then it might bu useful, I don't test it. This is a addon. Here is the <a href=\"https://addons.mozilla.org/en-US/firefox/addon/open-tab-count/\" rel=\"nofollow\">Open Tab Count Mozilla Addon</a></p>\n\n<p><a href=\"http://i.stack.imgur.com/IiQvC.png\" rel=\"nofollow\">Open Tab Preview</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>So in most current browsers there is the feature of Tabs, is there a way to get the Tab index?</p>\n\n<p>so Tab 1 has www.google.com opened in it and Tab 2 has www.google.com opened in it, is there a way to identify what the Tab index is?</p>\n\n<p>Pseudo Code:</p>\n\n<pre><code>if($tab == 2) {\n  alert \"Tab 2 is active\\n\";\n}\n\nif($tab == 1) {\n  alert \"Please use Tab 2 as this is Tab 1\\n\";\n}\n</code></pre>\n\n<p>Funny as everything I search for about tabs is related to the tab index of the webpage itself, sigh...</p>\n",
            "last_activity_date": 1351579584,
            "question_id": 4510454,
            "score": 7,
            "tags": [
                "php",
                "javascript",
                "browser",
                "browser-tab"
            ],
            "title": "Get Browser Tab Index/Id"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<pre><code>(cpu_facing-player_degree+360)%360&gt;180\n</code></pre>\n\n<ul>\n<li><code>false</code>: turn in the negative direction</li>\n<li><code>true</code>: turn in the positive direction</li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 14
                }
            ],
            "body": "<p>Im making a simple computerplayer to my simple 2d action game. it suppose to turn towards me and shoot, but i cant figure out how to calc the shortest path... should it turn left of right if it want to shoot and kill me :P ?</p>\n\n<p>Ive got two angles: cpu_facing (direction the cpu is facing) and player_degree (the angle calculated when cpu is in the center).</p>\n\n<p>(im working with degrees, dont like radian :P)</p>\n\n<p>Anyone done this in javascript?</p>\n",
            "last_activity_date": 1291668678,
            "question_id": 4370746,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "Calculate the shortest way to rotate, right or left?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>AFAIK the number of cookies you can set is 20 per domain or 300 maximum and each cookie across the board is generally capped at a 4k limit.</p>\n\n<p>The <a href=\"http://www.ietf.org/rfc/rfc2109.txt\" rel=\"nofollow\">RFC for cookies</a> (section 6.3) has most of the information you want to find.</p>\n\n<p>As far as setting a cookie <a href=\"http://stackoverflow.com/questions/1595872/what-happens-when-cookies-file-exceeds-maximum-size\">larger than the recommended size</a> is concerned, I would suggest that some browsers will handle that differently, but taking the lowest-common denominator into consideration (IE6), I'd suggest you consider different forms of data persistence if you have that much data you need to store.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>It varies from browser to browser. The biggest limitation is IE6 which can only accept 20 domain cookies (all other modern browsers [FF3+, IE7/8, Safair 4/5, Chrome] can accept much much more).  Once IE6 reaches it's 20 cookie limit, it randomly overwrites an older cookie, which is a major concern since you'll never know which one got removed. </p>\n\n<p>If you like the run some specific tests -- visit this blog post and experiment with the authors test scripts.</p>\n\n<p><a href=\"http://www.ghacks.net/2008/08/16/browser-cookie-limits/\">http://www.ghacks.net/2008/08/16/browser-cookie-limits/</a></p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>I looked into this today, if you want to support most browsers, then don't exceed 30 cookies per domain, and don't exceed 4095 bytes per domain (i.e. total size of all cookies &lt;= 4095 bytes).</p>\n\n<p>As for what happens when you exceed the limit, that depends on each browser and which limit you exceed. For example, in Chrome 8, when I add cookie 181, 20 cookies get deleted. Also in chrome 8, when I add a cookie with 5000 bytes, it gets truncated down to 4096 bytes. I suspect truncating is the standard way to handle over sized cookies.</p>\n\n<p>To read more about it here is my <a href=\"http://myownplayground.atspace.com/cookietest.html\" rel=\"nofollow\">test page and results</a>.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Just wondering what is the size and number of cookies allowed by IE, FF, Chrome, and Safari. What is the number allowed per host and the size of each cookie? Also what would happen if you try to store cookie larger than the max size using Javascript?</p>\n",
            "last_activity_date": 1294232761,
            "question_id": 4083291,
            "score": 7,
            "tags": [
                "javascript",
                "browser",
                "cookies"
            ],
            "title": "What is the number and size of cookies allowed by major browsers?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can override the <code>val()</code> method globally, then check whether it's a normal input.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>try this:</p>\n\n<pre><code>jQuery.fn.rVal=function() {\n    if(this[0]) {\n        var ele=$(this[0]);\n        if(ele.attr('placeholder')!=''&amp;&amp;ele.val()==ele.attr('placeholder')) {\n            return '';\n        } else {\n            return ele.val();\n        }\n    }\n    return undefined;\n};\n</code></pre>\n\n<p>and simply use $(\"#ele_id\").rVal() to retrieve values.\nOr if you want to replace the val function (and use it as normal):</p>\n\n<pre><code>jQuery.fn.rVal=jQuery.fn.val;\njQuery.fn.val=function(value) {\n    if(value!=undefined) {\n        return this.rVal(value);\n    }\n    if(this[0]) {\n        var ele=$(this[0]);\n        if(ele.attr('placeholder')!=''&amp;&amp;ele.rVal()==ele.attr('placeholder')) {\n            return '';\n        } else {\n            return ele.rVal();\n        }\n    }\n    return undefined;\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Could you possibly use a watermark plugin?</p>\n\n<p><a href=\"http://code.google.com/p/jquery-watermark/\" rel=\"nofollow\">http://code.google.com/p/jquery-watermark/</a></p>\n\n<p>It's pretty easy to use, just call <code>$(\"input\").watermark(\"Placeholder text\")</code> and it will behave in the way you described</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Suppose I'm using a \"placeholder\" jQuery plugin that reads the \"placeholder\" attribute from input elements and simulates it for browsers that don't yet support placeholders.</p>\n\n<p>But I would still like $(\"input\").val() to work properly -- that is, to return \"\" if the text in the textbox is the placeholder text.  Is there anyway I can override .val() just for these inputs?</p>\n",
            "last_activity_date": 1282339009,
            "question_id": 3534267,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Can I override jQuery .val() for only some input elements?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Use $.map like so:</p>\n\n<pre><code>var links = $('a').map(function() { return this.href }).get()\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<pre><code>var links = $(\"a\").map(function(){return $(this).attr(\"href\")}).get();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>In jQuery, it is easy to select elements as array.</p>\n\n<blockquote>\n  <p>$(\"a\");  // return as elements array of anchors</p>\n</blockquote>\n\n<p>But is it possible to select <strong>matched elements' attributes</strong> as array?</p>\n\n<p>Currently I need to do something like...</p>\n\n<blockquote>\n  <p>links = [ ]; </p>\n  \n  <p>$(\"a\").each(function() {</p>\n\n<pre><code>href = $(this).attr(\"href\");\nlinks.push(href); \n</code></pre>\n  \n  <p>});</p>\n</blockquote>\n\n<p>Are there any better method to fill the variable <strong>links</strong> with href of the all matched anchors?</p>\n",
            "last_activity_date": 1363283606,
            "question_id": 3355155,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Return matched elements&#39; attribute ar array using jQuery"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>use <a href=\"http://www.mediacollege.com/internet/javascript/basic/document-write.html\" rel=\"nofollow\">document.write</a> or if you want more flexibility use <a href=\"http://jquery.com/\" rel=\"nofollow\">jquery</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think posting a complete solution would be too much, but check out jQuery for this.\nI give you a hint, jQuery's <a href=\"http://api.jquery.com/append/\" rel=\"nofollow\">.append()</a> could be very useful for you :)</p>\n",
                    "is_accepted": true,
                    "score": 2
                },
                {
                    "body": "<p>Just use the standard DOM API (<code>document.createElement()</code>, <a href=\"http://msdn.microsoft.com/en-us/library/ms536389%28VS.85%29.aspx\" rel=\"nofollow\">see these docs for an example</a>) to create all the elements of the form.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>My recommendation would be to get the <a href=\"http://documentcloud.github.com/underscore/\" rel=\"nofollow\">underscore.js</a> library and use its <a href=\"http://documentcloud.github.com/underscore/#template\" rel=\"nofollow\"><code>template</code></a> function to create your forms.  (If underscore is too large for you, the template function can stand on its own too).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, you can create any amount of html including forms by running javascript, </p>\n\n<p>Perhaps:`</p>\n\n<pre><code>&lt;html&gt;\n  &lt;body&gt;\n    &lt;h1&gt;My Form&lt;/h1&gt;\n    &lt;div id=\"formcontent\"&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Our javascript might look like:</p>\n\n<pre><code>var e1 = document.CreateElement(\"input\");\nel.type = \"text\";\nel.name = \"myformvar\";\n\nvar cont = document.GetElementById(\"formcontent\")\ncont.appendChild(e1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Check this<br>\n<a href=\"http://www.trans4mind.com/personal_development/JavaScript2/createSelectDynamically.htm\" rel=\"nofollow\">http://www.trans4mind.com/personal_development/JavaScript2/createSelectDynamically.htm</a> </p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>TRY THIS...              </p>\n\n<pre><code> myWin = open(\"\", \"displayWindow\", \"width=800,height=500,status=yes,toolbar=yes,menubar=yes\");\n\n                myWin.document.open();\n                myWin.document.write(\"&lt;html&gt;&lt;head&gt;&lt;title&gt;V E N U S  &lt;/title&gt;\");\n                myWin.document.write(\"&lt;style type='text/css'&gt;.hdr{.......}&lt;/style&gt;\");\n                     myWin.document.write(\"&lt;/head&gt;&lt;body onload='window.print()'&gt;\");\n                          myWin.document.write(\"&lt;div class='hdr'&gt;\");\n\n                              myWin.document.write(\"what ever you want\");\n                              .\n                              .\n\n\n                         myWin.document.write(\"&lt;/div&gt;\");               \n                     myWin.document.write(\"&lt;/body&gt;&lt;/html&gt;\");\n                myWin.document.close();\n</code></pre>\n\n<p>that's will create a form with DIV inside it...</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could try something like this:</p>\n\n<p>The HTML part:</p>\n\n<pre><code>&lt;html&gt;\n &lt;head&gt;&lt;/head&gt;\n &lt;body&gt;\n\n &lt;body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>The javascript:</p>\n\n<pre><code>&lt;script&gt;\n//create a form\nvar f = document.createElement(\"form\");\nf.setAttribute('method',\"post\");\nf.setAttribute('action',\"submit.php\");\n\n//create input element\nvar i = document.createElement(\"input\");\ni.type = \"text\";\ni.name = \"user_name\";\ni.id = \"user_name1\";\n\n//create a checkbox\nvar c = document.createElement(\"input\");\nc.type = \"checkbox\";\nc.id = \"checkbox1\";\nc.name = \"check1\";\n\n//create a button\nvar s = document.createElement(\"input\");\ns.type = \"submit\";\ns.value = \"Submit\";\n\n// add all elements to the form\nf.appendChild(i);\nf.appendChild(c);\nf.appendChild(s);\n\n// add the form inside the body\n$(\"body\").append(f);   //using jQuery or\ndocument.getElementsByTagName('body')[0].appendChild(f); //pure javascript\n\n&lt;/script&gt;\n</code></pre>\n\n<p>This way you can create as many elements as you want dynamically.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>My idea is that you can use the <a href=\"https://github.com/daffl/jquery.dform\" rel=\"nofollow\">dform</a> jquery plugin from github to create  forms directly by giving input as json data. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>how can I go about creating a form with javascript?</p>\n\n<p>I have NO idea on how to proceed, I have been googling my face off but there is nothing definitive that can show me how to dynamically create forms with it.</p>\n\n<p>Thanx in advance!</p>\n",
            "last_activity_date": 1419957110,
            "question_id": 3297143,
            "score": 7,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Dynamically create a HTML form with Javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Events can be handled by a function defined the parent window if the <code>iframe</code> is a page from the <em>same</em> domain (see MDC's article on <a href=\"https://developer.mozilla.org/en/Same_origin_policy_for_JavaScript\">Same Origin Policy</a>); however, events will not bubble up from the <code>iframe</code> to the parent page (at least not in my tests).</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>rather then catch an event on the main page, you can catch the event at the iframe, and call a function on the main page.</p>\n\n<pre><code>&lt;-- main page --&gt;\nfunction catchIt()\n{\n // code here\n}\n\n\n&lt;-- iframe page --&gt;\n\nfunction doIt()\n{\n top.catchIt(); \n}\n\n&lt;a onclick=\"doIt();\"&gt;test&lt;/a&gt;\n</code></pre>\n\n<p>i think it would work but didnt test it</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I haven't tested this cross-browser yet, but it works in FF.  </p>\n\n<p>In the iFrame you can fire on the element parent.document:</p>\n\n<pre><code>Event.observe(window, 'load', function() {\n  parent.document.fire('custom:event');\n});\n</code></pre>\n\n<p>and in the parent frame you can catch it with:</p>\n\n<pre><code>document.observe('custom:event', function(event) { alert('gotcha'); });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>Suppose I have a page located at <code>www.example.com/foo</code>, and it contains an <code>&lt;iframe&gt;</code> with <code>src=\"http://www.example.com/bar\"</code>. I want to be able to fire an event from <code>/bar</code> and have it be heard by <code>/foo</code>. Using the Prototype library, I've tried doing the following without success:</p>\n\n<blockquote>\n  <p>Element.fire(parent, 'ns:frob');</p>\n</blockquote>\n\n<p>When I do this, in Firefox 3.5, I get the following error:</p>\n\n<blockquote>\n  <p>Node cannot be used in a document other than the one in which it was created\"  code: \"4\n  Line 0</p>\n</blockquote>\n\n<p>Not sure if that's related to my problem. Is there some security mechanism that's preventing scripts in <code>/bar</code> from kicking off events in <code>/foo</code>?</p>\n",
            "last_activity_date": 1354813865,
            "question_id": 2046737,
            "score": 7,
            "tags": [
                "javascript",
                "firefox",
                "prototypejs"
            ],
            "title": "Can events fired from an iframe be handled by elements in its parent?"
        },
        {
            "answer_count": 0,
            "body": "<p>I am trying to test my application performance in different browsers (specially ie6).</p>\n\n<p>Also I have ie8, ff and Chrome installed. I am using tool like ietester to see how my app looks in ie6.</p>\n\n<p>I am trying to find a way, as how my application will behave if the browser is relatively slow (keeping the bandwidth/network speed same.). Is there a tool or a way to just slow down my browser (so that the page loads slowly and hance the js libraries load slowly) ?</p>\n\n<p>Thanks for your help!!</p>\n",
            "last_activity_date": 1262569964,
            "question_id": 1997089,
            "score": 7,
            "tags": [
                "javascript",
                "performance",
                "browser"
            ],
            "title": "How to Slow down the browser"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>It will be running on their own machine.  Just don't let them save strings and send to other people -- also don't put the values in the URL via a GET (so that it can be emailed).</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Well what that means is that any code a user wants to execute on your form they can and under the authority of the domain your site is running under.  </p>\n\n<p>So if someone wants to execute code on a machine which is locked down, but trusts your site (e.g. would allow you to run active x controls, etc. etc.), that person would have the ability to do so by typing in the correct code an using your site to eval the script into the trusted space.  Essentially, by doing this, you are certifying that anything which runs on that page is verified as safe to people who trust your domain. (Think trusted sites in IE etc.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If it's on a local \"Throw-away\" machine, then there is very little risk.  Since everything is being run client-side, they can only harm themselves with <a href=\"http://en.wikipedia.org/wiki/JavaScript\" rel=\"nofollow\">JavaScript</a>.  Worst case they could be opening <a href=\"http://en.wikipedia.org/wiki/Ajax%5F%28programming%29\" rel=\"nofollow\">Ajax</a> connections, but that's not much more harmful than giving them a Firefox with the <a href=\"https://addons.mozilla.org/en-US/firefox/addon/966\" rel=\"nofollow\">Tamper Data</a> add-on.</p>\n\n<p>In short, there's very little risk (except performance-wise) of giving them free-reign with JavaScript except to the machine they are using, but it's still nothing they couldn't do themselves if crafty enough.  I'd recommend either having them run it on their own machines, or on a demo box that you can re-image at any time when it gets too laden with crap to continue running.</p>\n\n<p>Now, giving them eval access to <a href=\"http://en.wikipedia.org/wiki/PHP\" rel=\"nofollow\">PHP</a>/etc on the other hand would be a horrible, terrible idea.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>The security risk you're taking, is that you're taking input from the user and running it in the context of a script on your site.  Imagine if you were a malicious cracker that for whatever reason had full access to modify the <a href=\"http://en.wikipedia.org/wiki/JavaScript\">JavaScript</a> running on a website.  You can do anything that JavaScript running on your domain would have the ability to do (including cookie stealing, <a href=\"http://en.wikipedia.org/wiki/Cross-site%5Fscripting\">XSS</a>, drive-by malware, etc.).</p>\n\n<p>The only thing you can realistically do to mitigate the risks is to not eval() user-provided content.  Attempts to sanitise the input to only allow \"safe\" input are doomed to failure; it's almost impossible to define what counts as safe, and even harder to actually limit the script to that (given that the potential attacker has an interpreted language with which to disguise his intentions).</p>\n\n<p>Mind you, if this is for educational purposes then one approach is just to make sure that all of the security holes don't matter.  Bad JavaScript cannot destroy your server or steal money from your bank account (unless it's on your bank's web page of course).  If the site hosting the page has no cookies or sessions worth stealing, and students know it's just an educational resource, I don't think there would be anything to worry about.  Most of the attacks rely on accessing confidential information stored on your domain, or tricking domain visitors into giving up confidential information somehow (<a href=\"http://en.wikipedia.org/wiki/Phishing\">phishing</a> attacks or similar).  For your purposes I think you'll be OK - just don't do it on a \"real\" website.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I would recommend you to sandbox all the user input evaling, to prevent the evaluated code to access all of the global (window) object properties and methods.</p>\n\n<p>Give a look to the following resources:</p>\n\n<ul>\n<li><a href=\"http://dean.edwards.name/weblog/2006/11/sandbox/\" rel=\"nofollow\">Sandboxing JavaScript Using <code>&lt;iframe&gt;</code></a></li>\n<li><a href=\"http://code.google.com/p/google-caja/\" rel=\"nofollow\">google-caja</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There is really no serious risk here. For example, open up firebug on this page and type in the console: <code>eval(\"alert('hello');\");</code>, problem? Not really.</p>\n\n<p>For demo purposes this is no big deal.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You could try using a JavaScript sandboxing library. Dean Edward's solution Caja do not restrict code from accessing the current window or document. The <a href=\"http://github.com/eligrey/jsandbox\" rel=\"nofollow\">JSandbox</a> library fully sandboxes code execution using <a href=\"https://developer.mozilla.org/En/Using%5Fweb%5Fworkers\" rel=\"nofollow\">Web Worker Threads</a> (you won't be able to use the DOM because of this) but it only works in browsers that support them.</p>\n\n<p>JSandbox is asynchronous so you will need to change your code to make use of callbacks if you choose to use it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I'm planning on throwing together a quick web page for my students to teach them about JavaScript programming. On this page, I'd like to give them a text box and allow them to run JavaScript so that they can see the dynamic nature of the language at work. However, I'm well aware that using eval() on user input is usually a really bad idea. What kind of security risks am I taking on by publishing a page like this? What steps should I take to mitigate these risks?</p>\n",
            "last_activity_date": 1256952296,
            "question_id": 1651118,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "Security risks of using eval() to execute user input in JavaScript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I assume that you'd want to \"unregister\" the script (which has already been registered) under some condition, like so:</p>\n\n<pre><code>Page.ClientScript.RegisterStartupScript(this.GetType(), \"KeyName\", \"alert('changed my mind')\", true);\n...\nif(condition)\n    Page.ClientScript.UnregisterStartupScript(this.GetType(), \"KeyName\", \"alert('changed my mind')\", true);\n</code></pre>\n\n<p>Why can't this simply be changed to:</p>\n\n<pre><code>if(!condition)\n    Page.ClientScript.RegisterStartupScript(this.GetType(), \"KeyName\", \"alert('changed my mind')\", true);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>It's actually worse than you think  - \"just re-registering it and having it do nothing\" isn't an option either. The register method checks if a script is already registered with that key, and does nothing if it is. Once you call <code>RegisterStartupScript</code>, nothing you can do will stop that script being rendered.</p>\n\n<p>As to why Microsoft did that, I'd guess that the possibility of changing or removing registered scripts was simply forgotten when <code>RegisterStartupScript</code> was first designed. The design choices happened to make it non-trivial to go back and create an unregister method, so they'd now need a good reason to do that.</p>\n\n<p>When you register a script, it's stored in two places within the ClientScriptManager. A ListDictionary allows checks for whether a script is already registered, and an ArrayList stores the actual scripts as they will be rendered. I assume that the ArrayList is used to ensure that scripts are rendered in the order in which they were registered, but it also means that you can't tell which string in the ArrayList belongs to which key.</p>\n\n<p>It wouldn't be terribly hard to equip your own page class with methods for <code>MaybeAddStartupScript(key,script)</code> and <code>ChangedMyMindAboutThatStartupScript(key)</code>. Store the keys and scripts in your own dictionary and then in PreRender, register whichever scripts made it this far. It's certainly annoying to have to do it yourself, though.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>After much studying, I found a solution to the problem if you want to <em>only run the registered script once</em> based on an event.  Special thanks to @stevemegson's answer here that helped me understand what the problem actually was.</p>\n\n<p>The solution involves the <code>Sys.Application.add_load</code> and <code>remove_load</code> javascript methods.</p>\n\n<p>It works like this.  A generic javascript function that first calls the worker function, then removes itself is the first statement, then <code>add_load</code> follows it up by calling that function:</p>\n\n<pre><code>protected void Button1_Click(object sender, EventArgs e)\n{\n    var script = @\"&lt;script language='javascript'&gt;\n                       function f(){ MyWorkerFunction(); \n                                     Sys.Application.remove_load(f);}; \n                       Sys.Application.add_load(f);\n               &lt;/script&gt;\";\n\n    ClientScript.RegisterStartupScript(GetType(), \n                                   \"MyWorkerFunctionKey\", \n                                    script, \n                                    false);\n}\n</code></pre>\n\n<p>This is based on a <a href=\"http://www.telerik.com/support/kb/aspnet-ajax/window/details/calling-radalert-from-codebehind-%28all-versions-of-radwindow%29\" rel=\"nofollow\">telerik solution</a>.  It references telerik controls, but all the functionality is ASP.NET.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Seems to me it is a bit wierd that you can do..</p>\n\n<pre><code>Page.ClientScript.RegisterStartupScript(this.GetType(), \"KeyName\", \"alert('changed my mind')\", true);\n</code></pre>\n\n<p>And then later on you can't unregister or stop the javascript from being rendered programatically.</p>\n\n<p>Why would Microsoft do this?</p>\n\n<p>I don't like the work around here..\n<a href=\"http://hemant-vikram.blogspot.com/2005/11/unregister-startup-script-workaround.html\">http://hemant-vikram.blogspot.com/2005/11/unregister-startup-script-workaround.html</a></p>\n\n<p>And I don't like the option of just re-registering it and having it do nothing..</p>\n\n<p>Thoughts?</p>\n",
            "last_activity_date": 1397068516,
            "question_id": 1328469,
            "score": 7,
            "tags": [
                "c#",
                "asp.net",
                "javascript",
                "clientscript"
            ],
            "title": "Why can&#39;t you UnRegisterStartupScript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I know Java uses two's complement to represent negative numbers, and <em>11111111111111111111111111111110</em> in binary, which is what <em>~1</em> gives, represents -2. Or, represented in binary with a negative sign, -10, which is what you got.</p>\n\n<p>The way you calculate the negative of 10 (in base 2) using two's complement is that you first invert all of the bits, giving you:</p>\n\n<p><em>11111111111111111111111111111101</em></p>\n\n<p>then you add 1, giving you:</p>\n\n<p><em>11111111111111111111111111111110</em></p>\n\n<p>I guess the same is happening in Javascript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Here's a solution to implement NOT in javascript. It ain't pretty but it works.</p>\n\n<pre><code>\n// Since ~ is the two's complement, then the one's complement is ~(num -1).\nvar num = 9;\nnum.toString(2);            //returns 1001\n~(num - 1).toString(2);    //returns -1001\n// WHAT the hell?? I guess the negative sign acts as a sign bit.\n</code></pre>\n\n<p>If you want to view the Binary String of a decimal after a NOT (bit Toggle), then use the following code.</p>\n\n<pre>\n<code>// Programer: Larry Battle\n// Purpose: Provide a bit toggle function for javascript.\nvar getStrCopy = function (str, copies) {\n    var newStr = str;\n    copies = (copies > 0) ? copies : 1;\n    while (--copies) {\n        newStr += str;\n    }\n    return newStr;\n};\nvar convertDecToBase = function ( dec, base, length, padding ) {\n    padding = padding || '0' ;\n    var num = dec.toString( base );\n    length = length || num.length;\n    if (num.length !== length) {\n        if (num.length > length) {\n            throw new Error(\"convertDecToBase(): num(\" + num + \") > length(\" + length + \") too long.\");\n        }\n        num = getStrCopy( padding, (length - num.length)) + num;\n    }\n    return num;\n};\nvar formatBinaryStr = function( str ){\n    return str.replace( /\\d{4}/g, '$& ' ).replace( /\\s$/,'');\n};\nvar toggleBits = function( dec, length, doFormat ){\n    length = length || 8;\n    var str = convertDecToBase( dec, 2, length || 8 );\n    var binaryStr = str.replace( /0/g, 'o' ).replace( /1/g, '0').replace( /o/g, '1' );\n    return ( doFormat ) ? formatBinaryStr( binaryStr ) : binaryStr ;\n};\n\n// The following requires Firebug or Google Chrome Dev Tools\nclear();\nconsole.log( toggleBits( 1 ) );    // returns \"11111110\"\nconsole.log( toggleBits( 2 ) );    // returns \"11111101\"\nconsole.log( toggleBits( 50, 16 ) );// returns \"1111111111001101\"\nconsole.log( toggleBits( 15, 8, true ) );    // returns \"1111 0000\"\nconsole.log( toggleBits( 520, 16, true ) ); //returns \"1111 1101 1111 0111\"\n</code>\n</pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This assumes that you are working in 32 bits...</p>\n\n<pre><code>var valueToNot = parseInt(\"11110000\", 2);\nvar notResult = 0xFFFFFFFF - valueToNot;\nconsole.log(notResult.toString(2));\n</code></pre>\n\n<p>results in\n11111111111111111111111100001111</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can use the shift operator >>> to convert the number to an unsigned integer before converting to binary:</p>\n\n<pre><code>(~1 &gt;&gt;&gt; 0).toString(2) // \"11111111111111111111111111111110\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>Thanks to everyone in advance -</p>\n\n<pre><code>alert((~1).toString(2));\n</code></pre>\n\n<p>outputs: -10</p>\n\n<p>but in PHP/Java it outputs 11111111111111111111111111111110</p>\n\n<p>Am I missing something, why does Javascript add a \"-\" to the output?</p>\n\n<p>Thx,\nSam</p>\n",
            "last_activity_date": 1338305643,
            "question_id": 1133473,
            "score": 7,
            "tags": [
                "javascript",
                "operator-overloading",
                "bit-manipulation"
            ],
            "title": "Understanding javascript bitwise NOT"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Yes, but only if pages on both frames is on the same domain. You can do <code>document.getElementById( \"frame_id\").contentWindow.document</code>... But still if pages are on different domain you will get an exception.<br>\nPS. You can read more <a href=\"http://www.dyn-web.com/tutorials/iframes/\">here</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>You do it like this\nparent.framename.attributes_to_change</p>\n\n<p>Check this site for a full blown example\n<a href=\"http://www.pageresource.com/jscript/jframe1.htm\" rel=\"nofollow\">http://www.pageresource.com/jscript/jframe1.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>if I have 2 frames of a frameset on 1 page, is there a way for JS to access elements from the opposite frame?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1244822013,
            "question_id": 987423,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "javascript: get access to objects in different frame?"
        },
        {
            "answer_count": 9,
            "answers": [
                {
                    "body": "<p>Yes:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar counter = 0;\n&lt;/script&gt;\n</code></pre>\n\n<p>and</p>\n\n<pre><code>&lt;button onclick=\"counter++\"&gt;Increment&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar i=0;\n\nfunction increase()\n{\n\ti++;\n\treturn false;\n}&lt;/script&gt;&lt;input type=\"button\" onclick=\"increase();\"&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Yes.</p>\n\n<pre><code>&lt;head&gt;\n&lt;script type='javascript'&gt;\nvar x = 0;\n&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;input type='button' onclick='x++;'/&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p>[Psuedo code, god I hope this is right.]</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>yes, supposing your variable is in the global namespace:</p>\n\n<pre><code>&lt;button onclick=\"myVar += 1;alert('myVar now equals ' + myVar)\"&gt;Increment!!&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Use <code>type = \"button\"</code> instead of <code>\"submit\"</code>, then add an <code>onClick</code> handler for it.</p>\n\n<p>For example:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Increment\" onClick=\"myVar++;\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I believe you need something similar to the following:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\nvar count;\nfunction increment(){\n    count++;\n}\n&lt;/script&gt;\n\n...\n</code></pre>\n\n<p>and    </p>\n\n<pre><code>&lt;input type=\"button\" onClick=\"increment()\" value=\"Increment\"/&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;input type=\"button\" onClick=\"count++\" value=\"Increment\"/&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The purist way to do this would be to add event handlers to the button, instead of mixing behavior with the content (LSM, Layered Semantic Markup)</p>\n\n<pre><code>&lt;input type=\"button\" value=\"Increment\" id=\"increment\"/&gt;\n\n&lt;script type=\"text/javascript\"&gt;\n    var count = 0;\n    // JQuery way\n    $('#increment').click(function (e) {\n        e.preventDefault();\n        count++;\n    });\n    // YUI way\n    YAHOO.util.Event.on('increment', 'click', function (e) {\n        YAHOO.util.Event.preventDefault(e);\n        count++;\n    });\n    // Simple way\n    document.getElementById('increment').onclick = function (e) {\n        count++;\n        if (e.preventDefault) {\n            e.preventDefault();\n        }\n        e.returnValue = false;\n    };\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I needed to see the results of this script and was able to do so by incorporating the below:</p>\n\n<pre><code>var i=0;\n\nfunction increase()\n{\ni++;\ndocument.getElementById('boldstuff').innerHTML= +i;\n}\n\n&lt;p&gt;var = &lt;b id=\"boldstuff\"&gt;0&lt;/b&gt;&lt;/p&gt;\n&lt;input type=\"button\" onclick=\"increase();\"&gt;\n</code></pre>\n\n<p>add the \"script\" tag above all and a closing script tag below the function end curly brace. Returning false caused firefox to hang when I tried it. All other solutions didn't show the result of the increment, in my experience.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Had a similar problem.  Needed to append as many text inputs as the user wanted, to a form.  The functionality of it using jQuery was the answer to the question:</p>\n\n<pre><code>&lt;div id='inputdiv'&gt;\n&lt;button id='mybutton'&gt;add an input&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nvar thecounter=0; //declare and initialize the counter outside of the function\n$('#mybutton').on('click', function(){\nthecounter++;\n$('#inputdiv').append('&lt;input id=\"input'+thecounter+'\" type=\"text/&gt;);\n});\n&lt;/script&gt;\n</code></pre>\n\n<p>Adding the count to each new input id resulted in unique ids which lets you get all the values using the jQuery serialize() function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Can I create a javascript variable and increment that variable when I press a button (not submit the form).\nThanks!</p>\n",
            "last_activity_date": 1369264525,
            "question_id": 837648,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How to increment a JavaScript variable using a button press event"
        },
        {
            "answer_count": 10,
            "answers": [
                {
                    "body": "<p>First off, have you actually documented that it's slow and is causing problems? Otherwise, I wouldn't bother looking for a solution, because there really isn't a problem.</p>\n\n<p>Secondly, I would guess that since parseInt is a native JS-method, it would be implemented in a way that is very fast, and probably in the native language of the VM (probably C, depending on the browser/VM). I think you could have some trouble making a faster method out of pure JS. =)</p>\n\n<p>Of course, I'm not a JS guru, so I don't know for sure, but this is what my intuition tells me, and tends to be the standard answer to \"how would I make a faster alternative for libraryFunction()?\" questions.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>The Number constructor also exists, but it should be the same as parseInt in term of speed (as already said you should correct the PHP part instead of the javascript one anyway) :</p>\n\n<pre><code>var i = \"123\";\ni = new Number(i); // Number numeric wrapper\nvar j = \"123\";\nj = Number(j); // Number primitive\n</code></pre>\n\n<p>BTW if someone is interested i searched by curiosity for the V8 (Google chrome) implementation of parseInt and it's <a href=\"http://www.google.com/codesearch/p?hl=en#Qv8GC2UAjhg/src/runtime.cc&amp;q=StringParseInt&amp;l=1858\" rel=\"nofollow\">here on google code</a>. </p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Cast it to an int in PHP before you <code>json_encode()</code> it:</p>\n\n<pre><code>$foo-&gt;bar = (int)$foo-&gt;bar;\nprint('var foo = ' . json_encode($foo));\n</code></pre>\n\n<p>Incidentally, when using parseInt it's good practice to always specify the second parameter unless you really want string starting with 0 to be interpreted as octal and so on:</p>\n\n<pre><code>parseInt('010', 10); // 10\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You aren't going to get better than parseInt, but the real bug is that the PHP is providing what is supposed to be a number as a string.</p>\n\n<p>And ditto to what Daniel said - don't go looking for micro-optimisations like this until you have benchmarked your code and discovered that it's worth doing.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>if the objects are larger you could try <a href=\"http://en.wikipedia.org/wiki/JSON\" rel=\"nofollow\">JSON</a>, it is a typed format so you do not need to convert the values.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>How slow can it be?  How many times per second is this process being called?  How many different numeric return values are there?  I whipped together a script and tested 100,000 numbers.  Parsing them from strings took 687ms.  Searching them in an array took 541ms.  That's a very small improvement.  I agree with other posters.  You may not get better than the native parseInt() method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Type casting in JavaScript is done via the constructor functions of the built-in types <strong>without <code>new</code></strong>, ie</p>\n\n<pre><code>foo.bar = Number(foo.bar);\n</code></pre>\n\n<p>This differs from <code>parseInt()</code> in several ways:</p>\n\n<ul>\n<li>leading zeros won't trigger octal mode</li>\n<li>floating point values will be parsed as well</li>\n<li>the whole string is parsed, i.e. if it contains additional non-numeric characters, the return value will be <code>NaN</code></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Casting is a wee bit faster than parsing but slower than searching.</p>\n\n<p>Also, in Firefox the fastest method turns out to be parseInt() followed by searching.  Firefox also turned out to be 6 times faster on average than IE.  Interesting.</p>\n\n<p>Cool idea using the unary operator.  In Firefox that turned out to be comparable to parseInt().  In IE it turned out to be the fastest method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>To convert to an integer simply use the unary + operator, it should be the fastest way:</p>\n\n<pre><code>var int = +string;\n</code></pre>\n\n<p>Conversions to other types can be done in a similar manner:</p>\n\n<pre><code>var string = otherType + \"\";\nvar bool = !!anything;\n</code></pre>\n\n<p><a href=\"http://www.jibbering.com/faq/faq%5Fnotes/type%5Fconvert.html\">More info</a>.</p>\n",
                    "is_accepted": true,
                    "score": 26
                },
                {
                    "body": "<p>Fast shortcut to parseInt is</p>\n\n<pre><code>(\"78.5\" | 0) //bitwise or forces the string to parse as int\n</code></pre>\n\n<p>This is what <a href=\"http://asmjs.org\" rel=\"nofollow\">ASM</a> uses to represent ints in js. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Firstly - my description ;)</p>\n\n<p>I've got a XmlHttpRequests JSON response from the server. \nMySQL driver outputs all data as string and PHP returns it as it is, so any integer is returned as string, therefore:</p>\n\n<p>Is there any fast alternative (hack) for parseInt() function in JS which can parse pure numeric string, e.g. </p>\n\n<pre><code>var foo = {\"bar\": \"123\"};\n...\nfoo.bar = parseInt(foo.bar); // (int) 123\n</code></pre>\n",
            "last_activity_date": 1415834014,
            "question_id": 594625,
            "score": 7,
            "tags": [
                "javascript",
                "mysql",
                "ajax"
            ],
            "title": "parseInt alternative"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If jQuery is an option you can do this rather easily.</p>\n\n<p>See the documentation on <a href=\"http://docs.jquery.com/API/1.1.2/DOM/Traversing/Selectors#Using_CSS_and_XPath_Together\" rel=\"nofollow\">jQuery selectors</a>. (The last example in the section shows how to do it with radio buttons but just replace that with check boxes.)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>iterate through the form.elements collection and check .type == \"checkbox\".</p>\n\n<pre><code>var button = getSelectAllButtonInFormSomeHow();\n/*all formelements have a reference to the form. And the form has an elements-collection.*/\nvar elements = button.form.elements;\n\nfor(var i = 0; i &lt; elements.length;i++) {\n    var input = elements[i];\n    if (input.tagName == \"input\" &amp;&amp; input.type == \"checkbox\") input.checked = true;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<pre><code>function findCheckBoxes(el, check) {\n        for(var i=0;el.childNodes[i];i++)\n        {\n            var child = el.childNodes[i];\n            if (child.type==\"checkbox\")\n            {\n                child.checked = check;\n            }\n            if (child.childNodes.length &gt; 0)\n                this.findCheckBoxes(child, check);\n        }\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This should do it:</p>\n\n<pre><code>&lt;script&gt;\nfunction checkUncheck(form, setTo) {\n    var c = document.getElementById(form).getElementsByTagName('input');\n    for (var i = 0; i &lt; c.length; i++) {\n        if (c[i].type == 'checkbox') {\n            c[i].checked = setTo;\n        }\n    }\n}\n&lt;/script&gt;\n\n&lt;form id='myForm'&gt;\n&lt;input type='checkbox' name='test' value='1'&gt;&lt;br&gt;\n&lt;input type='checkbox' name='test' value='1'&gt;&lt;br&gt;\n&lt;input type='checkbox' name='test' value='1'&gt;&lt;br&gt;\n&lt;input type='checkbox' name='test' value='1'&gt;&lt;br&gt;\n&lt;input type='checkbox' name='test' value='1'&gt;&lt;br&gt;\n&lt;input type='button' onclick=\"checkUncheck('myForm', true);\" value='Check'&gt;\n&lt;input type='button' onclick=\"checkUncheck('myForm', false);\" value='Uncheck'&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>Every input element has an attribute, type, which for checkboxes is \"checkbox\" so you could try something like this:</p>\n\n<pre><code>for (var i = 0; i &lt; document.myForm.elements.length; i++) {\n    if (document.myForm.elements[i].type == \"checkbox\") {\n        document.myForm.elements[i].checked = true;\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Is assigning a class to all required checkbox elements an option? If yes, then this is how I would do it (assuming \"class_name\" is the name of the css class present in all checkbox elements in question):</p>\n\n<pre><code>function selectCheckBoxes(bChecked) {\n   var aCheckBoxes = YAHOO.util.Dom.getElementsByClassName('class_name', 'input');\n   for (var i = 0; i &lt; aCheckBoxes.length; i++) {\n      aCheckBoxes[i].checked = bChecked;\n   }\n}\n</code></pre>\n\n<p>If you want to stay away from classes, but can get parent element by ID (or any other method, I will use ID in the example, though), than you can do this:</p>\n\n<pre><code>function selectCheckBoxes(bChecked) {\n   var oParent = document.getElementById('parentsID');\n   var aElements = oParent.getElementsByTagName('input');\n   for (var i = 0; i &lt; aElements.length; i++) {\n      if (aElements[i].type == 'checkbox') {\n         aElements[i].checked = bChecked;\n      }\n   }\n}\n</code></pre>\n\n<p>I would stick to the \"class\" method, however.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;script&gt;\nfunction selectCheckBox()\n{   \n     if(document.getElementById('id11').checked==true)\n     {\n        document.frm.id2.checked=true\n        document.frm.id3.checked=true\n        document.frm.id4.checked=true\n     }\n     if(document.getElementById('id11').checked==false)\n     {\n        document.frm.id2.checked=false\n        document.frm.id3.checked=false\n        document.frm.id4.checked=false\n     }\n}\nfunction selectCheckBox1()\n{\n     if(document.getElementById('id12').checked==false)\n     {\n        document.frm.id1.checked=false\n     }  \n}\nfunction selectCheckBox2()\n{\n     if(document.getElementById('id13').checked==false)\n     {\n        document.frm.id1.checked=false\n     }  \n}\nfunction selectCheckBox3()\n{\n     if(document.getElementById('id14').checked==false)\n     {\n        document.frm.id1.checked=false\n     }  \n}\n&lt;/script&gt;\n\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form name=\"frm\"&gt;\nAll   :&lt;input type=\"checkbox\" id=\"id11\" name=\"id1\" value=\"1\" onClick=\"selectCheckBox()\"&gt;&lt;br&gt;\nA.    :&lt;input type=\"checkbox\" id=\"id12\" name=\"id2\" value=\"2\" onClick=\"selectCheckBox1()\"&gt;&lt;br&gt;\nB.    :&lt;input type=\"checkbox\" id=\"id13\" name=\"id3\" value=\"3\" onClick=\"selectCheckBox2()\"&gt;&lt;br&gt;\nC.    :&lt;input type=\"checkbox\" id=\"id14\" name=\"id4\" value=\"4\" onClick=\"selectCheckBox3()\"&gt;&lt;br&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>I am implementing an HTML form with some checkbox input elements, and I want to have a Select All or DeSelect All button. However, <em>I do not want to rely on the name</em> of the input element (like <a href=\"http://www.plus2net.com/javascript_tutorial/checkbox-checkall.php\">this example</a>) but rather the <strong>type</strong> because I have multiple checkbox groups with different names. Is there a way to check and uncheck all checkbox input elements within a form with JavaScript by relying on the type instead of the name?</p>\n\n<p>Edit: We rely on YUI libraries, so I have access YUI if that provides a solution.</p>\n",
            "last_activity_date": 1310212381,
            "question_id": 463535,
            "score": 7,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Using JavaScript to manipulate HTML input (checkbox) elements via type instead of name"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This is the type conversion that takes place according to the <a href=\"http://es5.github.io/#x11.9.3\" rel=\"nofollow\">Abstract Equality Comparison Algorithm</a>:</p>\n\n<pre><code>{} == false                // step 7 {} == ToNumber(false)\n{} == 0                    // step 9 ToPrimitve({}) == 0\n\"[object Object]\" == 0     // step 5 ToNumber(\"[object Object]\") == 0\nNaN == 0                   // step 1.c.i\n\n[] == false                // step 7 [] == ToNumber(false)\n[] == 0                    // step 9 ToPrimitve([]) == 0\n\"\" == 0                    // step 5 ToNumber(\"\") == 0\n0 == 0                     // step 1.c.iii\n</code></pre>\n\n<p>References: <a href=\"http://es5.github.io/#x9.3\" rel=\"nofollow\">ToNumber</a>, <a href=\"http://es5.github.io/#x9.1\" rel=\"nofollow\">ToPrimitive</a></p>\n\n<p>And because of this, prefer to use strict comparison.</p>\n\n<hr>\n\n<p>Some examples how <code>ToPrimitive</code> converts objects to primitives <em>during comparison</em>. By default, the <code>valueOf</code> method of the object will be called, and then <code>toString</code> if <code>valueOf</code> doesn't return a primitive value. For <code>Date</code> objects it will call <code>toString</code> by default.</p>\n\n<pre><code>var obj = {};\nobj.valueOf();        // Object { } // the object itself\nobj.toString();       // \"[object Object]\"\n\n\nobj.valueOf = function() { return 123; };\nobj == 123; // true\n\nobj.toString = function() { return 'foo bar'; };\nobj == 123; // false\nobj == 'foo bar'; // true\n\n// Date object\n\nvar date = new Date();\ndate.valueOf();        // 1421430720379\ndate.toString();       // \"Fri Jan 16 2015 09:52:00 GMT-0800 (PST)\"\n\ndate == 1421430720379 // false\ndate == \"Fri Jan 16 2015 09:52:00 GMT-0800 (PST)\" // true\n\ndate.toString = function() { return 'foo'; };\ndate == 'foo'; // true\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>Why does <code>{} == false</code>   evaluate to <code>false</code> while <code>[] == false</code> evaluates to <code>true</code> in javascript?</p>\n",
            "last_activity_date": 1421431438,
            "question_id": 27989285,
            "score": 6,
            "tags": [
                "javascript",
                "boolean",
                "equality-operator"
            ],
            "title": "Why does {} == false evaluate to false while [] == false evaluates to true?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>ECMAScript 5, the current official specification of the JavaScript language, does not define the behavior for function declarations inside blocks.</p>\n\n<p>Quoting <a href=\"http://kangax.github.io/nfe/#function-declarations-in-blocks\" rel=\"nofollow\">Kangax</a>:</p>\n\n<blockquote>\n  <p><em>FunctionDeclarations</em> are only allowed to appear in <em>Program</em> or <em>FunctionBody</em>. Syntactically, they <strong>can not appear in <em>Block</em></strong> (<code>{ ... }</code>) \u2014 such as that of <code>if</code>, <code>while</code> or <code>for</code> statements. This is because <em>Blocks</em> can only contain <em>Statements</em>, not <em>SourceElements</em>, which <em>FunctionDeclaration</em> is. If we look at production rules carefully, we can see that the only way <em>Expression</em> is allowed directly within <em>Block</em> is when it is part of <em>ExpressionStatement</em>. However, <em>ExpressionStatement</em> is explicitly defined <strong>to not begin with \"function\" keyword</strong>, and this is exactly why <em>FunctionDeclaration</em> cannot appear directly within a <em>Statement</em> or <em>Block</em> (note that <em>Block</em> is merely a list of <em>Statements</em>).</p>\n  \n  <p>Because of these restrictions, whenever function appears directly in a block (such as in the previous example) it should actually be <strong>considered a syntax error</strong>, not function declaration or expression. The problem is that almost none of the implementations I've seen parse these functions strictly per rules (exceptions are BESEN and DMDScript). They interpret them in proprietary ways instead.</p>\n</blockquote>\n\n<p>Also worth quoting the <a href=\"https://people.mozilla.org/~jorendorff/es6-draft.html#sec-block-level-function-declarations-web-legacy-compatibility-semantics\" rel=\"nofollow\">ECMAScript 6 draft - B.3.3 Block-Level Function Declarations Web Legacy Compatibility Semantics</a>:</p>\n\n<blockquote>\n  <p>Prior to the Sixth Edition, the ECMAScript specification did not define the occurrence of a <em>FunctionDeclaration</em> as an element of a Block statement\u2019s <em>StatementList</em>. However, support for that form of <em>FunctionDeclaration</em> was an allowable extension and most browser-hosted ECMAScript implementations permitted them. Unfortunately, the semantics of such declarations differ among those implementations. [...]</p>\n</blockquote>\n\n<hr>\n\n<p>As ES5 does not define the behavior for function declarations inside blocks while allowing proprietary extensions, there are technically no \"rights\" or \"wrongs\". Consider them \"unspecified behavior\" which is not portable across different ES5-compliant environments.</p>\n\n<p>Those are easy to rewrite into portable code anyway:</p>\n\n<ul>\n<li>Should the function declaration be hoisted to the top of the current function/global scope? Make sure the function declaration is not directly inside of a block.</li>\n<li>Should the function be declared only when the block executes? Assign a function expression to a variable (<code>var f = function() {};</code>). Note that there is no hoisting and the variable is still accessible outside of the block (<code>var</code> declarations are function-level scoped).</li>\n</ul>\n\n<hr>\n\n<p>As per ECMAScript 6, function declarations are block-scoped, so Firefox implements the correct behavior ES6-wise.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>Why the following codes output different results between Chrome and Firefox?</p>\n\n<pre><code>f = function() {return true;}; \ng = function() {return false;}; \n(function() { \n   if (g() &amp;&amp; [] == ![]) { \n      f = function f() {return false;}; \n      function g() {return true;} \n   } \n})(); \nconsole.log(f());\n</code></pre>\n\n<p>In Chrome: the result is <code>false</code>. However, in Firefox, it is <code>true</code>.</p>\n\n<p>The key line of the above codes is line 4, and base on my knowledge of function name hoisting, the function <code>g</code> should be in line 6, namely the line 2 is overridden by line 6. IMO, the behavior of Chrome is correct.</p>\n\n<p>Am I right on this? if so, why Firefox outputs different results?</p>\n",
            "last_activity_date": 1407139904,
            "question_id": 25111087,
            "score": 6,
            "tags": [
                "javascript",
                "google-chrome",
                "firefox"
            ],
            "title": "Why is a function declaration within a condition block hoisted to function scope in Chrome but not Firefox?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I was having this same issue and I started digging through the mongoose source code (version 3.8.14).  Eventually it led me to this line within </p>\n\n<ul>\n<li>mongoose/node_modules/mongodb/lib/mongodb/collection/core.js -> <em>insert</em>(...) -> <em>insertWithWriteCommands</em>(...) -> </li>\n<li><p>mongoose/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js -> <em>bulk.insert(docs[i])</em> -> <em>addToOperationsList(...)</em> -> <em>bson.calculateObjectSize(document, false);</em></p>\n\n<p>var bsonSize = bson.calculateObjectSize(document, false);</p></li>\n</ul>\n\n<p>Apparently, this calls BSON.calculateObjectSize, which calls calculateObjectSize which then infinitely recurses.  I wasn't able to dig that far in to what caused it, but figured that it may have something to do with the mongoose wrapper binding functions to the Schema.  Since I was inserting raw data into mongoDB, once I decided to change the bulk insert in mongoose to a standard javascript object, the problem went away and bulk inserts happened correctly.  You might be able to do something similar.</p>\n\n<p>Essentially, my code went from</p>\n\n<pre><code>//EDIT: mongoose.model needs lowercase 'm' for getter method\n\nvar myModel = mongoose.model('MyCollection');\nvar toInsert = myModel();\nvar array = [toInsert];\nmyModel.collection.insert(array, {}, function(err, docs) {});\n</code></pre>\n\n<p>to </p>\n\n<pre><code>//EDIT: mongoose.model needs lowercase 'm' for getter method\n\nvar myModel = mongoose.model('MyCollection');\nvar toInsert = { //stuff in here \n   name: 'john',\n   date: new Date()\n};\nvar array = [toInsert];\nmyModel.collection.insert(array, {}, function(err, docs) {});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Confirmed, but not a bug. <code>Model.collection.insert()</code> bypasses Mongoose and so you're telling the node driver to insert an object that contains mongoose internals like <code>$__</code>, etc. The stack overflow is probably because bson is trying to compute the size of an object that references itself indirectly.</p>\n\n<p>Long story short, use <code>Document.toObject()</code>, that's what its for: <a href=\"http://mongoosejs.com/docs/api.html#document_Document-toObject\" rel=\"nofollow\">http://mongoosejs.com/docs/api.html#document_Document-toObject</a></p>\n\n<pre><code>Response.find({}).exec(function(err, responses) {\n  if (err) { \n    return callback(err); \n  }\n\n  if (true) {\n    var toInsert = [];\n    responses.forEach(function(response) {\n      console.log(\"Filling response: \" + response._id);\n      response.answers = [];\n      [{ name: 'test' }].forEach(function(ans) {\n        response.answers.push(ans);\n      });\n      toInsert.push(response.toObject());\n    });\n    Response.collection.insert(toInsert, function(err, responsesResult) {\n      console.log(err);\n    });\n  } else {\n      callback();\n    }\n});\n</code></pre>\n\n<p>Also, the code you specified won't work even if you fix the stack overflow. Since you're trying to <code>insert()</code> docs that are already in the database, all the inserts will fail because of <code>_id</code> conflicts. You'd really be much better off just using a stream() to read the results one at a time and then <code>save()</code> them back into the db.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I am trying to bulk insert documents into MongoDB (so bypassing Mongoose and using the native driver instead as Mongoose doesn't support bulk insert of an array of documents).  The reason I'm doing this is to improve the speed of writing.</p>\n\n<p>I am receiving the error \"RangeError: Maximum Call Stack Size Exceeded\" at console.log(err) in the code below: </p>\n\n<pre><code>function _fillResponses(globalSurvey, optionsToSelectRegular, optionsToSelectPiped, responseIds, callback) {\n  Response.find({'_id': {$in: responseIds}}).exec(function(err, responses) {\n    if (err) { return callback(err); }\n\n    if (globalSurvey.questions.length) {\n      responses.forEach(function(response) {\n        console.log(\"Filling response: \" + response._id);\n        response.answers = [];\n        globalAnswers = {};\n        globalSurvey.questions.forEach(function(question) {\n          ans = _getAnswer(question, optionsToSelectRegular, optionsToSelectPiped, response);\n          globalAnswers[question._id] = ans;\n          response.answers.push(ans);\n        });\n      });\n      Response.collection.insert(responses, function(err, responsesResult) {\n        console.log(err);\n        callback()\n      });\n    } else {\n        callback();\n      }\n  });\n} \n</code></pre>\n\n<p>So similar to: <a href=\"http://stackoverflow.com/questions/24356859/mongoose-maximum-call-stack-size-exceeded\">Mongoose Maximum call stack size exceeded</a></p>\n\n<p>Perhaps it's something about the format of the responses array that Mongoose returns that means I can't directly insert using MongoDB natively?  I've tried .toJSON() on each response but no luck.</p>\n\n<p>I still get the error even with a very small amount of data but looping through and calling the Mongoose save on each document individually works fine.</p>\n\n<p>EDIT: I think it is related to this issue: <a href=\"http://howtosjava.blogspot.com.au/2012/05/nodejs-mongoose-rangeerror-maximum-call.html\">http://howtosjava.blogspot.com.au/2012/05/nodejs-mongoose-rangeerror-maximum-call.html</a></p>\n\n<p>My schema for responses is: </p>\n\n<pre><code>var ResponseSchema = new Schema({\n  user: {\n    type: Schema.ObjectId,\n    ref: 'User'\n  },\n  randomUUID: String,\n  status: String,\n  submitted: Date,\n  initialEmailId: String,\n  survey: String,\n  answers: [AnswerSchema]\n}); \n</code></pre>\n\n<p>So, answers are a sub-document within responses.  Not sure how to fix it though....</p>\n",
            "last_activity_date": 1425030246,
            "question_id": 24466366,
            "score": 6,
            "tags": [
                "javascript",
                "node.js",
                "mongodb",
                "mongoose"
            ],
            "title": "Mongoose - RangeError: Maximum Call Stack Size Exceeded"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I've looked at this extensively, and it appears that it's impossible to use file upload input with the Mandrill API for attachments. A server is required to do anything with a <code>file type=\"input\"</code> because of the security restrictions that have been put into place by browsers.</p>\n\n<p>I've been able to get around this by using the <a href=\"http://www.inkfilepicker.com\" rel=\"nofollow\">Ink File Picker API</a> to place a secure download link at the bottom of the email to a file, but this looks a little fishy. It it would obviously be better to do it natively, but, as I've said, that appears to be impossible.</p>\n\n<p>This compromise, however, is in some ways <em>better</em> than the native way: the Ink API allows users to upload from a variety of services, along with the classic file upload, which improves both the extensibility and the ease of use of the file upload mechanism.</p>\n\n<p>Using a link for attachments still looks suspicious, but I've been able to minimize the spamminess of the method by using the file name (which the API gives you access to):</p>\n\n<blockquote>\n  <p>[file name] (hyperlinked to direct download link) was attached to this\n  email.</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you wanted to attach a file, you could look at AJAX file Upload</p>\n\n<p>The Mandrill API requires a base64 encoded string of the file, so if you can upload the file you can easily make the server return a base64 encoded string for you to use in the API..</p>\n\n<p>There are lots of plugins that will upload files over ajax and if you're using a JavaScript library like jQuery you can look at <a href=\"http://blueimp.github.io/jQuery-File-Upload/\" rel=\"nofollow\"><strong>jQuery File Upload</strong></a></p>\n\n<p>If you're using <strong>PHP</strong> for instance:</p>\n\n<pre><code>$result = array();\n$result['status'] = 'error';\nif(isset($_FILES[\"mandrill_attachment\"]))\n{\n    $base64 = base64_encode(file_get_contents($_FILES[\"mandrill_attachment\"][\"tmp_name\"]));\n    $result['base64'] = $base64;\n    $result['status'] = 'ok';\n}\n\ndie(json_encode($result));\n</code></pre>\n\n<p>I've kept that short for the example, but you should check the file types etc, not just assuming it's an OK file</p>\n\n<p>and the <strong>JS</strong></p>\n\n<pre><code>var mandrill_attachment = false;\n\n$(\".attachment\").uploadFile({\n    url: \"upload.php\",\n    dragDrop:false,\n    multiple:false,\n    autoSubmit:true,\n    fileName: \"mandrill_attachment\",    \n    returnType:\"json\",\n    onSuccess:function(files,data,xhr)\n    {\n        if( data.status == 'ok' )\n        {\n            mandrill_attachment = data.base64;\n        } else {\n            alert('something went wrong...');\n        }\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I'm not sure whether this is even possible, but I'm trying to attach a file to an outgoing email with the <a href=\"https://mandrillapp.com/api/docs/messages.JSON.html\" rel=\"nofollow\">Mandrill API</a> from the file upload button (<code>input type=\"file\"</code>). To be honest, I'm not entirely sure what <code>document.getElementById('idOfFileInput').value</code> actually returns. I know that this is not the place to ask a novice question like that, but I've looked everywhere and I can't find it (I know one of you will be sly and point me to some article within five minutes). That aside, though, I've gotten a .txt file to attach with the message <code>C:\\fakepath\\test.txt</code>, which I know to be the file path that the browser gives for security. Maybe it's better asked in code:</p>\n\n<p>Button:\n    </p>\n\n<pre><code>Attachment(s):&amp;nbsp;&amp;nbsp;&lt;input type=\"file\" id=\"file\"&gt;\n</code></pre>\n\n<p>JS:\n   </p>\n\n<pre><code>\"attachments\": [\n        {\n            \"type\": \"text/*\",\n            \"name\": \"file_attachment\",\n            \"content\": document.getElementById('file').value\n        }\n    ],\n</code></pre>\n\n<p>I'm sorry if this is a simple question disguised by its context, but even if it is, I have a feeling that this question could be a good future reference because I've been trying things for a week and looking for some type of solution, but I haven't been able to find one. Any ideas?</p>\n",
            "last_activity_date": 1404320019,
            "question_id": 23025414,
            "score": 6,
            "tags": [
                "javascript",
                "html",
                "file-upload",
                "input",
                "mandrill"
            ],
            "title": "Attach Files to Mandrill Message with Browse Button"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code>if((A == B)&amp;&amp; (A== 0)&amp;&amp; (B==0))\n    console.log(true);\nelse\n    console.log(false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>First, <code>A == B</code> returns <code>true</code>, which is then compared to 0, <code>true == 0</code> which returns false, or <code>true == 1</code> which returns true.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It first checks your clause for A == B, which is true, than it starts checking true == 0, and 0 is false. So when you check A == B == 1, you check A==B, which is true, and true == 1. So then it returns true. If you really want to check all possibilities you should do something like this:</p>\n\n<pre><code>if((A==B) &amp;&amp; (A==0))\n   console.log(true);\nelse \n   console.log(false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>First, we need to understand that a <code>==</code> comparison between a number and a boolean value will result in internal type conversion of Boolean value to a number (<code>true</code> becomes <code>1</code> and <code>false</code> becomes <code>0</code>)</p>\n\n<p>The expression you have shown is evaluated from left to right. So, first</p>\n\n<pre><code>A == B\n</code></pre>\n\n<p>is evaluated and the result is <code>true</code> and you are comparing <code>true</code> with 0. Since <code>true</code> becomes <code>1</code> during comparison, <code>1 == 0</code> evaluates to <code>false</code>. But when you say</p>\n\n<pre><code>console.log((A == B == 1));\n</code></pre>\n\n<p><code>A == B</code> is <code>true</code>, which when compared with number, becomes <code>1</code> and you are comparing that with 1 again. That is why it prints <code>true</code>.</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>You can work from left to right. In this case you first check if A == B, then you check if this equal to 0. So since A == B, this is true. So now it becomes (true == 0), which is false. If A=1, B=2, then (A == B == 0) would return true! This is because A == B is false and (false == 0) is true!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Assignment operators like = are <strong>right-associative</strong>: when there is a series of these operators that have the same precedence, they are processed right-to-left, so <code>A = B = 0</code> is processed as <code>A = (B = 0)</code> (<code>B = 0</code> returns 0, so both A and B end up as 0).</p>\n\n<p>Equality operators like == are <strong>left-associative</strong>: same-precedence operators are processed left-to-right. <code>A == B == 0</code> is processed as <code>(A == B) == 0</code>, and since <code>A == B</code> is true (1), it becomes <code>1 == 0</code>, which is false (0).</p>\n\n<p>Likewise, <code>A == B == 1</code> is processed as <code>(A == B) == 1</code>, which becomes <code>1 == 1</code>, which is true (1).</p>\n\n<p>Source and more info: <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I was expecting the following comparison to give an error:</p>\n\n<pre><code>var A = B = 0;\nif(A == B == 0)\n    console.log(true);\nelse\n    console.log(false);\n</code></pre>\n\n<p>but strangely it returns <code>false</code>.</p>\n\n<p>Even more strangely, </p>\n\n<pre><code>console.log((A == B == 1)); \n</code></pre>\n\n<p>returns <code>true</code>.</p>\n\n<p>How does this \"ternary\" kind of comparison work?</p>\n",
            "last_activity_date": 1399837892,
            "question_id": 22980471,
            "score": 6,
            "tags": [
                "javascript",
                "comparison",
                "truthiness"
            ],
            "title": "How does (A == B == C) comparison work in JavaScript?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>System.out.println(\"I will come here\");</code> is not applicable for Android. Please use <code>Log</code> class instead:</p>\n\n<pre><code>Log.i(\"I will come here\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The JavaScript method is executed on a background (i.e. non-UI) thread. You need to call all Android View related methods on the UI thread. You can achieve what you need with:</p>\n\n<pre><code>mWebView.post(new Runnable() {\n    @Override\n    public void run() {\n        mWebView.loadUrl(...).\n    }\n});\n</code></pre>\n\n<p>Which will post the task to run on the UI thread.</p>\n",
                    "is_accepted": true,
                    "score": 26
                }
            ],
            "body": "<p>I have a android program (Java + html in a webview). I can call from the javascript to the Java code. But the other way around stopped working (after updating in eclipse).</p>\n\n<p>So this is what I'm trying to do</p>\n\n<ul>\n<li>Make a webview   (worked)</li>\n<li>calling in javascript to AndroidFunction.test(); (worked)</li>\n<li>the java test() function call webView.loadUrl(\"javascript:helloBack()\"); \n(! not working anymore)</li>\n</ul>\n\n<p>I tried to let it work with the WebView in the MainActivity, but it didnt work.</p>\n\n<p>MainActivity.java</p>\n\n<pre><code>public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n        final WebView webView = (WebView)findViewById(R.id.webView);\n        webView.getSettings().setJavaScriptEnabled(true);\n        webView.setWebChromeClient(new WebChromeClient());\n        WebSettings webSettings = webView.getSettings();\n        webSettings.setJavaScriptEnabled(true);\n\n        javascr = new Javascript(this, webView);\n        webView.addJavascriptInterface(javascr, \"AndroidFunction\");\n        webView.loadUrl(\"file:///android_asset/www/index.html\");\n\n        ....\n}\n</code></pre>\n\n<p>Javascript.java</p>\n\n<pre><code>public class Javascript {   \n    Context cont;\n    WebView webView;\n\n    Javascript(Context c, WebView w) {\n        cont = c;\n        webView = w;\n    }\n\n    // function called in the javascript by AndroidFunction.test();\n    public void test() {\n          // Breaking point!!!\n        webView.loadUrl(\"javascript:helloBack()\");\n    }\n</code></pre>\n\n<p>Error:</p>\n\n<pre><code>03-24 11:47:50.103: W/WebView(21026):   at com.android.org.chromium.base.SystemMessageHandler.handleMessage(SystemMessageHandler.java:27)\n03-24 11:47:50.103: W/WebView(21026):   java.lang.Throwable: A WebView method was called on thread 'JavaBridge'. All WebView methods must be called on the same thread. (Expected Looper Looper{41ab68f8} called on Looper{41bb70a8}, FYI main Looper is Looper{41ab68f8})\n\n03-24 11:47:50.103: W/WebView(21026):   at android.webkit.WebView.checkThread(WebView.java:2063)\n03-24 11:47:50.103: W/WebView(21026):   at android.webkit.WebView.loadUrl(WebView.java:794)\n03-24 11:47:50.103: W/WebView(21026):   at com.example.hellobt.Javascript.test(Javascript.java:24)\n\n03-24 11:47:50.103: W/WebView(21026):   at com.android.org.chromium.base.SystemMessageHandler.nativeDoRunLoopOnce(Native Method)\n03-24 11:47:50.103: W/WebView(21026):   at com.android.org.chromium.base.SystemMessageHandler.handleMessage(SystemMessageHandler.java:27)\n03-24 11:47:50.103: W/WebView(21026):   at android.os.Handler.dispatchMessage(Handler.java:102)\n\n03-24 11:47:50.103: W/WebView(21026):   at android.os.Looper.loop(Looper.java:137)\n03-24 11:47:50.103: W/WebView(21026):   at android.os.HandlerThread.run(HandlerThread.java:61)\n</code></pre>\n\n<p>Thanks for the answer. I edited the function in my Javascript file like this:</p>\n\n<pre><code>private void test(final String s) {\n        webView.post(new Runnable() {\n            public void run() {\n                webView.loadUrl(\"javascript:\" + s + \";\");\n            }\n        });\n        System.out.println(\"javscript done..\");\n    }\n</code></pre>\n",
            "last_activity_date": 1409059911,
            "question_id": 22607657,
            "score": 6,
            "tags": [
                "javascript",
                "android",
                "android-webview"
            ],
            "title": "WebView methods on same thread error"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Your page is slow most likely because you&rsquo;re attaching a handler to the window scroll event &mdash; as explained below:</p>\n\n<blockquote>\n  <p>It&rsquo;s a very, very, bad idea to attach handlers to the window scroll event. Depending upon the browser the scroll event can fire a lot and putting code in the scroll callback will slow down any attempts to scroll the page (not a good idea). Any performance degradation in the scroll handler(s) as a result will only compound the performance of scrolling overall. Instead it&rsquo;s much better to use some form of a timer to check every X milliseconds OR to attach a scroll event and only run your code after a delay (or even after a given number of executions \u2013 and then a delay). (<a href=\"http://ejohn.org/blog/learning-from-twitter\" rel=\"nofollow\">source</a>)</p>\n</blockquote>\n\n<p>Your screenshot shows that onloadwff.js is located at <code>chrome-extension://hdokiejnpimakedhajhdlcegeplioahd</code> which means it&rsquo;s part of the LastPass extension &mdash; as seen below. So it&rsquo;s probably not related to your performance issue.</p>\n\n<p><img src=\"http://i.stack.imgur.com/nJTGX.png\" alt=\"screenshot\"></p>\n\n<p>(<a href=\"https://web.archive.org/web/20140506182528/http://i.stack.imgur.com/Mr0Gp.png\" rel=\"nofollow\">archived screenshot</a>)</p>\n\n<p>Link - <a href=\"https://chrome.google.com/webstore/detail/lastpass-free-password-ma/hdokiejnpimakedhajhdlcegeplioahd\" rel=\"nofollow\" title=\"Opens in THIS window\">https://chrome.google.com/webstore/detail/lastpass-free-password-ma/<strong>hdokiejnpimakedhajhdlcegeplioahd</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I'm trying to debug a page which is acting a little slow in Chrome, think it might be an issue with the following javascript code:</p>\n\n<pre><code>$(document).ready(function() {\n  function navScroll(distance){\n    $(window).scroll(function() {\n      var scrollTop;\n      if(distance){\n        scrollTop = distance;\n      }else{\n        scrollTop = 150;\n      }\n      if($(window).scrollTop() &gt;= scrollTop) {\n        if(!($('#mainNav').hasClass('showNav'))) {\n          $('#mainNav').addClass('showNav');\n        }\n      } else {\n        if($('#mainNav').hasClass('showNav')) {\n          $('#mainNav').removeClass('showNav');\n        }\n      }\n    });\n  }\n\n  if($('.header-image-base').length){\n    var windowHeight = $(window).height();\n    $('.header-image-base').css('height', windowHeight);\n    navScroll(windowHeight);\n  }else{\n    navScroll();\n  }\n});\n</code></pre>\n\n<p>When I look in Chrome's console's 'timeline' panel, and press record, this is what I see:</p>\n\n<p><img src=\"http://i.stack.imgur.com/TbsKG.png\" alt=\"enter image description here\"></p>\n\n<p>Any ideas what is happening here? I can't find any references to this on google and no idea how to remedy it.</p>\n",
            "last_activity_date": 1417560035,
            "question_id": 21841850,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "google-chrome",
                "google-chrome-devtools"
            ],
            "title": "Javascript scroll function slow, lots of &quot;Timer Fired: onloadwff.js:310&quot; weasel events in Chrome"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>What about something like:</p>\n\n<pre><code>weekOfCurrentMonth = (moment().week() - (moment().month()*4));\n</code></pre>\n\n<p>This takes the current week of the year, and subtracts it by the 4 times the number of previous months. Which should give you the week of the current month</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think the answer to this question will be helpful, even though it doesn't use moment.js as requested:</p>\n\n<p><a href=\"http://stackoverflow.com/questions/3280323/get-week-of-the-month\">Get week of the month</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>function countWeekdayOccurrencesInMonth(date) {\n\n    var m = moment(date),\n            weekDay = m.day(),\n            yearDay = m.dayOfYear(),\n            count = 0;\n\n    m.startOf('month');\n    while (m.dayOfYear() &lt;= yearDay) { \n        if (m.day() == weekDay) {\n            count++; \n        }\n        m.add('days', 1); \n    }\n\n    return count;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It seems that moment.js does not have the method that implements the funcionality that you are looking for.\nHowever, you can find the nth number of a certain day of the week in a month is using the <code>Math.ceil</code> of the <code>date / 7</code>\nFor example:</p>\n\n<pre><code>var firstFeb2014 = moment(\"2014-02-01\"); //saturday\nvar day = firstFeb2014.day(); //6 = saturday\nvar nthOfMoth = Math.ceil(x.date() / 7);\n\nvar eightFeb2014 = moment(\"2014-02-08\"); //saturday, the next one\nconsole.log( Math.ceil(x.date() / 7) ); //prints 2, as expected\n</code></pre>\n\n<p>It looks like this is the number you are looking for, as demonstrated by the following test</p>\n\n<pre><code>function test(mJsDate){\n   var str = mJsDate.toLocaleString().substring(0, 3) +\n             \" number \" + Math.ceil(mJsDate.date() / 7) +\n             \" of the month\";\n   return str;\n}\n\nfor(var i = 1; i &lt;= 31; i++) {\n   var dayStr = \"2014-01-\"+ i;\n   console.log(dayStr + \" \" + test(moment(dayStr)) );\n}\n//examples from the console:\n//2014-01-8 Wed number 2 of the month\n//2014-01-13 Mon number 2 of the month\n//2014-01-20 Mon number 3 of the month\n//2014-01-27 Mon number 4 of the month\n//2014-01-29 Wed number 5 of the month\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Simple using moment.js</p>\n\n<pre>\nfunction week_of_month(date) {\n\n        prefixes = [1,2,3,4,5];\n\n    return prefixes[0 | moment(date).date() / 7] \n\n}\n</pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am using Moment.js and it is great. The problem I have now is that I can't figure out how to get the week of the month a certain date is. I can only find \"week of year\" in the Moment js docs. For example, if I choose today's date (2/12/2014), I would like to know that this date is in the second week of this month of february and consequently, it is the second wednesday of the month. Any ideas?</p>\n\n<p>EDIT:\nI guess some clarification is necessary. What I need most is the nth number of a certain day in a month. For example, (from the comments) Feb 1, 2014 would be the first Saturday of the month. Feb 3, 2014 would be the first Monday of the month even though it is \"technically\" the second week of the month. Basically, exactly how google calendar's repeat function classifies days.</p>\n",
            "last_activity_date": 1413438440,
            "question_id": 21737974,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "momentjs"
            ],
            "title": "Moment.js how to get week of month? (google calendar style)"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>To circumvent the SecurityError in Firefox when attempting to access the cssRules attribute, you must use a <code>try/catch</code> statement. The following should work:</p>\n\n<pre><code>// Example call to process_stylesheet() with StyleSheet object.\nprocess_stylesheet(window.document.styleSheets[0]);\n\nfunction process_stylesheet(ss) {\n  // cssRules respects same-origin policy, as per\n  // https://code.google.com/p/chromium/issues/detail?id=49001#c10.\n  try {\n    // In Chrome, if stylesheet originates from a different domain,\n    // ss.cssRules simply won't exist. I believe the same is true for IE, but\n    // I haven't tested it.\n    //\n    // In Firefox, if stylesheet originates from a different domain, trying\n    // to access ss.cssRules will throw a SecurityError. Hence, we must use\n    // try/catch to detect this condition in Firefox.\n    if(!ss.cssRules)\n      return;\n  } catch(e) {\n    // Rethrow exception if it's not a SecurityError. Note that SecurityError\n    // exception is specific to Firefox.\n    if(e.name !== 'SecurityError')\n      throw e;\n    return;\n  }\n\n  // ss.cssRules is available, so proceed with desired operations.\n  for(var i = 0; i &lt; ss.cssRules.length; i++) {\n    var rule = ss.cssRules[i];\n    // Do something with rule\n  }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I had the same issue with Firefox. Try this instead.</p>\n\n<pre><code>function getStyle(styleName, className) {\n\n    for (var i=0;i&lt;document.styleSheets.length;i++) {\n        var s = document.styleSheets[i];\n\n        var classes = s.rules || s.cssRules\n        for(var x=0;x&lt;classes.length;x++) {\n            if(classes[x].selectorText==className) {\n                return classes[x].style[styleName] ? classes[x].style[styleName] : classes[x].style.getPropertyValue(styleName);\n            }\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>The following code throws an error in the Firefox Console at the line with the continue. </p>\n\n<pre><code>SecurityError: The operation is insecure.\nif( !sheet.cssRules ) { continue; }\n</code></pre>\n\n<p>However does not in Chrome and IE 11... Can someone explain the -why- of this? (And also how to re-work to make it safe.) I assume this is a cross-domain issue, but I'm stuck as how to re-work the code properly.</p>\n\n<pre><code>var bgColor = getStyleRuleValue('background-color', 'bg_selector');\n\nfunction getStyleRuleValue(style, selector, sheet) {\n  var sheets = typeof sheet !== 'undefined' ? [sheet] : document.styleSheets;\n  for (var i = 0, l = sheets.length; i &lt; l; i++) {\n    var sheet = sheets[i];\n    if( !sheet.cssRules ) { continue; }\n    for (var j = 0, k = sheet.cssRules.length; j &lt; k; j++) {\n      var rule = sheet.cssRules[j];\n      if (rule.selectorText &amp;&amp; rule.selectorText.split(',').indexOf(selector) !== -1) \n         return rule.style[style];            \n     }\n   }\n  return null;\n }\n</code></pre>\n",
            "last_activity_date": 1405484703,
            "question_id": 21642277,
            "score": 6,
            "tags": [
                "javascript",
                "security",
                "error-handling",
                "stylesheet"
            ],
            "title": "security error the operation is insecure in firefox document.stylesheets"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can debug mobile safari, but unfortunately you need a mac. </p>\n\n<p>If not.\n1. Make sure your code is working and no errors on desktop safari.\n2. Check if you are actually making the call by adding an <code>alert(\"histroy() called\")</code> in place of the <code>history(-1)</code> code.\n3. Is it in a link that has a default behavour to navigate to another page? If so, you need a event.preventDefault() or at least a <code>return false;</code> after the history() call. </p>\n\n<p>Good luck and happy debugging :P</p>\n\n<p><img src=\"http://i.stack.imgur.com/620YU.png\" alt=\"iOS simulator safari debugger \"></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>So the bottom line is that iOS has added its own security around the history API, meaning that you can't use script to change the url. Only a user action can allow the history API to change the url - i.e. a click - as per Aral's example.</p>\n\n<p>The workaround is to uses a hash (aka fragment identifier) on the url.</p>\n\n<p>Instead of the <code>history.pushState</code> we'll just change the location:</p>\n\n<pre><code>var i = 0;\nvar locationUpdateInterval = setInterval(function(){\n   window.location.hash = i;\n   i++;\n}, 1000);\n</code></pre>\n\n<p>To capture the event either when something changes the that location in the iOS app or if they have permalink to a particular page/panel in your app:</p>\n\n<pre><code>    // named function on purpose for later\nfunction hashchange() {\n  var pageId = location.hash.substr(1); // drop the # symbol\n  // do something with pageId\n}\n\nwindow.onhashchange = hashchange;\n\n// onload - if there's a hash on the url, try to do something with it\nif (location.hash) hashchange();\n</code></pre>\n\n<p>It's pretty poor that we can't use the <code>pushState/popState</code> on iOS, but it's the same security as not being able to trigger fullscreen video unless the user initiates the action, which is the same as downloading video or audio content on iOS - you can't script it, the user must start it (somehow or another).</p>\n\n<p>Just as a note about Android - the problems are pretty similar, so this (should) also work as a workaround for Android.</p>\n\n<p>If you want desktop support, most browsers support <code>onhashchange</code> but, yep, you guessed, IE is lacking behind - so you can polyfill that bad boy in (though requires jQuery...): </p>\n\n<p><a href=\"http://benalman.com/projects/jquery-hashchange-plugin/\" rel=\"nofollow\">http://benalman.com/projects/jquery-hashchange-plugin/</a></p>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>So I'm trying to redirect the user back one level in the history on an iPhone HomeScreen App, but it's simply just not firing for some reason.</p>\n\n<p>Current code is as follows <code>window.history.go(-1)</code></p>\n\n<p>I've also tried various other version <code>window.history.back()</code>, <code>history.go(-1)</code>, but no luck yet. I can't wrap my head around how to implement the pushState, so I haven't tried that approach yet, but it's quite annoying how incredibly bad the homescreen app stuff is made.</p>\n\n<p>Atleast you're able to debug with Safari.</p>\n",
            "last_activity_date": 1392969432,
            "question_id": 21625126,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "ios",
                "web-applications"
            ],
            "title": "window.history.go(-1) not working in iOS HomeScreen App"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>var</code> statements and function declaration statements are \"hoisted\" to the top of their enclosing scope.<br>\nTherefore, the <code>function global(){}</code> in your function creates a local <code>global</code> name.</p>\n\n<p>Assigning to <code>global</code> inside your functions binds to this local name.  Here's how you can \"rewrite\" it using hoisting to understand how the compiler sees it:</p>\n\n<pre><code>function test() {\n    var global = function() {};   // hoisted; 'global' now local\n    global = true;\n    return false;\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>I'll answer the second part of your question,</p>\n\n<blockquote>\n  <p>If we assume that functions are hoisted at the top along with var variables</p>\n\n<pre><code>bar();\nconsole.log(foo); //says 1 (But should be 11) Why 1 this time ??\n</code></pre>\n</blockquote>\n\n<p>You should try <code>console.log(bar()); console.log(foo);</code> instead. However, what hoisting does to your function is this:</p>\n\n<pre><code>function bar() {\n    var foo;\n    function foo() {}\n    return foo;\n    foo = 10;\n    foo = 11;\n}\n</code></pre>\n\n<p>So you should expect to get the function returned, since your variable assignments are after the <code>return</code> statement. And both the <code>var</code> and the function declaration make <code>foo</code> a local variable, so the global <code>foo = 1</code> is never changed.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>One of my friends was taking an online quiz and he asked me this question which I could not answer.</p>\n\n<pre><code>var global = false;\n\nfunction test() {\n  global = true;\n  return false;\n  function global() {}\n}\n\nconsole.log(global); // says false (As expected)\ntest();\nconsole.log(global); // says false (Unexpected: should be true)\n</code></pre>\n\n<p>If we assume that functions are hoisted at the top along with var variables, let's try this one.</p>\n\n<pre><code>var foo = 1;\nfunction bar() {\n    return foo;\n    foo = 10;\n    function foo() {}\n    var foo = 11;\n}\n\nbar();\nconsole.log(foo); //says 1 (But should be 11) Why 1 this time ??\n</code></pre>\n\n<p>Here is a <a href=\"http://jsbin.com/tope/1/edit?html,js,console,output\" rel=\"nofollow\">JSBin Demo</a> and <a href=\"http://jsbin.com/tope/4/edit?js,console,output\" rel=\"nofollow\">JSBIN Demo2</a> to play with.</p>\n\n<p>PS: If we remove <code>function global() {}</code> from <code>test()</code>, then it runs fine. Can somebody help me understand why is this happening ?</p>\n",
            "last_activity_date": 1391754875,
            "question_id": 21609493,
            "score": 6,
            "tags": [
                "javascript",
                "global-variables",
                "variable-scope"
            ],
            "title": "Scope of variables (Hoisting) in Javascript"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Indeed, this does not update your observable. The custom binding is incomplete. It seems to me this is just intended as an example of the idea, not a working solution.</p>\n\n<p>However, in the question you linked, there's actually a better approach somewhere in the comments. It is to use a Knockout extender. See Live Example 1 on <a href=\"http://knockoutjs.com/documentation/extenders.html\" rel=\"nofollow\">http://knockoutjs.com/documentation/extenders.html</a></p>\n\n<p>There's a few reasons it's better:\n 1. More robust. For example, you could still paste a string of text from the clipboard in your solution.\n 2. More user-friendly. Your solution plainly disables a bunch of keys. This is not user friendly at all. The solution proposed by Knockout just ensures the ultimate value is a correct one.\n 3. Better code separation and maintainability: your HTML can just contain a plain ol' value binding. Once a requirement rises that the value should be numerical, you just extend the observable in your viewmodel. The only change you make is in the JavaScript, as it should be, since it's functionality, not presentation. The change also stands on itself, and it's very clear what the extender does to anyone that might be using the observable in calculations or w/e.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>A solid route for numeric only numbers would be to user an extender.</p>\n\n<p>We don't have to track the keypress. It is easier to just subscribe to the observable to intercept the value before it updates. We can then do some regex that allows us to evaluate whether the input is a number or not. If the input is not a number, we will strip out the non-numeric characters. Thus allowing no non-numeric input.</p>\n\n<p><strong><a href=\"http://jsfiddle.net/dceast/5LjYf/22/\" rel=\"nofollow\">FIDDLE</a>:</strong></p>\n\n<p>HTML</p>\n\n<pre><code>&lt;input type=\"text\" data-bind=\"value: myNum, valueUpdate: 'afterkeyup'\" /&gt;\n</code></pre>\n\n<p>JS</p>\n\n<pre><code>(function(ko) {\n\n    ko.observable.fn.numeric = function () {\n        // the observable we are extending\n        var target = this;\n\n        // subscribe to the observable so we can\n        // intercept the value and do our custom\n        // processing. \n        this.subscribe(function() {\n           var value = target();\n           // this will strip out any non numeric characters\n           target(value.replace(/[^0-9]+/g,'')); //[^0-9\\.]/g - allows decimals\n        }, this);\n\n        return target;\n    };\n\n    function ViewModel() {\n        this.myNum = ko.observable().numeric();\n    };\n\n    ko.applyBindings(new ViewModel());\n\n})(ko);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I would suggest you make a wrapper around <a href=\"http://numeraljs.com/\" rel=\"nofollow\">http://numeraljs.com/</a>. You would just hook up the settings and on update you would call format on the input. </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>This will do what you want:</p>\n\n<pre><code>&lt;span data-bind=\"text: Interval\" &gt;&lt;/span&gt;\n&lt;input data-bind=\"numeric, value: Interval\" /&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/mbest/n4z8Q/\">http://jsfiddle.net/mbest/n4z8Q/</a></p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You can improve your binding handler to support modification of valueAccessor</p>\n\n<p>Binding:</p>\n\n<pre><code>ko.bindingHandlers.numeric = {\n    init: function (element, valueAccessor) {\n        var value = valueAccessor();\n        $(element).on(\"keydown\", function (event) {\n            // Allow: backspace, delete, tab, escape, and enter\n            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||\n                // Allow: Ctrl+A\n                (event.keyCode == 65 &amp;&amp; event.ctrlKey === true) ||\n                // Allow: . ,\n                (event.keyCode == 188 || event.keyCode == 190 || event.keyCode == 110) ||\n                // Allow: home, end, left, right\n                (event.keyCode &gt;= 35 &amp;&amp; event.keyCode &lt;= 39)) {\n                // let it happen, don't do anything\n                return;\n            }\n            else {\n                // Ensure that it is a number and stop the keypress\n                if (event.shiftKey || (event.keyCode &lt; 48 || event.keyCode &gt; 57) &amp;&amp; (event.keyCode &lt; 96 || event.keyCode &gt; 105)) {\n                    event.preventDefault();\n                }\n            }\n        });\n\n        $(element).change(function () {\n            value($(element).val());\n        });\n    }    \n};\n</code></pre>\n\n<p>In this case HTML will be</p>\n\n<pre><code>&lt;span data-bind=\"text: Interval\" &gt;&lt;/span&gt;\n&lt;input data-bind=\"numeric: Interval\" /&gt;\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/SSeZ4/\" rel=\"nofollow\">FIDDLE</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<blockquote>\n  <p>I need a solution that allows to enter only digits (including\n  something like backspace etc.).</p>\n</blockquote>\n\n<p>Check this jquery plugin:\n<a href=\"http://www.texotela.co.uk/code/jquery/numeric/\" rel=\"nofollow\">http://www.texotela.co.uk/code/jquery/numeric/</a> </p>\n\n<p>it allows decimal separator, you may want to fork it in order to allow other chars like backspace </p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It is my fixed version considering all above but <strong>working as real value binding</strong> and <strong>supporting non-observable objects</strong> as source/target.</p>\n\n<p><strong>EDIT</strong>:Minified version of knockout does not expose <em>writeValueToProperty</em> function and <em>twoWayBindings</em>. So we should clone <em>writeValueToProperty</em> and use <em>_twoWayBindings</em>.\nI updated code to support minified version of knockout.</p>\n\n<pre><code>ko.expressionRewriting._twoWayBindings.numericValue = true;\nko.expressionRewriting.writeValueToProperty = function (property, allBindings, key, value, checkIfDifferent) {\n    if (!property || !ko.isObservable(property)) {\n        var propWriters = allBindings.get('_ko_property_writers');\n        if (propWriters &amp;&amp; propWriters[key])\n            propWriters[key](value);\n    } else if (ko.isWriteableObservable(property) &amp;&amp; (!checkIfDifferent || property.peek() !== value)) {\n        property(value);\n    }\n};\nko.bindingHandlers.numericValue = {\n    init: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        $(element).on(\"keydown\", function (event) {\n            // Allow: backspace, delete, tab, escape, and enter.\n            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||\n                // Allow: Ctrl+A\n                (event.keyCode == 65 &amp;&amp; event.ctrlKey === true) ||\n                // Allow: . ,\n                (event.keyCode == 188 || event.keyCode == 190 || event.keyCode == 110) ||\n                // Allow: home, end, left, right.\n                (event.keyCode &gt;= 35 &amp;&amp; event.keyCode &lt;= 39)) {\n                // Let it happen, don't do anything.\n                return;\n            }\n            else {\n                if (event.shiftKey || (event.keyCode &lt; 48 || event.keyCode &gt; 57) &amp;&amp; (event.keyCode &lt; 96 || event.keyCode &gt; 105)) {\n                    event.preventDefault();\n                }\n            }\n        });\n\n        var underlying = valueAccessor();\n        var interceptor = ko.dependentObservable({\n            read: function () {\n                if (ko.isObservable(underlying) == false) {\n                    return underlying;\n                } else {\n                    return underlying();\n                }\n            },\n            write: function (value) {\n                if (ko.isObservable(underlying) == false) {\n                    if (!isNaN(value)) {\n                        var parsed = parseFloat(value);\n                        ko.expressionRewriting.writeValueToProperty(underlying, allBindingsAccessor, 'numericValue', !isNaN(parsed) ? parsed : null);\n                    }\n                } else {\n                    if (!isNaN(value)) {\n                        var parsed = parseFloat(value);\n                        underlying(!isNaN(parsed) ? parsed : null);\n                    }\n                }\n            }\n        });\n        ko.bindingHandlers.value.init(element, function () { return interceptor; }, allBindingsAccessor, viewModel, bindingContext);\n    },\n    update: function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {\n        ko.bindingHandlers.value.update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I wanted to use this technique: <a href=\"http://stackoverflow.com/questions/17048468/make-an-input-only-numeric-type-on-knockout\">make an input only-numeric type on knockout</a></p>\n\n<p>to allow user to enter only numbers.</p>\n\n<p>However, this technique doesn't update observable value on UI.</p>\n\n<p>HTML:</p>\n\n<pre><code> &lt;span data-bind=\"text: Interval\" &gt;&lt;/span&gt;\n &lt;input data-bind=\"numeric: Interval\" /&gt;\n</code></pre>\n\n<p>Binding:</p>\n\n<pre><code>ko.bindingHandlers.numeric = {\n    init: function (element, valueAccessor) {\n        $(element).on(\"keydown\", function (event) {\n            // Allow: backspace, delete, tab, escape, and enter\n            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||\n                // Allow: Ctrl+A\n                (event.keyCode == 65 &amp;&amp; event.ctrlKey === true) ||\n                // Allow: . ,\n                (event.keyCode == 188 || event.keyCode == 190 || event.keyCode == 110) ||\n                // Allow: home, end, left, right\n                (event.keyCode &gt;= 35 &amp;&amp; event.keyCode &lt;= 39)) {\n                // let it happen, don't do anything\n                return;\n            }\n            else {\n                // Ensure that it is a number and stop the keypress\n                if (event.shiftKey || (event.keyCode &lt; 48 || event.keyCode &gt; 57) &amp;&amp; (event.keyCode &lt; 96 || event.keyCode &gt; 105)) {\n                    event.preventDefault();\n                }\n            }\n        });\n    }    \n};\n</code></pre>\n\n<p>So, binding doesn't allow to enter characters other than numbers, but when focus is lost on <code>input</code>, corresponding observable is not updating (so <code>span</code> elements is not changing).</p>\n\n<p><strong>NOTE:</strong></p>\n\n<p>I do not need to allow user to enter non numeric characters into input. I know there are other solution like ko numeric extension that converts everything into numerics, but I do not need this. I need a solution that allows to enter only digits (including something like backspace etc.). </p>\n",
            "last_activity_date": 1403722118,
            "question_id": 21306618,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "knockout.js"
            ],
            "title": "knockout custom numeric binding"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try:</p>\n\n<pre><code>webBrowser.InvokeScript(\"myFunction\", \"one\", \"two\", \"three\");\n</code></pre>\n\n<p><code>InvokeScript</code> executes a scripting function defined in the currently loaded document, and passes the function an array of string parameters.<br>\n<a href=\"http://msdn.microsoft.com/en-us/library/windowsphone/develop/ff402838%28v=vs.105%29.aspx\">http://msdn.microsoft.com/en-us/library/windowsphone/develop/ff402838%28v=vs.105%29.aspx</a></p>\n\n<p>Obviously you have to have the <code>JavaScript</code> function defined in the loaded document.</p>\n\n<p>Depending on your view it may work like this:</p>\n\n<pre><code>this.CordovaView.Browser.InvokeScript(\"eval\", new string[] { \"yourJavascriptFunction(); \" });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>I found a solution, admittedly not the best one but works for me.</p>\n\n<p>I created a singleton class called WebViewHandler which looks like this</p>\n\n<pre><code>class WebViewHandler\n{\n    private static WebViewHandler instance;\n    public bool isWebViewReady { get { return webView != null; } }\n    public WPCordovaClassLib.CordovaView webView;\n\n    private WebViewHandler()\n    {\n\n    }\n\n    public void setWebView(ref WPCordovaClassLib.CordovaView webView)\n    {\n        this.webView = webView;\n    }\n\n    public static WebViewHandler getInstance()\n    {\n        if(instance == null){\n            instance = new WebViewHandler();\n        }\n        return instance;\n    } \n}\n</code></pre>\n\n<p>Then I set the webview in the constructor on the HomePage like so:</p>\n\n<pre><code> public HomePage()\n {\n      InitializeComponent();\n      CordovaView.Loaded += CordovaView_Loaded;\n      WebViewHandler.getInstance().setWebView(ref CordovaView); \n }\n</code></pre>\n\n<p>Once the WebView is set I can then call InvokeScript from any other class:</p>\n\n<pre><code>WebViewHandler.getInstance().webView.CordovaBrowser.InvokeScript(\"MyJavaScriptFunctionThatIWishToCall\");\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>You could use DispatchCommandResult(); as outlined in the cordova documents. That way you can call the c# method, send whatever you need in the callback, and then just execute the javascript from within javascript.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try this example : </p>\n\n<pre><code>string str=\"&lt;script&gt;alert(\\\"ok\\\");&lt;/script&gt;\";\nPage.ClientScript.RegisterStartupScript(this.GetType(), \"Script\", str, false);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using cordova/phonegap to make a windows phone app, i'm trying to call a script from C# when an event fires.</p>\n\n<p>Is there anyway to do this?</p>\n\n<p>here's my class so far.</p>\n\n<pre><code>public void register(string options)\n{\n        // This is executed asynchronously\n        if (!TryFindChannel())\n            DoConnect();\n}\n\n\nvoid httpChannel_ChannelUriUpdated(object sender, NotificationChannelUriEventArgs e)\n{\n        // Finished asynchronous task in \"register\" method\n        Trace(\"Channel opened. Got Uri:\\n\" + httpChannel.ChannelUri.ToString());\n        SaveChannelInfo();\n\n        Trace(\"Subscribing to channel events\");\n        SubscribeToService();\n        SubscribeToNotifications();\n\n        // SEND CHANNEL URI TO JAVASCRIPT\n\n}\n</code></pre>\n",
            "last_activity_date": 1384849941,
            "question_id": 19864477,
            "score": 6,
            "tags": [
                "c#",
                "javascript",
                "cordova",
                "windows-phone-8"
            ],
            "title": "How to call JavaScript from C# - Cordova/PhoneGap"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>While this is technically possible, I don't see why you'd need to do that.  If you're concerned about reducing the data that goes over the wire, this change won't actually do much beyond the few characters saved in the shorter <code>src</code> tag.  Simply changing the location of the JS file on the server won't actually improve performance - the JS has to be sent.</p>\n\n<p>Proper caching (which Socket.IO has) will return a 304 Not Modified (and not re-send the JS file every time you load a page).</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>A standalone build of socket.io-client is exposed automatically by the socket.io server as <code>/socket.io/socket.io.js</code>. Alternatively you can serve the file <code>socket.io-client.js</code> found at the root of <a href=\"https://github.com/LearnBoost/socket.io-client\" rel=\"nofollow\">this repository</a>.</p>\n</blockquote>\n\n<p><a href=\"https://github.com/LearnBoost/socket.io-client\" rel=\"nofollow\">https://github.com/LearnBoost/socket.io-client</a></p>\n\n<p>I have a module called <a href=\"https://github.com/chevex/shotgun-client\" rel=\"nofollow\">shotgun-client</a> that actually wraps socket.io. I needed to serve a custom client script as well as the socket.io client script, but I didn't want every user of my module to have to include multiple script references on their pages.</p>\n\n<p>I found that, when installed, you can serve the generated client script from socket.io by <a href=\"https://github.com/Chevex/shotgun-client/blob/master/index.js#L32\" rel=\"nofollow\">reading the file <code>/node_modules/socket.io/node_modules/socket.io-client/dist/socket.io.js</code></a>. So my module adds a listener for its own URL and when it serves my custom client script it also serves the socket.io client script with it. Viola! Only a single script reference for the users of my module :)</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You obviously can <em>host</em> the socket.io client library anywhere and pull it in to a page.  However, it will almost certainly <strong>not work</strong> with your Java-based server.</p>\n\n<p>To understand why, you need to understand what socket.io is really doing behind the scenes; the client library is only a small part of it.</p>\n\n<p>Socket.io actually defines and implements <a href=\"https://github.com/LearnBoost/socket.io-spec\">its own protocol</a> for realtime communication between a browser and a server.  It does so in a way that supports multiple <em>transports</em>: if&mdash;for example&mdash;a user's browser or proxy doesn't support <a href=\"http://en.wikipedia.org/wiki/WebSocket\">WebSockets</a>, it can fall back to <a href=\"http://en.wikipedia.org/wiki/Push_technology#Long_polling\">long polling</a>.</p>\n\n<p>What the socket.io client actually does is:</p>\n\n<ol>\n<li>Makes a XHR <code>GET</code> request for <code>/socket.io/1</code>.  The server responds with a session ID, configured timeouts, and supported transports.</li>\n<li>The client chooses the best transport that the user browser supports.  In modern browsers, it will use WebSockets.</li>\n<li>If WebSockets are supported, it creates a new <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\"><code>WebSocket</code></a> to initiate a WebSocket connection (HTTP <code>GET</code> with <code>Upgrade: websocket</code> header) to a special URL &ndash; <code>/socket.io/1/websocket/&lt;session id&gt;</code>.</li>\n<li>If WebSockets aren't supported by the browser or fail to connect (there are lots of intermediaries in the wild like proxies, filters, network security devices, and so forth that don't support WebSocket requests), the library falls back to XHR long polling, and makes a XHR request to <code>/socket.io/1/xhr-polling/&lt;sesion id&gt;</code>.  The server does not respond to the request until a new message is available or a timeout is reached, at which point the client repeats the XHR request.</li>\n</ol>\n\n<p>Socket.io's server component handles the other end of that mess.  It handles all the URLs under <code>/socket.io/</code>, setting up sessions, parsing WebSocket upgrades, actually sending messages, and a bunch of other bookkeeping.</p>\n\n<p>Without all of the services provided by the socket.io server, the client library is pretty useless.  It will just make a XHR request to a URL that doesn't exist on your server.</p>\n\n<p>My guess is that your Java-based server just implements the WebSockets protocol.  You can connect directly to it using <a href=\"https://developer.mozilla.org/en-US/docs/WebSockets\">the browser-provided WebSocket APIs</a>.</p>\n\n<p>It is <em>possible</em> that your server does implement the socket.io protocol &ndash; there are a few abandoned Java projects to do that &ndash; but that's unlikely.  Talk with the developer of your server to find out exactly how he's implemented a \"socket server.\"</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>To use socket.io on the client side, usually we start a node.js server and go like this:</p>\n\n<pre><code>&lt;script src=\"/socket.io/socket.io.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>or with specific port:</p>\n\n<pre><code>&lt;script src=\"http://localhost:3700/socket.io/socket.io.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<h3>Question is:</h3>\n\n<p>is it necessary to use node.js server to serve socket.io.js ?</p>\n\n<h3>...or is it possible to</h3>\n\n<p>make a local copy of socket.io.js instead of goes to server every single time we need socket.io?</p>\n\n<hr>\n\n<p>like, we go to view source and copy everything we got from the source of script tag,</p>\n\n<p>paste and save it as <strong>socket.io-local.js</strong> so that next time we use:</p>\n\n<pre><code>&lt;script src=\"socket.io-local.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>will that work ?</p>\n\n<hr>\n\n<h2>Updates</h2>\n\n<p>Thanks for everyone's great response,</p>\n\n<p>I'm asking this because in the case I'm involved, I don't actually have access to the server: </p>\n\n<p>I am writing the client-side to connect to other developer's Socket Sever which is written in Java.</p>\n\n<p>Therefore I'll have to think a way to work around the fact that I don't have a server there for me.</p>\n\n<p>from what I've been testing, \nthis way seems to work but I really don't know what's happening behind the scene.</p>\n",
            "last_activity_date": 1382457422,
            "question_id": 19506735,
            "score": 6,
            "tags": [
                "javascript",
                "node.js",
                "socket.io"
            ],
            "title": "Client-side socket.io without a node.js server"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can always use <code>.filter()</code>:</p>\n\n<pre><code>var mans = $('input').filter(function() {\n    return $(this).attr('name').toLowerCase().indexOf('man') &gt; -1;\n});\n\nmans.css('background-color', 'black');\n</code></pre>\n\n<p>The key part here is <code>toLowerCase()</code> which lowercases the <code>name</code> attribute, allowing you to test it for containing <code>man</code>.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<pre><code>var control = $('input').filter(function() {\n    return /*REGEX_VALUE*/i.test($(this).attr('id'));\n});\n</code></pre>\n\n<p>*REGEX_VALUE* - the value you want to find</p>\n\n<p>I ended up using regex to validate whether the attribute 'ID' satisfy... regex is much more flexible if you want to find a certain matching value or values, case sensitive or insensitive or a certain range of values...</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am doing the following using attribute contains selector <a href=\"http://api.jquery.com/attribute-contains-selector/\">$('[attribute*=value]')</a></p>\n\n<pre><code>&lt;input name=\"man-news\"&gt;\n&lt;input name=\"milkMan\"&gt;\n\n&lt;script&gt;    \n    $( \"input[name*='man']\").css(\"background-color:black\");\n&lt;/script&gt;\n</code></pre>\n\n<p>This works for the 1st input but not the second input as \"<strong>Man</strong>\" has a capital \"<strong>M</strong>\"</p>\n\n<p>How can I make <code>$( \"input[name*='man']\")</code> an case insensitive selector?</p>\n",
            "last_activity_date": 1393558888,
            "question_id": 19465157,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "jquery-selectors"
            ],
            "title": "Case insensitive jQuery attribute selector"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You cannot access the DOM of a page loaded in a frame in a different origin. This is blocked for security reasons (imagine a random website you visited opening your web mail service in a hidden iframe and you can see why).</p>\n\n<p>The closest you can come, and then only if you control both websites, is to pass messages between them using the <a href=\"http://dev.w3.org/html5/postmsg/#dom-window-postmessage\">web messaging api</a>.</p>\n\n<p>In one page, write a function to handle the messages and then add it as a message event listener.</p>\n\n<pre><code>function receiveMessage(event)\n{\n  alert(event.data);\n}\n\naddEventListener(\"message\", receiveMessage, false);\n</code></pre>\n\n<p>In the other, send the message:</p>\n\n<pre><code>parent.postMessage(\"This is a message\", \"*\");\n</code></pre>\n\n<p>See <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage\">MDN for more information</a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>You can use postMessage!</p>\n\n<h2>PARENT</h2>\n\n<pre><code>if (window.addEventListener) {\n    window.addEventListener (\"message\", receive, false);        \n}\nelse {\n    if (window.attachEvent) {\n        window.attachEvent(\"onmessage\",receive, false);\n    }\n}\n\nfunction receive(event){\n    var data = event.data;\n    if(typeof(window[data.func]) == \"function\"){\n        window[data.func].call(null, data.params[0]);\n    }\n}\n\nfunction alertMyMessage(msg){\n\n    alert(msg);\n}\n</code></pre>\n\n<h2>IFRAME</h2>\n\n<pre><code>function send(){\n    window.parent.window.postMessage(\n        {'func':'alertMyMessage','params':['Thanks for Helping me']},\n        'http://www.my-website.com'\n    );\n}\n</code></pre>\n\n<h2>REFERENCE</h2>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage</a></p>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Here is my code on <code>http://my-localhost.com/iframe-test.html</code></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;title&gt;Welcome Iframe Test&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;iframe src=\"http://www.my-website.com/index.html\" width=\"500\" height=\"500\"&gt;&lt;/iframe&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction alertMyMessage(msg){\n    alert(msg);\n}\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Here is code on <code>http://www.my-website.com/index.html</code></p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;&lt;/title&gt;Welcome to my Server&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to My Server&lt;/ht&gt;\n&lt;a href=\"javascript:void(0)\" title=\"Click here\" onClick=\"parent.alertMyMessage('Thanks for Helping me')\"&gt;Click Here&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>When i Click the \"Click Here\" Link. i got following Error.</p>\n\n<blockquote>\n  <p>Uncaught SecurityError: Blocked a frame with origin\n  \"<a href=\"http://www.my-website.com\">http://www.my-website.com</a>\" from accessing a frame with origin\n  \"<a href=\"http://my-localhost.com\">http://my-localhost.com</a>\". Protocols, domains, and ports must match.</p>\n</blockquote>\n\n<p>Please Help me to Fix this Issue, or give some other solution for this.</p>\n",
            "last_activity_date": 1412630904,
            "question_id": 19406541,
            "score": 6,
            "tags": [
                "javascript",
                "html",
                "iframe",
                "cross-domain"
            ],
            "title": "How to Call Parent Window JavaScript Function inside iframe"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You have to use something like its posted in <a href=\"http://stackoverflow.com/questions/6470567/jquery-load-txt-file-and-insert-into-div\">this Answer</a></p>\n\n<h2>jQuery</h2>\n\n<pre><code>$(document).ready(function() {\n   $(\"#open\").click(function() {\n       $.ajax({\n           url : \"helloworld.txt\",\n           dataType: \"text\",\n           success : function (data) {\n               $(\"#text\").text(data);\n           }\n       });\n   });\n}); \n</code></pre>\n\n<p>Read more on the <a href=\"http://api.jquery.com/jQuery.ajax/\">jQuery Documentation of .ajax()</a></p>\n\n<h2>Non jQuery</h2>\n\n<p>I you do not want to use jQuery you have to use the <code>XMLHttpRequest</code>-Object something like that:</p>\n\n<pre><code>var xmlhttp, text;\nxmlhttp = new XMLHttpRequest();\nxmlhttp.open('GET', 'http://www.example.com/file.txt', false);\nxmlhttp.send();\ntext = xmlhttp.responseText;\n</code></pre>\n\n<p>But this can be read on the SO-Answer <a href=\"http://stackoverflow.com/questions/9155960/xmlhttprequest-to-read-an-external-file\">here</a> or the complete and understandable documentation on <a href=\"http://de.wikipedia.org/wiki/XMLHttpRequest\">Wikipedia</a></p>\n\n<p><em>Note: But this is not cross browser compatible, for older IE version you have to use the <code>ActiveXObject(\"Microsoft.XMLHTTP\")</code> object</em></p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>One of the easiest way is to request the server to return the pre-filled textarea\n(Here's an example using PHP):</p>\n\n<pre><code>&lt;textarea name=\"text\" rows=\"20\" cols=\"70\"&gt;\n&lt;?php\necho file_get_contents('yourFile.txt');\n?&gt;\n&lt;/textarea&gt;\n</code></pre>\n\n<p><em>Note: Something similar can be done with any <a href=\"http://en.wikipedia.org/wiki/Server-side_scripting\" rel=\"nofollow\">server-side scripting language</a>.</em></p>\n\n<p>In the meantime, if you need to load it dynamically, your best bet is using an <a href=\"http://en.wikipedia.org/wiki/Ajax_%28programming%29\" rel=\"nofollow\">AJAX</a> approach. Choose which approach is the best for you to code and maintain. While jQuery is a popular approach, you are free to use anything you feel confortable with and probably want to know about <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\" rel=\"nofollow\">XmlHttpRequest</a> first.</p>\n\n<p>Dynamic AJAX requests with Pure JavaScript can be tricky so make sure that your solution is cross-browser. A common mistake is using XmlHtpRequest directly and failing to make it compatible with older IE versions, which leads to random bugs depending on which browser / version you use. For example, it could look like this (would need to be tested on all targeted browser so you can add fallbacks if needed):</p>\n\n<p><strong>Pure JS:</strong></p>\n\n<pre><code>if (typeof XMLHttpRequest === \"undefined\") {\n    XMLHttpRequest = function () {\n        try { return new ActiveXObject(\"Msxml2.XMLHTTP.6.0\"); }\n        catch (e) {}\n        try { return new ActiveXObject(\"Msxml2.XMLHTTP.3.0\"); }\n        catch (e) {}\n        try { return new ActiveXObject(\"Microsoft.XMLHTTP\"); }\n        catch (e) {}\n        throw new Error(\"This browser does not support XMLHttpRequest.\");\n    };\n}\n\nfunction readBOX() {\n    function reqListener () {\n        document.forms[0].text.value = this.responseText;\n    }\n\n    var txtinput = document.getElementById(\"txtinput\").value;\n    var filePath = \"http://mywebsite.com/textfile/\" + txtinput + \".txt\";\n\n    var oReq = new XMLHttpRequest();\n    oReq.onload = reqListener;\n    oReq.open(\"get\", filePath, true);\n    oReq.send();\n}\n</code></pre>\n\n<p>But if you don't mind to sacrifice some performances to ensure maximum support, you should use jQuery's implementation:</p>\n\n<p><strong>jQuery:</strong></p>\n\n<pre><code>function readBOX() {\n    var txtinput = document.getElementById(\"txtinput\").value;\n    var filePath = \"http://mywebsite.com/textfile/\" + txtinput + \".txt\";\n\n    $.ajax({\n        url: filePath\n    }).done(function(data){\n        document.forms[0].text.value = data;\n    });\n}\n</code></pre>\n\n<p><em>Note: jQuery's library is kind of huge, but keep in mind that if you include it directly from google servers, your user more likely has it already in cache.</em></p>\n\n<p>Hope this helps :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Thanks everyone. Javascript didn't work for me. I changed to PHP and it's working very well.</p>\n\n<pre><code>&lt;!DOCTYPE HTML&gt;\n&lt;html&gt;\n   &lt;head&gt;\n      &lt;title&gt;textbox&lt;/title&gt;\n   &lt;/head&gt;\n   &lt;body&gt;\n&lt;form action=\"process.php\" method=\"post\"&gt;\n      &lt;input type=\"text\" name=\"name\" /&gt;\n      &lt;input type=\"submit\" /&gt;\n&lt;/form&gt;\n   &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>Process.php </p>\n\n<pre><code>&lt;textarea name=\"text\" rows=\"20\" cols=\"70\"&gt; \n&lt;?php $name =  $_POST[\"name\"]; echo file_get_contents(\"$name\");?&gt;\n&lt;/textarea&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                }
            ],
            "body": "<p>I was trying to get the text file into textarea. The result is \"<a href=\"http://mywebsite.com/textfile/(txtinput).txt\">http://mywebsite.com/textfile/(txtinput).txt</a> and the text file doesn't load into textarea.</p>\n\n<pre><code>&lt;html&gt;\n   &lt;head&gt;\n      &lt;title&gt;textbox&lt;/title&gt;\n      &lt;script type=\"text/javascript\"&gt;\n         function readBOX() {\n            var txtinput = document.getElementById('txtinput').value;\n            document.forms[0].text.value = (\"http://mywebsite.com/textfile/\") + txtinput +(\".txt\");\n         }\n      &lt;/script&gt;\n   &lt;/head&gt;\n   &lt;body&gt;\n      &lt;p&gt; Type&lt;/p&gt;\n      &lt;input type=\"text\" id=\"txtinput\" /&gt;\n      &lt;input id=\"open\" type=\"button\" value=\"READ\" onClick=\"readBOX()\" /&gt;\n      &lt;form&gt;\n         &lt;textarea name=\"text\" rows=\"20\" cols=\"70\"&gt;loaded text here&lt;/textarea&gt;\n      &lt;/form&gt;\n   &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n",
            "last_activity_date": 1382567273,
            "question_id": 19020484,
            "score": 6,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Loading .txt file into textarea Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>try </p>\n\n<pre><code>(new Date(\"2013-09-05 15:34:00\")).getTime() / 1000\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can initialise a Date object and call getTime() to get it in unix form. It comes out in milliseconds so you'll need to divide by 1000 to get it in seconds.</p>\n\n<pre><code>(new Date(\"2013/09/05 15:34:00\").getTime()/1000)\n</code></pre>\n\n<p>It may have decimal bits so wrapping it in Math.round would clean that.</p>\n\n<pre><code>Math.round(new Date(\"2013/09/05 15:34:00\").getTime()/1000)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p><a href=\"http://stackoverflow.com/users/2740208/damouse404\">DaMouse404</a> <a href=\"http://stackoverflow.com/a/18634180/1717821\">answer</a> works, but instead of using dashes, you will use slashes:</p>\n\n<p>You can initialise a Date object and call getTime() to get it in unix form. It comes out in milliseconds so you'll need to divide by 1000 to get it in seconds.</p>\n\n<pre><code>(new Date(\"2013/09/05 15:34:00\").getTime()/1000)\n</code></pre>\n\n<p>It may have decimal bits so wrapping it in Math.round would clean that.</p>\n\n<pre><code>Math.round(new Date(\"2013/09/05 15:34:00\").getTime()/1000)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I want to convert a string <code>\"2013-09-05 15:34:00\"</code> into a Unix timestamp in javascript. Can any one tell how to do that? thanks. </p>\n",
            "last_activity_date": 1421882908,
            "question_id": 18634087,
            "score": 6,
            "tags": [
                "javascript",
                "string",
                "time",
                "unix-timestamp"
            ],
            "title": "how to convert a string to a Unix timestamp in javascript?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Try using <a href=\"http://api.jquery.com/jquery.map/\">jQuery.map()</a> - <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map\">Array.map()</a> not used because of IE &lt; 9 support</p>\n\n<p>For <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\">JSON.stringify()</a> - use <a href=\"https://github.com/douglascrockford/JSON-js\">json2</a> for old browser support</p>\n\n<pre><code>$.map(array, function(obj){return JSON.stringify(obj)}).join(' ')\n</code></pre>\n\n<p>Update: To get the value properties</p>\n\n<pre><code>var string = $.map(array, function(obj){\n    return obj.value\n}).join(' ');\n</code></pre>\n\n<p>Demo: <a href=\"http://jsfiddle.net/arunpjohny/Ut7RN/\">Fiddle</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I've got an array of objects with a few properties, such as 'value' and 'label'.</p>\n\n<p><code>array.join(' ')</code> of course gives me \"[object] [object]\", but instead I need to get a string of the 'value' properties of all objects, separated by a space.</p>\n\n<p>What is the shortest way to do this, and is this possible without writing a for loop?</p>\n",
            "last_activity_date": 1377444144,
            "question_id": 18430357,
            "score": 6,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "join array of objects by using one property"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can invoke ASP.NET AJAX Page Methods via jQuery, like this:</p>\n\n<pre><code>$.ajax({\n    type: \"POST\",\n    url: \"PageName.aspx/MethodName\",\n    data: \"{}\",\n    contentType: \"application/json; charset=utf-8\",\n    dataType: \"json\",\n    success: function(msg) {\n        // Do something interesting here.\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><a href=\"http://msdn.microsoft.com/en-us/library/system.web.ui.scriptmanager.enablepagemethods.aspx\"><code>EnablePageMethods</code></a> actually only interacts with methods of a <code>Page</code> subclass that are <code>public</code>, <code>static</code>, and attributed as a <code>WebMethod</code>.</p>\n\n<p><code>GetCompanyList</code> has 2 of those and just also needs to be <code>static</code>.</p>\n\n<pre><code>[System.Web.Services.WebMethod()]\n[System.Web.Script.Services.ScriptMethod()]\npublic static IEnumerable&lt;CompanyMinimum&gt; GetCompanyList(int officeId) {\n    // ...\n}\n</code></pre>\n\n<p>And, I suspect what's happening is that it's leaving <code>PageMethods</code> undefined client-side if it doesn't find any methods that have all 3.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>maybe you are using Routing in your pages. then must be set real path after call PageMethods:</p>\n\n<pre><code>PageMethods.set_path(\"&lt;%=ResolveUrl(\"~/YourPage.aspx\")%&gt;\");\nPageMethods.YourMethod(param, OnSuccess, OnError);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm looking at some old code that I can only assume worked at one time.</p>\n\n<p><strong>MyPage.aspx:</strong></p>\n\n<pre><code>function GetCompanyList(officeId) {\n    var companyList = document.getElementById('&lt;%= CompanyDropDown.ClientID %&gt;');\n    if (companyList.length == 0)\n        PageMethods.GetCompanyList(officeId, OnGetCompanyList);\n    else\n        EditCompany();\n}\n</code></pre>\n\n<p><strong>And:</strong></p>\n\n<pre><code>&lt;asp:ScriptManager ID=\"ScriptManager1\" runat=\"server\" EnablePageMethods=\"true\" /&gt;\n</code></pre>\n\n<p><strong>Code behind:</strong></p>\n\n<pre><code>[System.Web.Services.WebMethod()]\n[System.Web.Script.Services.ScriptMethod()]\npublic IEnumerable&lt;CompanyMinimum&gt; GetCompanyList(int officeId) {\n    return (\n        from c in Repository.Query&lt;Company&gt;()\n        where !c.IsDeleted &amp;&amp; c.TypeEnumIndex == (short)CompanyRelationshipType.Hotel\n        select new CompanyMinimum() {\n            id = c.Id,\n            desc = c.Description\n        }\n    ).ToList();\n}\n</code></pre>\n\n<p>But at the call to <code>PageMethods.GetCompanyList()</code> in the first snippet, Chrome reports:</p>\n\n<blockquote>\n  <p>PageMethods is not defined</p>\n</blockquote>\n\n<p>Can anyone see what has changed to prevent this from working?</p>\n\n<p><em>Note: I've found similar questions but they all seemed related to this code not working in master pages or user controls, which isn't the case here.</em></p>\n",
            "last_activity_date": 1380916723,
            "question_id": 18242334,
            "score": 6,
            "tags": [
                "javascript",
                "asp.net",
                "ajax",
                "pagemethods"
            ],
            "title": "PageMethods is not Defined in ASPX Page"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try giving :</p>\n\n<pre><code>src =\"javascript:false;\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yes, it is possible to load an empty <code>Iframe</code> (with no <code>src</code> specified) and later apply content to it using Javascript.</p>\n\n<p>See: <a href=\"http://api.jquery.com/jquery-wp-content/themes/jquery/js/main.js\">http://api.jquery.com/jquery-wp-content/themes/jquery/js/main.js</a> (line 54 and below).</p>\n\n<p>Or simply try:</p>\n\n<pre><code>&lt;iframe&gt;&lt;/iframe&gt;\n\n$('iframe').get()[0].contentWindow.document.write(\"&lt;h1&gt;Injected from parent frame&lt;/h1&gt;\")\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Sure. You can get a reference to the <code>iframe</code>'s <code>document</code> object with</p>\n\n<pre><code>var doc = iframe.contentDocument;\n</code></pre>\n\n<p>and then you can create and add elements like you do in the current document.</p>\n\n<p>If the iframe doesn't have a <code>src</code> attribute, it will still contain an empty document. I believe though that at least older IE versions require the <code>src</code> attribute to be set, otherwise the iframe won't have a document.</p>\n\n<p>See also: <a href=\"http://stackoverflow.com/questions/6581803/contentdocument-for-an-iframe\">contentDocument for an iframe</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Yes, Here is how you change the html of the iframe with jQuery</p>\n\n<pre><code>var context = $('iframe')[0].contentWindow.document,\n    $body = $('body', context);\n$body.html('Cool');\n</code></pre>\n\n<p><strong>Demo: <a href=\"http://jsfiddle.net/yBmBa/\" rel=\"nofollow\">http://jsfiddle.net/yBmBa/</a></strong></p>\n\n<p><strong>document.contentWindow: <a href=\"https://developer.mozilla.org/en-US/docs/Talk%3aDocument_Object_Model_%28DOM%29/document.contentWindow\" rel=\"nofollow\">https://developer.mozilla.org/en-US/d...</a></strong></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>While debugging jquery code on their site ( via chrome developer toolbar)</p>\n\n<p>I noticed that their examples are given under <code>Iframe</code> : </p>\n\n<p><a href=\"http://api.jquery.com/empty-selector/\" rel=\"nofollow\">Here  - for example</a> there is a sample which is under an Iframe but after investigating  , I see that the Iframe  doesn't have <code>SRC</code>  </p>\n\n<p>The picture shows it all</p>\n\n<p><img src=\"http://i.stack.imgur.com/atMy8.png\" alt=\"enter image description here\"></p>\n\n<p><strong>Question :</strong> </p>\n\n<p>Is it possible to set content to an Iframe without setting its SRC ? </p>\n\n<p>p.s. this menu also shows me an empty content </p>\n\n<p><img src=\"http://i.stack.imgur.com/pj8ud.png\" alt=\"enter image description here\"></p>\n",
            "last_activity_date": 1392742033,
            "question_id": 18044073,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "dom",
                "iframe"
            ],
            "title": "Iframe without src but still has content?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Try this fiddle, it is working in chrome, ie and the latest version of mozilla : <a href=\"http://jsfiddle.net/Hed2J/3/\">http://jsfiddle.net/Hed2J/3/</a></p>\n\n<p>I replace <code>$('body').scrollTop()</code> with <code>$(window).scrollTop()</code>.</p>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>A little off-topic, but if you want to animate using scrolltop, you must do</p>\n\n<pre><code>$('html,body').animate({scrollTop:0}, 'slow');\n</code></pre>\n\n<p>Note that we target both <code>html</code> and <code>body</code> because <code>html</code> will make scroll in Firefox works and <code>body</code> for other browsers.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>This script:</p>\n\n<pre><code>function onscroll(){\n    document.getElementById(\"divs\").style.top=\"\"+$('body').scrollTop()+\"px\";\n}\n</code></pre>\n\n<p>Fiddle:\n<a href=\"http://jsfiddle.net/Hed2J/1/\" rel=\"nofollow\">http://jsfiddle.net/Hed2J/1/</a></p>\n\n<p>Doesn't work on the latest Firefox version!</p>\n\n<p>What am I doing wrong? :)\nThanks for the help!</p>\n\n<p><strong>Edit:</strong> <em>Edited with JSFiddle and full script :) as attached to an onscroll event</em></p>\n",
            "last_activity_date": 1406056197,
            "question_id": 17776544,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "scrolltop"
            ],
            "title": "jQuery scrolltop firefox not working"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>They don't (in Chrome where I tested), easy way to test is</p>\n\n<pre><code>window.onerror = function () {console.log('error!');};\nthrow new Error();\n// Error\n</code></pre>\n\n<p>You can make them do it if you defer them, though</p>\n\n<pre><code>window.setTimeout(function() {throw new Error()}, 0);\n// error!\n// Uncaught Error\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I'm trying to debug our handling of window.onerror.  I've created a function that will throw an error (invoking another function that does not exist).  I've tried calling this first function from Chrome's web development console - an error is reported in the console, but our window.error handling function does not seem to be called.  (I've verified that window.onerror references our error handling code in the console).</p>\n\n<p><strong>Do errors within functions invoked in the dev console not trigger window.onerror?</strong></p>\n",
            "last_activity_date": 1373310234,
            "question_id": 17534054,
            "score": 6,
            "tags": [
                "javascript",
                "google-chrome"
            ],
            "title": "Chrome: Will an error in code invoked from the dev console trigger window.onerror?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>No difference, though Crockford advises the use of the former, to ascertain that it's being treated as a function expression.</p>\n\n<p>For more info, read these:</p>\n\n<ul>\n<li><a href=\"http://benalman.com/news/2010/11/immediately-invoked-function-expression/\" rel=\"nofollow\">Immediately-Invoked Function Expression (IIFE)</a></li>\n<li><a href=\"http://kangax.github.io/nfe/\" rel=\"nofollow\">Named function expressions demystified</a></li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>no difference, it is just a matter of style. Both are executed functions and they return whatever they return in the variable and they are returning a function. <a href=\"http://stackoverflow.com/questions/3796308/parenthesis-around-functions-in-javascript\"><strong>check this out</strong></a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Nope. Or at least not in your example.</p>\n\n<p>The outer parens only matter when the function keyword would be the first token in a statement.</p>\n\n<pre><code>// cool\nvar foo = function(){}();\nvar foo = (function(){}());\n\n// also cool\n(function(){}());\n\n// not cool, syntax error\n// parsed as function statement, expects function name which is missing\nfunction(){}();\n\n// also not cool, syntax error\n// declares a function, but can't be executed immediately\nfunction foo(){}();\n</code></pre>\n\n<p>When <code>function</code> is the first token in a statement, it's a function declaration (think <em>named</em> function), which behaves slightly differently than <code>function</code> in all other contexts.  That leading paren forces the parses to treat it like a function expression (think <em>anonymous</em> function) instead, which allows immediate execution.</p>\n\n<p>See: <a href=\"http://stackoverflow.com/questions/1013385/what-is-the-difference-between-a-function-expression-vs-declaration-in-javascrip\">What is the difference between a function expression vs declaration in Javascript?</a></p>\n\n<p>If you start the line or statement with something else, like variable declaration, it technically doesn't matter at all.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>There's no technical difference, It's just an idiomatic style used for readability to signal at the start that it's a self-invoking function.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>the purpose is to avoid the global scope, adding the <code>var myfunc =</code> in front of <code>(function (){ return function(){}}());</code> essentially defeats the purpose</p>\n\n<p>compare the two</p>\n\n<pre><code>(function(){...do something...}());\n</code></pre>\n\n<p>this function is ran in a local scope, which is inside the parentheses. </p>\n\n<pre><code>var myfunc = function(){};\n</code></pre>\n\n<p>this function is ran on the global scope.\nwhy not this way, because you can get your self into naming conflicts with other methods and <code>var</code> as well as plugin's named <code>var</code> and it can hinder your applications performance with the <code>var</code> being saved on the global scope.</p>\n\n<p>I perfer</p>\n\n<pre><code>(function() {})();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Any difference between</p>\n\n<pre><code>var myfunc = (function () { return function () { ... } }());\n</code></pre>\n\n<p>and</p>\n\n<pre><code>var myfunc = function () { return function () { ... } }();\n</code></pre>\n\n<p>Is it just a matter of style or is there more to the surrounding () in the first form?</p>\n",
            "last_activity_date": 1372296047,
            "question_id": 17332911,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "Any difference between f() and (f())?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You can set the tick values of an ordinal axis explicitly using <code>d3.svg.axis().tickValues(*array*)</code>.</p>\n\n<p>But this is an odd way to do it because it dangerously separates your keys and values, meaning you have to take care to manually align the scales and make sure that your data corresponds correctly. It helps to group the keys and values in a single object and then use the format:</p>\n\n<pre><code>       axis.domain(array.map(function (d) { return d.value; }))\n</code></pre>\n\n<p>to map your axis domains.</p>\n\n<p>I have reworked your data and fiddle to do it in what I see as the more <a href=\"http://jsfiddle.net/NikhilS/3hgra/\" rel=\"nofollow\">d3 way</a>. (Also note that I made some other changes just for fun, namely improved the margins and cleaned up the axis alignment, etc.)</p>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I'm building a bar chart in d3.js with an ordinal x-axis whose ticks should label the chart with text. Could anyone explain how the ordinal scale \"maps\" x ticks to the corresponding bar positions?  Specifically, if I want to designate the x tick labels with an array of text values to the corresponding bars in a bar chart.</p>\n\n<p><strong>Currently I'm setting the domain as the following:</strong></p>\n\n<pre><code>    var labels = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\"];\n    var xScale = d3.scale.ordinal()\n                .domain(labels)\n</code></pre>\n\n<p>However, values of 1-19 are showing after the text labels.</p>\n\n<p><strong>As seen in this fiddle:</strong></p>\n\n<p><a href=\"http://jsfiddle.net/chartguy/FbqjD/\">http://jsfiddle.net/chartguy/FbqjD/</a></p>\n\n<p><strong>Associated Fiddle Source Code:</strong></p>\n\n<pre><code>//Width and height\n            var margin = {top: 20, right: 20, bottom: 30, left: 40};           \n            var width = 600 - margin.left - margin.right;\n            var height= 500-margin.top -margin.bottom;\n            var w = width;\n            var h = height;\n\n\n            var dataset = [ 5, 10, 13, 19, 21, 25, 22, 18, 15, 13,\n                            11, 12, 15, 20, 18, 17, 16, 18, 23, 25 ];\n\n            var labels = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\"];\n            var xScale = d3.scale.ordinal()\n            .domain(labels)\n                            .rangeRoundBands([margin.left, width], 0.05);\n            var xAxis = d3.svg.axis().scale(xScale).orient(\"bottom\");\n\n\n            var yScale = d3.scale.linear()\n                            .domain([0, d3.max(dataset)])\n                            .range([h,0]);\n\n\n            //Create SVG element\n            var svg = d3.select(\"body\")\n                        .append(\"svg\")\n                        .attr(\"width\", w)\n                        .attr(\"height\", h);\n\n            //Create bars\n            svg.selectAll(\"rect\")\n               .data(dataset)\n               .enter()\n               .append(\"rect\")\n               .attr(\"x\", function(d, i) {\n                    return xScale(i);\n               })\n               .attr(\"y\", function(d) {\n                    return yScale(d);\n               })\n               .attr(\"width\", xScale.rangeBand())\n               .attr(\"height\", function(d) {\n                    return h - yScale(d);\n               })\n               .attr(\"fill\", function(d) {\n                    return \"rgb(0, 0, 0)\";\n               });\n\n            svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + 0 + \")\")\n      .call(xAxis);\n\n            //Create labels\n            svg.selectAll(\"text\")\n               .data(dataset)\n               .enter()\n               .append(\"text\")\n               .text(function(d) {\n                    return d;\n               })\n               .attr(\"x\", function(d, i) {\n                    return xScale(i) + xScale.rangeBand() / 2;\n               })\n               .attr(\"y\", function(d) {\n                    return h - yScale(d) + 14;\n               });\n</code></pre>\n",
            "last_activity_date": 1412751154,
            "question_id": 17226576,
            "score": 6,
            "tags": [
                "javascript",
                "d3.js",
                "data-visualization"
            ],
            "title": "Creating a Text Labeled x-Axis with an Ordinal Scale in D3.js"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>you could check the background-image attribute with jQuery then adjust the text color dynamically.</p>\n\n<pre><code>var x = $(body).attr(\"background-image\");\nswitch(x)\n{\n  case \"something.png\":\n      // set color here\n      break;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>This is possible using the canvas element. You would have to create a <code>canvas</code> element, draw the image element into the canvas, get the canvas's image data, look at the portion where the text is, convert those values to grayscale, average them, then compare them with a halfway point. Some example code:</p>\n\n<pre><code>var img = document.getElementById('myImage');\nvar c = document.createElement('canvas');\nvar ctx = c.getContext('2d');\nvar w = img.width, h = img.height;\nc.width = w; c.height = h;\nctx.drawImage(img, 0, 0);\nvar data = ctx.getImageData(0, 0, w, h).data;\nvar brightness = 0;\nvar sX = 0, sY = 0, eX = w, eY = h;\nvar start = (w * sY + sX) * 4, end = (w * eY + eX) * 4;\nfor (var i = start, n = end; i &lt; n; i += 4) {\n      var r = data[i],\n          g = data[i + 1],\n          b = data[i + 2];\n      brightness += 0.34 * r + 0.5 * g + 0.16 * b;\n      if (brightness !== 0) brightness /= 2;\n}\nif (brightness &gt; 0.5) var textColor = \"#FFFFFF\";\nelse var textColor = \"#000000\";\n</code></pre>\n\n<p>I haven't tested this code, though it should work. Make sure to change the sX, sY, eX, eY values to only the area where your text is, otherwise you will get unsatisfactory results (it will still work). Good luck!</p>\n\n<p>EDIT:\nYou will not have to display your image in any special way. Just make sure that the color of the overlay text is the variable textColor.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I finally found something to do precisely what I want it to do! Enter Brian Gonzalez's\n<a href=\"https://github.com/briangonzalez/jquery.adaptive-backgrounds.js\" rel=\"nofollow\">jquery.adaptive-backgrounds.js</a>. Check this out:</p>\n\n<pre><code>$parent.css({\n        // backgroundColor: data.color\n        color: data.color\n});\n</code></pre>\n\n<p>I just commented out the backgroundColor rule and made a new one for color. For white text, a text-shadow like:</p>\n\n<pre><code>text-shadow: 0 0 1px rgba($black, 0.3); // using Sass\n</code></pre>\n\n<p>should be enough. Thank you to everyone for your answers!</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I am working on a product that outputs images from users and the image information is overlayed on top of the aforementioned images. As you might imagine, the images require different text colors due to lightness/darkness. Is there a way to achieve this with JavaScript?</p>\n\n<p>EDIT: I found a similar question to mine and there was a solution given in a jsfiddle (<a href=\"http://jsfiddle.net/xLF38/818\" rel=\"nofollow\">http://jsfiddle.net/xLF38/818</a>). I am using jQuery for my site though. How would I convert the vanilla JavaScript to jQuery?</p>\n\n<pre><code>var rgb = getAverageRGB(document.getElementById('i'));\ndocument.body.style.backgroundColor = 'rgb(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ')';\n\nfunction getAverageRGB(imgEl) {\n\n    var blockSize = 5, // only visit every 5 pixels\n        defaultRGB = {\n            r: 0,\n            g: 0,\n            b: 0\n        }, // for non-supporting envs\n        canvas = document.createElement('canvas'),\n        context = canvas.getContext &amp;&amp; canvas.getContext('2d'),\n        data, width, height,\n        i = -4,\n        length,\n        rgb = {\n            r: 0,\n            g: 0,\n            b: 0\n        },\n        count = 0;\n\n    if (!context) {\n        return defaultRGB;\n    }\n\n    height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;\n    width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;\n\n    context.drawImage(imgEl, 0, 0);\n\n    try {\n        data = context.getImageData(0, 0, width, height);\n    } catch (e) {\n        /* security error, img on diff domain */\n        alert('x');\n        return defaultRGB;\n    }\n\n    length = data.data.length;\n\n    while ((i += blockSize * 4) &lt; length) {\n        ++count;\n        rgb.r += data.data[i];\n        rgb.g += data.data[i + 1];\n        rgb.b += data.data[i + 2];\n    }\n\n    // ~~ used to floor values\n    rgb.r = ~~ (rgb.r / count);\n    rgb.g = ~~ (rgb.g / count);\n    rgb.b = ~~ (rgb.b / count);\n\n    return rgb;\n\n}\n</code></pre>\n",
            "last_activity_date": 1387120486,
            "question_id": 17195738,
            "score": 6,
            "tags": [
                "javascript",
                "image",
                "text"
            ],
            "title": "Dynamically adjust text color based on background image"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The value of an event handler attribute is a sequence of Javascript <strong>statements</strong>, not an expression.</p>\n\n<p>It isn't assigning a function value to the property; it's a piece of code to execute at that event.<br>\nLeaving out the parentheses, results in an expression statement that has no effect.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>One uses the parenthesis and not the other, but what are the differences of using either?</p>\n</blockquote>\n\n<p><code>&lt;a onclick=\"someFunction\"&gt;</code> won't do anything. The parenthesis cause a function to be <em>called</em>. </p>\n\n<p>Having a statement consisting of nothing but an identifier (be it a function name, variable, or whatever) won't do anything (except throw a reference error if the variable doesn't exist).</p>\n\n<blockquote>\n  <p>And what happens if i dont use any href attribute?</p>\n</blockquote>\n\n<p>Then I'd question why you were using an <code>&lt;a&gt;</code> element in the first place.</p>\n\n<blockquote>\n  <p>And also, is there a difference on assigning a inline onclick function to an anchor (a) that to other elements (e.g. span div label etc)?</p>\n</blockquote>\n\n<p>Only that they aren't (by default) focusable elements (nor is an a element without an href attribute), so the click event couldn't be triggered by tabbing to the element and pressing enter. If you want an element that will do something with JS when triggered, and you don't have a sensible fallback for when JS isn't available, use a button.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>when writing inline on click functions, we assigning the code to be executed in the form of string on click of the element.</p>\n\n<p>It is equivalent to eval('someFunction()');\nwe cannot write on click='someFunction'  since it will be equivalent to eval('someFunction') which would do nothing.\nif you intend to bind a click handler to an anchor tag, dont forget to add a href='#' attribute to the anchor tag. </p>\n\n<p>There is no difference between assigning a click handler to span or divs as compared to anchor tag.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>what is the difference between</p>\n\n<p><code>&lt;a onclick=\"someFunction\"&gt;</code></p>\n\n<p>and</p>\n\n<p><code>&lt;a onclick=\"someFunction()\"&gt;</code></p>\n\n<p>One uses the parenthesis and not the other, but what are the differences of using either? What is the \"correct\" option? And what happens if i dont use any <code>href</code> attribute?</p>\n\n<p>As far as I know, in javascript, using <code>something = someFunc();</code> assigns the return value of that function to the <code>something</code> variable. And using <code>something = someFunc;</code> assigns the function directly (not its result) to that variable (And it's mostly used to assign functions to events). e.g. I can assign a function to a onclick event.</p>\n\n<p>But what I don't understand is what happens when using either in some html element inline event, as in the examples, since the assignation is not to a javascript variable, but to an html attribute, which happens to be an event? Please explain.</p>\n\n<p>And also, is there a difference on assigning a inline onclick function to an anchor (<code>a</code>) that to other elements (e.g. <code>span div label</code> etc)? Do they have the same effect? </p>\n\n<p>Sidenote:\nI've been reading <a href=\"http://stackoverflow.com/questions/134845/href-attribute-for-javascript-links-or-javascriptvoid0\">here</a> about how to run a function when clicking on a link, and I already understood is that is should <em>not</em> be done \"inline\", but instead using unobtrusive javascript. (I mention it to avoid debate about that), but in the examples I've seen they don't mention the difference of both options I mention when doing it inline.</p>\n\n<p>Edit: This question was made because <a href=\"http://stackoverflow.com/a/688208/1385198\">here</a> they gave an answer which doesn't use the parenthesis in the function for the event, and nobody mentioned the parenthesis were needed, so I assume it is valid. yet I don't know what is the difference of using <code>()</code> or not.</p>\n",
            "last_activity_date": 1370450643,
            "question_id": 16944982,
            "score": 6,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "what&#39;s the difference between &lt;a onclick=&quot;someFunction&quot;&gt; and &lt;a onclick=&quot;someFunction()&quot;&gt;"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>JSHint isn't sure whether the function that code is in will be called with an actual <code>this</code>.</p>\n\n<p>To tell JSHint how the function will be called and suppress this warning, add <code>/*jshint validthis: true */</code> to the top of the function.</p>\n",
                    "is_accepted": false,
                    "score": 10
                }
            ],
            "body": "<p>Trying to validate some Javascript in JsHint, and I get the following:</p>\n\n<p>Possible strict violation:</p>\n\n<pre><code>return ($.event.dispatch || $.event.handle).apply(this, args);\n</code></pre>\n\n<p>Any ideas why it's throwing that error?</p>\n\n<p>Thanks guys</p>\n",
            "last_activity_date": 1368567501,
            "question_id": 16553264,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "Why is JSHint throwing a &quot;possible strict violation&quot; on this line"
        }
    ]
}
