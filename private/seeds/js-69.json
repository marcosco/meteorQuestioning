{
    "items": [
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You need to specify the position (or offset) of each <code>tspan</code> element to give the impression of a line break -- they are really just text containers that you can position arbitrarily. This is going to be much easier if you wrap the <code>text</code> elements in <code>g</code> elements because then you can specify \"absolute\" coordinates (i.e. <code>x</code> and <code>y</code>) for the elements within. This will make moving the <code>tspan</code> elements to the start of the line easier.</p>\n\n<p>The main code to add the elements would look like this.</p>\n\n<pre><code>text.append(\"text\")       \n    .each(function (d) {\n    var arr = d.name.split(\" \");\n    if (arr != undefined) {\n        for (i = 0; i &lt; arr.length; i++) {\n            d3.select(this).append(\"tspan\")\n                .text(arr[i])\n                .attr(\"dy\", i ? \"1.2em\" : 0)\n                .attr(\"x\", 0)\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"class\", \"tspan\" + i);\n        }\n    }\n});\n</code></pre>\n\n<p>I'm using <code>.each()</code>, which will call the function for each element and not expect a return value instead of the <code>.text()</code> you were using. The <code>dy</code> setting designates the line height and <code>x</code> set to 0 means that every new line will start at the beginning of the block.</p>\n\n<p>Modified jsfiddle <a href=\"http://jsfiddle.net/2NJ25/17/\">here</a>, along with some other minor cleanups.</p>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I am starting with d3.js, and am trying to create a network graph each circle of which contains a label.</p>\n\n<p>What I want is a line break an svg text.</p>\n\n<p>What I am trying to do is to break the text into multiple <code>&lt;tspan&gt;</code>s, each with x=\"0\" and variable \"y\" to simulate actual lines of text. The code I have written gives some unexpected result.</p>\n\n<pre><code>var text = svg.selectAll(\"text\").data(force.nodes()).enter().append(\"text\");\n\ntext       \n .text(function (d) {\n arr = d.name.split(\" \");\n var arr = d.name.split(\" \");\n if (arr != undefined) {\n  for (i = 0; i &lt; arr.length; i++) {\n   text.append(\"tspan\")\n    .text(arr[i])\n    .attr(\"class\", \"tspan\" + i);\n  }\n }\n});\n</code></pre>\n\n<p>In this code am splitting the text string by white space and appending the each splitted string to tspan. But the text belonging to other circle is also showing in each circle. How to overcome this issue?</p>\n\n<p>Here is a JSFIDDLE <a href=\"http://jsfiddle.net/xhNXS/\" rel=\"nofollow\">http://jsfiddle.net/xhNXS/</a> with only svg text</p>\n\n<p>Here is a JSFIDDLE <a href=\"http://jsfiddle.net/2NJ25/16/\" rel=\"nofollow\">http://jsfiddle.net/2NJ25/16/</a> showing my problem with tspan.</p>\n",
            "last_activity_date": 1382096275,
            "question_id": 19447321,
            "score": 2,
            "tags": [
                "javascript",
                "svg",
                "d3.js"
            ],
            "title": "How to linebreak an svg text in javascript?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You cannot get a reference to a local variable by a string. You have to add the local objects to a namespace:</p>\n\n<pre><code>(function(window,$) {\n  // Use \"var MyObject = \" instead of \"MyObject = \"!! Otherwise, you're assigning\n  //  the object to the closest parent declaration of MyVar, instead of locally!\n  var MyObject = (function($) {\n    var obj = {};\n    var local = {};  // &lt;-- Local namespace\n    obj.publicMethod = function(number,otherarg) {\n      local['privateMethod'+number].call(this, otherarg);\n    };\n\n    var privateMethod1 = local.privateMethod1 = function(arg) {\n      //do something with arg\n    };\n\n    var privateMethod2 = local.privateMethod2 = function(arg) {\n      //do something else with arg\n    };\n\n    return obj;\n  })($);\n\n  window.MyObject = MyObject;\n})(window,jQuery);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>The private functions are local variables and not part of any object. So, the <code>[...]</code> notation for accessing a property is never going to work since there is no object the private functions are properties of.</p>\n\n<p>Instead, you could make two objects: <code>private</code> and <code>public</code>:</p>\n\n<pre><code>var public  = {},\n    private = {};\n\npublic.publicMethod = function(number, otherarg) {\n  // `.apply` with a fixed array can be replaced with `.call`\n  private['privateMethod' + number].call(this, otherarg);\n};\n\nprivate.privateMethod1 = function(arg) {\n  //do something with arg\n};\n\nprivate.privateMethod2 = function(arg) {\n  //do something else with arg\n};\n\nreturn public; // expose public, but not private\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>The fact that you cannot call these functions from outside of the scope within which they are defined is a fundamental part of javascript, and indeed, all programming languages.</p>\n\n<p>The only way to call these functions is to make them public. A convention based approach can be applied instead however. The underscore prefix is fairly ubiquitous and generally understood to mean \"not intended to be called as a public function\" eg:</p>\n\n<pre><code>obj._privateMethod1 = function(arg) {\n  //...\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm surprised that incorrect answer is marked as accepted. Actually you CAN  get a reference to a local variable by a string. Just by using <code>eval</code>:</p>\n\n<pre class=\"lang-js prettyprint-override\"><code>(function(window,$) {\n\n    MyObject = (function($) {\n        var obj = {};\n        obj.publicMethod = function(number,otherarg) {\n\n            // Gets reference to a local variable\n            var method = eval('privateMethod'+number);\n\n            // Do with it whatever you want\n            method.apply(this,[otherarg]);\n        };\n\n        var privateMethod1 = function(arg) {\n            //do something with arg\n        };\n\n        var privateMethod2 = function(arg) {\n            //do something else with arg\n        };\n\n        return obj;\n    })($);\n\n    window.MyObject = MyObject;\n})(window,jQuery);\n</code></pre>\n\n<p>Actually this code is very bad and in 99.9% cases you should not use <code>eval</code>. But you must know how it works and what you can do with it. I myself had a few very specific cases when usage of <code>eval</code> was necessary.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>there are plenty of similar questions out there about calling functions by name dynamically. However, I can't find a solution to my specific problem where I have local functions inside a closure without exposing the functions to the public interface of my object.</p>\n\n<p>Lets see some code (this is a fictional example)...</p>\n\n<pre><code>(function(window,$) {\n\n  MyObject = (function($) {\n    var obj = {};\n    obj.publicMethod = function(number,otherarg) {\n      this['privateMethod'+number].apply(this,[otherarg]);\n    };\n\n    var privateMethod1 = function(arg) {\n      //do something with arg\n    };\n\n    var privateMethod2 = function(arg) {\n      //do something else with arg\n    };\n\n    return obj;\n  })($);\n\n  window.MyObject = MyObject;\n})(window,jQuery);\n</code></pre>\n\n<p>This doesn't work because \"this\" is MyObject and the local functions are not exposed.\nAlso I'd like to be able to check if the function exists before trying to call it.\neg.</p>\n\n<pre><code>var func_name = 'privateMethod'+number;\nif($.isFunction(this[func_name])) {\n  this[func_name].apply(this,[otherarg]);\n}\n</code></pre>\n\n<p>I'm not really sure how to proceed, short of exposing my private functions to the public interface, it all works then.</p>\n\n<pre><code>obj.privateMethod1 = function(arg) {\n  //do something with arg\n};\n\nobj.privateMethod2 = function(arg) {\n  //do something else with arg\n};\n</code></pre>\n\n<p>I'm running out of ideas. Your help and advise is greatly appreciated.</p>\n",
            "last_activity_date": 1421438422,
            "question_id": 9464921,
            "score": 2,
            "tags": [
                "javascript",
                "closures",
                "variable-scope"
            ],
            "title": "dynamically call local function in javascript"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here is a simple <a href=\"http://jsfiddle.net/kjy112/pra3K/\" rel=\"nofollow\">JSFiddle Demo</a> showing a custom marker created with the following codes.\nYou can customize the icon of your marker with the icon parameter when creating a marker.  For instance:</p>\n\n<pre><code>var marker = new google.maps.Marker({\n   position: latlng,\n   map: map,\n   icon: 'http://www.kjftw.com/gmap/images/icons/numeric/red10.png',\n   zIndex: Math.round(latlng.lat() * -100000) &lt;&lt; 5\n});\n</code></pre>\n\n<p>You can set the icon param with the location of your custom marker image.  Or in your case something like this:</p>\n\n<pre><code>for(var i=0; i&lt;locations.length; i++){\n     myGlobalMarker.push(new google.maps.Marker({\n          position: new google.maps.LatLng(locations[i][1], locations[i][2]),\n          map: map,\n          icon: locations[i][4],\n          title: locations[i][0]\n     });\n}\n</code></pre>\n\n<p>Where assuming <code>locations[i][1]</code> is the lat and <code>locations[i][2]</code> is the lng.  This is not tested, but it's a base for what you can do to create custom icon. <code>myGlobalMarker</code> is a global variable array that holds all markers.  I am not 100% sure if absolute URL or relative URL is needed for the icon location.  However, in my Google Map app i was able to use relative path to display custom icon on my marker.  This is the final result:\n<img src=\"http://i.stack.imgur.com/qm341.gif\" alt=\"enter image description here\"></p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>Here is a great example of a simple Google Map:\n<a href=\"http://stackoverflow.com/questions/3059044/google-maps-js-api-v3-simple-multiple-marker-example\">Google Maps JS API v3 - Simple Multiple Marker Example</a></p>\n\n<p>I am trying to add to this example the ability to assign each maker a custom Icon. \nGiven the linked example:</p>\n\n<pre><code>var locations = [   \n['Bondi Beach', -33.890542, 151.274856, 4],   \n['Coogee Beach', -33.923036, 151.259052, 5],   \n['Cronulla Beach', -34.028249, 151.157507, 3],   \n['Manly Beach', -33.80010128657071, 151.28747820854187, 2],   \n['Maroubra Beach', -33.950198, 151.259302, 1] ]; \n</code></pre>\n\n<p>I am thinking something like:</p>\n\n<pre><code>var locations = [   \n['Bondi Beach', -33.890542, 151.274856, 4,'images/icon1.png'],   \n['Coogee Beach', -33.923036, 151.259052, 5,'images/icon2.png' ],   \n['Cronulla Beach', -34.028249, 151.157507, 3,'images/icon3.png' ],   \n['Manly Beach', -33.80010128657071, 151.28747820854187, 2,'images/icon4.png' ],   \n['Maroubra Beach', -33.950198, 151.259302, 1,'images/icon5.png' ] ]; \n</code></pre>\n\n<p>Thanks in advance for your answers!</p>\n",
            "last_activity_date": 1302803270,
            "question_id": 5666173,
            "score": 2,
            "tags": [
                "javascript",
                "google-maps",
                "google-maps-api-3"
            ],
            "title": "Google Maps JS API v3 - Simple Multiple Marker Example with Custom Markers"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The script is not loaded or executed when you call the jQuery function. Thats why you get the error that jQuery is not defined.</p>\n\n<p>I answered this problem on <a href=\"http://stackoverflow.com/questions/3125897/loading-scripts-dynamically/3125918#3125918\">Loading Scripts Dynamically</a>. The script is simple for all browsers except IE. Just add an onload event listener</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Use <a href=\"http://labjs.com\" rel=\"nofollow\">LABjs</a>.  Embedding <code>&lt;script&gt;</code> tags work because the browser loads and executes whatever script in it or referenced by it upon seeing any of them, but that also means the browser will block until it is done with the script.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You should first check to make sure they do not already use jquery so something like:</p>\n\n<pre><code>if (jQuery) {  \n    // jQuery is loaded  \n} else {\n    // jQuery is not loaded\n}\n</code></pre>\n\n<p>Secondly, you should make sure you use jQuery in <a href=\"http://api.jquery.com/jQuery.noConflict/\" rel=\"nofollow\">no conflict mode</a> and do not use the $ operator as it may be claimed by another script library.</p>\n\n<p>Then to embed, declare this function:</p>\n\n<pre><code>function load_script (url)\n {\n   var xmlhttp;\n   try {\n     // Mozilla / Safari / IE7\n     xmlhttp = new XMLHttpRequest();\n    } catch (e) {\n      //Other IE\n      xmlhttp = new ActiveXObject(\"Msxml2.XMLHTTP\");\n    }\n    xmlhttp.open('GET', url, false); x.send('');\n    eval(xmlhttp.responseText);\n    var s = xmlhttp.responseText.split(/\\n/);\n    var r = /^function\\s*([a-z_]+)/i; \n\n      for (var i = 0; i &lt; s.length; i++)\n      {\n          var m = r.exec(s[i]);\n          if (m != null)\n              window[m[1]] = eval(m[1]);\n      }\n  } \n</code></pre>\n\n<p>Then call it:</p>\n\n<pre><code>load_script('http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js');\n</code></pre>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p>The solution you end up using works but <strong>slow to start</strong>, and <strong>not 100% fail proof</strong>. If someone rewrites window.onload your code will not run. Also window.onload happens when all the content on the page is loaded (including images) which is not exactly what you want. You don't want your script to wait that long.</p>\n\n<p>Fortunately <strong>&lt;script&gt; elements have their own onload (ready) event</strong>, which can be used to couple other scripts with them.</p>\n\n<pre><code>function include(file, callback) {\n  var head      = document.getElementsByTagName('head')[0];\n  var script    = document.createElement('script');\n  script.type   = 'text/javascript';\n  script.src    = file;\n  script.onload = script.onreadystatechange = function() {\n    // execute dependent code\n    if (callback) callback();\n    // prevent memory leak in IE\n    head.removeChild(script);\n    script.onload = null;\n  };\n  head.appendChild(script);\n}\n\ninclude('http://ajax.googleapis.com/.../jquery.min.js', myFunction);\n</code></pre>\n\n<p>In this case the function will be called exactly when jquery is available. Your code is fail proof and starts quickly.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>If you're using jQuery, you can use <a href=\"http://api.jquery.com/jQuery.getScript/\" rel=\"nofollow\">getScript()</a>.  <a href=\"https://developers.facebook.com/docs/javascript/howto/jquery/\" rel=\"nofollow\">Facebook has a good example on how to employ this</a>.  This is a more manageable solution to the original one I posted below.</p>\n\n<p>Alternatively:</p>\n\n<p>Building off of galambalazs's answer you can wrap his <code>include()</code> function in an event like the jQuery <code>$(document).ready()</code> to create deferred scripts with a dependency line without having to rely on an extra JS plugin.  I also added a callbackOnError, which is handy if you're fetching from Google CDN.</p>\n\n<pre><code>/* galambalazs's include() */\nfunction include(file, callback, callbackOnError) {\n    var head      = document.getElementsByTagName('head')[0];\n    var script    = document.createElement('script');\n    script.type   = 'text/javascript';\n    script.src    = file;\n    script.onload = script.onreadystatechange = function() {\n      // execute dependent code\n      if (callback) callback();\n      // prevent memory leak in IE\n      head.removeChild(script);\n      script.onload = null;\n      script.onerror = null;\n    };\n    script.onerror = function() {\n      if(callbackOnError) callbackOnError();\n      // prevent memory leak in IE\n      head.removeChild(script);\n      script.onload = null;\n      script.onerror = null;\n    };\n    head.appendChild(script);\n }\n\n/* If you need a deferred inline script, this will work */\nfunction init() {\n    // Insert Code\n}\n\n/* Example with callback */\n$(document).ready(function() {\n    include('something.js', init);\n});\n\n/* Maybe I want something on window.load() */\n$(window).load(function() {\n    // Without a callback\n    include('whatever.js');\n});\n\n/* Or use an event to load and initialize script when it's needed */\n$(\".nearAButton\").hover(include('button.js',function() {initButtonJS()}));\n\nfunction initButtonJS() {\n    $(\".nearAButton\").off(\"mouseenter mouseleave\");\n}\n\n/* Attempt to load Google Code, on fail load local */\ninclude(\n    '//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js',\n    function () {\n        // Inline Callback\n    },\n    function () {\n        include('/local/jquery-ui-1.10.3.custom.min.js', function () {\n            // Inline Callback\n        });\n    }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a unique issue -</p>\n\n<p>I am designing a web application that creates widgets that a user can then embed in their own page (blog posts, mostly). I want them to just have to embed one line, so I just had that line be an include statement, to pull a Javascript off my server. </p>\n\n<p>The problem is, I am building the widget code using jQuery, and I need to load the jQuery plugin, since I obviously don't know whether or not my users will have it available. I thought 'this should be pretty simple'....</p>\n\n<pre><code>function includeJavaScript(jsFile) {\n  var script = document.createElement('script');\n  script.src = jsFile;\n  script.type = 'text/javascript';\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\nincludeJavaScript('http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js');\njQuery();\n</code></pre>\n\n<p>So, I am appending the jQuery file to the head, then afterwards, trying to run a jQuery function. Trouble is, this doesn't work! Everytime I run it, I get the error that variable jQuery is not defined. I have tried a few things. I tried putting the jQuery functions in an onLoad trigger, so that the whole page (including, presumably, the jQuery file) would load before it called my script. I tried putting the jQuery function in a seperate file, and loading it after loading the jQuery lib file. But I get the idea I'm missing something simple - I'm new to jQuery, so if I'm missing something obvious, I apologize...</p>\n\n<p>EDIT</p>\n\n<p>OK,I tried the suggestion offered by digitalFresh, as follows (using Safari 5, if that helps), but I still get the same error?</p>\n\n<pre><code>function test() {\n    jQuery()\n}\n\nvar script = document.createElement(\"script\");\nscript.type = \"text/javascript\";\nscript.src = 'http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js';\nscript.onload = test(); //execute\ndocument.body.appendChild(script);\n</code></pre>\n\n<p>EDIT</p>\n\n<p>OK, I FINALLY got it to work, in an offhand suggestion from Brendan, by putting the call ITSELF in an 'onload' handler, like so:</p>\n\n<pre><code>function addLoadEvent(func) { \n      var oldonload = window.onload; \n      if (typeof window.onload != 'function') { \n        window.onload = func; \n      } else { \n        window.onload = function() { \n          if (oldonload) { \n            oldonload(); \n          } \n          func(); \n        } \n    } \n} \naddLoadEvent( function() {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = 'http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js';\n    document.body.appendChild(script);\n    jQuery();\n});\n</code></pre>\n\n<p>At this point, as you can see, I don't even have to put it in an 'onload' - it just works. Though I have to admit, I still don't understand WHY it works, which bothers me...</p>\n",
            "last_activity_date": 1384796903,
            "question_id": 3129451,
            "score": 2,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Load jQuery in a js, then execute a script that depends on it"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<pre><code>var id = 354;\nCKEDITOR.instances[\"textarea\" + id].insertHtml('&lt;p&gt;Whatever&lt;/p&gt;');\n</code></pre>\n\n<p>Since <code>instances</code> is an object, and objects essentially are hash tables you can access them with the array notation.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You can use array notation:</p>\n\n<pre><code>CKEDITOR.instances['textarea' + id].insertHtml('&lt;p&gt;Whatever&lt;/p&gt;');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Try the following:</p>\n\n<pre><code>var id = 354;\nCKEDITOR.instances['textarea'+id].insertHtml('&lt;p&gt;Whatever&lt;/p&gt;');\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I am using CKEditor, and, when referring to the CKEditor instance, I need to use a variable.  But, since calling the instance is a object, I am really not sure how to do this.</p>\n\n<p>I am using:</p>\n\n<pre><code>CKEDITOR.instances.textarea123.insertHtml('&lt;p&gt;Whatever&lt;/p&gt;');\n</code></pre>\n\n<p>The issue is, I need 123 to be a variable, because I need to change the instance based on the editor page that is loaded.</p>\n\n<p>So, how can I use a variable in an object name?</p>\n\n<p>For obvious reasons the following does not work, but I need to achieve what it is \"pretending\" to do:</p>\n\n<pre><code>var id = 354;\nCKEDITOR.instances.textarea+id+.insertHtml('&lt;p&gt;Whatever&lt;/p&gt;');\n</code></pre>\n",
            "last_activity_date": 1339719176,
            "question_id": 1567278,
            "score": 2,
            "tags": [
                "javascript",
                "object",
                "ckeditor"
            ],
            "title": "Use Javascript variable in object name?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><strong>Updated</strong></p>\n\n<p>Per your restriction that elements that are contained in the same array in the beginning cannot be combined I've modified the algorithm to the following:</p>\n\n<p>Here is the updated jsfiddle that now even outputs the data in the correct format :) <a href=\"http://jsfiddle.net/QKg2H/7/\" rel=\"nofollow\">http://jsfiddle.net/QKg2H/7/</a></p>\n\n<pre><code>function getCombinations(arr, n)\n{\n    if(n == 1)\n    {\n        var ret = [];\n        for(var i = 0; i &lt; arr.length; i++)\n        {\n            for(var j = 0; j &lt; arr[i].length; j++)\n            {\n                ret.push([arr[i][j]]);\n            }\n        }\n        return ret;\n    }\n    else\n    {\n        var ret = [];\n        for(var i = 0; i &lt; arr.length; i++)\n        {\n            var elem = arr.shift();\n            for(var j = 0; j &lt; elem.length; j++)\n            {\n                var childperm = getCombinations(arr.slice(), n-1);\n                for(var k = 0; k &lt; childperm.length; k++)\n                {\n                    ret.push([elem[j]].concat(childperm[k]));\n                }\n            }\n        }\n        return ret;\n    }\n}\n</code></pre>\n\n<p>The algorithm is still recursive, but now it will consider each of the second degree elements in turn, but not with each other. Other than that, it still pops off one element and then appends the permutations of all of the remaining elements. I hope it's straightforward.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>ChrisB solution had a mistake, he wasn't chaching the length of the loop before the arr.shift, and it was not returning the last combination,  so I think this will do the job:</p>\n\n<pre><code>function getCombinations(arr, n){\n    var i,j,k,elem,l = arr.length,childperm,ret=[];\n    if(n == 1){\n        for(var i = 0; i &lt; arr.length; i++){\n            for(var j = 0; j &lt; arr[i].length; j++){\n                ret.push([arr[i][j]]);\n            }\n        }\n        return ret;\n    }\n    else{\n        for(i = 0; i &lt; l; i++){\n            elem = arr.shift();\n            for(j = 0; j &lt; elem.length; j++){\n                childperm = getCombinations(arr.slice(), n-1);\n                for(k = 0; k &lt; childperm.length; k++){\n                    ret.push([elem[j]].concat(childperm[k]));\n                }\n            }\n        }\n        return ret;\n    }\n    i=j=k=elem=l=childperm=ret=[]=null;\n}\n\n\ngetCombinationss([[\"A\"],[\"B\"],[\"C\",\"D\"]], 2);\n\n//[[\"A\", \"B\"], [\"A\", \"C\"], [\"A\", \"D\"], [\"B\", \"C\"], [\"B\", \"D\"]]\n\ngetCombinationss([[\"A\"],[\"B\"],[\"C\"],[\"D\"]], 2);\n\n//[[\"A\", \"B\"], [\"A\", \"C\"], [\"A\", \"D\"], [\"B\", \"C\"], [\"B\", \"D\"], [\"C\", \"D\"]]\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I'm trying to write an algorithm to get all the possible combinations of N elements inside a multi dimensional array of M elements.</p>\n\n<p>Something like:</p>\n\n<pre><code>function getCombinations(arr, n){\n  ...\n}\n\nvar arr = [ [\"A\"],[\"B\",\"C\"],[\"D\",\"E\"]];\nvar n = 2;\n\ngetCombinations(arr,n);\n</code></pre>\n\n<p>This should produce:</p>\n\n<pre><code>[\n[\"A\",\"B\"],[\"A\",\"C\"],[\"A\",\"D\"],[\"A\",\"E\"],\n[\"B\",\"D\"],[\"B\",\"E\"],\n[\"C\",\"D\"],[\"C\",\"E\"]\n]\n</code></pre>\n\n<p>The number of elements inside the array may vary, the only thing set is the number of elements of the combinations.</p>\n\n<p>The order doesn't matter but you cannot repeat, I mean <code>[\"A\",\"B\"] == [\"B\",\"A\"]</code>, so the second one is not take in consideration.</p>\n\n<p>Any help? </p>\n",
            "last_activity_date": 1389004402,
            "question_id": 18233874,
            "score": 1,
            "tags": [
                "javascript",
                "combinations"
            ],
            "title": "Get all the combinations of N elements of multidimensional array"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>This will only read the first 10 mb:</p>\n\n<pre><code>var file = form.getEl().down('input[type=file]').dom.files[0];\nvar reader = new FileReader();\n\nreader.onload = function(e) {\n    var data = e.target.result;\n    form.displayedData = data;\n};\n\nreader.readAsText(file.slice(0, 10 * 1024 * 1024));\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I have a problem using the Javascript FileRead trying to read huge files.</p>\n\n<p>For example, I have a text file of 200mb and everytime I read this file the code stops working.</p>\n\n<p>Its possible to read the text file, but for example ONLY the first 10 lines or stop reading after 10mb?</p>\n\n<p>This is my code:</p>\n\n<pre><code>var file = form.getEl().down('input[type=file]').dom.files[0];\nvar reader = new FileReader();\n\nreader.onload = (function(theFile) {\n                return function(e) {\n                    data = e.target.result;\n                    form.displayedData=data;\n                };\n            })(file);\n\nreader.readAsText(file);\n</code></pre>\n\n<p>The <code>e.target.result</code> always has the whole data of the file.</p>\n\n<p>What can I do here?</p>\n\n<p>Thx</p>\n",
            "last_activity_date": 1372946821,
            "question_id": 17472313,
            "score": 1,
            "tags": [
                "javascript",
                "onload",
                "filereader"
            ],
            "title": "Using Javascript FileReader with huge files"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>It's not clear that <code>update</code> is a global function.  If it isn't then that approach won't work.</p>\n\n<p>But you can override the keypress handler with:</p>\n\n<pre><code>unsafeWindow.document.onkeypress = function(){};\n</code></pre>\n\n<hr>\n\n<hr>\n\n<p><br>\nFor a general, high-powered way to selectively block, or replace, any JS (on Firefox), use <a href=\"http://wiki.greasespot.net/Metadata_Block#.40run-at\"><code>@run-at document-start</code></a> and <a href=\"https://gist.github.com/2620135\">the checkForBadJavascripts function</a>, like so:</p>\n\n<pre><code>// ==UserScript==\n// @name        _Replace select javascript on a page\n// @include     http://YOUR_SERVER.COM/YOUR_PATH/*\n// @require     https://gist.github.com/raw/2620135/checkForBadJavascripts.js\n// @run-at      document-start\n// @grant       GM_addStyle\n// ==/UserScript==\n/*- The @grant directive is needed to work around a design change\n    introduced in GM 1.0.   It restores the sandbox.\n*/\n\ncheckForBadJavascripts ( [\n    [   false,\n        /document\\.onkeypress\\s*=\\s*update/,\n        function () {\n            addJS_Node (myKeypressFunction.toString() );\n            addJS_Node ('document.onkeypress = myKeypressFunction;');\n        }\n    ]\n] );\n\n\nfunction myKeypressFunction (evt) {\n    /*  DO WHATEVER HERE BUT USE NO GREASEMONKEY FUNCTIONS INSIDE\n        THIS FUNCTION.\n    */\n    console.log (\"Keypress function fired.\");\n}\n</code></pre>\n\n<hr>\n\n<p><a href=\"http://stackoverflow.com/a/10468821/331508\">See this answer, for more information on <code>checkForBadJavascripts</code>.</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I visit a website with a javascript file in the head of the HTML</p>\n\n<pre><code>&lt;script language=\"javascript\" src=\"javscript.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>The code inside this file is:</p>\n\n<pre><code>// keypress management \nif (document.layers) document.captureEvents(Event.KEYPRESS)\nfunction update(e) {        \n    if (document.all) {             // Explorer\n        if (event.keyCode==13) document.forms[0].submit();  // 13 = ENTER\n        else if (event.keyCode==26) runHelp(hplk);          // 26 = CTRL+Z\n        return;\n    } else {                                                // mozilla\n        if (e.which==13) document.forms[0].submit();        // 13 = ENTER\n        else if (e.which==26) runHelp(hplk);                // 122 = CTRL+Z     \n        return;         \n    }\n}\ndocument.onkeypress=update;\n</code></pre>\n\n<p>I want to disable/remove/replace this function with Greasemonkey.</p>\n\n<p>I tried it with </p>\n\n<pre><code>unsafeWindow.update = function(){}\n</code></pre>\n\n<p>with no result! (got no errors in the console)</p>\n\n<p>is there a way to kill this function?</p>\n",
            "last_activity_date": 1362697991,
            "question_id": 15282714,
            "score": 1,
            "tags": [
                "javascript",
                "function",
                "greasemonkey"
            ],
            "title": "Remove a javascript function with Greasemonkey"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><code>dataType</code> takes json, it means the request expects a <code>json</code> response.</p>\n\n<p><code>contentType</code> takes <code>application/json</code>, it means the request is sending <code>json</code> data</p>\n\n<p>You can send as well as expect json in a request e.g.</p>\n\n<pre><code>$.ajax({\n    type : \"POST\",\n    url : url,\n    contentType : \"application/json\", \n    dataType: 'json',\n    data: JSON.stringify({some: 'data'}),\n    success : function(data) {\n        // do something          \n    },\n    error : function(data) {\n        // do something else\n    }\n});\n</code></pre>\n\n<p>here you're sending json and expecting xml</p>\n\n<pre><code>$.ajax({\n    type : \"POST\",\n    url : url,\n    contentType : \"application/json\", \n    dataType: 'xml',\n    data: JSON.stringify({xmlfile: 'file.xml'}),\n    success : function(data) {\n        // do something          \n    },\n    error : function(data) {\n        // do something else\n    }\n});\n</code></pre>\n\n<p>and here you're sending <code>x-www-form-urlencoded</code>(jQuery automatically sets this for you), and expect json back</p>\n\n<pre><code>$.ajax({\n    type : \"POST\",\n    url : url,\n    dataType: 'json',\n    data: {id: '1'},\n    success : function(data) {\n        // do something          \n    },\n    error : function(data) {\n        // do something else\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>\"application/json\" is the correct mime type for json.  The jquery <code>dataType</code> field, however, is expecting one of the following strings:</p>\n\n<pre><code>\"xml\"\n\"html\"\n\"script\"\n\"json\"\n\"jsonp\"\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Per the json documentation, the correct dataType is \"json\".</p>\n\n<p><a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"nofollow\">http://api.jquery.com/jQuery.ajax/</a></p>\n\n<p>Here are the options supported:</p>\n\n<ul>\n<li>xml</li>\n<li>html</li>\n<li>script</li>\n<li>json</li>\n<li>jsonp</li>\n<li>text</li>\n</ul>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/2722750/ajax-datatype\">$.ajax - dataType</a>  </p>\n</blockquote>\n\n\n\n<p>I am using jQuery 1.8.2, and for some reason <code>'application/json'</code> does not work, but <code>'json'</code>  works as <code>dataType</code> to a standard <code>jquery</code> <code>ajax</code> call. Is this a glitch? A version related difference? or is there an established difference between the two?</p>\n\n<pre><code>$(document).ready(function() {\n    $.ajax({\n        type : \"POST\",\n        url : '&lt;c:url value=\"/url.htm\" &gt;',\n        //dataType : \"application/json\", &lt;-- does not work\n        dataType: 'json' // &lt;-- works\n        success : function(data) {\n            // do something          \n        },\n        error : function(data) {\n            // do something else\n        }\n    });\n});\n</code></pre>\n",
            "last_activity_date": 1354760574,
            "question_id": 13735869,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "json"
            ],
            "title": "dataType &#39;application/json&#39; vs. &#39;json&#39;"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>If you don't want an array then how about an object?</p>\n\n<pre><code>var months = {\n    'Jan' : '01',\n    'Feb' : '02',\n    ...\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Just for fun I did this:</p>\n\n<pre><code>function getMonthFromString(mon){\n   return new Date(Date.parse(mon +\" 1, 2012\")).getMonth()+1\n}\n</code></pre>\n\n<p>Bonus: it also supports full month names :-D\nOr the new improved version that simply returns -1 - change it to throw the exception if you want (instead of returning -1):</p>\n\n<pre><code>function getMonthFromString(mon){\n\n   var d = Date.parse(mon + \"1, 2012\");\n   if(!isNaN(d)){\n      return new Date(d).getMonth() + 1;\n   }\n   return -1;\n }\n</code></pre>\n\n<p>Sry for all the edits - getting ahead of myself</p>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>Another way;</p>\n\n<pre><code>alert( \"JanFebMarAprMayJunJulAugSepOctNovDec\".indexOf(\"Jun\") / 3 + 1 );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 15
                },
                {
                    "body": "<p>I usually used to make a function:</p>\n\n<pre><code>function getMonth(monthStr){\n    return new Date(monthStr+'-1-01').getMonth()+1\n}\n</code></pre>\n\n<p>And call it like :</p>\n\n<pre><code>getMonth('Jan');\ngetMonth('Feb');\ngetMonth('Dec');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>One more way to do the same</p>\n\n<pre><code>    var month1 = value;\n    month1 = month1.toLowerCase();\n    var months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\n    month1 = months.indexOf(month1);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<pre><code>var monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n</code></pre>\n\n<p>then just call monthNames[1]\nthat will be Feb</p>\n\n<p>So you can always make something like</p>\n\n<pre><code>  monthNumber = \"5\";\n  jQuery('#element').text(monthNames[monthNumber])\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Here is another way :</p>\n\n<pre><code>var currentMont=01;\n\nvar months = [\"ENE\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \n              \"AGO\", \"SEP\", \"OCT\", \"NOV\", \"DIC\"];\n\nconsole.log(monts[currentMont-1]);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Just want to covert <strong>Jan</strong> to <strong>01</strong> (date format)</p>\n\n<p>I can use <code>array()</code> but looking for another way...</p>\n\n<p>Don't say \"JS is fast enough\" :P</p>\n\n<p>Any ?</p>\n",
            "last_activity_date": 1420745569,
            "question_id": 13566552,
            "score": 1,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Easiest way to convert month name to month number in JS ? (Jan = 01)"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>You will need to <a href=\"http://docs.phonegap.com/en/2.2.0/guide_plugin-development_index.md.html#Plugin%20Development%20Guide\" rel=\"nofollow\">write a plugin</a> for this functionality. The first thing you will need to do is add the:</p>\n\n<pre><code>android.permission.CALL_PRIVILEGED\n</code></pre>\n\n<p>to your AndroidManifest.xml. This will allow you to dial a number skipping the Dialer app. A small bit of JavaScript code is required for the plugin interface:</p>\n\n<pre><code>cordova.define(\"cordova/plugin/emergencydialer\", \n  function(require, exports, module) {\n    var exec = require(\"cordova/exec\");\n    var EmergencyDialer = function () {};\n\n    var EmergencyDialerError = function(code, message) {\n        this.code = code || null;\n        this.message = message || '';\n    };\n\n    EmergencyDialer.CALL_FAILED = 0;\n\n    EmergencyDialer.prototype.call = function(telephoneNumber,success,fail) {\n        exec(success,fail,\"EmergencyDialer\", \"call\",[telephoneNumber]);\n    };\n\n    var emergencyDialer = new EmergencyDialer();\n    module.exports = emergencyDialer;\n});\n</code></pre>\n\n<p>Then you'll need to write some Java code to do the phone call. You'll need to create a new class that extends the Plugin class and write an execute method like this:</p>\n\n<pre><code>public PluginResult execute(String action, JSONArray args, String callbackId) {\n    PluginResult.Status status = PluginResult.Status.OK;\n    String result = \"\";\n\n    try {\n        if (action.equals(\"call\")) {\n            String number = \"tel:\" + args.getString(0);\n            Intent callIntent = new Intent(Intent.ACTION_CALL, Uri.parse(number)); \n            this.cordova.getActivity().startActivity(callIntent);\n        }\n        else {\n            status = PluginResult.Status.INVALID_ACTION;\n        }\n        return new PluginResult(status, result);\n    } catch (JSONException e) {\n        return new PluginResult(PluginResult.Status.JSON_EXCEPTION);\n    }\n}\n</code></pre>\n\n<p>Whatever you call this class you'll need to add a line in the res/xml/config.xml file so the PluginManager can create it.</p>\n\n<pre><code>&lt;plugin name=\"EmergencyDialer\" value=\"org.apache.cordova.plugins.EmergencyDialer\"/&gt;\n</code></pre>\n\n<p>and finally in your JavaScript code you'll need to create they plugin and call it like this:</p>\n\n<pre><code>function panicButton() {\n    var emergencyDialer = cordova.require(\"cordova/plugin/emergencydialer\");\n    emergencyDialer.call(\"18005551212\");\n}\n</code></pre>\n\n<p>That should about do it.</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I am writing an app using PhoneGap and Jquery, in my app i have a panic button, onclick it should automatically call a predefined number. I'm managing to open the native android dialer but still i need the user to click again on send button to dial.</p>\n\n<p>How can i make a direct call from the app?</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1370974752,
            "question_id": 13233091,
            "score": 1,
            "tags": [
                "javascript",
                "android",
                "jquery",
                "cordova",
                "call"
            ],
            "title": "Call predefined number automatically on Android with PhoneGap"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>It is a good place to use <a href=\"https://developer.mozilla.org/en-US/docs/Code_snippets/Cookies\" rel=\"nofollow\">cookies</a></p>\n\n<p>Ex: From <a href=\"http://www.quirksmode.org/js/cookies.html\" rel=\"nofollow\">quirksmode.org</a></p>\n\n<pre><code>function createCookie(name,value,days) {\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime()+(days*24*60*60*1000));\n        var expires = \"; expires=\"+date.toGMTString();\n    }\n    else var expires = \"\";\n    document.cookie = name+\"=\"+value+expires+\"; path=/\";\n}\n\nfunction readCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i &lt; ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)==' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\n</code></pre>\n\n<p>and a side note, you can use the onload event to know when the page is ready</p>\n\n<pre><code>&lt;script language=\"javascript\"&gt; \n\nfunction setTitle(){\n    var title = prompt(\"Field Info\",\"Default Value\");\n    var form = document.form[0];\n    form.elements[\"fieldName\"].value = title;\n}\n\nwindows.onload = setTitle;\n\n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You're trying to maintain state between pages. Conventionally there are two ways to maintain state:</p>\n\n<ul>\n<li>Store state in cookies</li>\n<li>Store state in the query string</li>\n</ul>\n\n<p>Either way your first page has to persist state (to either cookies or the query string) and the other page has to - separately - restore the state. You can't use the same script across both pages.</p>\n\n<h1>Example: Using Cookies</h1>\n\n<p>Using cookies, the first page would have to write all the form data you'll need on the next page to cookies:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n     &lt;title&gt;Maintaining State With Cookies&lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n     &lt;div&gt;\n         Setting cookies and redirecting...\n     &lt;/div&gt;\n     &lt;script&gt;\n         // document.cookie is not a real string\n         document.cookie = 'form/title=My Name is Richard; expires=Tue, 29 Aug 2017 12:00:01 UTC'\n         document.cookie = 'form/text=I am demoing how to use cookies in JavaScript; expires=Tue, 29 Aug 2017 12:00:01 UT';\n         setTimeout(function(){\n             window.location = \"./form-cookies.html\";\n         }, 1000);\n     &lt;/script&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>... and the second page would then read those cookies and populate the form fields with them:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n     &lt;title&gt;Maintaining State With Cookies&lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n     &lt;form id=\"myForm\" action=\"submit.mumps.cgi\" method=\"POST\"&gt;\n         &lt;input type=\"text\" name=\"title\" /&gt;\n         &lt;textarea name=\"text\"&gt;&lt;/textarea&gt;\n     &lt;/form&gt;\n     &lt;script&gt;\n         var COOKIES = {};\n         var cookieStr = document.cookie;\n         cookieStr.split(/; /).forEach(function(keyValuePair) { // not necessarily the best way to parse cookies\n             var cookieName = keyValuePair.replace(/=.*$/, \"\"); // some decoding is probably necessary\n             var cookieValue = keyValuePair.replace(/^[^=]*\\=/, \"\"); // some decoding is probably necessary\n             COOKIES[cookieName] = cookieValue;\n         });\n         document.getElementById(\"myForm\").getElementsByTagName(\"input\")[0].value = COOKIES[\"form/title\"];\n         document.getElementById(\"myForm\").getElementsByTagName(\"textarea\")[0].value = COOKIES[\"form/text\"];\n     &lt;/script&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h1>Example: Using the Query String</h1>\n\n<p>In the case of using the Query String, the first page would just include the query string in the redirect URL, like so:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n     &lt;title&gt;Maintaining State With The Query String&lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n     &lt;div&gt;\n         Redirecting...\n     &lt;/div&gt;\n     &lt;script&gt;\n         setTimeout(function(){\n             window.location = \"./form-querystring.html?form/title=My Name is Richard&amp;form/text=I am demoing how to use the query string in JavaScript\";\n         }, 1000);\n     &lt;/script&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>...while the form would then parse the query string (available in JavaScript via <code>window.location.search</code> - prepended with a <code>?</code>):</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n     &lt;title&gt;Maintaining State With The Query String&lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n     &lt;form id=\"myForm\" action=\"submit.mumps.cgi\" method=\"POST\"&gt;\n         &lt;input type=\"text\" name=\"title\" /&gt;\n         &lt;textarea name=\"text\"&gt;&lt;/textarea&gt;\n     &lt;/form&gt;\n     &lt;script&gt;\n         var GET = {};\n         var queryString = window.location.search.replace(/^\\?/, '');\n         queryString.split(/\\&amp;/).forEach(function(keyValuePair) {\n             var paramName = keyValuePair.replace(/=.*$/, \"\"); // some decoding is probably necessary\n             var paramValue = keyValuePair.replace(/^[^=]*\\=/, \"\"); // some decoding is probably necessary\n             GET[paramName] = paramValue;\n         });\n         document.getElementById(\"myForm\").getElementsByTagName(\"input\")[0].value = GET[\"form/title\"];\n         document.getElementById(\"myForm\").getElementsByTagName(\"textarea\")[0].value = GET[\"form/text\"];\n     &lt;/script&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h1>Example: With a Fragment Identifier</h1>\n\n<p>There's one more option: since state is being maintained strictly on the client side (not on th server side) you could put the information in a fragment identifier (the \"hash\" part of a URL).</p>\n\n<p>The first script is very similar to the Query String example above: the redirect URL just includes the fragment identifier. I'm going to re-use query string formatting for convenience, but notice the <code>#</code> in the place where a <code>?</code> used to be:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n     &lt;title&gt;Maintaining State With The Fragment Identifier&lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n     &lt;div&gt;\n         Redirecting...\n     &lt;/div&gt;\n     &lt;script&gt;\n         setTimeout(function(){\n             window.location = \"./form-fragmentidentifier.html#form/title=My Name is Richard&amp;form/text=I am demoing how to use the fragment identifier in JavaScript\";\n         }, 1000);\n     &lt;/script&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p>... and then the form has to parse the fragment identifier etc:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n     &lt;title&gt;Maintaining State With The Fragment Identifier&lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n     &lt;form id=\"myForm\" action=\"submit.mumps.cgi\" method=\"POST\"&gt;\n         &lt;input type=\"text\" name=\"title\" /&gt;\n         &lt;textarea name=\"text\"&gt;&lt;/textarea&gt;\n     &lt;/form&gt;\n     &lt;script&gt;\n         var HASH = {};\n         var hashString = window.location.hash.replace(/^#/, '');\n         hashString.split(/\\&amp;/).forEach(function(keyValuePair) {\n             var paramName = keyValuePair.replace(/=.*$/, \"\"); // some decoding is probably necessary\n             var paramValue = keyValuePair.replace(/^[^=]*\\=/, \"\"); // some decoding is probably necessary\n             HASH[paramName] = paramValue;\n         });\n         document.getElementById(\"myForm\").getElementsByTagName(\"input\")[0].value = HASH[\"form/title\"];\n         document.getElementById(\"myForm\").getElementsByTagName(\"textarea\")[0].value = HASH[\"form/text\"];\n     &lt;/script&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<h1>And if you can't edit the code for the form page</h1>\n\n<p><a href=\"http://userscripts.org/scripts/show/39313\" rel=\"nofollow\">Try a greasemonkey script.</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I am trying to fill out the fields on a form through JavaScript.  The problem is I only know how to execute JavaScript on the current page so I cannot redirect to the form and execute code from there.  I'm hesitant to use this term, but the only phrase that comes to mind is cross-site script.  The code I am attempting to execute is below.</p>\n\n<pre><code>&lt;script language=\"javascript\"&gt; \n\nwindow.location = \"http://www.pagewithaform.com\";\n\nloaded();\n\n//checks to see if page is loaded. if not, checks after timeout.\nfunction loaded()\n{\n    if(window.onLoad)\n    {\n      //never executes on new page. the problem\n      setTitle();\n    }\n    else\n    {\n      setTimeout(\"loaded()\",1000);\n      alert(\"new alert\");\n    }\n}\n\n//sets field's value\nfunction setTitle()\n{\n    var title = prompt(\"Field Info\",\"Default Value\");\n    var form = document.form[0];\n    form.elements[\"fieldName\"].value = title;\n}\n&lt;/script&gt;\n</code></pre>\n\n<p>I'm not truly sure if this is possible.  I'm also open to other ideas, such as PHP.  Thanks.</p>\n\n<p>EDIT: The second page is a SharePoint form.  I cannot edit any of the code on the form.  The goal is to write a script that pre-fills most of the fields because 90% of them are static.</p>\n",
            "last_activity_date": 1346266220,
            "question_id": 12183572,
            "score": 1,
            "tags": [
                "javascript",
                "forms"
            ],
            "title": "How to use JavaScript to fill a form on another page"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Here is a function that will return all functions defined in the document, what it does is it iterates through all objects/elements/functions and displays only those whose type is \"function\".</p>\n\n<pre><code>function getAllFunctions(){ \n        var allfunctions=[];\n          for ( var i in window) {\n        if((typeof window[i]).toString()==\"function\"){\n            allfunctions.push(window[i].name);\n          }\n       }\n    }\n</code></pre>\n\n<p>\u200b\nHere is a <a href=\"http://jsfiddle.net/DSmqy/8/\" rel=\"nofollow\">jsFiddle working demo</a>\n\u200b</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Declare it in a pseudo namespace, for example like this:</p>\n\n<pre><code>   var MyNamespace = function(){\n    function getAllFunctions(){ \n      var myfunctions = [];\n      for (var l in this){\n        if (this.hasOwnProperty(l) &amp;&amp; \n            this[l] instanceof Function &amp;&amp;\n            !/myfunctions/i.test(l)){\n          myfunctions.push(this[l]);\n        }\n      }\n      return myfunctions;\n     }\n\n     function foo(){\n        //method body goes here\n     }\n\n     function bar(){\n         //method body goes here\n     }\n\n     function baz(){\n         //method body goes here\n     }\n     return { getAllFunctions: getAllFunctions\n             ,foo: foo\n             ,bar: bar\n             ,baz: baz }; \n    }();\n    //usage\n    var allfns = MyNamespace.getAllFunctions();\n    //=&gt; allfns is now an array of functions. \n    //   You can run allfns[0]() for example\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>For the following script, how can I write a function that returns all of the script's functions as an array? I'd like to return an array of the functions defined in the script so that I can print a summary of every function that is defined in the script.</p>\n\n<pre><code>    function getAllFunctions(){ //this is the function I'm trying to write\n        //return all the functions that are defined in the script where this\n        //function is defined.\n        //In this case, it would return this array of functions [foo, bar, baz,\n        //getAllFunctions], since these are the functions that are defined in this\n        //script.\n    }\n\n    function foo(){\n        //method body goes here\n    }\n\n    function bar(){\n        //method body goes here\n    }\n\n    function baz(){\n        //method body goes here\n    }\n</code></pre>\n",
            "last_activity_date": 1341154629,
            "question_id": 11279441,
            "score": 1,
            "tags": [
                "javascript",
                "reflection"
            ],
            "title": "Return all of the functions that are defined in a Javascript file"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You pass data from the browser to your server.\nJavascript is a language for manipulating the browser.\nPHP is your server side language.</p>\n\n<p>You can pass data in a get or post request such as \"mypage.php?Username=john\"</p>\n\n<p>What you want is a form so that you can interact with the user </p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n    function insertIntoDb() {\n      document.getElementById(\"myform\").submit();\n      //or if you want to use jquery and ajax\n      $.post(\"insert.php\", $(\"#myform\").serialize());\n      return false;\n    }\n&lt;/script&gt;\n\n&lt;form id=\"myform\" method=\"post\" action=\"insert.php\"&gt;\n    &lt;a href=\"#\" onclick=\"insertIntoDb();\"&gt;INSERT MY USERNAME&lt;/a&gt;\n    &lt;input type=\"text\" name=\"Username\"&gt;&lt;/input&gt;\n&lt;/form&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 0
                },
                {
                    "body": "<p><b>index.html</b></p>\n\n<pre><code>&lt;script src=\"http://code.jquery.com/jquery-latest.min.js\" type='text/javascript'&gt;&lt;/script&gt;\n&lt;script&gt;\n   $(document).ready(function(){ \n       $(\"#insert\").click(function(event){\n           $.post('insert.php',{username:$(this).html()});\n       })\n   });\n&lt;/script&gt;\n&lt;a href='javascript:void(0);' id='insert'&gt;Username&lt;/a&gt;\n</code></pre>\n\n<p><b>insert.php</b></p>\n\n<pre><code>&lt;?php\nfunction insert($username){\n    $conn = mysql_connect(\"host\",\"user\",\"passwd\");\n    if($conn){\n        $username =  mysql_real_escape_string($_POST['username']);\n        $result = mysql_query(\"INSERT INTO test.user(username) VALUES('\".$username.\"')\") or die(mysql_error());\n        mysql_close($conn);\n    }\n}\nif(isset($_POST['username'])){\n    insert($_POST['username']);\n}\n?&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a problem in passing a value from JS to PHP so that it can be used as a parameter for a PHP function. The JS function will be trigger by onclick event once the link was clicked. Here is the JS + HTML code:</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n   function insertIntoDb() {\n      $.GET OR POST(\"insert.php\");\n      return false;\n   }\n&lt;/script&gt;\n\n&lt;a href=\"#\" onclick=\"insertIntoDb();\"&gt;INSERT MY USERNAME&lt;/a&gt;\n</code></pre>\n\n<p>PHP (insert.php):</p>\n\n<pre><code>&lt;?php\n    session_start();\n\n    function insert($username){\n        $username = mysql_real_escape_string($username);\n        $query = mysql_query(\"INSERT INTO List(Username) VALUES('$username')\") or die(mysql_error());\n    }\n\n    if(isset($_POST['Username'])){\n        insert($_POST['Username']);\n    }\n?&gt;\n</code></pre>\n\n<p>Thank you for the one who can help me.. I am very new to PHP and JS so please forgive my stupidity.</p>\n",
            "last_activity_date": 1325146013,
            "question_id": 8662976,
            "score": 1,
            "tags": [
                "php",
                "javascript",
                "jquery",
                "mysql",
                "html"
            ],
            "title": "Pass variable value from JS to PHP"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>$.nmManual can also be used to open an iframe, using the filters:</p>\n\n<pre><code>$.nmManual('http://someurl.com/', {\n    callbacks: { \n      initFilters: function(nm) {\n      nm.filters.push('link');\n      nm.filters.push('iframe');\n    }\n  }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I am trying to get nyroModal to open in an iframe, directly from JavaScript.</p>\n\n<p>To clarify, the following is <em>not</em> what I need:</p>\n\n<pre><code>$.nmManual(url); // not an iframe\n</code></pre>\n\n<p>because it does not open an iframe.</p>\n\n<p>This will also not work:</p>\n\n<pre><code>&lt;a href=\"http://someurl.com/\" target=\"_blank\" class=\"nyroModal\"&gt;click me&lt;/a&gt;\n&lt;script type=\"text/javascript\"&gt; $(\".nyroModal\").nyroModal(); &lt;/script&gt;\n</code></pre>\n\n<p>because I really need to launch it directly from JavaScript.</p>\n\n<p>I've looked through the documentation, and I can't find any obvious way to do this.  Any ideas?</p>\n",
            "last_activity_date": 1419980465,
            "question_id": 7183591,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "jquery-plugins",
                "nyromodal"
            ],
            "title": "Open iframe manually in nyroModal?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>There is no problem with having script tags in the body. Just remember that the page is parsed top-down, so scripts have to be included before they are used.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Nop, in fact its good for \"performance\" to put your scripts at the end of your HTML.</p>\n\n<p>Still a good practice is to have all your javascript in another file and just set a header calling it, if posible even compressing the file.</p>\n\n<p>Now, I would change that code for this</p>\n\n<pre><code>$(document).ready(function(){\n    createHeader();\n    scriptSet();\n}); \n</code></pre>\n\n<p>so you dont call $(document).ready twice :)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You do realize that the functions you have put inside <code>$(document).ready()</code> are not going to wait for <code>DOMContentLoaded</code> to fire? You have to wrap them inside a function call (event handler) in order to avoid calling them instantly when they show up in the code. An anonymous function is usually just fine.</p>\n\n<pre><code>$(document).ready(function(){\n    createHeader();\n    scriptSet();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I have deployed a number of web applications, and haven't ever had a problem with the script being in the body tag. I like to place it at the end of the page so as not to impede download progress of the visible elements on the page. I believe that Google has also done this with some of their scripts (maybe Analytics?).</p>\n\n<p>Like some of the others have said, make sure that you have your jQuery reference before the $(document).ready(); call. It's easy to slip past, and hard to troubleshoot :)</p>\n\n<p>JMax</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It typically does not matter if you put your script includes and blocks within your <code>BODY</code> element; they'll run perfectly fine in most cases. Some people believe it a bad practice, but it's not a wrong practice. It happens all the time.</p>\n\n<p>However, I'd like to point out that it will not matter where you put a <code>$.ready()</code> function call, as long as it's after the jQuery include, as it will always run AFTER the DOM is ready (which will occur AFTER page load). So, in this case it doesn't make any difference.</p>\n\n<p>Note the anonymous function in the function call. This passes a reference to <code>$.ready()</code> for the anonymous function, which allows it's function body to be executed at a later time, hence your functions will be called at a later time.</p>\n\n<pre><code>&lt;script type=\"text/javascript\"&gt;\n$(document).ready(function(){\n    createHeader(); \n    scriptSet();\n}); \n&lt;/script&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Functionally, as long as you enclose your code inside a <code>$(document).ready(function(){ });</code> <strong>and</strong> it comes <strong>after</strong> the jQuery file includes, it does <strong>not</strong> matter if it's in the <code>head</code> or the <code>body</code>.  <code>$(document).ready</code> ensures that the DOM is fully loaded before any script is executed.</p>\n\n<p><strong>HOWEVER</strong>, putting all of your script includes and scripts at the bottom of the <code>body</code> is <strong>best</strong> for loading performance.</p>\n\n<p><a href=\"http://developer.yahoo.com/blogs/ydn/posts/2007/07/high_performanc_5/\">This article explains it nicely.</a></p>\n\n<p><strong>Example:</strong></p>\n\n<pre><code>        &lt;body&gt;\n\n    &lt;!-- MY HTML CODE --&gt;\n\n    &lt;!-- START javascript --&gt;\n        &lt;script type=\"text/javascript\" src=\"/ajax/jquery/jquery-1.6.2.min.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"/ajax/jquery/plugins/jquery.random_plugin.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"/ajax/jquery/plugins/jquery.random_plugin2.js\"&gt;&lt;/script&gt;\n        &lt;script type=\"text/javascript\" src=\"/includes/some_other_scripts.js\"&gt;&lt;/script&gt;\n\n        &lt;script type=\"text/javascript\" language=\"JavaScript\"&gt;\n        //&lt;![CDATA[\n            $(document).ready(function(){\n                // my code\n            });\n        //]]&gt;\n        &lt;/script&gt;\n    &lt;!-- END javascript --&gt;\n\n        &lt;/body&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>this is what im trying to do</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"resources/application.js\"&gt;&lt;/script&gt;\n    &lt;script type=\"text/javascript\" &gt;\n       $(document).ready(createHeader()); \n       $(document).ready(scriptSet()); \n    &lt;/script&gt;\n</code></pre>\n\n<p>id like to avoid having to separate the two, and while generally i see script links only inside the header the document.ready functions dont seem to work when put there. However, everything seems to work completely fine when placed at the end of the body, so would this cause any problems or is this fine?</p>\n",
            "last_activity_date": 1311735858,
            "question_id": 6838689,
            "score": 1,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "Will linking javascript files in the body rather than in the header cause a problem?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>you can use action formatter here with each row and make edit and delete button as false in formatOptions like this </p>\n\n<p>formatoptions: {editbutton:false,delbutton:false}}</p>\n\n<p>and follow these two demos</p>\n\n<p><a href=\"http://www.ok-soft-gmbh.com/jqGrid/Admin3.htm\" rel=\"nofollow\">http://www.ok-soft-gmbh.com/jqGrid/Admin3.htm</a></p>\n\n<p><a href=\"http://ok-soft-gmbh.com/jqGrid/TestSamle/Admin1.htm\" rel=\"nofollow\">http://ok-soft-gmbh.com/jqGrid/TestSamle/Admin1.htm</a></p>\n\n<p>and on click event of these custom buttons show your alert</p>\n\n<p><strong>EDIT</strong>\n<code></p>\n\n<pre>var getColumnIndexByName = function (grid, columnName) {\n\n                var cm = grid.jqGrid('getGridParam', 'colModel'), i, l = cm.length;\n\n                for (i = 0; i &lt; l; i++) {\n\n                    if (cm[i].name === columnName) {\n\n                        return i; // return the index\n\n                    }\n\n                }\n\n                return -1;\n\n            },\n\nfunction () {\n\n                var iCol = getColumnIndexByName(grid, 'act');\n\n                $(this).find(\"&gt;tbody&gt;tr.jqgrow&gt;td:nth-child(\" + (iCol + 1) + \")\")\n\n                    .each(function() {\n\n                        $(\"&lt;div&gt;\", {\n\n                            title: \"Custom\",\n\n                            mouseover: function() {\n\n                                $(this).addClass('ui-state-hover');\n\n                            },\n\n                            mouseout: function() {\n\n                                $(this).removeClass('ui-state-hover');\n\n                            },\n\n                            click: function(e) {\n\n                                alert(\"'Custom' button is clicked in the rowis=\"+\n\n                                    $(e.target).closest(\"tr.jqgrow\").attr(\"id\") +\" !\");\n\n                            }\n\n                        }\n\n                      ).css({\"margin-right\": \"5px\", float: \"left\", cursor: \"pointer\"})\n\n                       .addClass(\"ui-pg-div ui-inline-custom\")\n\n                       .append('&lt;span class=\"ui-icon ui-icon-document\"&gt;&lt;/span&gt;')\n\n                       .prependTo($(this).children(\"div\"));\n\n                });\n\n            }\n</code></pre>\n\n<p></p>\n\n<p>if you check this code', i'm trying to find out index value by giving column name as 'act', you can get index on any other column by giving a different column name.</p>\n\n<p>var iCol = getColumnIndexByName(grid, 'Demo'); and the rest of the code will be same for you. //demo is the column name where u want to add custom button</p>\n\n<p>and write ur click event for this button.\nlet me know if this works for you or not.</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I want to make a simple table that contains a custom button in a row.  When the button is pushed, I want to pop up an 'alert' box.   I have read some posts on this, for example:\n<a href=\"http://stackoverflow.com/questions/1384685/how-do-you-add-scripts-to-custom-buttons-on-rows-in-jqgrid\">this post</a>\nand\n<a href=\"http://stackoverflow.com/questions/1299479/adding-a-button-to-a-row-in-jqgrid\">this other post</a>, and I don't understand why my code is not working.  The buttons are drawn, but pushing them has no effect.</p>\n\n<p>I have three attempts described here.</p>\n\n<p>Version 1.   The button click never fires:</p>\n\n<pre><code>  $(document).ready(function(){\n      jQuery(\"#simpletable\").jqGrid({\n         datatype: \"local\",\n        colNames:['A','B','Status'],\n        colModel:[\n        {name:'A',index:'A'},\n        {name:'B',index:'B'},\n        {name:'status',index:status}\n    ],\n        data:[ \n        {'A':2,'B':100,'status':\"&lt;button  onclick=\\\"jQuery('#simpletable').saveRow('1', function(){alert('you are in')});\\\" &gt;in&lt;/button&gt;\"},\n        {'A':1,'B':200,'status':\"&lt;button onclick=\\\"jQuery('#simpletable').saveRow('2', function(){alert('you are in')});\\\" &gt;in&lt;/button&gt;\"},\n        ],\n        caption: \"Demo of Custom Clickable Button in Row\",\n        viewrecords:true,\n        editurl:'clientArray',\n    });\n\n   });\n</code></pre>\n\n<p>Html Code:</p>\n\n<pre><code>&lt;table id=\"simpletable\"&gt;&lt;/table&gt;\n</code></pre>\n\n<p>EDIT 8/2/12 --  I've learned some things since my original post and here I describe two more attempts.</p>\n\n<p>Version 2:  I use onCellSelect.   This works, but it would not allow me to put more than one button in a cell.    Additionally, I made the code nicer by using the format option suggested by one of the comments to this post.</p>\n\n<pre><code>function status_button_maker_v2(cellvalue, options, rowObject){\n    return \"&lt;button class=\\\"ver2_statusbutton\\\"&gt;\"+cellvalue+\"&lt;/button&gt;\"\n};\n\njQuery(\"#simpletablev2\").jqGrid({\n    datatype: \"local\",\n    colNames:['A','B','Status'],\n    colModel:[\n    {name:'A',index:'A'},\n    {name:'B',index:'B'},\n    {name:'status',index:status,editable:true,formatter:status_button_maker_v2}\n    ],\n        data:[ \n    {'A':2,'B':100,'status':\"In\"},\n    {'A':1,'B':200,'status':\"Out\"}\n        ],\n\n    onCellSelect:function(rowid,icol,cellcontent,e){\n    if (icol==2){\n\n        alert('My value in column A is: '+$(\"#simpletablev2\").getRowData(rowid)['A']);\n    }else{\n        return true;\n    }\n    },\n\n    caption: \"Demo of Custom Clickable Button in Row, ver 2\",\n    viewrecords:true,\n});  //end simpletablev2\n</code></pre>\n\n<p>Markup:</p>\n\n<pre><code>&lt;style&gt;.ver2_statusbutton { color:blue;} &lt;/style&gt;\n&lt;h3&gt;simple table, ver 2:&lt;/h3&gt;\n&lt;table id=\"simpletablev2\"&gt;&lt;/table&gt;\n</code></pre>\n\n<p>Version 3:   I tried to use the solution to <a href=\"http://stackoverflow.com/questions/2774018/call-a-function-from-a-button-that-is-created-during-jqgrids-gridcomplete-event?answertab=active#tab-top\">w4ik's post</a>, using \".on\" instead of deprecated \".live\".   This causes the button click to fire, but I don't know how to retrieve the rowid.  w4ik also struggled with this, and he posted that he worked it out, but not how he did it.   I can get the last row selected, but this will always refer to the previous row selected because the button is taking priority.</p>\n\n<p>I would prefer this solution if I could get it to work.</p>\n\n<pre><code>jQuery(\"#simpletablev3\").jqGrid({\n    datatype: \"local\",\n    colNames:['A','B','Status'],\n    colModel:[\n    {name:'A',index:'A'},\n    {name:'B',index:'B'},\n    {name:'status',index:status,editable:true,formatter:status_button_maker_v3}\n    ],\n        data:[ \n    {'A':2,'B':100,'status':\"In\"},\n    {'A':1,'B':200,'status':\"Out\"}\n        ],\n    caption: \"Demo of Custom Clickable Button in Row, ver 3\",\n    viewrecords:true,\n    onSelectRow: function(){},\n    gridComplete: function(){}\n});  //end simpletablev3\n\n\n$(\".ver3_statusbutton\").on(\n    {\n    click: function(){\n        //how to get the row id?  the following does not work\n        //var rowid = $(\"#simpletablev3\").attr('rowid'); \n        //\n        //it also does not work to get the selected row\n        //   this is always one click behind:\n        //$(\"#simpletablev3\").trigger(\"reloadGrid\");\n        rowid = $(\"#simpletablev3\").getGridParam('selrow');\n        alert(\"button pushed! rowid = \"+rowid);\n    }\n    });\n</code></pre>\n\n<p>Markup:</p>\n\n<pre><code> &lt;style&gt;.ver3_statusbutton {    color:red;} &lt;/style&gt;\n &lt;h3&gt;simple table, ver 3:&lt;/h3&gt;\n &lt;table id=\"simpletablev3\"&gt;&lt;/table&gt;\n</code></pre>\n\n<p>In summary, I'm struggling with the issue of getting my button to be pushed <em>at the right time</em>.  In version 1, the row gets selected and the button never gets pushed.  Version 2 does not use the \"button\" at all -- It just handles the cell click.  Verion 3 gets the button click before the row select (wrong order).</p>\n\n<p>Any help would be appreciated!</p>\n",
            "last_activity_date": 1404587920,
            "question_id": 11743983,
            "score": 0,
            "tags": [
                "javascript",
                "jquery",
                "ajax",
                "jqgrid",
                "client"
            ],
            "title": "Adding a custom button in row in jqGrid?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Take a look <a href=\"http://www.hunlock.com/blogs/Mastering%5FThe%5FBack%5FButton%5FWith%5FJavascript\" rel=\"nofollow\">Mastering The Back Button With Javascript</a> (it's the same principle). There are two relevant events: unload and beforeunload. Also see <a href=\"http://stackoverflow.com/questions/147636/best-way-to-detect-when-user-leaves-a-web-page\">Best way to detect when user leaves a web page</a>.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>You can't detect opening a new window or tab, but you can listen for the 'onunload' event.</p>\n\n<pre><code>jQuery(window).bind(\"unload\", function() {\n    //your code here\n});\n</code></pre>\n\n<p>This should fire when clicking on a link, closing the tab/window or pressing the back button.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I just want to comment that there is probably no reliable, cross-browser solution for this... I know this doesn't add much value to your question, but if you can resolve your problem in any other way, I think it would be also more ergonomic.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'd like to know that a user leave from a Web page. I think there might be three scenarios: 1. move to another page in the same Web site, either open a new window or load a new page to the current window, 2. move to a page in different site, and 3. close the window.</p>\n\n<p>Based on these scenarios, what I'm thinking is to check whether the current window is the focus. So my first question is Is this the right way? And the second question is How should I implement it in javascript?</p>\n",
            "last_activity_date": 1256442273,
            "question_id": 1619930,
            "score": 0,
            "tags": [
                "javascript"
            ],
            "title": "how to check users leave a page"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>On the <strong>line 68</strong> you have illegial symbols right after a closing bracket <code>}</code>.</p>\n\n<p><img src=\"http://i.stack.imgur.com/NvK1f.png\" alt=\"enter image description here\"></p>\n\n<p>Remove it and the code should work.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Just before your closing <code>&lt;/script&gt;</code> tag, you've got an illegal character.\nTry right-clicking and 'view-source' in Chrome. You'll see it. Line #68.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Open up your console, it says: <code>Uncaught SyntaxError: Unexpected token ILLEGAL, demo.php:68</code></p>\n\n<pre><code>    ...\n    var total1 = document.getElementById(\"total1\").value = total;\n\n}\u00e2\u20ac\u2039\n</code></pre>\n\n<p>These might be caused by a <a href=\"http://en.wikipedia.org/wiki/Byte_order_mark\" rel=\"nofollow\">BOM</a> if you're using different files/includes to generate the output. Otherwise, it might just be some copy/paste error. Just remove the <code>}\u00e2\u20ac\u2039&lt;/script&gt;</code> to make sure the 'invisible' chars are gone between <code>}</code> and <code>&lt;</code> and then type <code>}&lt;/script&gt;</code> again and be done with it.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Seems to work just fine, except you have a random trio of symbols at the end of your <code>&lt;script&gt;</code>, so remove those and it should be just fine.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>\u00e2\u20ac\u2039 from copying and pasting from fiddle</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>I'm not sure what im missing here </p>\n\n<p>I have the following JS fiddle:</p>\n\n<p><a href=\"http://jsfiddle.net/thetylercox/eeMva/3/\" rel=\"nofollow\">http://jsfiddle.net/thetylercox/eeMva/3/</a></p>\n\n<p>And the site:</p>\n\n<p><a href=\"http://soldbybillcox.com/treasure/demo1.html\" rel=\"nofollow\">http://soldbybillcox.com/treasure/demo1.html</a></p>\n\n<p>I'm not sure what I am missing but my website does not work.</p>\n",
            "last_activity_date": 1342651098,
            "question_id": 11551088,
            "score": -3,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "jsfiddle"
            ],
            "title": "Why does my jsfiddle work but not my web site?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>document.activeElement is supported by IE6+, FF3+, Safari 4+, Opera 9+, Chrome 9+. (FF2, Saf3 don't support this property)</p>\n",
                    "is_accepted": true,
                    "score": 38
                },
                {
                    "body": "<p>It still doesn't work on WebKit based browsers in <strong>xhtml page</strong>\nsee <a href=\"https://bugs.webkit.org/show_bug.cgi?id=63922\" rel=\"nofollow\">https://bugs.webkit.org/show_bug.cgi?id=63922</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Which web browsers / versions have support for <code>document.activeElement</code>? </p>\n\n<p>This property lets you see which element is active / has focus.</p>\n\n<p>Are there any main gotchas/difference between implementations?</p>\n",
            "last_activity_date": 1390499383,
            "question_id": 5318415,
            "score": 37,
            "tags": [
                "javascript",
                "browser",
                "focus"
            ],
            "title": "Which browsers support document.activeElement?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>There isn't from a hyperlink, no.  Not unless the page has script inside specifically for this and it's checking for some parameter....but for your question, no, there's no built-in support in browsers for this.</p>\n\n<p>There are however <a href=\"http://en.wikipedia.org/wiki/Bookmarklet\" rel=\"nofollow\">bookmarklets</a> you can bookmark to quickly run JavaScript functions from your address bar; not sure if that meets your needs, but it's as close as it gets.</p>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>/test.html#alert('heello')</p>\n\n<pre><code>test.html\n&lt;button onClick=\"eval(document.location.hash.substring(1))\"&gt;do it&lt;/button&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>you may also place the followinng</p>\n\n<pre><code>&lt;a href='javascript:alert(\"hello world!\");'&gt;Click me&lt;/a&gt;\n</code></pre>\n\n<p>to your html-code, and when you click on 'Click me' hyperlink, javascript will appear in url-bar and Alert dialog will show</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>you can use like this situation: \nfor example, you have a page:  <code>http://www.example.com/page.php</code>\nthen in that page.php, insert this code:</p>\n\n<pre><code>if (!empty($_GET['doaction']) &amp;&amp; $_GET['doaction'] == blabla ){\necho '&lt;script&gt;alert(\"hello\");&lt;/script&gt;';\n}\n</code></pre>\n\n<p>then, whenever you visit this url: <code>http://www.example.com/page.php?doaction=blabla</code></p>\n\n<p>then the alert will be automatically called.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Write in address bar  </p>\n\n<pre><code>javascript:alert(\"hi\");\n</code></pre>\n\n<p>Make sure you write in the beginning: javascript:  </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is it possible to call a javascript function from the URL?</p>\n\n<p>Something like: <a href=\"http://www.mysite.com/mypage.aspx?javascript:printHelloWorld\">http://www.mysite.com/mypage.aspx?javascript:printHelloWorld</a>()</p>\n\n<p>I know if you put javascript:alert(\"Hello World\"); into the address bar it will work.</p>\n\n<p>I suspect the answer to this is no but, just wondered if there was a way to do it.</p>\n",
            "last_activity_date": 1423591818,
            "question_id": 4163879,
            "score": 27,
            "tags": [
                "javascript",
                "url"
            ],
            "title": "Call Javascript function from URL/address bar"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>Look at <a href=\"http://stackoverflow.com/questions/322378/javascript-check-if-mouse-button-down\">this</a> answer, and use <code>onkeyup</code> and <code>onkeydown</code>. <a href=\"http://www.devguru.com/Technologies/Ecmascript/Quickref/evhan%5Fonkeydown.html\" rel=\"nofollow\">Here</a> is more specific info about those events.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Other people have asked this kind of question before (though I don't see any obvious dupes here right now).</p>\n\n<p>I think the answer is that the <code>keydown</code> event (and its twin <code>keyup</code>) are all the info you get. Repeating is wired pretty firmly into the operating system, and an application program doesn't get much of an opportunity to query the BIOS for the actual state of the key.</p>\n\n<p>What you can do, and perhaps have to if you need to get this working, is to programmatically de-bounce the key. Essentially, you can evaluate <code>keydown</code> and <code>keyup</code> yourself but ignore a <code>keyup</code>event if it takes place too quickly after the last <code>keydown</code>... or essentially, you should delay your response to <code>keyup</code> long enough to be sure there's not another <code>keydown</code> event following with something like 0.25 seconds of the <code>keyup</code>.</p>\n\n<p>This would involve using a timer activity, and recording the millisecond times for previous events. I can't say it's a very appealing solution, but...</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't believe there is anything like an isKeyDown function, but you could write your own.</p>\n\n<p>Basically, create an array whose length is the number of keys you want to monitor. Then using the documents/pages/controls keyUp and keyDown events, update the array with that key's state.</p>\n\n<p>Then write a function that checks if a certain key is down and returns a bool.</p>\n\n<pre><code>var keyEnum = { W_Key:0, A_Key:1, S_Key:2, D_Key:3 };\nvar keyArray = new Array(4);\n\nfunction onKeyDown()\n{\n    // Detect which key was pressed\n    if( key == 'w' )\n        keyArray[keyEnum.W_Key] = true;\n    // Repeat for each key you care about...\n}\n\nfunction onKeyUp()\n{\n    // Detect which key was released\n    if( key == 'w' )\n        keyArray[keyEnum.W_Key] = false;\n    // Repeat for each key you care about...\n}\n\nfunction isKeyDown(key)\n{\n    return keyArray[key];\n}\n</code></pre>\n\n<p>That should accomplish what you want.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<blockquote>\n  <p>Is there a way to detect if a key is currently down in JavaScript?</p>\n</blockquote>\n\n<p>Nope. The only possibility is monitoring each <code>keyup</code> and <code>keydown</code> and remembering.</p>\n\n<blockquote>\n  <p>after some period of time the key begins to repeat, firing off keydown and keyup events like a fiend.</p>\n</blockquote>\n\n<p>It shouldn't. You'll definitely get <code>keypress</code> repeating, and in many browsers you'll also get repeated <code>keydown</code>, but if <code>keyup</code> repeats, it's a bug.</p>\n\n<p>Unfortunately it is not a completely unheard-of bug: on Linux, Chromium, and Firefox (when it is being run under GTK+, which it is in popular distros such as Ubuntu) both generate repeating keyup-keypress-keydown sequences for held keys, which are impossible to distinguish from someone hammering the key really fast.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<pre><code>$('#mytextbox').keydown(function (e) {\n            if (e.keyCode == 13) {\n                if (e.altKey) {\n                    alert(\"alt is pressed\");\n                }\n            }\n });\n</code></pre>\n\n<p>if you press alt + enter, you will see the alert.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>In addition to using <code>keyup</code> and <code>keydown</code> listeners to track when is key goes down and back up, there <em>are</em> actually some properties that tell you if certain keys are down.</p>\n\n<pre><code>window.onmousemove = function (e) {\n  if (!e) e = window.event;\n  if (e.shiftKey) {/*shift is down*/}\n  if (e.altKey) {/*alt is down*/}\n  if (e.ctrlKey) {/*ctrl is down*/}\n  if (e.metaKey) {/*cmd is down*/}\n}\n</code></pre>\n\n<p>This are available on all browser generated event objects, such as those from <code>keydown</code>, <code>keyup</code>, and <code>keypress</code>, so you don't have to use mousemove.</p>\n\n<p>I tried generating my own event objects with <code>document.createEvent('KeyboardEvent')</code> and <code>document.createEvent('KeyboardEvent')</code> and looking for <code>e.shiftKey</code> and such, but I had no luck.</p>\n\n<p>I'm using Chrome 17 on Mac</p>\n",
                    "is_accepted": false,
                    "score": 22
                },
                {
                    "body": "<pre><code>/*\nTracks what keys are currently down on the keyboard\n*/\n\nfunction keyboard_module(onUpdate){\n    var kb = {};\n    var unicode_mapping = {};\n    document.onkeydown = function(e){\n        var unicode=e.charCode? e.charCode : e.keyCode\n        var key = getKey(unicode);\n        kb[key] = true;\n        if(onUpdate){\n            onUpdate(kb);\n        }\n    }\n\n    document.onkeyup = function(e){\n        var unicode=e.charCode? e.charCode : e.keyCode\n        var key = getKey(unicode);\n        delete kb[key];\n        if(onUpdate){\n            onUpdate(kb);\n        }\n    }\n\n    function getKey(unicode){\n        if(unicode_mapping[unicode]){\n            var key = unicode_mapping[unicode];\n        }else{\n            var key= unicode_mapping[unicode] = String.fromCharCode(unicode);\n        }\n        return key;\n    }\n    return kb;\n}\n\nfunction testing(kb){\n    console.log('These are the down keys', kb);\n}\n\n\nvar keyboard = keyboard_module(testing);\n\n....\n//somewhere else in the code\nif(keyboard['K']){/*do something special */}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to detect if a key is currently down in JavaScript?</p>\n\n<p>I know about the \"keydown\" event, but that's not what I need. Some time AFTER the key is pressed, I want to be able to detect if it is still pressed down.</p>\n\n<p>P. S. The biggest issue seems to be that after some period of time the key begins to repeat, firing off keydown and keyup events like a fiend. Hopefully there is just a simple isKeyDown(key) function, but if not then this issue will need to be overcome / worked around.</p>\n",
            "last_activity_date": 1422872745,
            "question_id": 1828613,
            "score": 26,
            "tags": [
                "javascript",
                "input",
                "keyboard"
            ],
            "title": "Check if a key is down?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>Function.length</code> will do the job (really weird, in my opinion)</p>\n\n<pre><code>function test( a, b, c ){}\n\nalert( test.length ); // 3\n</code></pre>\n\n<p>By the way, this length property is quite useful, take a look at <a href=\"http://ejohn.org/apps/learn/#87\">these slides</a> of John Resig's tutorial on Javascript</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>The <code>arity</code> property specifies the number of arguments the current function expected to receive. This is different to <code>arguments.length</code> which indicates how many actual arguments were passed in.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/arity\" rel=\"nofollow\">https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/arity</a></p>\n\n<h2>Edit</h2>\n\n<p>Note that <code>arity</code> has been deprecated since v1.4.  The correct way to get the number of arguments expected is now <code>function.length</code> as suggested by Harmen.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>With <code>arguments.length</code> I can see how many arguments were passed into a function.</p>\n\n<p>But is there a way to determine how many arguments a function can take so I know how many I should pass in?</p>\n",
            "last_activity_date": 1388591050,
            "question_id": 4138012,
            "score": 20,
            "tags": [
                "javascript"
            ],
            "title": "Checks how many arguments a function takes in Javascript?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>EDIT</strong>:</p>\n\n<p>Use the <code>Number</code> object's <code>toFixed</code> method like this:</p>\n\n<pre><code>var new_number = Math.round(number).toFixed(2);\n</code></pre>\n\n<p>This first rounds the whole number, then reduces the result to 2 decimal places.</p>\n\n<p><a href=\"http://jsfiddle.net/GuLYN/\"><strong>jsFiddle example</strong></a></p>\n",
                    "is_accepted": true,
                    "score": 28
                },
                {
                    "body": "<p>This worked for me:\nvar new_number = float.toFixed(2);</p>\n",
                    "is_accepted": false,
                    "score": 18
                },
                {
                    "body": "<ul>\n<li>toFixed() - method converts a number into a string, keeping a specified number of decimals. It does not actualy rounds up a number, it truncates the number.</li>\n<li>Math.round(n) - rounds a number to the nearest integer. Thus turning:</li>\n</ul>\n\n<p>0.5 -> 1; \n0.05 -> 0</p>\n\n<p>so if you want to round, say number 0.55555, only to the second decimal place; you can do the following(this is step-by-step concept):</p>\n\n<ul>\n<li>0.55555 * 100 = 55.555  </li>\n<li>Math.Round(55.555) -> 56.000</li>\n<li>56.000 / 100 = 0.56000  </li>\n<li>(0.56000).toFixed(2) -> 0.56</li>\n</ul>\n\n<p>and this is the code:</p>\n\n<pre><code>(Math.round(number * 100)/100).toFixed(2);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 17
                }
            ],
            "body": "<p>I have no idea how to do this? I'm adding comma numbers, result is of course always a number with way too many digits after the comma. anyone?</p>\n",
            "last_activity_date": 1395837722,
            "question_id": 4098685,
            "score": 19,
            "tags": [
                "javascript",
                "math",
                "rounding"
            ],
            "title": "Rounding numbers to 2 digits after comma"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p><a href=\"https://developer.mozilla.org/en/DOM/document.getElementsByClassName\">https://developer.mozilla.org/en/DOM/document.getElementsByClassName</a></p>\n\n<p>e: not supported natively in IE &lt; 9, so you'd have to extend document / make a global function with something like this: <a href=\"http://robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/\">http://robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/</a> or use something like <a href=\"http://sizzlejs.com/\">sizzle</a> or <a href=\"http://jquery.com\">jquery</a> - thanks to comments below.</p>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>A number of solutions have been built to work around browsers that don't have native <code>getElementsByClassName</code>. If you use any of the modern javascript libraries (e.g. <a href=\"http://jquery.com/\">jQuery</a>, <a href=\"http://www.prototypejs.org/\">Prototype</a>), they will automatically spackle over these browser-specific gaps. </p>\n\n<p>So, for example, with jQuery:</p>\n\n<pre><code>$('.foo').get();\n</code></pre>\n\n<p>returns all the DOM elements with class <code>foo</code>, in any browser.</p>\n\n<p>If you only want this particular problem solved, and don't want to use a full library, you can try using something like <a href=\"http://robertnyman.com/2008/05/27/the-ultimate-getelementsbyclassname-anno-2008/\">The Ultimate GetElementsByClassName</a>, which lets you have:</p>\n\n<pre><code>getElementsByClassName('foo')\n</code></pre>\n\n<p>Although it's a couple of years old, <a href=\"http://ejohn.org/blog/getelementsbyclassname-speed-comparison/\">John Resig's comparison of various solutions</a> to the problem is still valuable.</p>\n",
                    "is_accepted": false,
                    "score": 13
                },
                {
                    "body": "<p>Use GwtQuery:\n<a href=\"http://code.google.com/p/gwtquery/\" rel=\"nofollow\">http://code.google.com/p/gwtquery/</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>It may be wiser to use <code>document.querySelector</code> or <code>document.querySelectorAll</code>, supported since IE8.</p>\n\n<p>Have a look here:</p>\n\n<p><a href=\"https://developer.mozilla.org/docs/Web/API/document.querySelector\" rel=\"nofollow\">https://developer.mozilla.org/docs/Web/API/document.querySelector</a>\n<a href=\"https://developer.mozilla.org/docs/Web/API/document.querySelectorAll\" rel=\"nofollow\">https://developer.mozilla.org/docs/Web/API/document.querySelectorAll</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I want Element by using class name </p>\n\n<p>Now I am using GWT 2.0 </p>\n\n<p>Please help me </p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1382997606,
            "question_id": 3478942,
            "score": 18,
            "tags": [
                "javascript",
                "html",
                "css",
                "dom",
                "gwt"
            ],
            "title": "Get Element By using Class name"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>If I recall correctly (and I could be very wrong here), the split method was implemented in javascript before the regex engine was in wide use, so it's presumably for backward compatibility.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p><strong><code>String.split</code></strong> accepts either a string or regular expression as its first parameter. The <strong><code>String.match</code></strong> method only accepts a regular expression.</p>\n\n<p>I'd imagine that <strong><code>String.match</code></strong> will try and work with whatever is passed; so if you pass a string it will interpret it as a regular expression. The <strong><code>String.split</code></strong> method doesn't have the luxury of doing this because it can accept regular expressions AND strings; in this case it would be foolish to second-guess.</p>\n\n<p><hr /></p>\n\n<p><strong>Edit</strong>: (From: \"JavaScript: The Definitive Guide\")</p>\n\n<p><strong><code>String.match</code></strong> requires a regular expression to work with. The passed argument needs to be a <strong><code>RegExp</code></strong> object that specifies the pattern to be matched. If this argument is not a <strong><code>RegExp</code></strong>, it is first converted to one by passing it to the <strong><code>RegExp()</code></strong> constructor. </p>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>Since I started writing this question, I think I figured out the answers to every question I had, but I thought I'd post anyway, as it might be useful to others and more clarification might be helpful.</p>\n\n<p>I was trying to use a regular expression with lookahead with the javascript function split.  For some reason it was not splitting the string even though it finds a match when I call match.  I originally thought the problem was from using lookahead in my regular expression. Here is a simplified example:</p>\n\n<p>Doesn't work:</p>\n\n<pre><code>\"aaaaBaaaa\".split(\"(?=B).\");\n</code></pre>\n\n<p>Works:</p>\n\n<pre><code>\"aaaaBaaaa\".match(\"(?=B).\");\n</code></pre>\n\n<p>It appears the problem was that in the split example, the passed string wasn't being interpreted as a regular expression.  Using forward slashes instead of quotes seems to fix the problem.</p>\n\n<pre><code>\"aaaaBaaaa\".split(/(?=B)./);\n</code></pre>\n\n<p>I confirmed my theory with the following silly looking example:</p>\n\n<pre><code>\"aaaaaaaa(?=B).aaaaaaa\".split(\"(?=B).\");\n</code></pre>\n\n<p>Does anyone else think it's strange that the match function assumes you have a regular expression while the split function does not?</p>\n",
            "last_activity_date": 1253875366,
            "question_id": 812144,
            "score": 18,
            "tags": [
                "javascript",
                "regex",
                "split",
                "lookahead"
            ],
            "title": "Javascript won&#39;t split using regex"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You have to use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/regexp\"><code>RegExp</code></a>:</p>\n\n<pre><code>str.match(new RegExp(pattern1+'|'+pattern2, 'gi'));\n</code></pre>\n\n<hr>\n\n<blockquote>\n  <p>When I'm concatenating strings, all slashes are gone.</p>\n</blockquote>\n\n<p>If you have a backslash in your pattern to escape a special regex character, (like <code>\\(</code>), you have to use <strong>two</strong> backslashes in the string (because <code>\\</code> is the escape character in a string): <code>new RegExp('\\\\(')</code> would be the same as <code>/\\(/</code>.</p>\n\n<p>So your patterns have to become:</p>\n\n<pre><code>var pattern1 = ':\\\\(|:=\\\\(|:-\\\\(';\nvar pattern2 = ':\\\\(|:=\\\\(|:-\\\\(|:\\\\(|:=\\\\(|:-\\\\(';\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 41
                },
                {
                    "body": "<p>Use the below:</p>\n\n<pre><code>var regEx = new RegExp(pattern1+'|'+pattern2, 'gi');\n\nstr.match(regEx);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You have to forgo the literal and use th object constructor, where you can pass the regex as a string.</p>\n\n<pre><code>var regex = new RegExp(pattern1+'|'+pattern2, 'gi');\nstr.match(regex);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>How to construct two regex patterns into one?</p>\n\n<p>For example I have one long pattern and one smaller, I need to put smaller one in front of long one.</p>\n\n<pre><code>var pattern1 = ':\\(|:=\\(|:-\\(';\nvar pattern2 = ':\\(|:=\\(|:-\\(|:\\(|:=\\(|:-\\('\nstr.match('/'+pattern1+'|'+pattern2+'/gi');\n</code></pre>\n\n<p>This doesn't work. When I'm concatenating strings, all slashes are gone.</p>\n",
            "last_activity_date": 1392690618,
            "question_id": 5090103,
            "score": 17,
            "tags": [
                "javascript",
                "regex",
                "dynamic"
            ],
            "title": "Javascript Regexp dynamic generation from variables?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To check the availability of a domain name, any WHOIS API would most-likely do the trick. After a quick search I found <a href=\"http://www.whoisxmlapi.com/\" rel=\"nofollow\">WHOIS XML API</a>, which offers the XML/JSON libraries. You could alternatively parse  \"http://whois.domaintools.com/[your URL here]\" for domain info/availability.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>you can try Domain Availability API:<br/>\n<a href=\"http://www.whoisxmlapi.com/domain-availability.php\" rel=\"nofollow\">http://www.whoisxmlapi.com/domain-availability.php</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<pre><code>var i               = new nsm_domain();\nvar availabeDomains = i.Available();\n\ndocument.write('The India.in is ' + (!i.Status() ? 'Available' : 'Not Available') + '&lt;br/&gt;&lt;br/&gt;');\n\n/* Availables */\nfor(var j=0; j&lt;availabeDomains.length; j++)\n    {\n    var d_item  = availabeDomains[j];\n    var d_name  = d_item[0];\n\n    document.write(d_name + '  ');\n    for(var k=1; k&lt;d_item.length; k++)\n        document.write(d_item[k][0] + ' ' + d_item[k][1] +', ');\n    document.write('&lt;br/&gt;');\n    }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -6
                },
                {
                    "body": "<p>For something simple and nicely documented, NameToolkit <a href=\"http://www.mashape.com/apis/Name+Toolkit\" rel=\"nofollow\">http://www.mashape.com/apis/Name+Toolkit</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I also recommend Name Toolkit, <a href=\"http://www.mashape.com/apis/Name+Toolkit\" rel=\"nofollow\">http://www.mashape.com/apis/Name+Toolkit</a>. Because it is far cheaper than the alternatives.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Does anyone have experience with the APIs of registrars like GoDaddy?</p>\n\n<p>The goal is to use Javascript to check the availability of domain names.  Someone asked a related question on StackOverflow, but the answers focused on WHOIS.</p>\n\n<p>I'm hoping someone provides a more robust, JSON-based API for checking domain availability.  It seems natural that registrars like GoDaddy would offer this.</p>\n\n<p>Thanks!</p>\n",
            "last_activity_date": 1351507703,
            "question_id": 3463336,
            "score": 16,
            "tags": [
                "javascript",
                "json",
                "api",
                "dns",
                "godaddy"
            ],
            "title": "Recommended APIs for checking domain availability?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>You're actually taking advantage of a bug in IE.  Firefox supports onChange correctly, as it's not supposed to fire until the browser loses focus of the select field.  (I <a href=\"http://stackoverflow.com/questions/580281/redirect-automatically-when-selecting-an-item-from-a-select-drop-down-list/580317#580317\">answered a question</a> yesterday about this very issue, in fact.)  It's actually kind of dangerous to use onChange with a select, especially because there's no way for keyboard only users to skip some options.  (On top of that, the mouse wheel <em>seems</em> to spin by multiple answers, but it actually fires onChange for each entry it passes by on IE.)</p>\n\n<p>If you really want the event to fire whenever someone presses up or down, I would hook into the onKeyPress or onKeyDown events to fire whenever the \"up\" or \"down\" key is pressed.</p>\n",
                    "is_accepted": true,
                    "score": 23
                },
                {
                    "body": "<p>Maybe instead of using the change() event use the blur() event and check to see if the value changed?</p>\n\n<p>FYI, i have not tested this, just an idea that I had. and I am not sure if this is the desired effect because it would trigger on a lost of focus, but I am suggesting it as to keep the effect consistent across different browsers.</p>\n\n<pre><code>var currentValue;\n\n$('.travel-to').blur(function(){\n    var val = $(this).val();\n    if (currentValue != val) {\n        currentValue = val;\n        $.ajax({\n            type: \"GET\",\n            url: \"/inc/rates/rates-viewer.php\",\n            data: \"shtech=y&amp;c_name=\"+escape(currentValue),\n            success: function(html){\n                $(\".rates-viewer\").html(html);\n                $(\".rates-viewer tr.numbers td\").css({ opacity: 0 }).fadeTo(\"slow\",1);\n            }\n        });\n    }\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>I've just experienced some weird behavior in firefox which enables the user to open the select dropdown, navigate with the arrows and then instead of tabbing out or clicking on a side the user can click another element which will result into changing the select value without firing <code>change</code> event.</p>\n\n<p>To work around this you can trigger the <code>change</code> whenever the <code>keyup</code> (please also suggest other events?) event is fired and the select has a different value then the previous.</p>\n\n<pre><code>var selectRegistry = {},\n    $selects = $('select');\n\n$selects.bind('change', function() {\n    var $this = $(this);\n    selectRegistry[$this.attr('id')] = $this.val();\n});\n\n$selects.bind('keyup scroll select', function() {\n    var $this = $(this);\n    if ($this.val()!=selectRegistry[$this.attr('id')])\n    {\n        $this.trigger('change');\n    }\n});\n</code></pre>\n\n<p>You can use <code>.live()</code> function if you'll have dinamically created select elements along the runtime of the web page.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I got it working using jquery <a href=\"http://api.jquery.com/focusout/\" rel=\"nofollow\">focusout</a></p>\n\n<p><a href=\"http://api.jquery.com/focusout/\" rel=\"nofollow\">http://api.jquery.com/focusout/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>better option is use <code>.on()</code> to bind function as multiple events</p>\n\n<pre><code>$(\"#member\").on(\"change keyup\", function(){\n    -----\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have a dropdown that triggers an ajax call when its changed:</p>\n\n<pre><code>$('.travel-to').change(function(){  \n\t$.ajax({\n\t\ttype: \"GET\",\n\t\turl: \"/inc/rates/rates-viewer.php\",\n\t\tdata: \"shtech=y&amp;c_name=\"+escape($(this).val()),\n\t\tsuccess: function(html){\n\t\t\t$(\".rates-viewer\").html(html);\n\t\t\t$(\".rates-viewer tr.numbers td\").css({ opacity: 0 }).fadeTo(\"slow\",1);\n\t\t}\n\t});\n});\n</code></pre>\n\n<p>My problem is, in Firefox, using the up/down cursor keys to cycle through the dropdown options, doesn't trigger the js <code>onChange()</code> event. It's ok in IE.</p>\n\n<p>How can I make Firefox see the up/down cursors as an <code>onChange</code>? Can I do an either/or on the event, to make either an <code>onChange</code> or a keypress trigger the same thing?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1393332098,
            "question_id": 586936,
            "score": 16,
            "tags": [
                "javascript",
                "jquery",
                "firefox",
                "drop-down-menu"
            ],
            "title": "jQuery change() on &lt;select&gt; and firefox"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Use square bracket notation with a string:</p>\n\n<pre><code>var XXXValue = my_json['@type'];\n</code></pre>\n\n<p>The same can be used when you have a property name in a variable.  Using your same example:</p>\n\n<pre><code>var propertyName = '@type';\nvar XXXValue = my_json[propertyName];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 21
                },
                {
                    "body": "<p>If it ends up evaluating you can take the object and probably grab it by the key.</p>\n\n<p>ie obj[\"@type\"]. But something does seem a bit off.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>As you've discovered, you can't use an @ symbol in a Javascript variable name, <code>my_json.@type</code> is invalid.</p>\n\n<p>The good news for you is that you can access your variables as array subscripts. You would do it like this:</p>\n\n<pre><code>my_json[\"@type\"]\n</code></pre>\n\n<p>Hope that helps.</p>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>My JSON object evaluates to:</p>\n\n<pre><code>{ \"@io\": IO, \"@type\": XXX }\n</code></pre>\n\n<p>If this variable is called <code>my_json</code>, how do I access the <code>@type</code> value of XXX? I tried <code>my_json.@type</code>, but this is giving errors. Help appreciated. Thanks,</p>\n\n<p>Nick</p>\n",
            "last_activity_date": 1339333031,
            "question_id": 6932745,
            "score": 15,
            "tags": [
                "javascript",
                "json",
                "titanium"
            ],
            "title": "Parsing JSON w/ @ symbol in it"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You need to pass the <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/regexp#Parameters\">second parameter</a>:</p>\n\n<pre><code>var r = new RegExp(keyword, \"i\");\n</code></pre>\n\n<p>You will also need to escape any special characters in the string to prevent regex injection attacks.</p>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>When using the RegExp constructor, you don't need the slashes like you do when using a regexp literal.  So:</p>\n\n<pre><code>new RegExp(keyword, \"i\");\n</code></pre>\n\n<p>Note that you pass in the flags in the second parameter.  See <a href=\"http://www.regular-expressions.info/javascript.html\">here</a> for more info.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You should also remember to watch out for escape characters within a string... </p>\n\n<p>For example if you wished to detect for a single number \\d{1} and you did this...</p>\n\n<pre><code>var pattern = \"\\d{1}\";\nvar re = new RegExp(pattern);\n\nre.exec(\"1\"); // fail! :(\n</code></pre>\n\n<p>that would fail as the initial \\ is an escape character, you would need to \"escape the escape\", like so...</p>\n\n<pre><code>var pattern = \"\\\\d{1}\" // &lt;-- spot the extra '\\'\nvar re = new RegExp(pattern);\n\nre.exec(\"1\"); // success! :D\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 7
                }
            ],
            "body": "<p>im trying to create something similar to this:</p>\n\n<pre><code>var regexp_loc = /e/i;\n</code></pre>\n\n<p>except i want he regexp to be dependent on a string, do i tried to use new RegExp but i couldnt get what i wanted.</p>\n\n<p>basicly i want the e in the above regexp to be a string variable but i fail with the syntax.</p>\n\n<p>i tried something like this:</p>\n\n<pre><code>var keyword = \"something\";\n\nvar test_regexp = new RegExp(\"/\" + keyword + \"/i\");\n</code></pre>\n\n<p>basicly i want to search for a sub string in a bigger string , and then replace the string with some other string, case insensitive.</p>\n\n<p>regards,\nalexander</p>\n",
            "last_activity_date": 1369388721,
            "question_id": 5172183,
            "score": 15,
            "tags": [
                "javascript",
                "regex",
                "string"
            ],
            "title": "javascript new regexp from string"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>For Back Button \nin jquery \n// <a href=\"http://code.jquery.com/jquery-latest.js\" rel=\"nofollow\">http://code.jquery.com/jquery-latest.js</a></p>\n\n<pre><code> jQuery(window).bind(\"unload\", function() { //\n</code></pre>\n\n<p>and in html5 ther is an event\n<strong>The event is called 'popstate'</strong></p>\n\n<pre><code>window.onpopstate = function(event) {\nalert(\"location: \" + document.location + \", state: \" + JSON.stringify(event.state));\n};\n</code></pre>\n\n<p>and for refresh plz check \n<a href=\"http://stackoverflow.com/questions/5004978/check-if-page-reloaded-or-refresh-in-js\">Check if page reloaded or refresh in js</a></p>\n\n<p>In Mozilla Client-x and client-y is inside document area\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/event.clientX\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/event.clientX</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Use for on refresh event</p>\n\n<pre><code>window.onbeforeunload = function(e) {\n  return 'Dialog text here.';\n};\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/window.onbeforeunload?redirectlocale=en-US&amp;redirectslug=DOM%2Fwindow.onbeforeunload\">https://developer.mozilla.org/en-US/docs/Web/API/window.onbeforeunload?redirectlocale=en-US&amp;redirectslug=DOM%2Fwindow.onbeforeunload</a></p>\n\n<p>And</p>\n\n<pre><code>$(window).unload(function() {\n      alert('Handler for .unload() called.');\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 11
                },
                {
                    "body": "<p>Use 'event.currentTarget.performance.navigation.type' to determine the type of navigation.\nThis is working in IE, FF and Chrome.</p>\n\n<pre><code>   function CallbackFunction(event) {\n\n    if(window.event){\n\n              if (window.event.clientX &lt; 40 &amp;&amp; window.event.clientY &lt; 0) { \n\n                  alert(\"back button is clicked\");    \n\n              }else{\n\n                  alert(\"refresh button is clicked\");\n              }\n\n    }else{\n\n        if (event.currentTarget.performance.navigation.type == 2) { \n\n            alert(\"back button is clicked\");    \n\n        }\n        if (event.currentTarget.performance.navigation.type == 1){\n\n            alert(\"refresh button is clicked\");\n         }             \n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<pre><code>var keyCode = evt.keyCode;\nif (keyCode==8)\nalert('you pressed backspace');\n\nif(keyCode==116)\nalert('you pressed f5 to reload page')\n</code></pre>\n",
                    "is_accepted": false,
                    "score": -3
                }
            ],
            "body": "<p>How to know in firefox whether refresh button is clicked or browser back button is clicked... for both events <strong>onbeforeunload()</strong> method is a callback. For IE i am handling like this: </p>\n\n<pre><code>function CallbackFunction(event) {\n\n    if(window.event){\n\n              if (window.event.clientX &lt; 40 &amp;&amp; window.event.clientY &lt; 0) { \n\n            alert(\"back button is clicked\");    \n\n              }else{\n\n            alert(\"refresh button is clicked\");\n          }\n\n    }else{\n\n           // want some condition here so that I can differentiate between whether refresh button is clicked or back button is clicked.             \n    }\n  }\n\n&lt;body onbeforeunload=\"CallbackFunction();\"&gt; \n</code></pre>\n\n<p>But in Firefox <strong>event.clientX</strong> and <strong>event.clientY</strong>  are always 0. Is there any other way to find it?</p>\n",
            "last_activity_date": 1378358756,
            "question_id": 18457797,
            "score": 14,
            "tags": [
                "javascript",
                "browser",
                "javascript-events",
                "cross-browser"
            ],
            "title": "How to know whether refresh button or browser back button is clicked in firefox"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You are trying to pass templating syntax <code>{{ }}</code> inside a JSON object which is not valid.</p>\n\n<p>You may need to do this instead:</p>\n\n<p><code>myView = new myView({ user : user });</code></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Calling <code>toString</code> on any <code>Object</code>, as Handlebars is doing, will always result in <code>[Object object]</code>. <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/toString#Description\">This is the default result for <code>toString</code>.</a></p>\n\n<p>To get something more useful, you'll either want to display a specific property of the object:</p>\n\n<pre><code>{{user.id}}\n{{user.name}}\n</code></pre>\n\n<p>Or define a helper to format the object differently:</p>\n\n<pre><code>Handlebars.registerHelper('json', function(context) {\n    return JSON.stringify(context);\n});\n\n{{json user}}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 37
                },
                {
                    "body": "<p>I'm using server-side templating in node-js, but this may apply client-side as well.  I register <a href=\"http://stackoverflow.com/users/15031/jonathan-lonowski\">Jonathan</a>'s json helper in node. In my handler, I add context (such as addressBook) via res.locals. Then I can store the context variable client-side as follows:</p>\n\n<pre><code>&lt;script&gt;\n  {{#if addressBook}}\n  console.log(\"addressBook:\", {{{json addressBook}}});\n  window.addressBook = {{{json addressBook}}};\n  {{/if}}\n&lt;/script&gt;\n</code></pre>\n\n<p>Note the triple curlies (as pointed out by <a href=\"http://stackoverflow.com/users/888639/jim-liu\">Jim Liu</a>).</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using Handlebars templates and JSON data is already represented in [Object object], how do I parse this data outside of the Handlebars? For example, I'm trying to populate a JavaScript variable on the page through a handlebars tag, but this doesn't work.</p>\n\n<p>Any suggestions? Thank you!</p>\n\n<p>EDIT:</p>\n\n<p>To clarify, I'm using ExpressJS w/ Handlebars for templating.  In my route, I have this:</p>\n\n<pre><code>var user = {}\nuser = {'id' : 123, 'name' : 'First Name'}\n\nres.render('index', {user : user});\n</code></pre>\n\n<p>Then in my index.hbs template, I now have a <code>{{user}}</code> object.  I can use <code>{{#each}}</code> to iterate through the object just fine.  However, I'm also using Backbonejs and I want to pass this data to a View, such as this:</p>\n\n<p><code>myView = new myView({user : {{user}});</code></p>\n\n<p>The problem, is that <code>{{user}}</code> simply shows <code>[Object object]</code> in the source if I put it in console.log I get an error, 'Unexpected Identifier'.</p>\n",
            "last_activity_date": 1426113031,
            "question_id": 10232574,
            "score": 14,
            "tags": [
                "javascript",
                "json",
                "handlebars.js"
            ],
            "title": "Handlebars.js parse object instead of [Object object]"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p><code>&lt;%</code> are tags used by asp.net. So when the page is parsed, it tries to interpret those but asp.net does not understand the syntax as it expects C# code, not javascript.</p>\n\n<p>You can change the interpolation symbols in the templateSettings to something like <code>{ }</code>and <code>{{ }}</code></p>\n\n<pre><code>_.templateSettings = {\n  interpolate : /\\{\\{(.+?)\\}\\}/g\n  evaluate : /\\{(.+?)\\}/g; \n};\n\nvar template = _.template(\"Hello {{ name }}!\");\ntemplate({name : \"Mustache\"});\n=&gt; \"Hello Mustache!\"\n</code></pre>\n\n<p><strong><a href=\"http://documentcloud.github.com/underscore/#template\" rel=\"nofollow\">Documentation</a></strong></p>\n\n<hr>\n\n<p>FYI, these are the default settings:</p>\n\n<pre><code>// By default, Underscore uses ERB-style template delimiters, change the\n// following template settings to use alternative delimiters.\n_.templateSettings = {\n  evaluate    : /&lt;%([\\s\\S]+?)%&gt;/g,\n  interpolate : /&lt;%=([\\s\\S]+?)%&gt;/g,\n  escape      : /&lt;%-([\\s\\S]+?)%&gt;/g\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Same issue with JSP, so we do this:</p>\n\n<pre><code>_.templateSettings = {interpolate : /\\{\\{(.+?)\\}\\}/g,      // print value: {{ value_name }}\n                      evaluate    : /\\{%([\\s\\S]+?)%\\}/g,   // excute code: {% code_to_execute %}\n                      escape      : /\\{%-([\\s\\S]+?)%\\}/g}; // excape HTML: {%- &lt;script&gt; %} prints &amp;lt;script&amp;gt;\n</code></pre>\n\n<p>This will allow you to use all the various versions of the tag outputs: interpolation, evaluation and escaping.</p>\n",
                    "is_accepted": true,
                    "score": 21
                }
            ],
            "body": "<p>I've been comparing different JavaScript template engines to see which one gives me the best performance for large sets of data.  One that I ran across is <a href=\"http://documentcloud.github.com/underscore/\">Underscore.js</a>.  However, I haven't been able to get any of the examples working.  My template looks like:</p>\n\n<pre><code>&lt;% _.each(projects(), function(project) { %&gt;\n   &lt;tr&gt;\n      &lt;td&gt;&lt;%= project.code %&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;%= project.request %&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;%= project.stage %&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;%= project.type %&gt;&lt;/td&gt;\n      &lt;td&gt;&lt;%= project.launch %&gt;&lt;/td&gt;\n   &lt;/tr&gt;\n&lt;% }) %&gt;\n</code></pre>\n\n<p>However, when I run the page I get a server-side ASP.NET exception, as it's trying to compile the text within the <code>&lt;% ... %&gt;</code> tags:</p>\n\n<pre><code>Compiler Error Message: CS1026: ) expected\nLine 826:                     &lt;% _.each(projects(), function(project) { %&gt;\n</code></pre>\n\n<p>I was unable to find a way to escape these tags, nor was I able to find a way to configure Underscore to use a different syntax.  Is there a workaround, or are Underscore and ASP.NET simply incompatible with each other?</p>\n",
            "last_activity_date": 1331833268,
            "question_id": 9724921,
            "score": 14,
            "tags": [
                "javascript",
                "asp.net",
                "underscore.js"
            ],
            "title": "Using Underscore.js with ASP.NET"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Well first of all you may want to consider using the \"ready\" event, which you can handler like this:</p>\n\n<pre><code>$().ready(function() {\n  ...\n});\n</code></pre>\n\n<p>Or, more succinctly and idiomatically:</p>\n\n<pre><code>$(function() {\n  ...\n});\n</code></pre>\n\n<p>The \"load\" handler really relates to an actual event, and can be handled on several different sorts of elements: <code>&lt;img&gt;</code> and <code>&lt;iframe&gt;</code> for example.  The \"load\" event at the document or window level happens when all of the page's resources are loaded.  The (synthesized, in some browsers) \"ready\" event however happens when the page DOM is ready but possibly before things like <code>&lt;img&gt;</code> contents.</p>\n\n<p>Another option is to simply put your <code>&lt;script&gt;</code> tags at the very end of the <code>&lt;body&gt;</code> or even after the <code>&lt;body&gt;</code>.  That way the scripts have the entire DOM to work with, but you don't have to worry about any sort of event handling to know that.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p><strong><code>$('document').ready</code></strong> runs the code when the DOM is ready, but not when the page itself has loaded, that is, the site has not been painted and content like images have not been loaded.</p>\n\n<p><strong><code>$(window).load</code></strong> runs the code when the page has been painted and all content has been loaded. This can be helpful when you need to get the size of an image. If the image has no style or width/height, you can't get its size unless you use <code>$(window).load</code>.</p>\n",
                    "is_accepted": true,
                    "score": 27
                }
            ],
            "body": "<p>Recently I saw that you could use either </p>\n\n<pre><code>$('document').ready(function() {\n//Do Code\n});\n</code></pre>\n\n<p>or </p>\n\n<pre><code>$('window').load(function() {\n//Do Code\n});\n</code></pre>\n\n<p>for jQuery.</p>\n\n<p>However, they seem the same to me! But clearly aren't. </p>\n\n<p>So my question is: Which one should I use for a website sort of based on animation and async? And also which one of the two is generally better to use?</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1386747437,
            "question_id": 8562609,
            "score": 14,
            "tags": [
                "javascript",
                "jquery",
                "load",
                "window",
                "document"
            ],
            "title": "Should I use window.load or document.ready jquery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Using <code>getElementById</code> is more flexible and readable. For instance, this won't work:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"direct\" onclick=\"document.innerText = 'direct';\" /&gt;\n&lt;div id=\"document\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>for obvious reasons, but this will:</p>\n\n<pre><code>&lt;input type=\"button\" value=\"getElement\" onclick=\"document.getElementById('document').innerText = 'getElementById'\" /&gt;\n&lt;div id=\"document\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>and it's more clear to other developers what's really going on.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I don't believe it's a documented feature, and it doesn't appear to work in Firefox (6), but it appears to work in the latest version of Chrome, as well as IE 6-9.</p>\n\n<p>I wouldn't rely on it, and would just consider it one of the oddities of browsers features.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Being able to select elements on the page based on their <code>[id]</code> is a \"feature\" from early JavaScript (DOM lvl 0 or 1 methinks, can't seem to find the source).</p>\n\n<p>Unfortunately it's a temperamental feature. What would happen if you had:</p>\n\n<pre><code>&lt;div id=\"window\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>or</p>\n\n<pre><code>&lt;div id=\"document\"&gt;&lt;/div&gt;\n</code></pre>\n\n<p>Better yet, what happens here?</p>\n\n<pre><code>&lt;div id=\"foo\"&gt;&lt;/div&gt;\n&lt;div id=\"bar\"&gt;&lt;/div&gt;\n&lt;script&gt;var foo = document.getElementById('bar');&lt;/script&gt;\n</code></pre>\n\n<p>So the nuances to calling an element based on it's <code>[id]</code> is simply this:</p>\n\n<h1>Don't use it.</h1>\n\n<p>It's not consistent, and not guaranteed to receive future support.</p>\n\n<p>Personally I'd like to see this \"feature\" go the way of <code>document.all</code>. It only causes more issues than it solves, and <code>document.getElementById</code>, while certainly verbose, is meaningful and understandable.</p>\n",
                    "is_accepted": true,
                    "score": 10
                }
            ],
            "body": "<blockquote>\n  <p><strong>Possible Duplicate:</strong><br>\n  <a href=\"http://stackoverflow.com/questions/3434278/ie-chrome-are-dom-tree-elements-global-variables-here\">IE/Chrome: are DOM tree elements global variables here?</a><br>\n  <a href=\"http://stackoverflow.com/questions/6994139/why-windowid-document-getelementbyid-id\">why window[id] === document.getElementById( id )</a>  </p>\n</blockquote>\n\n\n\n<p>I've just come across something in html/javascript which has surprised me a bit. When obtaining a reference to an html element, using javascript, I have always previously used either jQuery or document.getElementById. It also appears that you can directly access a element simply by using it's id. Can someone explain the nuances of this? I've googled but cannot find any reference to this ability, every site talks about getElementById.</p>\n\n<p>The following page snippet illustrates this.</p>\n\n<pre><code>&lt;html&gt;\n&lt;head&gt;\n&lt;/head&gt; \n&lt;body&gt;\n    &lt;input type=\"button\" value=\"getElement\" onclick=\"document.getElementById('blah').innerText = 'getElementById'\" /&gt;\n    &lt;input type=\"button\" value=\"direct\" onclick=\"blah.innerText = 'direct';\" /&gt;\n    &lt;div id=\"blah\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n</code></pre>\n\n<p></p>\n\n<p>Many thanks in advance.</p>\n",
            "last_activity_date": 1409585247,
            "question_id": 7826737,
            "score": 14,
            "tags": [
                "javascript",
                "html"
            ],
            "title": "Directly reference HTML elements"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>The word boundary assertion does only match if a word character is not preceded or followed by another word character (so <code>.\\b.</code> is equal to <code>\\W\\w</code> and <code>\\w\\W</code>). And <code>\\w</code> is defined as <code>[A-Za-z0-9_]</code>. So <code>\\w</code> doesn\u2019t match greek characters. And thus you cannot use <code>\\b</code> for this case.</p>\n\n<p>What you could do instead is to use this:</p>\n\n<pre><code>\"\u03b1\u03b2 \u03b1\u03b2\u03b3 \u03b3\u03b1\u03b2 \u03b1\u03b2 \u03b1\u03b2\".replace(/(^|\\s)\u03b1\u03b2(?=\\s|$)/g, \"$1AB\")\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 14
                },
                {
                    "body": "<p>Not all the implementations of RegEx associated with Javascript engines a unicode aware.</p>\n\n<p>For example Microsofts JScript using in IE is limited to ANSI.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Not all Javascript regexp implementation has support for Unicode ad so you need to escape it</p>\n\n<pre><code>\"\u03b1\u03b2 \u03b1\u03b2\u03b3 \u03b3\u03b1\u03b2 \u03b1\u03b2 \u03b1\u03b2\".replace(/\\u03b1\\u03b2/g, \"AB\"); // \"AB AB\u03b3 \u03b3AB AB AB\"\n</code></pre>\n\n<p>For mapping the characters you can take a look at <a href=\"http://htmlhelp.com/reference/html40/entities/symbols.html\" rel=\"nofollow\">http://htmlhelp.com/reference/html40/entities/symbols.html</a></p>\n\n<p>Of course, this doesn't help with the word boundary issue (as explained in other answers) but should at least enable you to match the characters properly</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>When you\u2019re dealing with Unicode and natural-language words, you probably want to be more careful with boundaries than just using <code>\\b</code>.  See <a href=\"http://stackoverflow.com/questions/4213800/is-there-something-like-a-counter-variable-in-regular-expression-replace/4214173#4214173\">this answer</a> for details and directions.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I needed something to be programmable and handle punctuation, brackets, etc. </p>\n\n<p><a href=\"http://jsfiddle.net/AQvyd/\" rel=\"nofollow\">http://jsfiddle.net/AQvyd/</a></p>\n\n<pre><code>var wordToReplace = '\u8cb7\u3044\u624b',\n    replacementWord = '[[BUYER]]',\n    text = 'Mange \u8cb7\u3044\u624b information. The selected Store and Classification will be the default on the \u0e2a\u0e31\u0e48\u0e07\u0e0b\u0e37\u0e49\u0e2d.'\n\nfunction replaceWord(text, wordToReplace, replacementWord) {\n    var re = new RegExp('(^|\\\\s|\\\\(|\\'|\"|,|;)' + wordToReplace + '($|\\\\s|\\\\)|\\\\.|\\'|\"|!|,|;|\\\\?)', 'gi');\n    return text.replace(re, replacementWord);\n}\n</code></pre>\n\n<p>I've written a javascript resource editor so this is why I've found this page and also answered it out of necessity since I couldn't find a word boundary parametarized regexp that worked well for Unicode.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>In JavaScript:</p>\n\n<pre><code>\"ab abc cab ab ab\".replace(/\\bab\\b/g, \"AB\");\n</code></pre>\n\n<p>correctly gives me:</p>\n\n<pre><code>\"AB abc cab AB AB\"\n</code></pre>\n\n<p>When I use utf-8 characters though:</p>\n\n<pre><code>\"\u03b1\u03b2 \u03b1\u03b2\u03b3 \u03b3\u03b1\u03b2 \u03b1\u03b2 \u03b1\u03b2\".replace(/\\b\u03b1\u03b2\\b/g, \"AB\");\n</code></pre>\n\n<p>the <a href=\"http://www.regular-expressions.info/wordboundaries.html\">word boundary operator</a> doesn't seem to work:</p>\n\n<pre><code>\"\u03b1\u03b2 \u03b1\u03b2\u03b3 \u03b3\u03b1\u03b2 \u03b1\u03b2 \u03b1\u03b2\"\n</code></pre>\n\n<p>Is there a solution to this?</p>\n",
            "last_activity_date": 1363157174,
            "question_id": 2881445,
            "score": 14,
            "tags": [
                "javascript",
                "regex",
                "utf-8",
                "word-boundary"
            ],
            "title": "utf-8 word boundary regex in javascript"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Well, I don't think that there is something like that in js. You can always use eval instead of locals(). Like this: </p>\n\n<pre><code>eval(s+\"()\");\n</code></pre>\n\n<p>You just have to know that actually function <em>foo</em> exists.</p>\n\n<p><strong>Edit:</strong></p>\n\n<p>Don't use eval:) Use:</p>\n\n<pre><code>var functionName=\"myFunctionName\";\nwindow[functionName]();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>AFAIK, no. If you just want to check the existence of a given variable, you can do it by testing for it, something like this:</p>\n\n<pre><code>if (foo) foo();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I seem to remember Brendan Eich commented on this in a recent podcast; if i recall correctly, it's not being considered, as it adds unreasonable restrictions to optimization. He compared it to the <code>arguments</code> local in that, while useful for varargs, its very existence removes the ability to guess at what a function will touch just by looking at its definition. </p>\n\n<p>BTW: i believe JS <em>did</em> have support for accessing locals through the arguments local at one time - <a href=\"http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Functions/arguments\" rel=\"nofollow\">a quick search</a> shows this has been deprecated though.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>@e-bartek, I think that window[functionName] won't work if you in some closure, and the function name is local to that closure.  For example:</p>\n\n<pre><code>function foo() {\n    var bar = function () {\n        alert('hello world');\n    };\n    var s = 'bar';\n    window[s](); // this won't work\n}\n</code></pre>\n\n<p>In this case, s is 'bar', but the function 'bar' only exists inside the scope of the function 'foo'.  It is not defined in the window scope.</p>\n\n<p>Of course, this doesn't really answer the original question, I just wanted to chime in on this response.  I don't believe there is a way to do what the original question asked.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>@pkaeding</p>\n\n<p>Yes, you're right. <em>window[functionName]()</em> doesn't work in this case, but <em>eval</em> does. If I needed something like this, I'd create my own object to keep those functions together.</p>\n\n<pre><code>var func = {};\nfunc.bar = ...;\nvar s = \"bar\";\nfunc[s]();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<ul>\n<li><p>locals() - No. </p></li>\n<li><p>globals() - Yes.</p></li>\n</ul>\n\n<p><code>window</code> is a reference to the global scope, like <code>globals()</code> in python.</p>\n\n<pre><code>globals()[\"foo\"]\n</code></pre>\n\n<p>is the same as:</p>\n\n<pre><code>window[\"foo\"]\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>In python one can get a dictionary of all local and global variables in the current scope with the built-in functions locals() and globals().  Is there some equivalent way of doing this in javascript?  For instance, I would like to do something like the following:</p>\n\n<pre><code>var foo = function(){ alert('foo'); };\nvar bar = function(){ alert('bar'); };\n\nvar s = 'foo';\nlocals()[s](); // alerts 'foo'\n</code></pre>\n\n<p>Is this at all possible, or should I just be using a local object for the lookup?</p>\n",
            "last_activity_date": 1220378489,
            "question_id": 39960,
            "score": 14,
            "tags": [
                "javascript",
                "python"
            ],
            "title": "javascript locals()?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>You can't validate HTML with Javascript, because Javascript is loaded from within the HTML, which means the HTML is already rendered by the browser, which means all you can see with Javascript is the dom tree. The dom tree is built by the browser, but renders with and 'fixes' invalidations.</p>\n\n<p>In short: What you need to validate HTML, is the HTML source. Javascript has access to the DOM, but not to the source.</p>\n\n<p><strong>edit</strong><br>\nAnd immediately after posting, I'm thinking... You don't mean validating its own page =) You just want to validate a string with a javascript... So ignore this =)</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>No, there isn't one. However I am writing one: <a href=\"https://github.com/peterjwest/html_validator\" rel=\"nofollow\">https://github.com/peterjwest/html_validator</a></p>\n",
                    "is_accepted": true,
                    "score": 3
                }
            ],
            "body": "<p>I want to know if there's an existing Javascript library for validating HTML, preferably not one that relies on a web API.</p>\n\n<p>The closest I've found to this is <a href=\"http://ejohn.org/blog/pure-javascript-html-parser/\">John Resig's HTML parser</a>, but that seems to be more about fixing HTML and converting it to XML.</p>\n\n<p>So is there something out there already? And if not, how difficult (and lengthy) would it be to adapt John Resig's parser?</p>\n",
            "last_activity_date": 1376672332,
            "question_id": 5809563,
            "score": 13,
            "tags": [
                "javascript",
                "html",
                "validation"
            ],
            "title": "Is there a pure Javascript X/HTML validator?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Your problem is that the following line of code will always evaluate to true.</p>\n\n<pre><code>if('#forgot_pw')\n</code></pre>\n\n<p>try replacing with</p>\n\n<pre><code>if($('#forgot_pw').attr('disabled'))\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>All good used this:</p>\n\n<pre><code>$('#WindowOpen').toggle(\n    function()\n    {\n        $('#login_uname, #login_pass').attr(\"disabled\",\"disabled\");     \n    },\n    function()\n    {\n        $('#login_uname, #login_pass').removeAttr(\"disabled\");      \n    });\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<pre><code>$('#forgot_pw').attr('disabled', false);\n</code></pre>\n\n<p>should work for you.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I can't seem to get <code>removeAttr</code> to work, I'm using the example I saw on the jQuery site. Basically <code>onclick</code> I add the attribute to disable a field (which works just fine) but when the user clicks again it should enable the field in question. I used alerts to make sure the else block is being fired, so I know that's not it.</p>\n\n<p>Code:</p>\n\n<pre><code>$('#WindowOpen').click(function (event) {\n  event.preventDefault();\n  $('#forgot_pw').slideToggle(600);\n\n  if('#forgot_pw') {\n    $('#login_uname, #login_pass').attr('disabled','disabled');\n  } else {\n    $('#login_uname, #login_pass').removeAttr('disabled');\n  }\n});\n</code></pre>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1290099920,
            "question_id": 1785071,
            "score": 13,
            "tags": [
                "javascript",
                "jquery",
                "attributes"
            ],
            "title": "jQuery remove attribute"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Are you testing this on a local HTML file? i.e. a <code>file:///</code> URL?</p>\n\n<p>localStorage is only available on HTTP websites. That hasn't changed in IE9 Dev Preview.</p>\n",
                    "is_accepted": true,
                    "score": 31
                },
                {
                    "body": "<p>Try to open the file like this</p>\n\n<p>file://127.0.0.1/c$/pathtofile/file.html</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm using localStorage in my JS application and I was wondering why IE9 claims <code>localStorage == undefined</code>. As far as I know, IE8 supports it, is here any way to get it working in the new version?</p>\n",
            "last_activity_date": 1377891702,
            "question_id": 3392032,
            "score": 12,
            "tags": [
                "javascript",
                "local-storage",
                "internet-explorer-9"
            ],
            "title": "localStorage object is undefined in IE"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>What watch is really designed for is validation of property values.  For example you could validate that something is an integer:</p>\n\n<pre><code>obj.watch('count', function(id, oldval, newval) {\n    var val = parseInt(newval, 10);\n    if(isNaN(val)) return oldval;\n    return val;\n});\n</code></pre>\n\n<p>You could use it to validate string length:</p>\n\n<pre><code>obj.watch('name', function(id, oldval, newval) {\n    return newval.substr(0, 20);\n});\n</code></pre>\n\n<p><strong>However, these are only available in the latest versions of the SpiderMonkey javascript engine.</strong>  Great if you are using Jaxer or embedding the SpiderMonkey engine, but not really available in your browser yet (unless you are using FF3).</p>\n",
                    "is_accepted": true,
                    "score": 5
                },
                {
                    "body": "<p>Check out Object.defineProperty<br>\n<a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object/defineProperty\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Object/defineProperty</a><br>\nand<br>\nObject.prototype._<em>defineGetter</em>_ (or _<em>defineSetter</em>_ )<br>\n<a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Creating_New_Objects/Defining_Getters_and_Setters\">https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Creating_New_Objects/Defining_Getters_and_Setters</a><br>\nto see where this functionality is heading. </p>\n\n<p>Object.defineProperty should be available in all contemporary browsers real soon now.</p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>Going through javascript documentation, I found the following two functions on a javascript object looks interesting:</p>\n\n<p><strong>Watch</strong> - Watches for a property to be assigned a value and runs a function when that occurs.<br/>\n<strong>Unwatch</strong> - Removes a watchpoint set with the watch method.</p>\n\n<p>Sample usage:</p>\n\n<pre><code>o = {p:1};\no.watch(\"p\",\n   function (id,oldval,newval) {\n      document.writeln(\"o.\" + id + \" changed from \" + oldval + \" to \" + newval)\n      return newval;\n   })\n</code></pre>\n\n<p>Whenever we change the property value of \"p\",this function gets triggered.<br/></p>\n\n<pre><code>o.p = 2;   //print \"o.p changed from 1 to 2\"\n</code></pre>\n\n<p>I am working on javascript for the fast few years and never used these functions.<br/>\nCan some one please throw some good use cases where these functions will come handy?</p>\n",
            "last_activity_date": 1321345247,
            "question_id": 1063813,
            "score": 12,
            "tags": [
                "javascript",
                "browser",
                "javascript-events"
            ],
            "title": "Listener for property value changes in a javascript object"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Have you tried this?</p>\n\n<pre><code>history.navigationMode = 'compatible';\n</code></pre>\n\n<p><a href=\"http://www.opera.com/support/kb/view/827/\" rel=\"nofollow\">Reference</a>, found via <a href=\"http://www.quirksmode.org/bugreports/archives/2004/11/load_and_unload.html\" rel=\"nofollow\">this page</a></p>\n\n<p>I haven't actually tried it myself, but it looks promising.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Opera does not support window.onbeforeunload at the moment. It will be supported in some future version, but has not been a sufficiently high priority to get implemented as of Opera 11.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>Mobile Safari (iPhone/iPad) also doesn't support onbeforeunload, and I strongly suspect it is not likely to.</p>\n\n<p>For detecting back/forward navigation there may be workarounds e.g. see <a href=\"http://stackoverflow.com/questions/6205989/is-there-an-alternative-method-to-use-onbeforeunload-in-mobile-safari\">Is there an alternative method to use onbeforeunload in mobile safari?</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>onbeforeunload</code> is now supported in Opera 15 based on the WebKit engine but not in any prior versions based on Presto.</p>\n",
                    "is_accepted": true,
                    "score": 2
                }
            ],
            "body": "<p>I'm using the code that netadictos posted to the question <a href=\"http://stackoverflow.com/questions/333665/\">here</a>.  All I want to do is to display a warning when a user is navigating away from or closing a window/tab.</p>\n\n<p>The code that netadictos posted seems to work fine in IE7, FF 3.0.5, Safari 3.2.1, and Chrome but it doesn't work in Opera v9.63.  Does anyone know of way of doing the same thing in Opera?</p>\n\n<p>Thx, Trev</p>\n",
            "last_activity_date": 1372867177,
            "question_id": 390260,
            "score": 12,
            "tags": [
                "javascript",
                "events",
                "opera",
                "onbeforeunload"
            ],
            "title": "onbeforeunload in Opera"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>I do not believe there is a built in for this.  You'll need to bind handlers to the 'jqplotDataHighlight' and 'jqplotDataUnhighlight' events.  See the example on the bottom of this <a href=\"http://www.jqplot.com/tests/bubble-plots.php\" rel=\"nofollow\">page</a>.  This is doing it with bubble plots, but it should translate to pie plots as well.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I'm using the latest version of jqPlot and got the tooltips to work by just using the following inside \"seriesDefaults\" section:</p>\n\n<pre><code>highlighter: {\n  show: true,\n  formatString:'%s', \n  tooltipLocation:'sw', \n  useAxesFormatters:false\n}\n</code></pre>\n\n<p>The important part is \"useAxesFormatters: false\" since there are no axes in a pie chart. Feel free to change the \"formatString\" to whatever it is you want to, but for me, just \"%s\" shows the exact same string which shows up in the legends.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>You need to bind the jqplot data highligh and unhighligh events, grab the data you want to show and set the chart containing div's title attribute.</p>\n\n<p>The following code shows the title in the format of \"x: y\", where x is the legend label and y is the value:</p>\n\n<pre><code> var plot = $.jqplot('plotDivId',...);\n\n $(\"#plotDivId\").bind('jqplotDataHighlight', function(ev, seriesIndex, pointIndex, data) {\n            var $this = $(this);                \n\n            $this.attr('title', data[0] + \": \" + data[1]);                               \n        }); \n\n $(\"#plotDivId\").bind('jqplotDataUnhighlight', function(ev, seriesIndex, pointIndex, data) {\n            var $this = $(this);                \n\n            $this.attr('title',\"\"); \n });\n</code></pre>\n\n<p>This piece of code is being used in my system which works with no problem.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I am using the version of the highlighter plugin on the following link:</p>\n\n<p><a href=\"https://github.com/tryolabs/jqplot-highlighter\">https://github.com/tryolabs/jqplot-highlighter</a></p>\n\n<p>The parameters I am using:</p>\n\n<pre><code>highlighter: {\n    show:true,\n    tooltipLocation: 'n',\n    tooltipAxes: 'pieref', // exclusive to this version\n    tooltipAxisX: 20, // exclusive to this version\n    tooltipAxisY: 20, // exclusive to this version\n    useAxesFormatters: false,\n    formatString:'%s, %P',\n}\n</code></pre>\n\n<p>The new parameters ensure a fixed location where the tooltip will appear. I prefer to place it on the upper left corner to avoid problems with resizing the container div.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>As I couldn't get the Highlighter to work - it did not display anything for me on the pie chart - I ended up with the solution to display a browser tooltip based on the highligter event.</p>\n\n<pre><code>var plot1 = jQuery.jqplot ('chart1', [data], {\nseriesDefaults: {\n    renderer: jQuery.jqplot.PieRenderer\n    }\n}\n);\n\n$('#chart1').bind('jqplotDataHighlight', function (ev, seriesIndex, pointIndex, data) { \n    document.getElementById('chart1').title = data;\n    //alert('series: '+seriesIndex+', point: '+pointIndex+', data: '+data);\n    }); \n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a jqplot pie chart with a legend and I would like to get the legend text to appear as a tooltip when the mouse hovers on the pies.  I'm not sure how to do that.  Does anyone have any experience doing similar?</p>\n\n<p>example code:</p>\n\n<pre><code>$(document).ready(function(){\n  var data = [['Heavy Industry', 12],['Retail', 9], ['Light Industry', 14],['Out of home', 16],['Commuting', 7], ['Orientation', 9]];\n  var plot1 = jQuery.jqplot ('chart1', [data],\n    {\n      seriesDefaults: {\n        renderer: jQuery.jqplot.PieRenderer,\n        rendererOptions: {\n          showDataLabels: true\n        }\n      },\n      legend: { show:true, location: 'e' }\n    }\n  );\n});\n</code></pre>\n",
            "last_activity_date": 1415363150,
            "question_id": 8209474,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "charts",
                "tooltip",
                "jqplot"
            ],
            "title": "How to display tooltips on jqplot pie chart"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>My tests show that all major newer browsers cache the length property of arrays. You don't need to cache it yourself unless you're concerned about IE6 or 7, I don't remember exactly. However, I have been using another style of iteration since those days since it gives me another benefit which I'll describe in the following example:</p>\n\n<pre><code>var arr = [\"Hello\", \"there\", \"sup\"];\nfor (var i=0, str; str = arr[i]; i++) {\n  // I already have the item being iterated in the loop as 'str'\n  alert(str);\n}\n</code></pre>\n\n<p>You must realize that this iteration style stops if the array is allowed to contain 'falsy' values, so this style cannot be used in that case.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It depends on a few things:</p>\n\n<ul>\n<li>Whether you've proven your code is spending significant time looping</li>\n<li>Whether the slowest browser you're fully supporting benefits from array length caching</li>\n<li>Whether you or the people who work on your code find the array length caching hard to read</li>\n</ul>\n\n<p>It seems from the benchmarks I've seen (for example, <a href=\"http://www.erichynds.com/javascript/javascript-loop-performance-caching-the-length-property-of-an-array/\">here</a> and <a href=\"http://jsperf.com/caching-array-length/15\">here</a>) that performance in IE &lt; 9 (which will generally be the slowest browsers you have to deal with) benefits from caching the array length, so it may be worth doing. For what it's worth, I have a long-standing habit of caching the array length and as a result find it easy to read. There are also other loop optimizations that can have an effect, such as counting down rather than up.</p>\n\n<p>Here's a relevant discussion about this from the JSMentors mailing list: <a href=\"http://groups.google.com/group/jsmentors/browse_thread/thread/526c1ddeccfe90f0\">http://groups.google.com/group/jsmentors/browse_thread/thread/526c1ddeccfe90f0</a></p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>First of all, how is this harder to do or less legible?</p>\n\n<pre><code>var i = someArray.length;\nwhile(i--){\n    //doStuff to someArray[i]\n}\n</code></pre>\n\n<p>This is not some weird cryptic micro-optimization. It's just a basic work avoidance principle. Not using the '.' or '[]' operators more than necessary should be as obvious as not recalculating pi more than once (assuming you didn't know we already have that in the Math object).</p>\n\n<p>[rantish elements yoinked]</p>\n\n<p>If someArray is entirely internal to a function it's fair game for JIT optimization of its length property which is really like a getter that actually counts up the elements of the array every time you access it. A JIT could see that it was entirely locally scoped and skip the actual counting behavior.</p>\n\n<p>But this involves a fair amount of complexity. Every time you do anything that mutates that Array you have to treat length like a static property and tell your array altering methods (the native code side of them I mean) to set the property manually whereas normally length just counts the items up every time it's referenced. That means every time a new array-altering method is added you have to update the JIT to branch behavior for length references of a locally scoped array.</p>\n\n<p>I could see Chrome doing this eventually but I don't think it is yet based on some really informal tests. I'm not sure IE will ever have this level of performance fine-tuning as a priority. As for the other browsers, you could make a strong argument for the maintenance issue of having to branch behavior for every new array method being more trouble than its worth. At the very least, it would not get top priority.</p>\n\n<p>Ultimately, accessing the length property every loop cycle isn't going to cost you a ton even in the old browsers for a typical JS loop. But I would advise getting in the habit of caching any property lookup being done more than once because with getter properties you can never be sure how much work is being done, which browsers optimize in what ways or what kind of performance costs you could hit down the road when somebody decides to move someArray outside of the function which could lead to the call object checking in a dozen places before finding what it's looking for every time you do that property access.</p>\n\n<p>Caching property lookups and method returns is easy, cleans your code up, and ultimately makes it more flexible and performance-robust in the face of modification. Even if one or two JITs did make it unnecessary in circumstances involving a number of 'ifs', you couldn't be certain they always would or that your code would continue to make it possible to do so.</p>\n\n<p>So yes, apologies for the anti-let-the-compiler-handle-it rant but I don't see why you would ever want to not cache your properties. It's easy. It's clean. It guarantees better performance regardless of browser or movement of the object having its property's examined to an outer scope.</p>\n\n<p>But it really does piss me off that Word docs load as slowly now as they did back in 1995 and that people continue to write horrendously slow-performing java websites even though Java's VM supposedly beats all non-compiled contenders for performance. I think this notion that you can let the compiler sort out the performance details and that \"modern computers are SO fast\" has a lot to do with that.  We should always be mindful of work-avoidance, when the work is easy to avoid and doesn't threaten legibility/maintainability, IMO. Doing it differently has never helped me (or I suspect anybody) write the code faster in the long term.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I find the practice of caching an array's <code>length</code> property inside a <code>for</code> loop quite distasteful. As in,</p>\n\n<pre><code>for (var i = 0, l = myArray.length; i &lt; l; ++i) {\n    // ...\n}\n</code></pre>\n\n<p>In my eyes at least, this hurts readability a lot compared with the straightforward </p>\n\n<pre><code>for (var i = 0; i &lt; myArray.length; ++i) {\n    // ...\n}\n</code></pre>\n\n<p>(not to mention that it leaks another variable into the surrounding function due to the nature of lexical scope and hoisting.)</p>\n\n<p>I'd like to be able to tell anyone who does this \"don't bother; modern JS JITers optimize that trick away.\" Obviously it's not a trivial optimization, since you could e.g. modify the array while it is being iterated over, but I would think given all the crazy stuff I've heard about JITers and their runtime analysis tricks, they'd have gotten to this by now.</p>\n\n<p>Anyone have evidence one way or another?</p>\n\n<p><sub>And yes, I too wish it would suffice to say \"that's a micro-optimization; don't do that until you profile.\" But not everyone listens to that kind of reason, especially when it becomes a habit to cache the length and they just end up doing so automatically, almost as a style choice.</sub></p>\n",
            "last_activity_date": 1348677122,
            "question_id": 6261953,
            "score": 11,
            "tags": [
                "javascript",
                "optimization",
                "loops",
                "jit"
            ],
            "title": "Do modern JavaScript JITers need array-length caching in loops?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I believe something like this would work: </p>\n\n<pre><code>var timeout, clicker = $('#clicker');\n\nclicker.mousedown(function(){\n    timeout = setInterval(function(){\n        // Do something continuously \n    }, 500);\n\n    return false;\n});\n\n$(document).mouseup(function(){\n    clearInterval(timeout);\n    return false;\n});\n</code></pre>\n\n<p><strong>See this demo: <a href=\"http://jsfiddle.net/8FmRd/\">http://jsfiddle.net/8FmRd/</a></strong></p>\n",
                    "is_accepted": true,
                    "score": 22
                },
                {
                    "body": "<p>A small modification to the original answer:</p>\n\n<pre><code>$('#Clicker').mousedown(function () {\n    //do something here\n    timeout = setInterval(function () {\n        //do same thing here again\n    }, 500);\n\n    return false;\n});\n$('#Clicker').mouseup(function () {\n    clearInterval(timeout);\n    return false;\n});\n$('#Clicker').mouseout(function () {\n    clearInterval(timeout);\n    return false;\n});\n</code></pre>\n\n<p>With the mouseout event on the Clicker it stops when you move your mouse out of the click area.</p>\n\n<p>The reason why I suggest to do the same thing twice is to get a smoother effect. If you don't do it once before the timeout is set it will be a delay of, in this case, 500ms before something happens.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>I need a function that executes a function while a button is pressed and stops executing when the button is let go</p>\n\n<pre><code>$('#button').--while being held down--(function() {\n     //execute continuously\n}); \n</code></pre>\n",
            "last_activity_date": 1328402922,
            "question_id": 3977091,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "mouse",
                "click"
            ],
            "title": "Jquery: mousedown effect (while left click is held down)"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>Unfortunately, <strike><a href=\"http://infinity-infinity.com/2009/06/sniffing-browser-history-with-css/\" rel=\"nofollow\">this is possible</a></strike> <a href=\"http://web.archive.org/web/20110815093146/http://infinity-infinity.com/2009/06/sniffing-browser-history-with-css/\" rel=\"nofollow\">this is possible</a>.</p>\n\n<p>You can apply a CSS rule to <code>a:visited</code> that has a background image for a PHP script.</p>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<p>You used to be able to do it (with JavaScript and the CSS psuedo class <code>:visited</code>), but <a href=\"http://hacks.mozilla.org/2010/03/privacy-related-changes-coming-to-css-vistited/\" rel=\"nofollow\">browsers have fixed that exploit</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>Yes of course! simply ask the other site if you can pop a script on their site which passes your system the information needed ;)</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>There is a hack that allows you to do this, but you won't be able to do it deterministically for all browsers as they may try to hide this information. Also, you will not be able to determine that on the server side, but only through the client side. The idea is to manipulate the stylesheet of visited links as @SLaks already states while I was typing :).</p>\n\n<p>Let's say if you were interested in finding out if a site user has visited google.com. Then insert a link to google into your page, and set a unique style for visited links, the effects of which are known beforehand. In the case below, visited links will be colored with <code>#012345</code>.</p>\n\n<pre><code>&lt;style&gt;\na:visited {\n    color: #012345;\n}\n&lt;/style&gt;\n\n&lt;a href=\"http://www.google.com\"&gt;&lt;/a&gt;\n&lt;a href=\"http://www.amazon.com\"&gt;&lt;/a&gt;\n</code></pre>\n\n<p>Then go through each link you have inserted into the page, and get it's color. If it's <code>#012345</code> for the above example, then the user has visited that link. You can't actually access their history to know which sites they visited, however. It's more of a polling process.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>If you don't mind probabilistic answers, you can time how long it takes to do DNS lookups on the hosts in question. If the DNS answer comes back very quickly, then they might have done a DNS request for that host recently. If the DNS answer comes back slower, then they might not have done a DNS request for that host recently. Of course, my cable modem is going to be giving much faster results than CDMA or GSM phones, so it might only be useful if you're comparing several sites on a single machine.</p>\n\n<p><strong>Edit</strong>, in response to Alex's point about ISP DNS caching:</p>\n\n<p>For example: With a local DNS cache, my initial queries for domains took an average 1.6 seconds. (I assume because the cache was very cold, and needed to find .com, .co.uk, and .co.jp nameservers.) Hot-cache queries averaged 0.006 seconds. My DNS cache is a recursive resolver, so it does not use my ISP's caching resolvers.</p>\n\n<p>Without using my local DNS cache and using the DNS cache on my cute router, my initial queries averaged .910 seconds and hot-cache queries averaged .514 seconds. I don't know if the .4 seconds saved are from my router's DNS caching or my ISP's caching. But even .4 seconds should be visible in Javascript.</p>\n\n<p>There is enough data to make some guesses: if the time for the first and second attempts to resolve the domain name are similar, you can assume the cache was hot and the address had been used recently. (Perhaps hot at the ISP level, but this was marketed as a <em>probabilistic</em> method in any event. :) If the times are dissimilar, you can assume the cache was cold.</p>\n\n<p>When using my ISP's DNS, I guessed nine 'hot' domains and nine 'cold' domains, and the average lookup time for hot was .226 seconds, and the average lookup time for cold was .308 seconds. The difference of .082 seconds might not be large enough to notice in javascript, and it definitely pales in comparison to the differences between known-hot and known-cold lookups using a local cache or my cute little router for DNS.</p>\n\n<p>Of course 'hot' and 'cold' are relative to the TTL for each individual domain.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Yep,  <a href=\"http://ha.ckers.org/weird/CSS-history-hack.html\" rel=\"nofollow\">try this out</a>.  The CSS history hack works well.  Currently firefox recognizes this as a vulnerability and they are working on a patch.  Other browsers don't care.  Its a safe bet that IE and Safari will <strong>never</strong> fix it. </p>\n",
                    "is_accepted": false,
                    "score": -1
                }
            ],
            "body": "<p>I want to check if my site's visitors have visited another particular site before coming to mine.</p>\n\n<p>I know how to use JS and PHP to check to see (via referrer info) if the user has just come from that site to mine, but I would like to be able to detect if they have visited this site at any time before (not just immediately before coming to my site). Can this information be detected?</p>\n",
            "last_activity_date": 1404533253,
            "question_id": 3277913,
            "score": 11,
            "tags": [
                "php",
                "javascript"
            ],
            "title": "Is it possible to detect a visitor&#39;s browsing history using JavaScript or PHP?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>it can be done with CURL or AJAX. The response is equally cryptic as the answer.</p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>How to do it without using cURL with straight-up PHP: <a href=\"http://netevil.org/blog/2006/nov/http-post-from-php-without-curl\" rel=\"nofollow\">http://netevil.org/blog/2006/nov/http-post-from-php-without-curl</a></p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>You could use JavaScript and XMLHTTPRequest (AJAX) to perform a POST without using a form. Check <a href=\"http://www.openjs.com/articles/ajax%5Fxmlhttp%5Fusing%5Fpost.php\">this link</a> out. Keep in mind that you will need JavaScript enabled in your browser though.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>cURL is an option, using Ajax as well eventhough solving back-end problems with the front-end isn't so neat.</p>\n\n<p>A very useful post about doing it without cURL is this one: <a href=\"http://netevil.org/blog/2006/nov/http-post-from-php-without-curl\" rel=\"nofollow\">http://netevil.org/blog/2006/nov/http-post-from-php-without-curl</a></p>\n\n<p>The code to do this (untested, unimproved, from the blog post):</p>\n\n<pre><code>function do_post_request($url, $data, $optional_headers = null)\n{\n   $params = array('http' =&gt; array(\n                'method' =&gt; 'POST',\n                'content' =&gt; $data\n             ));\n   if ($optional_headers !== null) {\n      $params['http']['header'] = $optional_headers;\n   }\n   $ctx = stream_context_create($params);\n   $fp = @fopen($url, 'rb', false, $ctx);\n   if (!$fp) {\n      throw new Exception(\"Problem with $url, $php_errormsg\");\n   }\n   $response = @stream_get_contents($fp);\n   if ($response === false) {\n      throw new Exception(\"Problem reading data from $url, $php_errormsg\");\n   }\n   return $response;\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Using <a href=\"http://docs.jquery.com/Ajax/jQuery.post\">jQuery.post</a></p>\n\n<pre><code>$.post(\n  \"http://theurl.com\",\n  { key1: \"value1\", key2: \"value2\" },\n  function(data) {\n    alert(\"Response: \" + data);\n  }\n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 14
                },
                {
                    "body": "<p>If you're trying to link to something, rather than do it from code you can redirect your request through: <a href=\"http://getaspost.appspot.com/\" rel=\"nofollow\">http://getaspost.appspot.com/</a>  </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to post parameters to a URL using the POST method but I cannot use a form. Even if I do use a form, it would have to be auto-posted with out user interaction. Is this possible? How can I do this?</p>\n",
            "last_activity_date": 1291399886,
            "question_id": 1244308,
            "score": 11,
            "tags": [
                "javascript",
                "forms",
                "post"
            ],
            "title": "Posting parameters to a url using the POST method without using a form"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>How about adding it after the last div.</p>\n\n<pre><code>$('.a_type:last').insertAfter('&lt;div class=\"a_type\"&gt;content&lt;/div&gt;');\n</code></pre>\n\n<p><b>edit</b><br>\nYou can get the information through a AJAX call to somefile.php, somefile should then return the content you want in the div:</p>\n\n<pre><code>$.get('path/to/somefile.php', function(data){\n $('.a_type:last').insertAfter('&lt;div class=\"a_type\"&gt;' + data + '&lt;/div&gt;');\n});\n</code></pre>\n\n<p>Somefile.php should be something like this:</p>\n\n<pre><code>&lt;?php\n session_start();\n $sessiondata = $_SESSION['data'];\n echo \"Whatever you type here will come inside the div bla bla $sessiondata\";\n?&gt;\n</code></pre>\n\n<p><b>edit</b><br>\nOkay, try this:</p>\n\n<pre>\njQuery(function(){ // Add Answer\n\njQuery(\".add_answer\").click(function(){\n  if(count >= \"4\"){\n    alert('Only 4 Answers Allowed');\n    }else{\n  var count = $(this).attr(\"alt\");\n  count++;\n  $('.a_type_'+count-1+'').insertAfter(' \n       Place content back here');\n  $(this).attr(\"alt\", count);\n}\n\n});\n\n});\n</pre>\n\n<p>Just mix in the AJAX if you still need it.</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<blockquote>\n  <p>I have another function that removes the inserted div's if a button is clicked. It's not working now that the additional divs are not loaded into the dom on pageload. How can i trigger the function to remove these now?</p>\n</blockquote>\n\n<p>You have three options to solve your most recent problem.</p>\n\n<ol>\n<li><p>You could use <a href=\"http://brandonaaron.net/jquery/plugins/livequery/\" rel=\"nofollow\">liveQuery</a>, a jQuery plugin which re-applies event handlers to DOM elements when they are added. Note: this plugin will only be effective if you're using native jQuery DOM appending/prepending functions (append/prepend/after/before/insertBefore/insertAfter etc.).</p></li>\n<li><p>Alternatively you could simply re-apply the handlers when new elements are added, manually... (not the best option)</p></li>\n<li><p>The third, and in my opinion the best option is to utilise the awesome power of event delegation. What you do is attach an event handler to any parent, for example if you're going to be dynamically adding list-items to an unordered list, instead of continually re-applying event handlers to each added item you could simply attach the event handler to the parent and then find the target of the event:</p>\n\n<pre><code>$('ul').click(function(e){\n    var target = e ? e.target : window.event.srcElement;\n    if(target.nodeName.toLowerCase() === 'li') {\n        // Do Stuff...\n    }\n})\n</code></pre></li>\n</ol>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I have a funciton that I am currently using to show a hidden div.a_type</p>\n\n<p>How can I modify this code so that instead of fading in the hidden div,\nI can add the new div to the DOM</p>\n\n<pre>\njQuery(function(){   // Add Answer\n\n    jQuery(\".add_answer\").click(function(){\n      if(count >= \"4\"){\n        alert('Only 4 Answers Allowed');\n        }else{\n      var count = $(this).attr(\"alt\");\n      count++;\n      $(this).parents('div:first').find('.a_type_'+count+'').fadeIn();\n      $(this).attr(\"alt\", count);\n    }\n\n    }); \n\n});\n</pre>\n\n<hr>\n\n<p>Ok, now that i have this sorted out, i have one more question,</p>\n\n<p>I have another function that removes the inserted div's if a button is clicked.\nIt's not working now that the additional divs are not loaded into the dom on pageload.\nHow can i trigger the function to remove these now?</p>\n\n<p>jQuery(function(){   // Hide Answer</p>\n\n<pre><code>jQuery(\".destroy_answer\").click(function(){\n  $(this).parents(\"div:first\").fadeOut(function (){ $(this).remove() });\n   var count = $(this).parents('div:first').parents('div:first').find('.add_answer').attr(\"alt\");\n   count--;\n   $(this).parents('div:first').parents('div:first').find('.add_answer').attr(\"alt\", count);\n\n}); \n</code></pre>\n\n<p>});</p>\n",
            "last_activity_date": 1314038295,
            "question_id": 395525,
            "score": 11,
            "tags": [
                "javascript",
                "jquery",
                "dom"
            ],
            "title": "How do I add a DOM element with jQuery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>No, there isn't a way to do this.</p>\n\n<p>This is a common question from developers who are coming to javascript from another language, where <strong>operators can be defined or overridden</strong> for a certain type.</p>\n\n<p>In C++, it's not entirely out of the question to overload operator* on <em>myType</em>, ending up with a unique asterisk operator for operations involving objects of type <em>myType</em>.  The readability of this practice might still be called into question, but the language affords for it, nevertheless.</p>\n\n<p>In javascript, this is simply not possible.  You will not be able to define a method which allows you to index chars from a String using brackets.</p>\n\n<p><em>@Lee Kowalkowski</em> brings up a good point, namely that it is, in a way, <em>possible</em> to access characters using the brackets, because the brackets can be used to access members of a javascript Array.  This would involve creating a new Array, using each of the characters of the string as its members, and then accessing the Array.</p>\n\n<p>This is probably a confusing approach.  Some implementations of javascript will provide access to a string via the brackets and some will not, so it's not standard practice.  The object may be confused for a string, and as javascript is a loosely typed language, there is already a risk of misrepresenting a type.  Defining an array solely for the purposes of using a different syntax from what the language already affords is only gong to promote this type of confusion.  This gives rise to <em>@Andrew Hedges</em>' question: \"Why fight the language?\"..</p>\n\n<p>There are <strong>useful patterns in javascript</strong> for <strong>legitimate function overloading</strong> and <strong>polymorphic inheritance</strong>.  This isn't an example of either.  </p>\n\n<p>All semantics aside, the operators still haven't been overridden.</p>\n\n<p><strong>Sidenote:</strong> Developers who are accustomed to the conventions of strong type checking and classical inheritance are sometimes confused by javascript's C-family syntax.  Under the hood, it is working in an unfamiliar way.  It's best to write javascript in clean and unambiguous ways, in order to prevent confusion.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p><strong>Please note:</strong> Before anybody <em>else</em> would like to vote my answer down, the question I answered was:</p>\n\n<blockquote>\n  <p><strong>IE javascript string indexers</strong></p>\n  \n  <p>is there some way I can define string[int] to avoid using string.CharAt(int)?\"</p>\n</blockquote>\n\n<p>Nothing about specifically overriding brackets, or syntax, or best-practice, the question just asked for \"some way\".  (And the only other answer said \"No, there isn't.\")</p>\n\n<p><hr /></p>\n\n<p>Well, there is actually, kind of:</p>\n\n<pre><code>var newArray = oldString.split('');\n</code></pre>\n\n<p>...now you can access newArray using bracket notation, because you've just converted it to an array.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p><strong>Use <a href=\"https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/String/charAt\" rel=\"nofollow\">String.charAt()</strong></a></p>\n\n<p>It's <strong>standard</strong> and <strong>works in all browsers</strong>.</p>\n\n<p>In non-IE browsers you can use bracket notation to access characters like this:</p>\n\n<pre><code>\"TEST\"[1]; // = E\n</code></pre>\n\n<p>You could convert a string into an array of characters doing this:</p>\n\n<pre><code>var myString = \"TEST\";\nvar charArray = myString.split(''); // charArray[1] == E\n</code></pre>\n\n<p>These would be discouraged.  There isn't any reason not to use the charAt() method, and there is no benefit to doing anything else.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>This is not an answer, just a trick (strongly deprecated!). It shows, in particular, that in Javascript you can do whatever you want. It's just a matter of your fantasy.</p>\n\n<p>You can use a fact that you can set any additional properties to String Object like to all others, so you can create String.0, String.1, ... properties:</p>\n\n<pre><code>String.prototype.toChars = function()  {\n    for (var i=0; i&lt;this.length; i++) {\n        this[i+\"\"] = this.charAt(i);\n    }\n};\n</code></pre>\n\n<p>Now you can access single characters using:</p>\n\n<pre><code>var str = \"Hello World\";\nstr.toChars();\nvar i = 1+\"\";\nvar c = str[i]; // \"e\"\n</code></pre>\n\n<p>Note that it's useful only for access. It should be another method defined for assigning string chars in such manner.</p>\n\n<p>Also note that you must call .toChars() method every time you modify the sting.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there some way I can define <code>String[int]</code> to avoid using <code>String.CharAt(int)</code>?</p>\n",
            "last_activity_date": 1338003190,
            "question_id": 255041,
            "score": 11,
            "tags": [
                "javascript",
                "syntax",
                "operators"
            ],
            "title": "In javascript, can I override the brackets to access characters in a string?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>To quote the article below, \"\"then\" takes two arguments, a callback for a success case, and another for the failure case. Both are optional, so you can add a callback for the success or failure case only.\"</p>\n\n<p>I usually look to this page for any basic promise questions, let me know if I am wrong</p>\n\n<p><a href=\"http://www.html5rocks.com/en/tutorials/es6/promises/\" rel=\"nofollow\">http://www.html5rocks.com/en/tutorials/es6/promises/</a></p>\n",
                    "is_accepted": false,
                    "score": -1
                },
                {
                    "body": "<p>Since functions in Javascript can be called with any number of arguments, and the document doesn't place any restriction on the onFulfilled() method's arguments besides the below clause, I think that you can pass multiple arguments to the onFulfilled() method as long as the promise's value is the first argument.</p>\n\n<pre><code>2.2.2.1 it must be called after promise is fulfilled, with promise\u2019s value as its first argument.\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>As far as I can tell reading the <a href=\"https://github.com/domenic/promises-unwrapping\" rel=\"nofollow\">ES6 Promise specification</a> and the <a href=\"https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\" rel=\"nofollow\">standard promise specification</a> theres no clause preventing an implementation from handling this case - however its not implemented in the following libraries:</p>\n\n<ul>\n<li><a href=\"https://github.com/tildeio/rsvp.js/blob/master/lib/rsvp/promise.js#L516-544\" rel=\"nofollow\">RSVP.promise (#L516-544)</a></li>\n<li><a href=\"https://github.com/kriskowal/q/blob/v1/q.js#L787\" rel=\"nofollow\">Q promise (#787)</a></li>\n</ul>\n\n<p>I assume the reason for them omiting multi arg resolves is to make changing order more succinct (i.e. as you can only return one value in a function it would make the control flow less intuitive) Example:</p>\n\n<pre><code>new Promise(function(resolve, reject) {\n   return resolve(5, 4);\n})\n.then(function(x,y) {\n   console.log(y);\n   return x; //we can only return 1 value here so the next then will only have 1 argument\n})\n.then(function(x,y) {\n    console.log(y);\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 1
                },
                {
                    "body": "<blockquote>\n  <p>I'm following the spec here and I'm not sure whether it allows onFulfilled to be called with multiple arguments. </p>\n</blockquote>\n\n<p>Nope, just the first parameter will be treated as resolution value in the promise constructor. You can resolve with a composite value like an object or array.</p>\n\n<blockquote>\n  <p>I don't care about how any specific promises implementation does it, I wish to follow the w3c spec for promises closely.</p>\n</blockquote>\n\n<p>That's where I believe you're wrong. The specification is <em>designed to be minimal</em> and is built for interoping between promise libraries. The idea is to have a subset which DOM futures for example can reliably use and libraries can consume. Promise implementations do what you ask with <code>.spread</code> for a while now. For example:</p>\n\n<pre><code>Promise.try(function(){\n    return [\"Hello\",\"World\",\"!\"];\n}).spread(function(a,b,c){\n    console.log(a,b+c); // \"Hello World!\";\n});\n</code></pre>\n\n<p>With <a href=\"https://github.com/petkaantonov/bluebird\" rel=\"nofollow\">Bluebird</a>. One solution if you wnat this functionality is to prollyfill it. </p>\n\n<pre><code>if (!Promise.prototype.spread) {\n    Promise.prototype.spread = function (fn) {\n        return this.then(function (args) {\n            return Promise.all(args); // wait for all\n        }).then(function(args){\n         //this is always undefined in A+ complaint, but just in case\n            return fn.apply(this, args); \n        });\n\n    };\n\n}\n</code></pre>\n\n<p>Which lets you do:</p>\n\n<pre><code>Promise.resolve(null).then(function(){\n    return [\"Hello\",\"World\",\"!\"]; \n}).spread(function(a,b,c){\n    console.log(a,b+c);    \n});\n</code></pre>\n\n<p>With native promises at ease <a href=\"http://jsfiddle.net/FswX6/\" rel=\"nofollow\">fiddle</a>.</p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>The fulfillment value of a promise parallels the return value of a function and the rejection reason of a promise parallels the thrown exception of a function. Functions cannot return multiple values so promises must not have more than 1 fulfillment value.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm following the spec <a href=\"http://promises-aplus.github.io/promises-spec/\">here</a> and I'm not sure whether it allows onFulfilled to be called with multiple arguments.  For example:</p>\n\n<pre><code>promise = new Promise(function(onFulfilled, onRejected){\n    onFulfilled('arg1', 'arg2');\n})\n</code></pre>\n\n<p>such that my code:</p>\n\n<pre><code>promise.then(function(arg1, arg2){\n    // ....\n});\n</code></pre>\n\n<p>would receive both <code>arg1</code> and <code>arg2</code>?</p>\n\n<p>I don't care about how any specific promises implementation does it, I wish to follow the w3c spec for promises closely.</p>\n",
            "last_activity_date": 1419111363,
            "question_id": 22773920,
            "score": 10,
            "tags": [
                "javascript",
                "promise"
            ],
            "title": "Can promises have multiple arguments to onFulfilled?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<pre><code>if( (new Date(first).getTime() &gt; new Date(second).getTime()))\n{\n    ----------------------------------\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 25
                },
                {
                    "body": "<p>Because of your date format, you can use this code:</p>\n\n<pre><code>if(parseInt(first.replace(/-/g,\"\"),10) &gt; parseInt(second.replace(/-/g,\"\"),10)){\n   //...\n}\n</code></pre>\n\n<p>It will check whether <code>20121121</code> number is bigger than <code>20121103</code> or not.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>If your dates are strings in a strict <code>yyyy-mm-dd</code> format as shown in the question then your code will work as is without converting to date objects or numbers:</p>\n\n<pre><code>if(first &gt; second){\n</code></pre>\n\n<p>...will do a lexographic (i.e., alphanumeric \"dictionary order\") string comparison - which will compare the first characters of each string, then the second characters of each string, etc. Which will give the result you want...</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>USe this function for date comparison in javascript:</p>\n\n<pre><code>    function fn_DateCompare(DateA, DateB) {\n      var a = new Date(DateA);\n      var b = new Date(DateB);\n\n      var msDateA = Date.UTC(a.getFullYear(), a.getMonth()+1, a.getDate());\n      var msDateB = Date.UTC(b.getFullYear(), b.getMonth()+1, b.getDate());\n\n      if (parseFloat(msDateA) &lt; parseFloat(msDateB))\n        return -1;  // less than\n      else if (parseFloat(msDateA) == parseFloat(msDateB))\n        return 0;  // equal\n      else if (parseFloat(msDateA) &gt; parseFloat(msDateB))\n        return 1;  // greater than\n      else\n        return null;  // error\n  }\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can do this way, it will work fine:</p>\n\n<pre><code>var date1 = new Date('2013-07-30');\nvar date2 = new Date('2013-07-30');\n\nif(date1 === date2){ console.log(\"bot are equal\");}  // it does not work \n==&gt;undefined  //result\nif(+date1 === +date2){ console.log(\"bot are equal\");} // do it this way! (use + prefix for a variable that holds a date value)\n==&gt; both are equal //result\n</code></pre>\n\n<p>Note :-  don't forget to use a + prefix </p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>The best way is,</p>\n\n<pre><code>var first = '2012-11-21';\nvar second = '2012-11-03';\n\nif (new Date(first) &gt; new Date(second) {\n    .....\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>you can done this way also.</p>\n\n<pre><code>if (dateFormat(first, \"yyyy-mm-dd\") &gt; dateFormat(second, \"yyyy-mm-dd\")) {\n        console.log(\"done\");\n}\n</code></pre>\n\n<p>OR</p>\n\n<pre><code>if (dateFormat(first, \"mm-dd-yyyy\") &gt;  dateFormat(second, \"mm-dd-yyyy\")) {\n        console.log(\"done\");\n}\n</code></pre>\n\n<p>i use following plugin for dateFormat()</p>\n\n<pre><code>        var dateFormat = function () {\n        var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\n            timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n            timezoneClip = /[^-+\\dA-Z]/g,\n            pad = function (val, len) {\n                val = String(val);\n                len = len || 2;\n                while (val.length &lt; len) val = \"0\" + val;\n                return val;\n            };\n\n        // Regexes and supporting functions are cached through closure\n        return function (date, mask, utc) {\n            var dF = dateFormat;\n\n            // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\n            if (arguments.length == 1 &amp;&amp; Object.prototype.toString.call(date) == \"[object String]\" &amp;&amp; !/\\d/.test(date)) {\n                mask = date;\n                date = undefined;\n            }\n\n            // Passing date through Date applies Date.parse, if necessary\n            date = date ? new Date(date) : new Date;\n            if (isNaN(date)) throw SyntaxError(\"invalid date\");\n\n            mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\n\n            // Allow setting the utc argument via the mask\n            if (mask.slice(0, 4) == \"UTC:\") {\n                mask = mask.slice(4);\n                utc = true;\n            }\n\n            var _ = utc ? \"getUTC\" : \"get\",\n                d = date[_ + \"Date\"](),\n                D = date[_ + \"Day\"](),\n                m = date[_ + \"Month\"](),\n                y = date[_ + \"FullYear\"](),\n                H = date[_ + \"Hours\"](),\n                M = date[_ + \"Minutes\"](),\n                s = date[_ + \"Seconds\"](),\n                L = date[_ + \"Milliseconds\"](),\n                o = utc ? 0 : date.getTimezoneOffset(),\n                flags = {\n                    d:    d,\n                    dd:   pad(d),\n                    ddd:  dF.i18n.dayNames[D],\n                    dddd: dF.i18n.dayNames[D + 7],\n                    m:    m + 1,\n                    mm:   pad(m + 1),\n                    mmm:  dF.i18n.monthNames[m],\n                    mmmm: dF.i18n.monthNames[m + 12],\n                    yy:   String(y).slice(2),\n                    yyyy: y,\n                    h:    H % 12 || 12,\n                    hh:   pad(H % 12 || 12),\n                    H:    H,\n                    HH:   pad(H),\n                    M:    M,\n                    MM:   pad(M),\n                    s:    s,\n                    ss:   pad(s),\n                    l:    pad(L, 3),\n                    L:    pad(L &gt; 99 ? Math.round(L / 10) : L),\n                    t:    H &lt; 12 ? \"a\"  : \"p\",\n                    tt:   H &lt; 12 ? \"am\" : \"pm\",\n                    T:    H &lt; 12 ? \"A\"  : \"P\",\n                    TT:   H &lt; 12 ? \"AM\" : \"PM\",\n                    Z:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\n                    o:    (o &gt; 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n                    S:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 &gt; 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\n                };\n\n            return mask.replace(token, function ($0) {\n                return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\n            });\n        };\n    }();\n\n    // Some common format strings\n    dateFormat.masks = {\n        \"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\n        shortDate:      \"m/d/yy\",\n        mediumDate:     \"mmm d, yyyy\",\n        longDate:       \"mmmm d, yyyy\",\n        fullDate:       \"dddd, mmmm d, yyyy\",\n        shortTime:      \"h:MM TT\",\n        mediumTime:     \"h:MM:ss TT\",\n        longTime:       \"h:MM:ss TT Z\",\n        isoDate:        \"yyyy-mm-dd\",\n        isoTime:        \"HH:MM:ss\",\n        isoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\n        isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\n    };\n\n    // Internationalization strings\n    dateFormat.i18n = {\n        dayNames: [\n            \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\n            \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\n        ],\n        monthNames: [\n            \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\n            \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ]\n    };\n\n    // For convenience...\n    Date.prototype.format = function (mask, utc) {\n        return dateFormat(this, mask, utc);\n    };\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have two dates in javascript:</p>\n\n<pre><code>var first = '2012-11-21';\nvar second = '2012-11-03';\n</code></pre>\n\n<p>i would like make:</p>\n\n<pre><code> if(first &gt; second){\n   //...\n }\n</code></pre>\n\n<p>how is the best way for this, without external library?</p>\n",
            "last_activity_date": 1414480284,
            "question_id": 11170054,
            "score": 10,
            "tags": [
                "javascript",
                "date"
            ],
            "title": "Compare two dates with javascript"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Type of <code>{}+[]</code> may vary depending on the context.</p>\n\n<ol>\n<li><p><code>typeof {}+[]  //\"object\"</code><br>\nAs per operators precedence in this case <code>typeof {}</code> evaluates to \"object\", <code>+[]</code> adds an empty string(array is coerced to string) therefore result is \"object\".<br>\nYou could think of checking <code>typeof ({}+[])</code> (your second case).</p></li>\n<li><p><code>var crazy = {}+[];\ntypeof crazy  //\"string\"</code><br>\nIn this case you are adding object and array - they both coerce to string, therefore <code>typeof</code> returns \"string\".</p></li>\n<li><p><code>{}+[]</code><br>\nThis is interpreted as an empty block of code, unary plus and empty array.\nFirst part does nothing, array is converted to a comma-separated string of it's elements(empty string for empty array), then to a number(empty string is converted to 0), hence <code>0</code>.</p></li>\n</ol>\n\n<p><strong>UPDATED</strong></p>\n\n<ul>\n<li><p><code>{}+[] === \"\"     //false</code><br>\nsee #3, <code>{}</code> is interpreted as a block, you are getting <code>0</code> on the left.<br>\nCompare <code>{}+[] === 0 // true</code>.</p></li>\n<li><p><code>({}+[]) === \"\"   //false</code><br>\nsee #1, <code>{}</code> is interpreted as an object literal. When trying to add array and object, they both convert to string, <code>\"[object Object]\"</code> for object and empty string for array. Hence, you are getting <code>\"[object Object]\"</code> on the left.<br>\nCompare <code>({}+[]) === \"[object Object]\" // true</code>.</p></li>\n<li><p><code>({};+[]) === \"\"  //SyntaxError</code><br>\nI guess, this one is self-explanatory :)</p></li>\n<li><p><code>({}+[]).length   //15</code><br>\n15 is exactly the length of <code>\"[object Object]\"</code>, see above.</p></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 11
                },
                {
                    "body": "<pre><code>var f = {}+[];\nconsole.log(f===\"[object Object]\")\n</code></pre>\n\n<p>this will log <code>true</code> because when you assign <code>{}+[]</code> to the var it converts it to string by using the <code>toString()</code> method of it... which in this case returns \"[object Object]\" (which is 15 letters long - and that where the length=15 is from)</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Inspired by this <a href=\"https://www.destroyallsoftware.com/talks/wat\" rel=\"nofollow\">video</a>, I tested <em>further</em> with <code>{}+[]</code>.</p>\n\n<p><strong>Test 1:</strong></p>\n\n<pre><code>typeof {}+[]  //\"object\"\n</code></pre>\n\n<p>Okay, so <code>{}+[]</code> is an <code>object</code>.</p>\n\n<p><strong>Test 2:</strong></p>\n\n<pre><code>var crazy = {}+[];\ntypeof crazy  //\"string\"\n</code></pre>\n\n<p>What? Didn't <code>{}+[]</code> is an <code>object</code>? Why is it a <code>string</code> now?</p>\n\n<p><strong>Test 3:</strong></p>\n\n<pre><code>console.log({}+[])\n</code></pre>\n\n<p>What I got:</p>\n\n<p><img src=\"http://i.stack.imgur.com/OzI35.png\" alt=\"enter image description here\"></p>\n\n<p>So it is a <code>number</code>!... No?</p>\n\n<p>So <strong>what actually is the type of <code>{}+[]</code></strong>??</p>\n\n<h2>UPDATED</h2>\n\n<p>To people who say <code>{}+[]</code> is a empty string:</p>\n\n<pre><code>{}+[] === \"\"     //false\n({}+[]) === \"\"   //false\n({};+[]) === \"\"  //SyntaxError\n({}+[]).length   //15\n</code></pre>\n\n<p>JavaScript is so hard to understand...</p>\n",
            "last_activity_date": 1335739407,
            "question_id": 10376485,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "Problems with adding object with array"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>No. In general, you cannot invoke browser controls from inside the webpage - security, sandboxing, and all that.</p>\n\n<p>You need to make some sort of in-page search - if you're using a CMS, most of them have a simple search feature built-in.</p>\n\n<p>If you want to do this in JavaScript, there are various scripts that <em>emulate</em> this in-page; randomly selected from my query \"javascript find in page\" is this one: <a href=\"http://www.seabreezecomputers.com/tips/find.htm\" rel=\"nofollow\">http://www.seabreezecomputers.com/tips/find.htm</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>It kind of works for FF. See <a href=\"http://webdeveloper.com/forum/showthread.php?t=21406\">this page</a></p>\n\n<pre><code> &lt;a href=\"#\" onclick=\"find();\"&gt;Find in This Page...&lt;/a&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>update: from mark's comment:</p>\n\n<blockquote>\n  <p>From my testing \n  <code>window.find()</code>\n   is supported in Chrome 37, and FF31, but\n  not IE11</p>\n</blockquote>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I have created a website and have added a button and lot of text. What I want is to use the browser search (Ctrl+F), when I press the button which I added in website.</p>\n\n<p>How can I achieve this?</p>\n",
            "last_activity_date": 1410613707,
            "question_id": 8080217,
            "score": 10,
            "tags": [
                "javascript",
                "asp.net"
            ],
            "title": "Use Browser Search (Ctrl+F) through a button in website?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I think it's a short notation for <code>(typeof obj != \"undefined\") ? obj : {}</code> </p>\n\n<p>That is, if <code>obj</code> is not undefined, return <code>obj</code>, else, return an empty object ({} is an empty object).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Its allows you to call the bound function as a constructor without being bound to the original object. In other words the \"bound\" function will still work just like the original, unbound version if you call it with <code>new</code>.</p>\n\n<p>Here's an example:</p>\n\n<pre><code>var obj = {};\n\nfunction foo(x) {\n    this.answer = x;\n}\nvar bar = foo.bind(obj);   // \"always\" use obj for \"this\"\n\nbar(42);\nconsole.log(obj.answer);   // 42\n\nvar other = new bar(1);    // Call bar as a constructor\nconsole.log(obj.answer);   // Still 42\nconsole.log(other.answer); // 1\n</code></pre>\n\n<h2>How it works</h2>\n\n<p>To simplify the explanation, here's a simplified version of the code that only binds <code>this</code> and doesn't handle arguments or a missing obj parameter:</p>\n\n<pre><code>Function.prototype.bind = function( obj ) {\n  var self = this,\n  nop = function () {},\n  bound = function () {\n    return self.apply( this instanceof nop ? this : obj, arguments );\n  };\n\n  nop.prototype = self.prototype;\n  bound.prototype = new nop();\n\n  return bound;\n};\n</code></pre>\n\n<p>The function that gets returned by <code>Function.prototype.bind</code> behaves differently depending on whether you use it as a function, or a constructor (see <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.3.4.5.1\" rel=\"nofollow\">Section 15.3.4.5.1</a> and <a href=\"http://www.ecma-international.org/ecma-262/5.1/#sec-15.3.4.5.2\" rel=\"nofollow\">15.3.4.5.2</a> of the ECMAScript 5 Language Specification). The primary difference, is that it ignores the \"bound this\" parameter when it's called as a constructor (since inside a constructor, <code>this</code> needs to be the newly-created object). So the <code>bound</code> function needs a way to determine how it's being called. For example, <code>bound(123)</code> vs. <code>new bound(123)</code> and set <code>this</code> accordingly.</p>\n\n<p>That's where the <code>nop</code> function comes in. It's essentially acting as an intermediate \"class\" so that <code>bound</code> extends <code>nop</code> which extends <code>self</code> (which is the function <code>bind()</code> was called on). That part is set up here:</p>\n\n<pre><code>nop.prototype = self.prototype;\nbound.prototype = new nop();\n</code></pre>\n\n<p>When you call the bound function, it returns this expression:</p>\n\n<pre><code>self.apply( this instanceof nop ? this : obj, arguments ) )\n</code></pre>\n\n<p><code>this instanceof nop</code> works by following the prototype chain to determine the if any prototype of <code>this</code> is equal to <code>nop.prototype</code>. By setting <code>nop.prototype = self.prototype</code> and <code>bound.prototype = new nop()</code>, any object created with <code>new bound()</code> will be created with the original prototype from <code>self</code> via <code>bound.prototype</code>. So inside the function call, <code>this instanceof nop</code> (i.e. Object.getPrototypeOf(nop) == nop.prototype) is <code>true</code> and <code>self</code> gets called with <code>this</code> (the newly created object).</p>\n\n<p>In a normal function call, 'bound()' (without <code>new</code>), <code>this instanceof nop</code> would be false, so <code>obj</code> gets passed as the <code>this</code> context, which is what you would expect on a bound function.</p>\n\n<p>The reason for using the intermediate function is to avoid calling the original function (in the line <code>bound.prototype = new nop();</code>), which may have side effects.</p>\n",
                    "is_accepted": true,
                    "score": 13
                }
            ],
            "body": "<p>Had a question about a implementation of bind function that I found on Mozilla's site.  For the most part it makes sense to me, but I cant figure out what this check is for... </p>\n\n<pre><code>this instanceof nop ? this : ( obj || {} ) \n</code></pre>\n\n<p>in the bind function.  Obviously its checking if 'this' is the empty function, but why would you need to bind the empty function.  I have tried it in firebug, it works, but what is the point?  Just trying to increase my javascript knowledge so any help would be appreciated.</p>\n\n<pre><code>if ( !Function.prototype.bind ) {\n\n  Function.prototype.bind = function( obj ) {\n\n    var slice = [].slice,\n    args = slice.call(arguments, 1), \n    self = this, \n    nop = function () {}, \n    bound = function () {\n      return self.apply( this instanceof nop ? this : ( obj || {} ), \n                          args.concat( slice.call(arguments) ) );    \n    };\n\n    nop.prototype = self.prototype;\n\n    bound.prototype = new nop();\n\n    return bound;\n  };\n}\n</code></pre>\n",
            "last_activity_date": 1418074815,
            "question_id": 5774070,
            "score": 10,
            "tags": [
                "javascript"
            ],
            "title": "mozilla&#39;s bind function question"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>I'm having a similar problem with IE firing the blur event when you click on a scrollbar.  Apparently it only happens n IE7 and below, and IE8 in quirksmode.</p>\n\n<p>Here's something I found via Google</p>\n\n<p><a href=\"https://prototype.lighthouseapp.com/projects/8887/tickets/248-results-popup-from-ajaxautocompleter-disappear-when-user-clicks-on-scrollbars-in-ie6ie7\" rel=\"nofollow\">https://prototype.lighthouseapp.com/projects/8887/tickets/248-results-popup-from-ajaxautocompleter-disappear-when-user-clicks-on-scrollbars-in-ie6ie7</a></p>\n\n<p>Basically you only do the blur if you know the person clicked somewhere on the document other than the currently focused div.  It's possible to inversely detect the scrollbar click because document.onclick <strong>doesn't</strong> fire when you click on the scrollbar.</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>I had the same probleme. Resolved by putting the menu in a wrapping (bigger) div. With the blur applied to the wrapper, it worked!</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Perhaps try adding the <code>tabindex</code> attribute set to <code>-1</code> to the <code>div</code> node.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I've had a similar problem with a scrollbar in an autocomplete dropdown. Since the dropdown should be hidden when the form element it is attached to loses focus, maintaining focus on the correct element became an issue. When the scrollbar was clicked, only Firefox (10.0) kept focus on the input element. IE (8.0), Opera (11.61), Chrome (17.0) and Safari (5.1) all removed focus from the input, resulting in the dropdown being hidden, and since it was hidden, click events would not fire on the dropdown.</p>\n\n<p>Fortunately, the shift of focus can be easily prevented in most of the problem browsers. This is done by canceling the default browser action:</p>\n\n<pre><code>dropdown.onmousedown = function(event) {\n    // Do stuff\n    return false;\n}\n</code></pre>\n\n<p>Adding a return value to the event handler sorted out the problem on all browsers except IE. Doing this cancels the default browser action, in this case the focus shift. Also, using mousedown instead of click meant that the event handler would be executed before the blur event fired on the input element.</p>\n\n<p>This left IE as the only remaining problem (no surprise there). It turns out that there is no way to cancel the focus shift on IE. Fortunately, IE is the only browser that fires a focus event on the dropdown, meaning focus on the input element can be restored with an IE-exclusive event handler:</p>\n\n<pre><code>dropdown.onfocus = function() {\n    input.focus();\n}\n</code></pre>\n\n<p>This solution for IE is not perfect, but while the focus shift is not cancelable, this is the best you can do. What happens is that the blur event fires on the input, hiding the dropdown, after which focus fires on the now hidden dropdown, which restores focus on the input and triggers showing the dropdown. In my code it also triggers repopulating the dropdown, resulting in a short delay and loss of the selection, but if the user wants to scroll the selection is probably useless anyway, so I deemed this acceptable.</p>\n\n<p>I hope this is helpful, even though my example is slightly different than in the question. From what I gathered, the question was about IE firing a blur event on the dropdown itself, rather than the button that opened it, which makes no sense to me... Like my use of a focus event handler indicates, clicking on a scrollbar should move focus to the element the scrollbar is part of on IE.</p>\n",
                    "is_accepted": false,
                    "score": 8
                },
                {
                    "body": "<p>Use focusout,  and focusin (IE specific events)</p>\n\n<pre><code>$(document).bind('focusout', function(){\n     preventHiding = false;\n     //trigger blur event\n     this.$element.trigger('blur');\n\n});\n\n$(document).bind('focusin', function(){\n     preventHiding = true;\n});\n\n$(document).bind('blur', function(){\n       // Did anyone want us to prevent hiding?\n       if (this.preventHiding) {\n         this.preventHiding = false;\n         return;\n       }\n       this.hide();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Late answer, but I had the same issue and the current answers didn't work for me.</p>\n\n<p>The hover state of the popup element works as expected, so in your blur event you can check to see if your popup element is hovered, and only remove/hide it if it isn't:</p>\n\n<pre><code>$('#element-with-focus').blur(function()\n{\n    if ($('#popup:hover').length === 0)\n    {\n        $('#popup').hide()\n    }\n}\n</code></pre>\n\n<p>You'll need to shift focus back to the original element that has the blur event bound to it. This doesn't interfere with the scrolling:</p>\n\n<pre><code>$('#popup').focus(function(e)\n{\n    $('#element-with-focus').focus();\n});\n</code></pre>\n\n<p>This does not work with IE7 or lower - so just drop support for it...</p>\n\n<p>Example: <a href=\"http://jsfiddle.net/y7AuF/\" rel=\"nofollow\">http://jsfiddle.net/y7AuF/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I have a div that acts like a drop-down.  so it pops-up when you click a button and it allows you to scroll through this big list.  So the div has a vertical scroll bar. The div is supposed to disappear if you click outside of the div, i.e. on blur.  the problem is that \nwhen the user clicks on the div's scrollbar, IE wrongly fires the onblur event, whereas Firefox doesn't.  I guess firefox still treats the scrollbar as part of the div, which i think is correct.  I just want IE to behave the same way.</p>\n",
            "last_activity_date": 1400797591,
            "question_id": 2023779,
            "score": 10,
            "tags": [
                "javascript",
                "jquery",
                "internet-explorer",
                "blur"
            ],
            "title": "clicking on a div&#39;s scroll bar fires the blur event in I.E"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p><img src=\"http://i.imgur.com/Xnyd8qp.png\" alt=\"Computer Stupidities\"><br>\n&gt; from <em>Computer Stupidities</em></p>\n\n<p>As far as I'm concerned, the limit is \"big enough\"!</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's purely dependent on how much powerful the client is.</p>\n\n<p>Because the browser will lose its memory, if you are gonna pass millions of arguments.</p>\n\n<p>Each variable holds some memory. So browsers will have no problem allocating each variable some memory, until it itself has no memory to run on.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>According to <a href=\"http://es5.github.io/#x8.8\" rel=\"nofollow\">ECMA Script 5.1 Standard Specification for <code>List</code></a>, </p>\n\n<blockquote>\n  <p>The List type is used to explain the evaluation of argument lists (see 11.2.4) in new expressions, in function calls, and in other algorithms where a simple list of values is needed. Values of the List type are simply ordered sequences of values. <strong>These sequences may be of any length.</strong></p>\n</blockquote>\n\n<p>So, the standard doesn't have any limitations on the number of arguments and limited only by the memory.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>Although there is nothing specific limiting the <em>theoretical</em> maximum number of arguments in the spec (as <a href=\"http://stackoverflow.com/a/22747268/1715579\"><em>thefortheye</em>'s answer</a>  points out). There are of course <em>practical</em> limits. These limits are entirely implementation dependent and most likely, will also depend exactly on <em>how</em> you're calling the function. </p>\n\n<hr>\n\n<p>I created <a href=\"http://jsfiddle.net/DZn2D/\">this fiddle</a> as an experiment. </p>\n\n<pre><code>function testArgs() {\n    console.log(arguments.length);\n}\n\nvar argLen = 0;\nfor (var i = 1; i &lt; 32; i++) {\n    argLen = (argLen &lt;&lt; 1) + 1;\n    testArgs.apply(null, new Array(argLen));\n}\n</code></pre>\n\n<p>Here are my results:</p>\n\n<ul>\n<li><p>Chrome 33.0.1750.154 m: The last successful test was <strong>65535</strong> arguments. After that it failed with:</p>\n\n<blockquote>\n  <p>Uncaught RangeError: Maximum call stack size exceeded</p>\n</blockquote></li>\n<li><p>Firefox 27.0.1: The last successful test was <strong>262143</strong> arguments. After that it failed with:</p>\n\n<blockquote>\n  <p>RangeError: arguments array passed to Function.prototype.apply is too large</p>\n</blockquote></li>\n<li><p>Internet Explorer 11: The last successful test was <strong>131071</strong> arguments. After that it failed with:</p>\n\n<blockquote>\n  <p>RangeError: SCRIPT28: Out of stack space</p>\n</blockquote></li>\n<li><p>Opera 12.17: The last successful test was <strong>1048576</strong> arguments. After that it failed with:</p>\n\n<blockquote>\n  <p>Error: Function.prototype.apply: argArray is too large</p>\n</blockquote></li>\n</ul>\n\n<p>Of course, there may be other factors at play here and you may have different results.</p>\n\n<hr>\n\n<p>And here is an <a href=\"http://jsfiddle.net/DZn2D/3/\">alternate fiddle</a> created using <code>eval</code>. Again, you may get different results.</p>\n\n<ul>\n<li><p>Chrome 33.0.1750.154 m: The last successful test was <strong>32767</strong> arguments. After that it failed with:</p>\n\n<blockquote>\n  <p>Uncaught SyntaxError: Too many arguments in function call (only 32766 allowed)</p>\n</blockquote>\n\n<p><sup>This one is particularly interesting because Chrome itself seems to be confused about how many arguments are actually allowed.</sup></p></li>\n<li><p>Firefox 27.0.1: The last successful test was <strong>32767</strong> arguments. After that it failed with:</p>\n\n<blockquote>\n  <p>script too large</p>\n</blockquote></li>\n<li><p>Internet Explorer 11: The last successful test was <strong>32767</strong> arguments. After that it failed with:</p>\n\n<blockquote>\n  <p>RangeError: SCRIPT7: Out of memory</p>\n</blockquote></li>\n<li><p>Opera 12.17: The last successful test was <strong>4194303</strong> arguments. After that it failed with:</p>\n\n<blockquote>\n  <p>Out of memory; script terminated.</p>\n</blockquote></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 16
                },
                {
                    "body": "<p>An array in <code>JavaScript</code> can have 0..<code>(2^32-1)</code> elements. <code>2^32-1</code> is <code>4,294,967,295</code>.</p>\n\n<p>I believe that's the number of <code>arguments</code> for a function as well</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p><a href=\"http://es5.github.io/#x8.8\" rel=\"nofollow\">ECMAScript 5.1, part 8.8</a></p>\n\n<blockquote>\n  <p>The List type is used to explain the evaluation of argument lists (see 11.2.4) in new expressions, in function calls, and in other algorithms where a simple list of values is needed....These sequences may be of any length.</p>\n</blockquote>\n\n<p>So there is no limit in the standard. Of course, if your code runs in the real world, not in standards-land, there is obviously <em>some</em> limit (e.g. number of particles in the universe).</p>\n\n<p>There are two ways to pass parameters to a function.</p>\n\n<ul>\n<li>\"Literally\": <code>f(a, b, c)</code></li>\n<li>With apply(): <code>f.apply(null, [a, b, c])</code></li>\n</ul>\n\n<p>This latter way is the more realistic scenario for large argument lists.</p>\n\n<p>Go to this <a href=\"http://jsfiddle.net/draperp/ncVqn/\" rel=\"nofollow\">JSFiddle</a> to see the limits for each of these for your current browser.</p>\n\n<p>I tried out a few browsers myself:</p>\n\n<pre><code>           | apply() | literal\n ----------------------------\nChrome 14  | 131155  |  32767\nChrome 35  | 126213  |  65535\nFirefox 30 | 500001  |  65535\nIE 9       | 254335  |  65533\nIE 10      | 253667  |  65533\nIE 11      | 252447  |  65533\nOpera 22   | 126063  |  65535\nSafari 4   | 524215  | 524205\nSafari 7   |  65537  | 522159\n</code></pre>\n\n<p>I saw differences in many of these numbers on different machines, so I believe there are other factors at play besides just the browser (the OS?).</p>\n\n<hr>\n\n<p><strong>This is a real issue,</strong> not some trivia. A real-world example:</p>\n\n<p>The Google Closure Library defined the following function.</p>\n\n<pre><code>goog.crypt.byteArrayToString = function(array) {\n  return String.fromCharCode.apply(null, array);\n};\n</code></pre>\n\n<p>This worked only if the length of the string was within the browser limit for the number of arguments that can be passed with <code>Function.prototype.apply</code>.</p>\n\n<p>The function was later <a href=\"https://github.com/google/closure-library/commit/da353e0265ea32583ea1db9e7520dce5cceb6f6a\" rel=\"nofollow\">patched</a>, making the function significantly more complicated.</p>\n\n<hr>\n\n<p>FYI, there is an open <a href=\"https://bugs.webkit.org/show_bug.cgi?id=80797\" rel=\"nofollow\">Webkit issue</a> filed in March 2012 that discusses the argument limit.</p>\n",
                    "is_accepted": false,
                    "score": 3
                }
            ],
            "body": "<p>I know that JavaScript functions can accept \"any\" number of arguments.</p>\n\n<pre><code>function f(){};\nf(1,2,3,4 /*...*/);\n</code></pre>\n\n<p>But I'm wondering if there is actually a limit to how many \"any\" can be?</p>\n\n<p>E.g., let's say I hand a million arguments to <code>f()</code>. Would that work? Or would the interpreter keel over?</p>\n\n<p>I'm guessing the maximum is either (a) implementation-specific or (b) <code>(2^32)-1</code>, since the <code>arguments</code> object is array-like.</p>\n\n<p>I don't see this mentioned in the language specification, but I might not be connecting some dots.</p>\n",
            "last_activity_date": 1404717062,
            "question_id": 22747068,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "Is there a max number of arguments JavaScript functions can accept?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>You can't have an AJAX request open the download prompt since you physically have to navigate to the file to prompt for download. Instead, use a success function to navigate to download.php. This will open the download prompt but won't change the current page.</p>\n\n<pre><code>$.ajax({\n    url: 'download.php',\n    type: 'POST',\n    success: function() {\n        window.location = 'download.php';\n    }\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 19
                },
                {
                    "body": "<p>You actually don't need ajax at all for this. If you just set \"download.php\" as the href on the button, or, if it's not a link use:</p>\n\n<pre><code>window.location = 'download.php';\n</code></pre>\n\n<p>The browser should recognise the binary download and not load the actual page but just serve the file as a download.</p>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>It is possible. You can have the download started from inside an ajax function, for example, just after the .csv file is created.</p>\n\n<p>I have an ajax function that exports a database of contacts to a .csv file, and just after it finishes, it automatically starts the .csv file download. So, after I get the responseText and everything is Ok, I redirect browser like this:</p>\n\n<pre><code>window.location=\"download.php?filename=export.csv\";\n</code></pre>\n\n<p>My <strong>download.php</strong> file looks like this:</p>\n\n<pre><code>&lt;?php\n\n    $file = $_GET['filename'];\n\n    header(\"Cache-Control: public\");\n    header(\"Content-Description: File Transfer\");\n    header(\"Content-Disposition: attachment; filename=\".$file.\"\");\n    header(\"Content-Transfer-Encoding: binary\");\n    header(\"Content-Type: binary/octet-stream\");\n    readfile($file);\n\n?&gt;\n</code></pre>\n\n<p>There is no page refresh whatsoever and the file automatically starts downloading. </p>\n\n<p><strong>NOTE</strong> - Tested in the following browsers:</p>\n\n<pre><code>Chrome v37.0.2062.120 \nFirefox v32.0.1\nOpera v12.17\nInternet Explorer v11\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I prefer Location.assign() </p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Location.assign\" rel=\"nofollow\">developer.mozilla.org/en-US/docs/Web/API/Location.assign</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I want to send an  \"ajax download request\" when I click on a button, so I tried in this way:</p>\n\n<p>javascript:</p>\n\n<pre><code>var xhr = new XMLHttpRequest();\nxhr.open(\"GET\", \"download.php\");\nxhr.send();\n</code></pre>\n\n<p>download.php:</p>\n\n<pre><code>&lt;?\nheader(\"Cache-Control: public\");\nheader(\"Content-Description: File Transfer\");\nheader(\"Content-Disposition: attachment; filename= file.txt\");\nheader(\"Content-Transfer-Encoding: binary\");    \nreadfile(\"file.txt\");\n?&gt;\n</code></pre>\n\n<p>but doesn't work as expected, how can I do ? Thank you in advance</p>\n",
            "last_activity_date": 1421143899,
            "question_id": 20830309,
            "score": 9,
            "tags": [
                "javascript",
                "php",
                "ajax",
                "file",
                "download"
            ],
            "title": "download file using an ajax request"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>The easiest way may be to run the filter in your controller. Something like this:</p>\n\n<pre><code>function MyCtrl($scope, notEmptyFilter)\n{\n    //$scope.items is put into the scope somehow\n    $scope.filteredItems = notEmptyFilter($scope.items);\n}\n</code></pre>\n\n<p>Then your HTML would look something like this:</p>\n\n<pre><code>&lt;div ng-show=\"filteredItems.length &gt; 0\" ng-repeat=\"item in filteredItems\"&gt;\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p><code>ng-repeat</code> expression allows filtered results to be assigned to a variable. This variable will be accessible from current scope so you can use it in same scope anyway you want:</p>\n\n<pre class=\"lang-html prettyprint-override\"><code>&lt;p&gt;Number of filtered items: {{filteredItems.length}}&lt;/p&gt;\n\n&lt;div \n  ng-show=\"filteredItems.length &gt; 0\" \n  ng-repeat=\"item in filteredItems = (items | notEmpty)\"\n&gt;\n {{$index}}\n&lt;/div&gt;\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 29
                }
            ],
            "body": "<p>Here's my code:</p>\n\n<pre><code>&lt;div ng-show=\"?\" ng-repeat=\"item in items | notEmpty\"&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Filter:</p>\n\n<pre><code>Kb.filter(\"notEmpty\", function(){ \n  return function(input){\n    var output=[];\n    for(var i=0;i&lt;input.length;i++){\n      if(input[i]){\n        output.push(input[i]);\n      }\n    }\n    return output;\n}});\n</code></pre>\n\n<p>I need to show/hide repeated s according the quantity of filtered items in the loop. \nWhat is the best way to do it?</p>\n\n<p>Thanks</p>\n",
            "last_activity_date": 1383068041,
            "question_id": 19664691,
            "score": 9,
            "tags": [
                "javascript",
                "angularjs",
                "ng-repeat"
            ],
            "title": "Angular.js. How to count ng-repeat iterations which satisfy the custom filter"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>No, it's not the same thing. Consider when using <code>instanceof</code>:</p>\n\n<pre><code>function C1() {\n    return {};\n}\n\nfunction C2() {\n}\n\nvar c1 = new C1();\nvar c2 = new C2();\nalert(c1 instanceof C1); // false; wha...?\nalert(c2 instanceof C2); // true, as you'd expect.\n</code></pre>\n\n<p><a href=\"http://jsfiddle.net/minitech/DZTC8/\">Here's a demo.</a></p>\n\n<p>So instead, create them by assigning to <code>this</code>, possibly with a safeguard to prevent forgotten <code>new</code>s.</p>\n\n<pre><code>function Constructor() {\n    var privateProperty = 'private';\n    var privateMethod = function() {\n        alert('Called from private method');\n    };\n\n    this.publicProperty = \"I'm public!\";\n    this.publicMethod = function() {\n        alert('Called from public method');\n    };\n    this.getter = privateMethod;\n}\n</code></pre>\n\n<p>Even better, use the prototype when possible:</p>\n\n<pre><code>function Constructor() {\n    var privateProperty = 'private';\n    var privateMethod = function() {\n        alert('Called from private method');\n    };\n\n    this.getter = privateMethod;\n}\n\nConstructor.prototype.publicProperty = \"I'm public!\";\nConstructor.prototype.publicMethod = function() {\n    alert('Called from public method');\n};\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>i answered one question about closures here in SO with this sample:</p>\n\n<pre><code>function Constructor() {\n    var privateProperty = 'private';\n    var privateMethod = function(){\n        alert('called from public method');\n    };\n    return {\n        publicProperty: 'im public',\n        publicMethod: function(){\n            alert('called from public method');\n        },\n        getter: privateMethod\n    }\n}\n\nvar myObj = new Constructor();\n\n//public\nvar pubProp = myObj.publicProperty;\nmyObj.publicMethod();\nmyObj.getter();\n\n//private - will cause errors\nmyObj.privateProperty\nmyObj.privateMethod\n</code></pre>\n\n<p>a user commented on my answer saying:</p>\n\n<blockquote>\n  <p>Also, if your function explicitly returns an object it is not a good practice to call it with <strong>new</strong> because that is misleading - if using new you'd expect the result to be an instance of Constructor</p>\n</blockquote>\n\n<p>i usually create objects using <strong>new</strong>. but why is it <em>not a good practice</em>? it seems like using new and not using new returns the same thing. what is the proper way of creating objects from closures?</p>\n",
            "last_activity_date": 1329358428,
            "question_id": 9304473,
            "score": 9,
            "tags": [
                "javascript",
                "closures"
            ],
            "title": "creating objects from JS closure: should i use the &quot;new&quot; keyword?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<pre><code>var initial_array = [];\n function initialiseArray() { \n   initial_array = [2, 9, 8, 6, 0, 2, 1];\n} \nfunction copyToNewArray() {\n    var copied_array = [];\n    console.log(\"COPIED 1\", copied_array);\n    alert(copied_array.length);\n    for (var i = 0; i &lt; initial_array.length; i++) {\n        var copy = initial_array[i];\n        copied_array.push(copy);\n    }\n    console.log(\"COPIED 2\", copied_array);\n}\ninitialiseArray();\ncopyToNewArray();\n</code></pre>\n\n<p>Adding the line <code>alert(copied_array.length);</code> will show correct results.</p>\n\n<p>What happens is that the log is not synchronized with the javascript execution. When the log prints the values were already changed.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>It's the way arrays are displayed in the Chrome console, and that's by reference. If you want accurate results, convert to a string:</p>\n\n<pre><code>var initial_array = [];\n\nfunction initialiseArray() { \n   initial_array = [2, 9, 8, 6, 0, 2, 1];\n} \n\nfunction copyToNewArray() {\n    var copied_array = [];\n\n    console.log(\"COPIED 1\", copied_array.toString());\n\n    for (var i = 0; i &lt; initial_array.length; i++) {\n        var copy = initial_array[i];\n        copied_array.push(copy);\n    }\n\n    console.log(\"COPIED 2\", copied_array.toString());\n}\n\ninitialiseArray();\ncopyToNewArray();\n</code></pre>\n\n<p>You can test this out pretty easily:</p>\n\n<pre><code>var x = [];\nconsole.log(x), x.push(5), x; // outputs [5] and [5]\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The console is actually asynchronous. Because you're logging a reference to an object, by the time the object is logged it has already changed.</p>\n\n<p>You could clone the array before logging it to be certain that it doesn't get changed before it gets logged.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Since arrays are passed by reference, every change you make to it will change what is output in the console. It is partly the behavior of Chrome's console, partly JavaScript's.</p>\n\n<p>If you want to print the result at the time of the call to <code>console.log</code>, you could output it as a string using <code>JSON.stringify</code>.</p>\n\n<pre><code>console.log(\"COPIED 1\", JSON.stringify(copied_array));\n</code></pre>\n\n<p><strong>Important edit</strong></p>\n\n<p>It seems I was mostly wrong. As <em>diEcho</em> pointed out in the question's comments, a <a href=\"http://stackoverflow.com/questions/4057440/is-chromes-javascript-console-lazy-about-evaluating-arrays\">similar question</a> has a <a href=\"http://stackoverflow.com/a/4060176/104999\">better answer</a>. It seems to be solely Chrome behavior.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>that's because the <code>copied_array</code> is a reference, and console.log is executed asynchonously, so the content of the array is modifed before the first log prints it.</p>\n\n<p>you may copy the array before printing</p>\n\n<pre><code>console.log([].concat(copied_array));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Try debugging your issue in the Chrome script debugger. Put a breakpoint on the line:</p>\n\n<pre><code>for (var i = 0; i &lt; initial_array.length; i++) {\n</code></pre>\n\n<p>and you will see the behaviour you desire. </p>\n\n<p>The problem you are having is you are making the incorrect assumption that the Chrome debugger 'prints' the value immediately when in fact it does the <code>console.log</code> asynchronously. Since arrays are passed around by reference in the backend when it actually goes to print the value it is now the one you are seeing.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p><code>console.log(\"COPIED 1\", JSON.stringify(copied_array));</code></p>\n\n<p>Should be fine for debugging</p>\n\n<hr>\n\n<p>it's a BUG you have mentioned, see below</p>\n\n<p><a href=\"https://bugs.webkit.org/show_bug.cgi?id=35801\" rel=\"nofollow\">https://bugs.webkit.org/show_bug.cgi?id=35801</a></p>\n\n<p>also read similar questions</p>\n\n<p><a href=\"http://stackoverflow.com/questions/4057440/is-chromes-javascript-console-lazy-about-evaluating-arrays\">Is Chrome&#39;s JavaScript console lazy about evaluating arrays?</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/4198912/bizarre-console-log-behaviour-in-chrome-developer-tools\">Bizarre console.log behaviour in Chrome Developer Tools</a></p>\n\n<p><a href=\"http://stackoverflow.com/questions/8249136/why-does-javascript-object-show-different-values-in-console-in-chrome-firefox\">Why does javascript object show different values in console in Chrome, Firefox, Safari?</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you want to keep the console's functionality such as expanding objects in an array, I suggest using <code>.slice</code>, which makes a copy of the array which doesn't change when logging:</p>\n\n<pre><code>console.log(\"COPIED 1\", copied_array.slice());\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I'm deeply confused by the behaviour of either JavaScript, or the Chrome console. Can someone help me understand?</p>\n\n<p>Basically I have the following JavaScript code, not nested inside any function or other scope: </p>\n\n<pre><code>var initial_array = [];\n\nfunction initialiseArray() { \n   initial_array = [2, 9, 8, 6, 0, 2, 1];\n} \n\nfunction copyToNewArray() {\n    var copied_array = [];\n\n    console.log(\"COPIED 1\", copied_array);\n\n    for (var i = 0; i &lt; initial_array.length; i++) {\n        var copy = initial_array[i];\n        copied_array.push(copy);\n    }\n\n    console.log(\"COPIED 2\", copied_array);\n}\n\ninitialiseArray();\ncopyToNewArray();\n</code></pre>\n\n<p>I would expect <code>COPIED 1</code> to print <code>[]</code> - as the variable hasn't been assigned yet - but instead it prints <code>[2, 9, 8, 6, 0, 2, 1]</code> - ie the value after it has been assigned.</p>\n\n<p>Why? </p>\n\n<p>Incidentally, if you replace lines 8-11 with <code>initial_array = copied_array</code>, then <code>RESULTS 1</code> does indeed print as <code>[]</code>. Is it something to do with using <code>.push</code>?</p>\n",
            "last_activity_date": 1325792144,
            "question_id": 8747421,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript console prints assigned value of variable before it has been assigned?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p><strong>EDIT: This is wrong, ignore this.</strong></p>\n\n<p>I think if you do something like...</p>\n\n<pre><code>var styles = $('.myclass').css('-webkit-transform');\n</code></pre>\n\n<p>You would probably get the <code>translate3d(0px, -200px, 0px)</code> back. </p>\n\n<p>Maybe you could then parse that string? seems like a bit of a hack though.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The value gets stored either as a <code>matrix</code> or a <code>matrix3d</code>, depending on whether or not the z value was set.  Assuming no other transformations, for a 2D matrix, X and Y are the last two values.  For a 3D matrix, X, Y, Z, 1 are the last four digits.</p>\n\n<p>You could use a regular expression to get the values:</p>\n\n<pre><code>function getTransform(el) {\n    var results = $(el).css('-webkit-transform').match(/matrix(?:(3d)\\(\\d+(?:, \\d+)*(?:, (\\d+))(?:, (\\d+))(?:, (\\d+)), \\d+\\)|\\(\\d+(?:, \\d+)*(?:, (\\d+))(?:, (\\d+))\\))/)\n\n    if(!results) return [0, 0, 0];\n    if(results[1] == '3d') return results.slice(2,5);\n\n    results.push(0);\n    return results.slice(5, 8);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>If you change the accepted answer's match() pattern to this it adds support for negative numbers:</p>\n\n<pre><code>$(el).css('-webkit-transform').match(/matrix(?:(3d)\\(-{0,1}\\d+(?:, -{0,1}\\d+)*(?:, (-{0,1}\\d+))(?:, (-{0,1}\\d+))(?:, (-{0,1}\\d+)), -{0,1}\\d+\\)|\\(-{0,1}\\d+(?:, -{0,1}\\d+)*(?:, (-{0,1}\\d+))(?:, (-{0,1}\\d+))\\))/)\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>Say a div has this applied to it:</p>\n\n<pre><code>-webkit-transform: translate3d(0px, -200px, 0px)\n</code></pre>\n\n<p>How could I retrieve those values with jQuery?</p>\n",
            "last_activity_date": 1403782458,
            "question_id": 7982053,
            "score": 9,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "Get translate3d values of a div?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Your method is THE normal way way of doing it.  </p>\n\n<p>If this comes up over and over, you could make a utility function that would execute the handler first and then set the interval:</p>\n\n<pre><code>function setIntervalAndExecute(fn, t) {\n    fn();\n    return(setInterval(fn, t));\n}\n</code></pre>\n\n<p>Then, in your code, you could just do this:</p>\n\n<pre><code>var i = setIntervalAndExecute(dothis, 20000);\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 15
                },
                {
                    "body": "<p>If your <code>dothis</code> function has no other need for a return value, you can have it return itself.</p>\n\n<p>This will allow you to invoke and pass it at the same time. If the return value is otherwise ignored, it will be harmless.</p>\n\n<pre><code>function dothis() {\n    // your code\n    return dothis;\n}\n\nvar i = setInterval(dothis(), 20000);\n</code></pre>\n\n<hr>\n\n<p>Otherwise, you could extend <code>Function.prototype</code> to give an invoke and return functionality to all your functions:</p>\n\n<p><strong>DEMO:</strong> <a href=\"http://jsfiddle.net/ZXeUz/\" rel=\"nofollow\">http://jsfiddle.net/ZXeUz/</a></p>\n\n<pre><code>Function.prototype.invoke_assign = function() {\n    var func = this,\n        args = arguments;\n    func.call.apply( func, arguments );\n    return function() { func.call.apply( func, args ); };\n};\n\nsetInterval( dothis.invoke_assign( 'thisArg', 1, 2, 3 ), 20000 );\n\n// thisArg 1 2 3\n// thisArg 1 2 3\n// thisArg 1 2 3\n// ...\n</code></pre>\n\n<p>This actually enhances things a bit. It lets you pass a set of arguments. The first argument will set the <code>this</code> value of the function you're invoking, and the rest of the arguments will be passed on as the regular arguments.</p>\n\n<p>Because the function returned is wrapped in another function, you'll have identical behavior between the initial and interval invocations.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>You can make an anonymous function and call it immediately, except you use the setTimeout function instead of setInterval.</p>\n\n<pre><code>(function doStuff() {\n    //Do Stuff Here\n    setTimeout(doStuff,20000);\n})();\n</code></pre>\n\n<p>This will execute the function, then call it again in 20 seconds.</p>\n\n<p>Note that depending on the behavior you desire or in some cases for performance, it can be better to use setTimeout over setInterval.  The main difference is that setInterval calls that function whenever that timeout is up, REGARDLESS if the last call has finished executing or if an error occurs.  Using setTimeout is this fashion ensures that the function finishes its execution before the timer resets.  A lot of the tradeoffs are pretty apparent, but it is a good thing to keep in mind as you design your application.</p>\n\n<p><strong>EDIT</strong> In response to patrick dw's concern about having the need to cancel the timeout.  The best solution is to not use the anonymous function, and just call it after declaration</p>\n\n<pre><code>var timeout;\nfunction doStuff() {\n    //doStuff \n    timeout = setTimeout(doStuff,20000);\n}\ndoStuff()\n</code></pre>\n\n<p>Yes this is similar to what the OP was trying to avoid, but it does removes the need to call the function and then call the setInterval function, so you save a line of code.  You can stop and start the function at anytime by:</p>\n\n<pre><code>//Stop it\nclearTimeout(timeout);\n\n//Start it\ndoStuff();\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                }
            ],
            "body": "<p>I am using the <code>setInterval()</code> function to call a function every 20 seconds. However, one thing I noticed is that it the first time <code>setInterval()</code> actually calls the function is at 20 seconds (and not when <code>setInterval()</code> is called). Here is my current workaround:</p>\n\n<pre><code>dothis();\nvar i = setInterval(dothis, 20000);\n</code></pre>\n\n<p>Is there any way to achieve this without having this duplicate code?</p>\n",
            "last_activity_date": 1316048841,
            "question_id": 7424155,
            "score": 9,
            "tags": [
                "javascript"
            ],
            "title": "JavaScript: How to get setInterval() to start now?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>The popstate event is fired in certain cases when navigating to a session history entry.</p>\n</blockquote>\n\n<p><a href=\"http://www.whatwg.org/specs/web-apps/current-work/#event-popstate\" rel=\"nofollow\">http://www.whatwg.org/specs/web-apps/current-work/#event-popstate</a></p>\n\n<p>From my understanding, though I could be wrong, seeing as loading the page does mean history is created and traversed to, yes, it should be fired on page load.</p>\n\n<p>Also see,</p>\n\n<p><a href=\"http://www.mail-archive.com/whatwg@lists.whatwg.org/msg19722.html\" rel=\"nofollow\">http://www.mail-archive.com/whatwg@lists.whatwg.org/msg19722.html</a></p>\n\n<p>and,</p>\n\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history</a></p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<p>Firing onpopstate on page load is correct, and WebKit will have this behavior soon. WebKit 534.7 (Chrome 7.0517.44) now behaves this way.</p>\n\n<p>I filed a Chrome bug on it, but it turns out this is the desired behavior; it is needed in order to handle certain back/forward button actions correctly. See <a href=\"http://code.google.com/p/chromium/issues/detail?id=63040\" rel=\"nofollow\">this bug report at code.google.com</a> for more discussion and links.</p>\n\n<p>I'm still trying to come up with a good code pattern for an onpopstate event handler.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I don't know if is this what you are asking, but my solution for an <em>ajax-only</em> onpopstate event handler is to set up to <code>true</code> a variable <code>refreshed</code> on <code>window.onload</code> and set it to <code>false</code> on <code>history.pushState</code> calls; then on the <code>onpopstate</code> handler just do stuff if <code>refreshed</code> is <code>false</code>.</p>\n\n<p>Looks silly, and it is, but I couldn't do any better.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<blockquote>\n  <p>Browsers tend to handle the popstate event differently on page load.\n  Chrome and Safari always emit a popstate event on page load, but\n  Firefox doesn't.</p>\n</blockquote>\n\n<p>This quote was taken from Mozilla's documentation: <a href=\"https://developer.mozilla.org/en-US/docs/DOM/window.onpopstate\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/DOM/window.onpopstate</a></p>\n\n<p>I tend to agree with the Mozilla system.  Page load is not an action that requires an extra popstate event to be fired, because the state is not being popped, it is being loaded for the first time.</p>\n\n<p>I am guessing Webkit is doing it for convenience... in all my implementations, it is consistently an inconvenience to delay loading my handler until after the initial popstate has fired.</p>\n\n<p>Instead of this (using pseudo functions):</p>\n\n<pre><code>AddEventHandler(window, 'popstate', OnPopState);\n</code></pre>\n\n<p>I have to do something like this:</p>\n\n<pre><code>AddLoadEvent(window.setTimeout(function() \n    { \n        AddEventHandler(window, 'popstate', OnPopState); \n    },0));\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Just solved this issue, and the fix is actually quite simple. Firefox doesn't fire onpopstate on initial page load. After you fire a popstate, return false or prevent default on the page.load action, and you're golden.</p>\n\n<p>Cheers.</p>\n\n<p>In action here: www.thecoffeeshopnyc.com</p>\n\n<pre><code>// Write in a new handler for Firefox, which does not fire popstate on load.\n// Modern Webkit browsers fire popstate on load. The event handler below fires the controller\n$(window).load(function () {\n    if ($.browser.mozilla) {\n        // Your func.\n    }\n})\n\n// Add the event listener. If the above is false, it will still run as intended in normal browsers.\nwindow.onpopstate = function() {\n    // Your func.\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>In case someone is interested, I've came up with a decent pattern for working with <code>onpopstate</code> (this code assumes jQuery, feature detection checks are stripped for clarity):</p>\n\n<pre><code>$(function() {\n\n  // 1. Add initial state to current history record on page load.\n  var href = location.href;\n  history.replaceState({\"href\": href}, null, href);\n\n  // 2. Now attach the popstate handler.\n  window.onpopstate = function(ev) {\n\n    // Raised on page load this event will still contain no state.\n    var state = ev.state;\n    if (state &amp;&amp; state.href) {\n\n      // 3. Add your logic, use `state` and `state.href` as you see fit.          \n\n    }\n  };\n\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'm using the new HTML5 onpopstate event. Using Firefox 4 the window.onpopstate event is triggered on a page load whilst in Webkit this does not seem to be the case.</p>\n\n<p>Which is the correct behaviour?</p>\n",
            "last_activity_date": 1423797314,
            "question_id": 3700440,
            "score": 9,
            "tags": [
                "javascript",
                "html5"
            ],
            "title": "HTML5 onpopstate on page load"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>There is no such event in the Chrome Extension API.</p>\n\n<p>There is however a <code>chrome.windows.onRemoved</code> event that fires each time a window closes. I figured you could check in this event if you closed the last window, but unfortunately due to the asynchronous nature of Chrome this doesn't work.</p>\n\n<p>What I tried was running a simple AJAX request in the <code>onRemoved</code> event handler. The AJAX request never got to the server, as Chrome had already closed before running the event (or just disregarded it).</p>\n\n<p>Making the final answer be: <strong>No, currently you can't</strong>, as far as I know. You might want to star the following bug report at <a href=\"http://crbug.com/30885\">http://crbug.com/30885</a> to get noticed on updates.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>Adding a browser close event is a pretty frequent request. Star <a href=\"http://crbug.com/30885\" rel=\"nofollow\">http://crbug.com/30885</a> for updates. And read the bug report for a clever hack to detect when the browser is shut down via a key press.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>If you catch the case when the number of open tabs is 0, you can treat that as a Chrome onClose event. In my case, I have to cancel a desktop notification before Chrome closes because it was crashing otherwise.\nThis is how I did it:</p>\n\n<strong>1. Initialize a variable num_tabs by using the following:</strong>\n\n<pre><code>chrome.tabs.getAllInWindow( null, function( tabs ){\n    console.log(\"Initial tab count: \" + tabs.length);\n    num_tabs = tabs.length;\n});\n</code></pre>\n\n<strong>2. Increment num_tabs when a tab is created:</strong>\n\n<pre><code>chrome.tabs.onCreated.addListener(function(tab){\n    num_tabs++;\n    console.log(\"Tab created event caught. Open tabs #: \" + num_tabs);\n});\n</code></pre>\n\n<strong>3. Decrement num_tabs when a tab is removed and run your browser onclose event handler if num_tabs = 0</strong>\n\n<pre><code>chrome.tabs.onRemoved.addListener(function(tabId){\n    num_tabs--;\n    console.log(\"Tab removed event caught. Open tabs #: \" + num_tabs);\n    if( num_tabs == 0 )\n        notification.cancel();\n});\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>This one works for me:</p>\n\n<pre><code>chrome.windows.onRemoved.addListener(function(windowId){\n  alert(\"!! Exiting the Browser !!\");\n});\n</code></pre>\n\n<p>It takes <code>chrome.windows</code> rather than <code>chrome.tabs</code>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I am developing an extension for Google Chrome browser.\nBackground script, everytime , authorizes on a server that Though XMPP API, and Subscribed for a PubSub node. I need to unsubscribe on the exit , otherwise the dummy subscriptions are left on the server.</p>\n\n<blockquote>\n  <p>Is There any OnBrowserClose event in\n  Google Chrome API ?</p>\n</blockquote>\n",
            "last_activity_date": 1426015666,
            "question_id": 3390470,
            "score": 9,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "Event onBrowserClose for Google Chrome?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I am very sure that the answer is no, unless you want to consider some sort of ActiveX plugin to the browser (in which case the answer might still be no...)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>No such event exists. You need to take a different approach to solve this.</p>\n\n<ol>\n<li>target the download link to a hidden iframe with a name (<code>target=\"myhiddeniframe\"</code>)</li>\n<li>on click of the download link, show your loading spinner</li>\n<li>set the <code>onload</code> attribute of the iframe to a callback that hides your spinner</li>\n</ol>\n\n<p>Net effect: you \"spin\" while the pdf is generated, and \"unspin\" when the \"File download\" dialog appears (as opposed to when the \"File download\" dialog is <em>closed</em>).</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>I had to work on this kind of issue, on another project. I finally found a smart solution, as explained in another <a href=\"http://stackoverflow.com/questions/1106377/detect-when-browser-receives-file-download\">Stackoverflow question</a>.</p>\n\n<p>The explanation is given in the following post: <a href=\"http://gruffcode.com/2010/10/28/detecting-the-file-download-dialog-in-the-browser\" rel=\"nofollow\">http://gruffcode.com/2010/10/28/detecting-the-file-download-dialog-in-the-browser</a></p>\n\n<p>The idea is to \"simply\" use a cookie to define when the file is downloaded.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I have a web page (made with JSF) where some links allow the user to get a PDF file.</p>\n\n<p>When the user clicks on such a link, a waiting popup (it is a modal panel) is displayed (because the generation of the PDF can be long), and once the file is created, IE displays the \"File download\" popup that proposes \"Open\", \"Save\" and \"Cancel\" options.</p>\n\n<p>Is there a way in Javascript to know from my web page when this popup is closed, i.e. when the user has saved (or opened) the PDF file?</p>\n\n<p>To be a little more precise, in the web page that displays the link to the PDF file, a modal popup is displayed (the \"waiting popup\") in order to make the user waits for the \"File download\" popup. The problem is that when the user Saves (or open) the PDF file, the \"File download\" popup closes, but the user then \"returns\" to the original webpage, with the waiting popup still displayed.</p>\n\n<p>Note that my application runs only in IE6, so I am not against a IE(6)-only solution...</p>\n\n<p>I have also no problem with solutions that need jQuery ;)</p>\n\n<p><strong>Edit:</strong>\nIf a solution exists to catch any event that is fired exactly when the \"File download\" popup is displayed to the user (i.e. before the user chooses to Save, Open or Cancel), it will be fine for me too!</p>\n",
            "last_activity_date": 1423882389,
            "question_id": 666468,
            "score": 9,
            "tags": [
                "javascript",
                "internet-explorer",
                "download"
            ],
            "title": "detecting when the &quot;File download&quot; popup is closed"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Include Silverlight.js (from Silverlight SDK)</p>\n\n<p><code>Silverlight.isInstalled(\"4.0\")</code></p>\n\n<hr>\n\n<p><strong>Resource:</strong></p>\n\n<p><a href=\"http://msdn.microsoft.com/en-us/library/cc265155(vs.95).aspx\" rel=\"nofollow\"><a href=\"http://msdn.microsoft.com/en-us/library/cc265155(vs.95).aspx\" rel=\"nofollow\">http://msdn.microsoft.com/en-us/library/cc265155(vs.95).aspx</a></a></p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<pre><code>var hasSilverlight = Boolean(window.Silverlight);\n\nvar hasSilverlight2 = hasSilverlight &amp;&amp; Silverlight.isInstalled('2.0');\n</code></pre>\n\n<p>Etc....</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Please actually use the latest script available at <a href=\"http://code.msdn.microsoft.com/silverlightjs\">http://code.msdn.microsoft.com/silverlightjs</a> for the latest updates.  This has several fixes in it.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Download this script: <a href=\"http://code.msdn.microsoft.com/silverlightjs\" rel=\"nofollow\">http://code.msdn.microsoft.com/silverlightjs</a></p>\n\n<p>And then you can use it like so:</p>\n\n<p><code>\n\nif (Silverlight.isInstalled)\n{\nalert (\"Congrats. Your web browser is enabled with Silverlight Runtime\");\n}\n\n</code></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>        if (Silverlight.isInstalled(\"1.0\")) {\n            try {\n                alert(\"Silverlight Version 1.0 or above is installed\");\n            }\n            catch (err) {\n                alert(err.Description);\n            }\n        }\n        else {\n            alert(\"No Silverlight is installed\");\n        }\n</code></pre>\n\n<p>from this <a href=\"http://www.silverlight.net/learn/videos/all/how-to-determine-if-silverlight-is-installed/\" rel=\"nofollow\">video</a>.</p>\n\n<p>Silverlight.isInstalled is always true so version string such as \"1.0\" must be provided to make it useful. </p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a javascript function I can use to detect whether a specific silverlight version is installed in the current browser?</p>\n\n<p>I'm particularly interested in the Silverlight 2 Beta 2 version. I don't want to use the default method of having an image behind the silverlight control which is just shown if the Silverlight plugin doesn't load.</p>\n\n<p><strong>Edit:</strong> From link provided in accepted answer:</p>\n\n<p>Include Silverlight.js (from Silverlight SDK)</p>\n\n<pre><code>Silverlight.isInstalled(\"2.0\");\n</code></pre>\n",
            "last_activity_date": 1366897038,
            "question_id": 119980,
            "score": 9,
            "tags": [
                "javascript",
                "silverlight"
            ],
            "title": "Detect via javascript whether Silverlight is installed"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<blockquote>\n  <p>I want to just refresh the div, without refreshing the page ... Is this possible?</p>\n</blockquote>\n\n<p>Yes, though it isn't going to be obvious that it does anything unless you change the contents of the div.</p>\n\n<p>If you just want the graphical fade-in effect, simply remove the <code>.html(data)</code> call:</p>\n\n<pre><code>$(\"#panel\").hide().fadeIn('fast');\n</code></pre>\n\n<p>Here is a demo you can mess around with: <a href=\"http://jsfiddle.net/ZPYUS/\">http://jsfiddle.net/ZPYUS/</a></p>\n\n<p>It changes the contents of the div without making an ajax call to the server, and without refreshing the page.  The content is hard coded, though.  You can't do anything about that fact without contacting the server somehow: ajax, some sort of sub-page request, or some sort of page refresh.</p>\n\n<p>html:</p>\n\n<pre><code>&lt;div id=\"panel\"&gt;test data&lt;/div&gt;\n&lt;input id=\"changePanel\" value=\"Change Panel\" type=\"button\"&gt;\u200b\n</code></pre>\n\n<p>javascript:</p>\n\n<pre><code>$(\"#changePanel\").click(function() {\n    var data = \"foobar\";\n    $(\"#panel\").hide().html(data).fadeIn('fast');\n});\u200b\n</code></pre>\n\n<p>css:</p>\n\n<pre><code>div {\n    padding: 1em;\n    background-color: #00c000;\n}\n\ninput {\n    padding: .25em 1em;\n}\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 21
                },
                {
                    "body": "<p>I tried the first solution and it works but the end user can easily identify that the div's are refreshing as it is fadeIn(), without fade in i tried .toggle().toggle() and it works perfect.\nyou can try like this</p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\">\r\n<div class=\"snippet-code\">\r\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>$(\"#panel\").toggle().toggle();</code></pre>\r\n</div>\r\n</div>\r\n</p>\n\n<p>it works perfectly for me as i'm developing a messenger and need to minimize and maximize the chat box's and this does it best rather than the above code.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I'd like to refresh a div.  It should have new information from the server on it.  All the other answers assume that you've gotten the new data from your $.ajax request and tell you to load that data onto your div, hide it, and show it again, like so:</p>\n\n<pre><code>$(\"#panel\").hide().html(data).fadeIn('fast');\n</code></pre>\n\n<p>I know, I know, I probably should just get data with Ajax.  But right now, I want to just refresh the div, without refreshing the page, and without putting new HTML into the div.  Is this possible?</p>\n",
            "last_activity_date": 1416054974,
            "question_id": 10427573,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "html",
                "refresh"
            ],
            "title": "refresh div with jquery"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>You can't access it because of a flaw in JavaScript's tokenizer. Javascript tries to parse the dot notation on a number as a floating point literal, so you can't follow it with a property or method:</p>\n\n<p><code>2.toString(); // raises SyntaxError</code></p>\n\n<p>As you mentioned, there are a couple of workarounds which can be used in order make number literals act as objects too. Any of these is equally valid.</p>\n\n<pre><code>2..toString(); // the second point is correctly recognized\n2 .toString(); // note the space left to the dot\n(2).toString(); // 2 is evaluated first\n</code></pre>\n\n<p>To understand more behind object usage and properties, check out the <a href=\"http://bonsaiden.github.com/JavaScript-Garden/#object.general\" rel=\"nofollow\">Javascript Garden</a>.</p>\n",
                    "is_accepted": false,
                    "score": 7
                },
                {
                    "body": "<p>It doesn't work because JavaScript interprets the <code>3.</code> as being either the start of a floating-point constant (such as <code>3.5</code>) or else an <em>entire</em> floating-point constant (with <code>3. == 3.0</code>), so you can't follow it by an identifier (in your case, a property-name). It fails to recognize that you intended the <code>3</code> and the <code>.</code> to be two separate tokens.</p>\n\n<p>Any of your workarounds looks fine to me.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>The period is part of the number, so the code will be interpreted the same as:</p>\n\n<pre><code>(3.)toFixed(5)\n</code></pre>\n\n<p>This will naturally give a syntax error, as you can't immediately follow the number with an identifier.</p>\n\n<p>Any method that keeps the period from being interpreted as part of the number would work. I think that the clearest way is to put parentheses around the number:</p>\n\n<pre><code>(3).toFixed(5)\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 12
                }
            ],
            "body": "<p>If I try to write</p>\n\n<pre><code>3.toFixed(5)\n</code></pre>\n\n<p>there is a syntax error. Using double dots, putting in a space, putting the three in parentheses or using bracket notation allows it to work properly.</p>\n\n<pre><code>3..toFixed(5)\n3 .toFixed(5)\n(3).toFixed(5)\n3[\"toFixed\"](5)\n</code></pre>\n\n<p>Why doesn't the single dot notation work and which one of these alternatives should I use instead?</p>\n",
            "last_activity_date": 1329839602,
            "question_id": 9380077,
            "score": 8,
            "tags": [
                "javascript",
                "syntax"
            ],
            "title": "Why can&#39;t I access a property of an integer with a single dot?"
        },
        {
            "answer_count": 8,
            "answers": [
                {
                    "body": "<p>Make use of brackets <code>/^\\d{2}[.-/]\\d{2}[.-/]\\d{4}$/</code>\n<a href=\"http://download.oracle.com/javase/tutorial/essential/regex/char_classes.html\" rel=\"nofollow\">http://download.oracle.com/javase/tutorial/essential/regex/char_classes.html</a></p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>^\\d\\d[./-]\\d\\d[./-]\\d\\d\\d\\d$\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You could use a character class (<code>[./-]</code>) so that the seperators can be any of the defined characters</p>\n\n<pre><code>var dateReg = /^\\d{2}[./-]\\d{2}[./-]\\d{4}$/\n</code></pre>\n\n<p>Or better still, match the character class for the first seperator, then capture that as a group <code>([./-])</code> and use a reference to the captured group <code>\\1</code> to match the second seperator, which will ensure that both seperators are the same:</p>\n\n<pre><code>var dateReg = /^\\d{2}([./-])\\d{2}\\1\\d{4}$/\n\n\"22-03-1981\".match(dateReg) // matches\n\"22.03-1981\".match(dateReg) // does not match\n\"22.03.1981\".match(dateReg) // matches\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>The suggested regex will not validate the date, only the pattern.\nSo 99.99.9999 will pass the regex.</p>\n\n<p>Why not create a date object?</p>\n\n<p><a href=\"http://jsfiddle.net/mplungjan/Mqh8D/\" rel=\"nofollow\">Demo here</a></p>\n\n<pre><code>function isDate(str) {    \n  var parms = str.split(/[\\.\\-\\/]/);\n  var yyyy = parseInt(parms[2],10);\n  var mm   = parseInt(parms[1],10);\n  var dd   = parseInt(parms[0],10);\n  var date = new Date(yyyy,mm-1,dd,0,0,0,0);\n  return mm === (date.getMonth()+1) &amp;&amp; \n         dd === date.getDate() &amp;&amp; \n       yyyy === date.getFullYear();\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>Don't re-invent the wheel. Use a pre-built solution for parsing dates, like <a href=\"http://www.datejs.com/\" rel=\"nofollow\">http://www.datejs.com/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Format, days, months and year:</p>\n\n<p><code>var regex = /^(0[1-9]|[12][0-9]|3[01])[- /.](0[1-9]|1[012])[- /.](19|20)\\d\\d$/;</code></p>\n",
                    "is_accepted": false,
                    "score": 10
                },
                {
                    "body": "<p>@mplungjan, @eduard-luca</p>\n\n<pre><code>function isDate(str) {    \n    var parms = str.split(/[\\.\\-\\/]/);\n    var yyyy = parseInt(parms[2],10);\n    var mm   = parseInt(parms[1],10);\n    var dd   = parseInt(parms[0],10);\n    var date = new Date(yyyy,mm-1,dd,12,0,0,0);\n    return mm === (date.getMonth()+1) &amp;&amp; \n        dd === date.getDate() &amp;&amp; \n        yyyy === date.getFullYear();\n}\n</code></pre>\n\n<p>new Date() uses local time, hour 00:00:00 will show the last day when we have \"Summer Time\" or \"DST (Daylight Saving Time)\" events.</p>\n\n<p>Example: </p>\n\n<pre><code>new Date(2010,9,17)\nSat Oct 16 2010 23:00:00 GMT-0300 (BRT)\n</code></pre>\n\n<p>Another alternative is to use getUTCDate().</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>You can use regular multiple expressions with the use of OR (|) operator.</p>\n\n<pre><code>function validateDate(date){\n    var regex=new RegExp(\"([0-9]{4}[-](0[1-9]|1[0-2])[-]([0-2]{1}[0-9]{1}|3[0-1]{1})|([0-2]{1}[0-9]{1}|3[0-1]{1})[-](0[1-9]|1[0-2])[-][0-9]{4})\");\n    var dateOk=regex.test(date);\n    if(dateOk){\n        alert(\"Ok\");\n    }else{\n        alert(\"not Ok\");\n    }\n}\n</code></pre>\n\n<p>Above function can validate YYYY-MM-DD, DD-MM-YYYY date formats. You can simply extend the regular expression to validate any date format. Assume you want to validate YYYY/MM/DD, just replace \"[-]\" with \"[-|/]\". This expression can validate dates to 31, months to 12. But leap years and months ends with 30 days are not validated. </p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there any way to have a regex in JavaScript that validates dates of multiple formats, like: DD-MM-YYYY or DD.MM.YYYY or DD/MM/YYYY etc? I need all these in one regex and I'm not really good with it. So far I've come up with this: <code>var dateReg = /^\\d{2}-\\d{2}-\\d{4}$/;</code> for DD-MM-YYYY</p>\n",
            "last_activity_date": 1404815346,
            "question_id": 7388001,
            "score": 8,
            "tags": [
                "javascript",
                "regex"
            ],
            "title": "Javascript - Regex to validate date"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>Read about these javascript functions - indexOF() and lastIndexOf().</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Try using this:</p>\n\n<pre><code>function strstr(haystack, needle, bool) {\n    // Finds first occurrence of a string within another\n    //\n    // version: 1103.1210\n    // discuss at: http://phpjs.org/functions/strstr    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: strstr(\u2018Kevin van Zonneveld\u2019, \u2018van\u2019);\n    // *     returns 1: \u2018van Zonneveld\u2019    // *     example 2: strstr(\u2018Kevin van Zonneveld\u2019, \u2018van\u2019, true);\n    // *     returns 2: \u2018Kevin \u2018\n    // *     example 3: strstr(\u2018name@example.com\u2019, \u2018@\u2019);\n    // *     returns 3: \u2018@example.com\u2019\n    // *     example 4: strstr(\u2018name@example.com\u2019, \u2018@\u2019, true);    // *     returns 4: \u2018name\u2019\n    var pos = 0;\n\n    haystack += \"\";\n    pos = haystack.indexOf(needle); if (pos == -1) {\n        return false;\n    } else {\n        if (bool) {\n            return haystack.substr(0, pos);\n        } else {\n            return haystack.slice(pos);\n        }\n    }\n}\n</code></pre>\n\n<p>(From <a href=\"http://phpjs.org/functions/strstr:551\">http://phpjs.org/functions/strstr:551</a>)</p>\n\n<p>Overall phpjs is pretty phenomenal.</p>\n",
                    "is_accepted": false,
                    "score": 9
                },
                {
                    "body": "<p>Well, not built in. <code>String.indexOf( String str )</code> returns the integer index of the substring\nbut then, you can easily build one: <a href=\"http://aimtb.wordpress.com/2011/03/16/strstr-in-javascript/\" rel=\"nofollow\">http://aimtb.wordpress.com/2011/03/16/strstr-in-javascript/</a></p>\n\n<pre><code>function strstr(haystack, needle, bool) {\n    // Finds first occurrence of a string within another\n    //\n    // version: 1103.1210\n    // discuss at: http://phpjs.org/functions/strstr    // +   original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // +   bugfixed by: Onno Marsman\n    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n    // *     example 1: strstr(\u2018Kevin van Zonneveld\u2019, \u2018van\u2019);\n    // *     returns 1: \u2018van Zonneveld\u2019    // *     example 2: strstr(\u2018Kevin van Zonneveld\u2019, \u2018van\u2019, true);\n    // *     returns 2: \u2018Kevin \u2018\n    // *     example 3: strstr(\u2018name@example.com\u2019, \u2018@\u2019);\n    // *     returns 3: \u2018@example.com\u2019\n    // *     example 4: strstr(\u2018name@example.com\u2019, \u2018@\u2019, true);    // *     returns 4: \u2018name\u2019\n    var pos = 0;\n\n    haystack += \"\";\n    pos = haystack.indexOf(needle); if (pos == -1) {\n        return false;\n    } else {\n        if (bool) {\n            return haystack.substr(0, pos);\n        } else {\n            return haystack.slice(pos);\n        }\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>Ok I just found something that works!</p>\n\n<p><a href=\"http://my-sliit.blogspot.com/2008/06/search-string-javascript-like-strstr-in.html\" rel=\"nofollow\">http://my-sliit.blogspot.com/2008/06/search-string-javascript-like-strstr-in.html</a></p>\n\n<p>Thanks for your contributions :)</p>\n",
                    "is_accepted": true,
                    "score": 3
                },
                {
                    "body": "<p>Here is an implementation without any library/method calls:</p>\n\n<pre><code>function strstr (haystack, needle) {\n    var i = 0,\n        tempLength = 0,\n        temp = [];\n    for (;;) {\n        if (haystack[i] === undefined || needle == null) {\n            return \"No match\";\n        }\n        //if the char doesn't match then reset\n        else if (haystack[i] !== needle[tempLength]) {\n            temp = [];\n            tempLength = 0;\n        } \n        //the char matches so let's store it.\n        else if (haystack[i] === needle[tempLength]) {\n            temp[tempLength] = haystack[i];\n            if (needle[tempLength + 1] === undefined) {\n                return temp;\n            }\n            tempLength++;\n        }\n     i++;\n   }\n};\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Is there a function in jQuery or JavaScript that does the same as strstr() in PHP.</p>\n\n<p>I have an ajax response that should be 1,2,3,12,13,23 or 123, I want to check if 1 exists, then if 2 exists then if 3 exists.</p>\n\n<p>Thanks.</p>\n",
            "last_activity_date": 1343108908,
            "question_id": 7015181,
            "score": 8,
            "tags": [
                "javascript",
                "jquery",
                "strstr"
            ],
            "title": "jQuery or JavaScript strstr"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<p>This might happen because they are strings. Try parsing them:</p>\n\n<pre><code>Global.alert(\n    \"base: \" + base + \", upfront: \" + upfront + \", both: \" + \n    (parseInt(base) + parseInt(upfront))\n);\n</code></pre>\n\n<p>If those numbers are decimal you will need the <code>parseFloat</code> method instead.</p>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>It's handling it as a string. You need to do your math before the string. Example:</p>\n\n<pre><code>base + upfront + ' string' \n</code></pre>\n\n<p>would return \"15036 string\". </p>\n\n<pre><code>string + base + upfront\n</code></pre>\n\n<p>would return string 1500036 as you are seeing now.</p>\n\n<p>Or use <a href=\"http://www.diveintojavascript.com/core-javascript-reference/the-parseint-function\" rel=\"nofollow\">parseInt()</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Try</p>\n\n<pre><code>Global.alert(\n    \"base: \" + base + \", upfront: \" + upfront + \", both: \" + \n    (parseInt(base,10) + parseInt(upfront,10))\n);\n</code></pre>\n\n<p>The 10 specifies base 10, otherwise the chance of the value being parsed as octal exists.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p><a href=\"http://jsperf.com/number-vs-parseint-vs-plus/3\" rel=\"nofollow\">http://jsperf.com/number-vs-parseint-vs-plus/3</a></p>\n\n<p>That might also be of interest to you.\nIt is just a performance comparison of the methods already mentioned here.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I don't know why the brackets aren't helping you out.<br>\nIf I try</p>\n\n<pre><code>var base = 500;\nvar upfront = 100;\nalert(\"base: \" + base + \", upfront: \" + upfront + \", both: \" + (base + upfront))\n</code></pre>\n\n<p>I do get 600 as the answer, so it could be there is something going on in the Global.alert function?</p>\n\n<p>One of the mistakes of the language design is that + is both an addition operator and a concatenation operator.  Coupled with the fact that it is loosely typed and will cast implicitly means that it can give you some nasty surprises unless you take steps to ensure that you really are adding numbers and not concatenating strings.  In this case, it is treating your base + upfront as strings and therefore concatenating.</p>\n\n<p>Anyway, the way around it could be to have <code>(base - upfront*-1)</code> instead.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Simple example:</p>\n\n<pre><code> 1 +1 == 2\n\"1\"+1 == \"11\"\n\"1\"*1 + 1 == 2\n</code></pre>\n\n<p>Ways to turn a string into a number:</p>\n\n<ul>\n<li><code>parseInt(str)</code></li>\n<li><code>parseInt(str,10)</code></li>\n<li><code>parseFloat(str)</code></li>\n<li><code>+str</code></li>\n<li><code>str*1</code></li>\n<li><code>str-0</code></li>\n<li><code>str&lt;&lt;0</code></li>\n<li><code>Number(str)</code></li>\n</ul>\n\n<p>And here are some of the consequences:\n<img src=\"http://phrogz.net/JS/string_to_number.png\" alt=\"Results of converting various strings using the above techniques\"></p>\n\n<p><em><code>Number(str)</code> has the same behavior as <code>str*1</code>, but requires a function call.</em></p>\n\n<p>I personally use <code>*1</code> as it is short to type, but still stands out (unlike the unary +), and either gives me what the user typed or fails completely. I only use <code>parseInt()</code> when I <em>know</em> that there will be non-numeric content at the end to ignore, or when I need to parse a non-base-10 string.</p>\n\n<p>You can test the performance of these in your browser <a href=\"http://phrogz.net/JS/string_to_number.html\">at my example page</a>.</p>\n",
                    "is_accepted": false,
                    "score": 18
                }
            ],
            "body": "<pre><code>Global.alert(\"base: \" + base + \", upfront: \" + upfront + \", both: \" + (base + upfront));\n</code></pre>\n\n<p>The code above outputs something like:</p>\n\n<pre><code>base: 15000, upfront: 36, both: 1500036\n</code></pre>\n\n<p>Why is it joining the two numbers instead of adding them up?</p>\n\n<p>I eventually want to set the value of another field to this amount using this:</p>\n\n<pre><code>mainPanel.feesPanel.initialLoanAmount.setValue(Ext.util.Format.number((base + upfront), '$0,000.00'));\n</code></pre>\n\n<p>And when I try that, it turns the number into the millions instead of 15,036.00. Why?</p>\n",
            "last_activity_date": 1389643680,
            "question_id": 3638074,
            "score": 8,
            "tags": [
                "javascript"
            ],
            "title": "Adding two numbers in JavaScript incorrectly"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>IIRC, <code>getElementsByClassName</code> was introduced in Firefox 3, Safari 3.1, and has been in Chrome since the beginning. I don't know if/when it was added to Opera, but it isn't present in Internet Explorer at all. (Though it can be added to IE8 by extending the DOM prototypes; see <a href=\"http://stackoverflow.com/questions/900117/is-getelementbyclass-safe-to-use-across-browsers-like-getelementbyid/900187#900187\">Grant's answer</a>.)</p>\n\n<p>In other words, if you want a cross-browser <code>getElementsByClassName</code>, you'll either need to roll your own or use a framework.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>As as been mentioned by others, <code>getElementsByClassName</code> is not available in Internet Explorer.</p>\n\n<p>See the <a href=\"http://msdn.microsoft.com/en-us/library/dd282900.aspx#custom\" rel=\"nofollow\">Customizing the DOM</a> section of <a href=\"http://msdn.microsoft.com/en-us/library/dd282900.aspx\" rel=\"nofollow\">Document Object Model Prototypes, Part 1: Introduction</a> for information on how to implement the functionality in IE.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>If you really want to use it, you could test to verify if the object supports getElementsByClassname prior to using it and fall back to a JS implementation of the function if the browser doesn't support it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I would suggest using a wrapper library like prototype.js or jQuery, which both support a css selector model, and handle browser compatibility issues (IE6-7 being the bigger issues usually)</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p><code>getElementsByClassName</code> is unfortunately not reliable cross-browser. It's currently supported by the most recent versions of Firefox, Opera, Safari, and Chrome, but not at all in Internet Explorer or Konqueror, according to <a href=\"http://www.quirksmode.org/dom/w3c%5Fcore.html#t11\">Quirksmode</a>.</p>\n\n<p>If you want to use it cross-browser, you'll have to have to provide your own implementation for those browsers that don't support it, <a href=\"http://www.quirksmode.org/blog/archives/2008/05/getelementsbycl.html\">like in PPK's blog</a>:</p>\n\n<pre><code>function getElementsByClassName(node,classname) {\n    if (node.getElementsByClassName)\n        return node.getElementsByClassName(classname);\n    else {\n        // your custom function\n    }\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>Is getElementByClass safe to use across browsers like getElementById?</p>\n\n<p><b>Update</b>\nCurrently using:</p>\n\n<pre><code> window.opener.document.getElementById\n</code></pre>\n\n<p>But I want to reference the object by classname (there will be only 1 element with that classname).</p>\n",
            "last_activity_date": 1243046068,
            "question_id": 900117,
            "score": 8,
            "tags": [
                "javascript",
                "dom"
            ],
            "title": "Is getElementByClass safe to use across browsers like getElementById?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I don\u2019t think it\u2019s a safe assumption at all, as browsers execute javascript code quite differently depending on a number of things (like if you have other script elements in the head, if they are external etc.).</p>\n\n<p>You should just require people to use a dummy element with a custom id or class. That way you will also make it possible to do whatever you do multiple times a page without having to run the script multiple times.</p>\n\n<p>This is also what is done when using widgets, for example Google\u2019s +1 button.</p>\n\n<p>An alternative would be to use <code>document.write</code> to write additional content while the script is executed. This will not replace the script tag however, but simply add something after it.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>It's not an absolute guarantee no. Check out this JSFiddle: <a href=\"http://jsfiddle.net/jAsek/\" rel=\"nofollow\">http://jsfiddle.net/jAsek/</a></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;title&gt;Test case&lt;/title&gt;\n&lt;div&gt;\n    &lt;p&gt;At the start&lt;/p&gt;\n    &lt;script id=\"first\"&gt;\n        var scr1 = document.createElement(\"script\");\n        scr1.setAttribute(\"id\", \"early\");\n        document.body.appendChild(scr1);\n    &lt;/script&gt;\n    &lt;p&gt;After the first script&lt;/p&gt;\n    &lt;script id=\"second\"&gt;\n        function getCurrentScriptElement() {\n            var scripts = document.getElementsByTagName('script');\n            return scripts[scripts.length - 1];\n        }\n\n        alert(getCurrentScriptElement().id);\n    &lt;/script&gt;\n    &lt;p&gt;At the end&lt;/p&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>Here the alert reports the id of the injected script \"early\", not the id of currently running script \"second\".</p>\n\n<p>There's no practical difference between internal and external scripts.</p>\n",
                    "is_accepted": true,
                    "score": 4
                }
            ],
            "body": "<p>Is it safe to assume that the last <code>script</code> element* in the document when the script runs** is the currently running script?</p>\n\n<p>For example, I want to create a script that can be dropped anywhere in the body of of a page and display an element in the same place. I'm doing something like this: </p>\n\n<pre><code>function getCurrentScriptElement() {\n    var scripts = document.getElementsByTagName('script');\n    return scripts[scripts.length - 1];\n}\n\nvar script = getCurrentScriptElement();\nvar view = document.createElement('span');\n\n/* Put stuff in our view... */\n\nscript.parentNode.insertBefore(view, script);\n</code></pre>\n\n<p>Assuming the script is in the body of the document, is this \"safe?\" Will the <code>getCurrentScriptElement</code> function always return the running script? If not, how can it be done?</p>\n\n<p>I'd like to do this without tying the script to a specific id attribute or similar, I'd like it to just be positional.</p>\n\n<hr>\n\n<p>I created an example <a href=\"http://jsbin.com/ibufos/1/edit\" rel=\"nofollow\">here</a> that pulls in <a href=\"http://jsbin.com/oloyef/3/edit\" rel=\"nofollow\">this script</a>. One answer suggested that other scripts could create a condition where an example like this would break. Is it possible to add other scripts to this example that will break it? </p>\n\n<hr>\n\n<p>It was suggested that other scripts with <code>defer</code> or <code>async</code> attributes could break this. Can anyone give an example of how such a script might work?</p>\n\n<p>As I understand it, <code>defer</code> means load the DOM first, and then run the script with the <code>defer</code> tag. How would the <code>defer</code> attribute appearing on another script element affect the behavior of <code>getCurrentScriptElement</code>? </p>\n\n<p><code>async</code>, as I understand it, means start fetching that script and keep parsing the DOM at the same time, don't wait... but when it hits <em>my</em> script it should still stop and wait, right?</p>\n\n<p>I don't see how either one could affect it, can anyone provide an example? </p>\n\n<hr>\n\n<p>* I'm only interested in external scripts for the purpose of this question.</p>\n\n<p>** Not the last <code>script</code> element in the entire document, but the last <code>script</code> element in the document at the time when it runs. The rest of the document shouldn't be loaded yet, right? </p>\n",
            "last_activity_date": 1358560448,
            "question_id": 14409982,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "dom"
            ],
            "title": "Is it the last `script` element the currently running script?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p><code>sendRequest</code>/<code>onRequest</code> is replaced with <code>sendMessage</code>/<code>onMessage</code> in Chrome 20. <code>*Message</code> is not just an alias for <code>*Request</code>, it's a different API.</p>\n\n<p>If you want to support Chrome &lt;20 (many Ubuntu users are still at Chromium 18, because the PPA is not updated), use <code>onRequest</code> and <code>sendRequest</code>. Otherwise, use the <code>*Message</code> methods.</p>\n\n<hr>\n\n<p>Another problem is that your function is located in the background page, and the call is made in the pop-up. These are different scopes, if you want to call a background page method from the popup, use <a href=\"http://code.google.com/chrome/extensions/extension.html#method-getBackgroundPage\"><code>chrome.extension.getBackgroundPage()</code></a>:</p>\n\n<pre><code>chrome.extension.getBackgroundPage().testRequest();\n</code></pre>\n\n<p>Final note: You're using manifest version 1 and inline event handlers. This practice is deprecated, for more information, see <a href=\"http://code.google.com/chrome/extensions/manifestVersion.html\">http://code.google.com/chrome/extensions/manifestVersion.html</a>.</p>\n",
                    "is_accepted": true,
                    "score": 15
                }
            ],
            "body": "<p>I am new to Chrome extensions. I am trying to communicate between the content script and the <em>background.html</em> page. The <em>background.html</em> sends a request, \"<em>hello</em>\", to the content script and the content script should respond back with \"<em>hello background</em>\" alert. But it's just not happening. My <em>background.html</em> code is:</p>\n\n<pre><code>function testRequest() {        \n    chrome.tabs.getSelected(null, function(tab) {\n        chrome.tabs.sendRequest(tab.id, {greeting: \"hello\"});\n    });    \n}\n</code></pre>\n\n<p><em>content.js</em> code:</p>\n\n<pre><code>chrome.extension.onMessage.addListener(\n    function(request, sender, sendResponse) {\n        if (request.greeting == \"hello\")\n        alert(\"hello background\");\n    }\n);\n</code></pre>\n\n<p><em>popup.html</em> code:</p>\n\n<pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n    &lt;head&gt;&lt;/head&gt;\n    &lt;body&gt;\n        &lt;form&gt;\n            &lt;input type=\"button\" value=\"sendMessage\" onclick=\"testRequest()\" /&gt;\n        &lt;/form&gt;    \n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n\n<p><em>manifest.json</em>:</p>\n\n<pre><code>{\n    \"browser_action\": {\n        \"default_icon\": \"icon.png\",\n        \"popup\": \"popup.html\"\n    },\n    \"background\": {\n        \"page\": \"background.html\"\n    },\n    \"permissions\": [\n        \"tabs\",\n        \"http://*/*\",\n        \"https://*/*\",\n        \"notifications\",\n        \"contextMenus\"\n    ],\n    \"content_scripts\": [\n        {\n            \"matches\": [\"http://*/*\",\"https://*/*\"],\n            \"js\": [\"content.js\"]\n        }\n    ],\n    \"name\": \"FirstExtension\",\n    \"version\": \"1.0\"\n}\n</code></pre>\n\n<p>Please help!</p>\n",
            "last_activity_date": 1354658024,
            "question_id": 11752341,
            "score": 7,
            "tags": [
                "javascript",
                "google-chrome-extension",
                "content-script"
            ],
            "title": "Chrome extension: Communication between content script and background.html"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>just use <code>:contains</code> pseudoclass</p>\n\n<pre><code>$('#example:contains(\"text\")').addClass('test');\n</code></pre>\n\n<p>this will add the class to <code>#example</code> if it contains 'text'</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You can use <code>$(\"#example\")</code> to get a jQuery wrapper for the element, then use <code>text()</code> to get its text, and use <code>String#indexOf</code>, e.g.:</p>\n\n<pre><code>var ex = $(\"#example\");\nif (ex.text().indexOf(\"text\") !== -1) {\n    ex.addClass(\"test\");\n}\n</code></pre>\n\n<p>You can also use <code>:contains(\"text\")</code> in the selector as <a href=\"http://stackoverflow.com/a/10329507/157247\">F. Calderan shows</a>, although note that when you use non-standard pseudo-selectors like that, jQuery can't use the underlying browser's built-in stuff for finding elements, so it can be slower. The above will allow jQuery to use <code>document.getElementById</code>. There are only a few situations where the speed really matters, though.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>try the following code</p>\n\n<pre><code>$('#example:contains(\"text\")').addClass('test');\n</code></pre>\n\n<p>Have a look <a href=\"http://api.jquery.com/contains-selector/\" rel=\"nofollow\">here</a> for examples and explanations of the <code>:contains</code> selector</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<pre><code>$('.test').css('background','red');\n\n&lt;div id=\"example\"&gt;Some text&lt;/div&gt;\n</code></pre>\n\n<p>How can I <code>.addClass('test')</code> if <code>#example</code> contains the word \"text\"?</p>\n",
            "last_activity_date": 1335427942,
            "question_id": 10329477,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "If element contains certain text"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Non-recognised CSS properties will be ignored when put within the <code>style</code> attribute, or in the <code>style.cssText</code> property.</p>\n\n<p>If you want to define a property at a specific element, I recommend <a href=\"https://developer.mozilla.org/en/DOM/element.dataset\">data-attributes</a>:<br />\nHTML:</p>\n\n<pre><code>&lt;div id=\"myDiv\" style=\"color:#f00;\" data-custom-property=\"upsidedown\" /&gt;\n</code></pre>\n\n<p>JavaScript:</p>\n\n\n\n<pre><code>//jQuery's method to retrieve value:\n$(\"#myDiv\").data(\"custom-property\");\n//jQuery, without parsing:\n$(\"#myDiv\").attr(\"data-custom-property\");\n\n// Modern browsers, native JS:\ndocument.getElementById(\"myDiv\").dataset[\"custom-property\"];\n// Older browsers, native JS:\ndocument.getElementById(\"myDiv\").getAttribute(\"data-custom-property\");\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 6
                },
                {
                    "body": "<p>You can't use data-* attributes (html5)?\nThat would at least be valid and not a strange hack.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>CSS values not used by the browser are discarded, and unobtainable via <code>.style</code>. Two other options are available, however:</p>\n\n<h1>1. Custom Attribute</h1>\n\n<p>Use a custom attribute, as defined by HTML5. Then, simply retrieve that attribute's value. This is the recommended route.</p>\n\n<p><strong>HTML</strong>\n<code>&lt;div id=\"myDiv\" style=\"color:#f00;\" data-custom-property=\"upsidedown\" /&gt;</code></p>\n\n<h1>2. Parse <code>style</code> Attribute</h1>\n\n<p>Retrieve the <code>style</code> attribute's value (not <code>.style</code>) and parse it into name/value pairs. Then use the value that is set to the name <code>-my-custom-property</code>. While this works, it's a bit of a hack, and I discourage its use.</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<pre><code>function getCustomCssProperty(elementID, propertyName){\n  var style = document.getElementById(elementID).getAttribute(\"style\");\n  var entries = style.split(\";\");\n\n for (var i=0; i&lt;entries.length; i++){\n  var entry = entries[i].split(\":\");\n  if(entry[0] == propertyName){\n   return entry[1];\n  }\n }  \n\n return null;\n\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>In an application where certain elements have custom CSS properties, is there any way to retrieve such a value via JavaScript?</p>\n\n<p>e.g.</p>\n\n<pre><code>&lt;div id=\"myDiv\" style=\"color:#f00;-my-custom-property:upsidedown;\" /&gt;\n</code></pre>\n\n<p>I can access the color attribute via these two methods:</p>\n\n<pre><code>$('myDiv').style.getPropertyValue(\"color\")\n$('myDiv').style.color\n</code></pre>\n\n<p>But these do not work for custom properties. Is this supported at all?</p>\n",
            "last_activity_date": 1326233289,
            "question_id": 8811027,
            "score": 7,
            "tags": [
                "javascript",
                "css",
                "prototypejs"
            ],
            "title": "Get element&#39;s custom css properties (-mystyle) using JavaScript"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>If you're using <code>&lt;select&gt;</code> elements as well, <code>.value</code> won't work whereas <code>.val()</code> will.</p>\n\n<p>I would not mind about performance of just getting a value. If you want the best performance, perhaps you shouldn't use a library at all.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I'd use jQuery's val(). Shorter code means faster download time (in my opinion).</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>The biggest advantage of using <code>jQuery().val()</code> over <code>document.getElementById().value</code> is that the former will <strong>not</strong> throw an error if no elements are matched, where-as the latter will. <code>document.getElementById()</code> returns <code>null</code> if no elements are matched, where-as <code>jQuery()</code> returns an empty jQuery object, which still supports all methods (but <code>val()</code> will return undefined).</p>\n\n<p>There is <strong>no</strong> inconsistency when using <code>.value</code> for form elements. However, jQuery.val() standardises the interface for collecting the selected value in select boxes; where as in standard HTML you have to resort to using <code>.options[this.selectedIndex].value</code>.</p>\n",
                    "is_accepted": true,
                    "score": 12
                },
                {
                    "body": "<p>jQuery does so many nice little error handling things that I would never write a line of javascript without jquery in a browser again. First, <code>val</code> works on checkbox groups, selects, gets html, and the like. Second, <code>$</code> lets you use sizzle selectors, so in the future, you can easily switch between an ID and a CSS path. Third, your code will be so much easier to read and maintain if you just use jQuery, that the time you save maintaining your code outweighs any speedup that you admit your users won't see. Finally, jQuery is a very popular, very widely used library. They will make <code>$</code> and <code>val</code> as fast as they can.</p>\n",
                    "is_accepted": false,
                    "score": 3
                },
                {
                    "body": "<p>I've been looking into the performance differences with this recently and, slightly unsurprisingly, using vanilla JS to grab a value is faster than using jQuery. However, the fallbacks that jQuery provides to prevent errors, like what @Matt mentioned, is very useful. Therefore, I tend to opt for the best of both worlds.</p>\n\n<pre><code>var $this = $(this),\n    $val = this.value || $this.val();\n</code></pre>\n\n<p>With that conditional statement, if <code>this.value</code> tries to throw an error, the code falls back to the jQuery <code>.val()</code> method.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I been searching for this but all I can find is articles talking about either one of those metods.</p>\n\n<p>My question is: which one is better?\nI'm making a small web app and performance is not a big concern since there's nothing complex going on</p>\n\n<p>I thought of using jQuery's val() function since it maybe solve some inconsistency I'm not aware of... but getElementById.value IS faster (although the end user won't notice at all)</p>\n\n<p>So... which one should I use? Is jQuery non-native method worth the lower performance to gain some more compatibility? </p>\n",
            "last_activity_date": 1407506570,
            "question_id": 7322078,
            "score": 7,
            "tags": [
                "javascript",
                "jquery"
            ],
            "title": "jQuery(#id).val() VS getElementById(#id).value"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>If it was specified by a matrix I guess you can't with a straightforward way, but you can easily parse the value:</p>\n\n<pre><code>var matrixRegex = /matrix\\((-?\\d*\\.?\\d+),\\s*0,\\s*0,\\s*(-?\\d*\\.?\\d+),\\s*0,\\s*0\\)/,\n    matches = $(element).css('-webkit-transform').match(matrixRegex);\n</code></pre>\n\n<p><code>matches[1]</code> will contain scaleX and <code>matches[2]</code> will contain scaleY. If it's possible that other transformations have also been applied, you'd need to slightly tweak the regex, because now it assumes that all other parameters are 0.</p>\n\n<p>A way to just get the scale values might be to remove any transforms, measure the computed width/height of the element and then add them back and measure again. Then divide new/old values. Haven't tried it, but it might work. jQuery itself uses a similar approach for many measurements, it even has an undocumented <code>$.swap()</code> function just for this.</p>\n\n<p>PS: You are using <code>-o-transform</code> <code>-moz-transform</code> and <code>-ms-transform</code> too, right?</p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>If you need to target webkit only (because it's for the iPhone, or iPad) the most reliable and fast way is using the native javascript webkit provides:</p>\n\n<pre><code>node = $(\"#yourid\")[0];\nvar curTransform = new WebKitCSSMatrix(window.getComputedStyle(node).webkitTransform);\nalert(curTransform.a); // curTransform is an object,\nalert(curTransform.d); // a through f represent all values of the transformation matrix\n</code></pre>\n\n<p>You can view a demo here:\n<a href=\"http://jsfiddle.net/umZHA/\" rel=\"nofollow\">http://jsfiddle.net/umZHA/</a></p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>Too late for the OP but might be useful in the future. There is a straightforward way to do it using splits:</p>\n\n<pre><code>function getTransformValue(element,property){       \n        var values = element[0].style.webkitTransform.split(\")\");\n        for (var key in values){\n            var val = values[key];              \n            var prop = val.split(\"(\");          \n            if (prop[0].trim() == property)\n                return prop[1];\n        }                   \n        return false;           \n    }\n</code></pre>\n\n<p>This is webkit specific, but can easily be extended for more browsers modifying the fist line.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>The simplest solution to find out the scale factor between the document and an element is the following:</p>\n\n<pre><code>var element = document.querySelector('...');\nvar scaleX = element.getBoundingClientRect().width / element.offsetWidth;\n</code></pre>\n\n<p>This works because getBoundingClientRect returns the actual dimension while offsetWidth/Height is the unscaled size.</p>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I'm wondering how I can get the scale value of an element?</p>\n\n<p>I have tried <code>$(element).css('-webkit-transform');</code> which returns <code>matrix(scaleX,0,0,scaleY,0,0);</code> Is there a way of getting <code>scaleX</code> and <code>scaleY</code> only?</p>\n",
            "last_activity_date": 1415815902,
            "question_id": 5603615,
            "score": 7,
            "tags": [
                "javascript",
                "jquery",
                "css3"
            ],
            "title": "Get the scale value of an element?"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>Is this what you're looking for?</p>\n\n<pre><code>var data;\nfor (var key in data) {\n   var value = data[key];\n   alert(key + \", \" + value);\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>You can use the <code>for..in</code> construct to iterate through arbitrary properties of your object:</p>\n\n<pre><code>for (var key in obj.d) {\n    console.log(\"Key: \" + key);\n    console.log(\"Value: \" + obj.d[key]);\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 18
                },
                {
                    "body": "<p>By using word \"b\", You are still using key name.</p>\n\n<pre><code>var info = {\n\"fname\": \"Bhaumik\",\n\"lname\": \"Mehta\",\n\"Age\": \"34\",\n\"favcolor\": {\"color1\":\"Gray\", \"color2\":\"Black\", \"color3\":\"Blue\"}\n};\n</code></pre>\n\n<p>Look at the below snippet.</p>\n\n<pre><code>for(key in info) {\n  var infoJSON = info[key];\n  console.log(infoJSON);\n}\n</code></pre>\n\n<p>Result would be,</p>\n\n<pre><code>Bhaumik\nMehta\nObject {color1: \"Gray\", color2: \"Black\", color3: \"Blue\"} \n</code></pre>\n\n<p>Don\u2019t want that last line to show up? Try following code:</p>\n\n<pre><code>for(key in info) {\n  var infoJSON = info[key];\n    if(typeof infoJSON !== \"object\"){\n       console.log(infoJSON);\n  }\n}\n</code></pre>\n\n<p>This will eliminate <code>Object {color1: \u201cGray\u201d, color2: \u201cBlack\u201d, color3: \u201cBlue\u201d}</code> from showing  up in the console.</p>\n\n<p>Now we need to iterate through the variable infoJSON to get array value. Look at the   following whole peace of code.</p>\n\n<pre><code>for(key in info) {\n    var infoJSON = info[key];\n    if (typeof infoJSON !== \"object\"){\n       console.log(infoJSON);\n    }\n }\n\nfor(key1 in infoJSON) {\n    if (infoJSON.hasOwnProperty(key1)) {\n       if(infoJSON[key1] instanceof Array) {\n          for(var i=0;i&lt;infoJSON[key1].length;i++) {\n             console.log(infoJSON[key1][i]);\n          }\n        } else {console.log(infoJSON[key1]);}\n    }\n }\n</code></pre>\n\n<p>And now we got the result as</p>\n\n<pre><code>Bhaumik\nMehta\nGray\nBlack\nBlue\n</code></pre>\n\n<p>If we use key name or id then it\u2019s very easy to get the values from the JSON object but here we are getting our values without using key name or id.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>Here's my json:</p>\n\n<pre><code>{\"d\":{\"key1\":\"value1\",\n      \"key2\":\"value2\"}}\n</code></pre>\n\n<p>Is there any way of accessing the keys and values (in javascript) in this array without knowing what the keys are?</p>\n\n<p>The reason my json is structured like this is that the webmethod that I'm calling via jquery is returning a dictionary. If it's impossible to work with the above, what do I need to change about the way I'm returning the data?</p>\n\n<p>Here's an outline of my webmethod:</p>\n\n<pre><code>&lt;WebMethod()&gt; _\nPublic Function Foo(ByVal Input As String) As Dictionary(Of String, String)\n    Dim Results As New Dictionary(Of String, String)\n\n    'code that does stuff\n\n    Results.Add(key,value)\n    Return Results\nEnd Function\n</code></pre>\n",
            "last_activity_date": 1413011562,
            "question_id": 5113847,
            "score": 7,
            "tags": [
                "javascript",
                "asp.net",
                "vb.net",
                "json"
            ],
            "title": "Accessing elements of JSON object without knowing the key names"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Scanning <a href=\"http://en.wikipedia.org/wiki/Comparison_of_JavaScript_frameworks\" rel=\"nofollow\">this page</a>, the only ones that come to mind are:</p>\n\n<ul>\n<li><a href=\"http://jquery.com/\" rel=\"nofollow\">jQuery</a> - Provides <a href=\"http://api.jquery.com/jQuery.noConflict\" rel=\"nofollow\"><code>jQuery.noConflict()</code></a> to release the <code>$</code></li>\n<li><a href=\"http://www.prototypejs.org/\" rel=\"nofollow\">Prototype</a></li>\n<li><a href=\"http://mootools.net/docs/core/Element/Element#Window%3adollar\" rel=\"nofollow\">MooTools</a></li>\n</ul>\n",
                    "is_accepted": true,
                    "score": 7
                },
                {
                    "body": "<p>Also zepto: <a href=\"http://zeptojs.com/\" rel=\"nofollow\">http://zeptojs.com/</a></p>\n\n<p>zepto actually matches most of the jQuery API.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Which JavaScript libraries take over the <code>$</code> variable in the global scope?</p>\n\n<p>If the library provides a different name on the global namespace, or provides a method to relinquish <code>window.$</code>, could you link to the proper function in their documentation any maybe a little code example of its use?</p>\n\n<p>Having such a list could be useful in debugging potential conflicts with each other very quickly.</p>\n",
            "last_activity_date": 1336935390,
            "question_id": 4632041,
            "score": 7,
            "tags": [
                "javascript",
                "javascript-library"
            ],
            "title": "What JavaScript libraries are known to use the global dollar sign: window.$?"
        },
        {
            "answer_count": 7,
            "answers": [
                {
                    "body": "<p>when every function call to server, in server side before you do the action , you need to check if this user is allowed to do this action.</p>\n\n<p>It is necessary to build server-side permissions mechanism to prevent unwanted actions, you may want to define groups of users, not individual user level, it makes it easier.</p>\n",
                    "is_accepted": false,
                    "score": 12
                },
                {
                    "body": "<p>This is why you must validate everything on the server. You can never guarantee that the user won't mess about with things on the client.</p>\n\n<p>Everything, even your javascript source code is visible to the client and can be changed by them, theres no way around this.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>There's really no way to do this completely client-side.  If the person has a valid auth cookie, they can craft any sort of request they want regardless of the code on the page and send it to your server.  You can do things with other, encrypted cookies that must sent back with the request and also must match the inputs on the page, but you still need to check this server-side.  Server-side security is essential in protecting your application from unauthorized access and you must ensure, server-side, that every action being performed is one that the user is authorized to perform.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Anything on the client side could be spoofed.  If you use some type of secret key + parameter signature, your signature algorithm must be sufficiently random/secure that it cannot be reverse engineered. </p>\n\n<p>The overhead created with adding client side complexity is better spent crafting proper server side validations.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<blockquote>\n  <p>What would you do to minimize hacking in that case ?</p>\n</blockquote>\n\n<p>You can't work around using validation methods on the server side.</p>\n\n<blockquote>\n  <p>A more simple way to validate is to add another parameter for every javascript function, this parameter must be a signature between previous parameters and a secret key.<br/>\n  <strong>How good sounds the solution above to you ?</strong></p>\n</blockquote>\n\n<p>And how do you use the secret key without the client seeing it? As you self mentioned before, the user easily can manipulate your javascript, and also he can read everything in javascript, the secret key, too!</p>\n\n<p>You can't hide anything in JavaScript, the only thing you can do is to obscure things in JavaScript, and hope nobody tries to find out what you try to hide.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You certainly cannot hide anything client side, so there is little point in trying to do so.</p>\n\n<p>If what you are saying is that you are sending something like a user ID and you want to ensure that the returned value has not been illicitly changed then the simplest way of doing so it probably to generate and send a <a href=\"http://en.wikipedia.org/wiki/Uuid\" rel=\"nofollow\">UUID</a> alongside it, and check on return that the value of the uuid matched that stored on the server for the userID before doing any further processing.  The space for uuid's is so large that you can discount any false hits ever occurring.</p>\n\n<p>As to actual server side processing vulnerabilities:- you should simply always build in your security/permissions as close to the database as you can, and defiantly not in the client.  There's nothing different in the scenario you outline from any normal client-server design.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Peter from Teamworkpm.net here - I'm one of the main developers and was concerned to come across this report about a security problem. I checked into this and I am happy that is not possible to delete a task that you shouldn't have access to.</p>\n\n<p>You get a message saying \"You do not have permission to delete this task\".</p>\n\n<p>I think it is just the confusion between being a Project Administrator and being an overall Administrator that is the problem here :- You may not be a member of a project but as an overall administrator, you still have permission to delete any task within your Teamwork site. This is by design.</p>\n\n<p>We take security very seriously and it's all implemented server side because as Jens F says, we can't reply on client side security.</p>\n\n<p>If you do come across any issues in TeamworkPM that you would like to discuss, we'd encourage any of you to just hit the feedback link and you'll typically get an answer within a few hours.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Using a simple tool like FireBug, anyone can change javascript parameters on the client side. If anyone take time and study your application for a while, they can learn how to change JS parameters resulting in hacking your site.</p>\n\n<p>For example, a simple user can delete entities which they see but are not allowed to change. I know a good developer must check everything on server side, but this means more overhead, you must do checks with data from a DB first, in order to validate the request. This takes a lot of time, for every action someone must validate it, and can only do this by fetching the needed data from DB.</p>\n\n<p><strong>What would you do to minimize hacking in that case?</strong></p>\n\n<p>A more simple way to validate is to add another parameter for every javascript function, this parameter must be a signature between previous parameters and a secret key.</p>\n\n<p><strong>How good sounds the solution above to you?</strong></p>\n\n<p>Our team use teamworkpm.net to organize our work. I just discovered that I can <strong>edit</strong> someone else tasks by changing a javascript function (which initially edit my own tasks).</p>\n",
            "last_activity_date": 1408365172,
            "question_id": 3186748,
            "score": 7,
            "tags": [
                "javascript"
            ],
            "title": "How to prevent hacking if users change html/javascript variables on client side?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Use document.documentElement.outerHTML/innerHTML</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>One way to do this would be to re-request the page using <a href=\"http://en.wikipedia.org/wiki/XMLHttpRequest\">XMLHttpRequest</a>, then you'll get the entire page verbatim from the web server.</p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>For IE you can also use: document.all[0].outerHTML</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>This can be done in a one-liner using <a href=\"https://developer.mozilla.org/en/docs/XMLSerializer\" rel=\"nofollow\"><em>XMLSerializer</em></a>.</p>\n\n<pre><code>var generatedSource = new XMLSerializer().serializeToString(document);\n</code></pre>\n\n<p>Which gives <em>String</em></p>\n\n<pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;\n\n&lt;title&gt;html - javascript page source code - Stack Overflow&lt;/title&gt;\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>Is there a way to acces the page HTML source code using javascript?\nI know that i can use the document.body.innerHTML but it contains only the code inside the body. I want to get all the page source code including head and body tags with their content, and, if it's possible, also the html tag and the doctype.\nIs it possible?</p>\n",
            "last_activity_date": 1372862425,
            "question_id": 1367587,
            "score": 7,
            "tags": [
                "javascript",
                "html",
                "source-code"
            ],
            "title": "javascript page source code"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>If you are able to obtain a <code>DOMDocument</code> object representing your HTML, then you just need to traverse it recursively and construct the data structure that you want.</p>\n\n<p>Converting your HTML document into a <code>DOMDocument</code> should be as simple as this:</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>function html_to_obj($html) {\n    $dom = new DOMDocument();\n    $dom-&gt;loadHTML($html);\n    return element_to_obj($dom-&gt;documentElement);\n}\n</code></pre>\n\n<p>Then, a simple traversal of <code>$dom-&gt;documentElement</code> which gives the kind of structure you described could look like this:</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>function element_to_obj($element) {\n    $obj = array( \"tag\" =&gt; $element-&gt;tagName );\n    foreach ($element-&gt;attributes as $attribute) {\n        $obj[$attribute-&gt;name] = $attribute-&gt;value;\n    }\n    foreach ($element-&gt;childNodes as $subElement) {\n        if ($subElement-&gt;nodeType == XML_TEXT_NODE) {\n            $obj[\"html\"] = $subElement-&gt;wholeText;\n        }\n        else {\n            $obj[\"children\"][] = element_to_obj($subElement);\n        }\n    }\n    return $obj;\n}\n</code></pre>\n\n<p><strong>Test case</strong></p>\n\n<pre class=\"lang-php prettyprint-override\"><code>$html = &lt;&lt;&lt;EOF\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n    &lt;head&gt;\n        &lt;title&gt; This is a test &lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt; Is this working? &lt;/h1&gt;  \n        &lt;ul&gt;\n            &lt;li&gt; Yes &lt;/li&gt;\n            &lt;li&gt; No &lt;/li&gt;\n        &lt;/ul&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\nEOF;\n\nheader(\"Content-Type: text/plain\");\necho json_encode(html_to_obj($html), JSON_PRETTY_PRINT);\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>{\n    \"tag\": \"html\",\n    \"lang\": \"en\",\n    \"children\": [\n        {\n            \"tag\": \"head\",\n            \"children\": [\n                {\n                    \"tag\": \"title\",\n                    \"html\": \" This is a test \"\n                }\n            ]\n        },\n        {\n            \"tag\": \"body\",\n            \"html\": \"  \\n        \",\n            \"children\": [\n                {\n                    \"tag\": \"h1\",\n                    \"html\": \" Is this working? \"\n                },\n                {\n                    \"tag\": \"ul\",\n                    \"children\": [\n                        {\n                            \"tag\": \"li\",\n                            \"html\": \" Yes \"\n                        },\n                        {\n                            \"tag\": \"li\",\n                            \"html\": \" No \"\n                        }\n                    ],\n                    \"html\": \"\\n        \"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>\n\n<hr>\n\n<p><strong>Answer to updated question</strong></p>\n\n<p>The solution proposed above does not work with the <code>&lt;script&gt;</code> element, because it is parsed not as a <code>DOMText</code>, but as a <code>DOMCharacterData</code> object. This is because the DOM extension in PHP is based on <a href=\"http://xmlsoft.org/\"><code>libxml2</code>,</a> which parses your HTML as HTML 4.0, and in HTML 4.0 the content of <code>&lt;script&gt;</code> is of type <code>CDATA</code> and not <code>#PCDATA</code>.</p>\n\n<p>You have two solutions for this problem.</p>\n\n<ol>\n<li><p>The simple but not very robust solution would be to add the <code>LIBXML_NOCDATA</code> flag to <a href=\"http://fr2.php.net/manual/en/domdocument.loadhtml.php\"><code>DOMDocument::loadHTML</code>.</a> (I am not actually 100% sure whether this works for the HTML parser.)</p></li>\n<li><p>The more difficult but, in my opinion, better solution, is to add an additonal test when you are testing <code>$subElement-&gt;nodeType</code> before the recursion. The recursive function would become:</p></li>\n</ol>\n\n<pre class=\"lang-php prettyprint-override\"><code>function element_to_obj($element) {\n    echo $element-&gt;tagName, \"\\n\";\n    $obj = array( \"tag\" =&gt; $element-&gt;tagName );\n    foreach ($element-&gt;attributes as $attribute) {\n        $obj[$attribute-&gt;name] = $attribute-&gt;value;\n    }\n    foreach ($element-&gt;childNodes as $subElement) {\n        if ($subElement-&gt;nodeType == XML_TEXT_NODE) {\n            $obj[\"html\"] = $subElement-&gt;wholeText;\n        }\n        elseif ($subElement-&gt;nodeType == XML_CDATA_SECTION_NODE) {\n            $obj[\"html\"] = $subElement-&gt;data;\n        }\n        else {\n            $obj[\"children\"][] = element_to_obj($subElement);\n        }\n    }\n    return $obj;\n}\n</code></pre>\n\n<p>If you hit on another bug of this type, the first thing you should do is check the type of node <code>$subElement</code> is, because there exists <a href=\"http://www.php.net/manual/en/dom.constants.php\">many other possibilities</a> my short example function did not deal with.</p>\n\n<p>Additionally, you will notice that <code>libxml2</code> has to fix mistakes in your HTML in order to be able to build a DOM for it. This is why an <code>&lt;html&gt;</code> and a <code>&lt;head&gt;</code> elements will appear even if you don't specify them. You can avoid this by using the <code>LIBXML_HTML_NOIMPLIED</code> flag.</p>\n\n<p><strong>Test case with script</strong></p>\n\n<pre class=\"lang-php prettyprint-override\"><code>$html = &lt;&lt;&lt;EOF\n        &lt;script type=\"text/javascript\"&gt;\n            alert('hi');\n        &lt;/script&gt;\nEOF;\n\nheader(\"Content-Type: text/plain\");\necho json_encode(html_to_obj($html), JSON_PRETTY_PRINT);\n</code></pre>\n\n<p><strong>Output</strong></p>\n\n<pre class=\"lang-javascript prettyprint-override\"><code>{\n    \"tag\": \"html\",\n    \"children\": [\n        {\n            \"tag\": \"head\",\n            \"children\": [\n                {\n                    \"tag\": \"script\",\n                    \"type\": \"text\\/javascript\",\n                    \"html\": \"\\n            alert('hi');\\n        \"\n                }\n            ]\n        }\n    ]\n}\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 9
                }
            ],
            "body": "<p>I can convert JSON to HTML using <a href=\"http://json2html.com/\" rel=\"nofollow\">JsontoHtml</a> library. Now,I need to convert present HTML to JSON as shown in this site. When looked into the code I found the following script:</p>\n\n<pre><code>&lt;script&gt;\n$(function(){\n\n    //HTML to JSON\n    $('#btn-render-json').click(function() {\n\n        //Set html output\n        $('#html-output').html( $('#html-input').val() );\n\n        //Process to JSON and format it for consumption\n        $('#html-json').html( FormatJSON(toTransform($('#html-output').children())) );\n    });\n\n});\n\n//Convert obj or array to transform\nfunction toTransform(obj) {\n\n    var json;\n\n    if( obj.length &gt; 1 )\n    {\n        json = [];\n\n        for(var i = 0; i &lt; obj.length; i++)\n            json[json.length++] = ObjToTransform(obj[i]);\n    } else\n        json = ObjToTransform(obj);\n\n    return(json);\n}\n\n//Convert obj to transform\nfunction ObjToTransform(obj)\n{\n    //Get the DOM element\n    var el = $(obj).get(0);\n\n    //Add the tag element\n    var json = {'tag':el.nodeName.toLowerCase()};\n\n    for (var attr, i=0, attrs=el.attributes, l=attrs.length; i&lt;l; i++){\n        attr = attrs[i];\n        json[attr.nodeName] = attr.value;\n    }\n\n    var children = $(obj).children();\n\n    if( children.length &gt; 0 ) json['children'] = [];\n    else json['html'] = $(obj).text();\n\n    //Add the children\n    for(var c = 0; c &lt; children.length; c++)\n        json['children'][json['children'].length++] = toTransform(children[c]);\n\n    return(json);\n}\n\n//Format JSON (with indents)\nfunction FormatJSON(oData, sIndent) {\n    if (arguments.length &lt; 2) {\n        var sIndent = \"\";\n    }\n    var sIndentStyle = \"  \";\n    var sDataType = RealTypeOf(oData);\n\n    // open object\n    if (sDataType == \"array\") {\n        if (oData.length == 0) {\n            return \"[]\";\n        }\n        var sHTML = \"[\";\n    } else {\n        var iCount = 0;\n        $.each(oData, function() {\n            iCount++;\n            return;\n        });\n        if (iCount == 0) { // object is empty\n            return \"{}\";\n        }\n        var sHTML = \"{\";\n    }\n\n    // loop through items\n    var iCount = 0;\n    $.each(oData, function(sKey, vValue) {\n        if (iCount &gt; 0) {\n            sHTML += \",\";\n        }\n        if (sDataType == \"array\") {\n            sHTML += (\"\\n\" + sIndent + sIndentStyle);\n        } else {\n            sHTML += (\"\\\"\" + sKey + \"\\\"\" + \":\");\n        }\n\n        // display relevant data type\n        switch (RealTypeOf(vValue)) {\n            case \"array\":\n            case \"object\":\n                sHTML += FormatJSON(vValue, (sIndent + sIndentStyle));\n                break;\n            case \"boolean\":\n            case \"number\":\n                sHTML += vValue.toString();\n                break;\n            case \"null\":\n                sHTML += \"null\";\n                break;\n            case \"string\":\n                sHTML += (\"\\\"\" + vValue + \"\\\"\");\n                break;\n            default:\n                sHTML += (\"TYPEOF: \" + typeof(vValue));\n        }\n\n        // loop\n        iCount++;\n    });\n\n    // close object\n    if (sDataType == \"array\") {\n        sHTML += (\"\\n\" + sIndent + \"]\");\n    } else {\n        sHTML += (\"}\");\n    }\n\n    // return\n    return sHTML;\n}\n\n//Get the type of the obj (can replace by jquery type)\nfunction RealTypeOf(v) {\n  if (typeof(v) == \"object\") {\n    if (v === null) return \"null\";\n    if (v.constructor == (new Array).constructor) return \"array\";\n    if (v.constructor == (new Date).constructor) return \"date\";\n    if (v.constructor == (new RegExp).constructor) return \"regex\";\n    return \"object\";\n  }\n  return typeof(v);\n}\n&lt;/script&gt;\n</code></pre>\n\n<p><img src=\"http://i.stack.imgur.com/xwrXB.png\" alt=\"enter image description here\"></p>\n\n<p>Now, I am in need of using the following function in PHP. I can get the HTML data. All what I needed now is to convert the JavaScript function to PHP function. Is this possible? My major doubts are as follows:</p>\n\n<ul>\n<li><p>The primary input for the Javascript function <code>toTransform()</code> is an object. Is it possible to convert HTML to object via PHP?</p></li>\n<li><p>Are all the functions present in this particular JavaScript available in PHP? </p></li>\n</ul>\n\n<p>Please suggest me the idea.</p>\n\n<p>When I tried to convert script tag to json as per the answer given, I get errors. When I tried it in json2html site, it showed like this:<img src=\"http://i.stack.imgur.com/lvitt.png\" alt=\"enter image description here\"> .. How to achieve the same solution?</p>\n",
            "last_activity_date": 1399040829,
            "question_id": 23062537,
            "score": 6,
            "tags": [
                "javascript",
                "php",
                "jquery",
                "html",
                "json"
            ],
            "title": "How to convert HTML to JSON using PHP?"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>There is no need to use JSONP if you enable CORS. </p>\n\n<pre><code>Access-Control-Allow-Origin: http://www.example.com\n</code></pre>\n\n<p>if this header is set in the response, then normal XmlHttpRequest will be able to access the response as if it is like same domain. Check whether this header is set correctly.</p>\n\n<p>I hope that this link will help you if you are using jquery <a href=\"http://stackoverflow.com/questions/5584923/a-cors-post-request-works-from-plain-javascript-but-why-not-with-jquery\">A CORS POST request works from plain javascript, but why not with jQuery?</a></p>\n\n<p>Update:\nExample </p>\n\n<pre><code>var xmlhttp= new XMLHttpRequest();\nvar url=\"https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS?redirectlocale=en-US&amp;redirectslug=HTTP_access_control\";\nxmlhttp.open(\"GET\",url,false);\nxmlhttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\nxmlhttp.send();\n</code></pre>\n\n<p>Try this in any domain, you will get response.</p>\n\n<p>Update solution:</p>\n\n<p>Request url without \"http://\" caused the problem, prepending \"http://\" solved the issue</p>\n",
                    "is_accepted": true,
                    "score": 8
                }
            ],
            "body": "<p>I have two separate apps on the same server, with the EmberJS one trying to do cross-domain calls to my backend API.</p>\n\n<p>I set up my backend API to allow cross-domain requests from that specific origin. Is there a way however, to avoid using JSONP with such a set up? <code>$.ajax</code> is blocking cross-domain requests before they ever get sent. If not, what is the point of CORS, which server-side I had implemented to accept requests from my JS front-end source?</p>\n\n<p><strong>EDIT</strong></p>\n\n<p>AJAX request:</p>\n\n<pre><code>$.ajax({\nurl: \"api.lvh.me:3000/accounts/login\",\ndata: cred,\ntype: \"POST\",\nxhrFields: {\n  withCredentials: true\n},\nsuccess: function(response){\n  alert('succeeded!');\n  console.log(response);\n  alert(response);\n},\nfailure: function(message){\n  alert(\"failed\");\n  console.log(message);\n  alert(message);\n}\n});\n</code></pre>\n",
            "last_activity_date": 1372305069,
            "question_id": 17318426,
            "score": 6,
            "tags": [
                "javascript",
                "ruby-on-rails",
                "ajax",
                "ember.js",
                "cross-domain"
            ],
            "title": "CORS - Cross-Domain AJAX Without JSONP By Allowing Origin On Server"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Here is a framework for getting and storing login credentials.  The script prompts for the information on the very first run and stores it, encrypted, using <code>GM_setValue()</code>.</p>\n\n<p>It also adds two items to the Greasemonkey context menu to allow changing the username or password.</p>\n\n<pre><code>// ==UserScript==\n// @name     _Autologin, sensitive info framework\n// @include  http://YOUR_SERVER.COM/YOUR_PATH/*\n// @require  http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js\n// @require  http://crypto.stanford.edu/sjcl/sjcl.js\n// @grant    GM_getValue\n// @grant    GM_setValue\n// @grant    GM_registerMenuCommand\n// ==/UserScript==\n\nvar encKey  = GM_getValue (\"encKey\",  \"\");\nvar usr     = GM_getValue (\"lognUsr\", \"\");\nvar pword   = GM_getValue (\"lognPwd\", \"\");\n\nif ( ! encKey) {\n    encKey  = prompt (\n        'Script key not set for ' + location.hostname + '. Please enter a random string:',\n        ''\n    );\n    GM_setValue (\"encKey\", encKey);\n\n    usr     = pword = \"\";   // New key makes prev stored values (if any) unable to decode.\n}\nusr         = decodeOrPrompt (usr,   \"U-name\", \"lognUsr\");\npword       = decodeOrPrompt (pword, \"P-word\", \"lognPwd\");\n\n\nfunction decodeOrPrompt (targVar, userPrompt, setValVarName) {\n    if (targVar) {\n        targVar     = unStoreAndDecrypt (targVar);\n    }\n    else {\n        targVar     = prompt (\n            userPrompt + ' not set for ' + location.hostname + '. Please enter it now:',\n            ''\n        );\n        GM_setValue (setValVarName, encryptAndStore (targVar) );\n    }\n    return targVar;\n}\n\nfunction encryptAndStore (clearText) {\n    return  JSON.stringify (sjcl.encrypt (encKey, clearText) );\n}\n\nfunction unStoreAndDecrypt (jsonObj) {\n    return  sjcl.decrypt (encKey, JSON.parse (jsonObj) );\n}\n\n//-- Add menu commands that will allow U and P to be changed.\nGM_registerMenuCommand (\"Change Username\", changeUsername);\nGM_registerMenuCommand (\"Change Password\", changePassword);\n\nfunction changeUsername () {\n    promptAndChangeStoredValue (usr,   \"U-name\", \"lognUsr\");\n}\n\nfunction changePassword () {\n    promptAndChangeStoredValue (pword, \"P-word\", \"lognPwd\");\n}\n\nfunction promptAndChangeStoredValue (targVar, userPrompt, setValVarName) {\n    targVar     = prompt (\n        'Change ' + userPrompt + ' for ' + location.hostname + ':',\n        targVar\n    );\n    GM_setValue (setValVarName, encryptAndStore (targVar) );\n}\n\n// ADD YOUR CODE TO SET THE USERNAME AND PASSWORD ON THE LOGIN PAGE, HERE.\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I'm doing a greasemonkey script that communicate whit the Redmine ticket manager through the REST API.\nAs the user need to login to get the data from Redmine, I need a way to ask the user his creditentials at script installation and save them to the script.</p>\n\n<p>Can this be achieved whithout asking the user to edit the values directly in the script itself ?</p>\n\n<p>EDIT</p>\n\n<p>Since there is already an answer to this question I will validate the answer given just below as it is a very good framework.</p>\n",
            "last_activity_date": 1362662802,
            "question_id": 15268645,
            "score": 6,
            "tags": [
                "javascript",
                "greasemonkey"
            ],
            "title": "Storing user input in a Greasemonkey script on install"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<pre><code>document.getElementById('foo').onkeypress = function(e){\n    if (!e) e = window.event;\n    var keyCode = e.keyCode || e.which;\n    if (keyCode == '13'){\n      // Enter pressed\n      return false;\n    }\n  }\n</code></pre>\n\n<p><a href=\"http://jsbin.com/aligus/2\">DEMO</a></p>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Here is a good link that discusses this topic and provides a working examples </p>\n\n<pre><code>function DetectEnterPressed(e) {\nvar characterCode\nif(e &amp;&amp; e.which){ // NN4 specific code\ne = e\ncharacterCode = e.which\n}\nelse {\ne = event\ncharacterCode = e.keyCode // IE specific code\n}\nif (characterCode == 13) return true // Enter key is 13\nelse return false\n}\n</code></pre>\n\n<p><a href=\"http://hspinfo.wordpress.com/2008/09/01/using-javascript-detect-enter-key-pressed-event-in-a-textbox-and-perform-the-action/\" rel=\"nofollow\">http://hspinfo.wordpress.com/2008/09/01/using-javascript-detect-enter-key-pressed-event-in-a-textbox-and-perform-the-action/</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>use the event.keyCode </p>\n\n<pre><code>var code = (e.keyCode ? e.keyCode : e.which);\n if(code == 13) { //Enter keycode\n   //Do something\n }\n</code></pre>\n\n<p>There is already a discussion in this link\n<a href=\"http://stackoverflow.com/questions/302122/jquery-event-keypress-which-key-was-pressed\">jQuery Event Keypress: Which key was pressed?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>To make it cross browser:</p>\n\n<pre><code>document.getElementById('foo').onkeypress = function(e) {\n    var event = e || window.event;\n    var charCode = event.which || event.keyCode;\n\n    if ( charCode == '13' ) {\n      // Enter pressed\n      return false;\n    }\n}\n</code></pre>\n\n<p>See this question for more details: <a href=\"http://stackoverflow.com/questions/3050984/javascript-event-e-which\">javascript event e.which?</a></p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>I only have 1 input field and I want to register onChange and onKeyPress event to detect when the users finish their input or press the Enter key. I need to use javascript only. Thanks for the help.</p>\n\n<p>I have:</p>\n\n<pre><code>var load = function (){\n   //I want to trigger this function when user hit Enter key.\n}\n\ndocument.getElementById('co').onchange=load;   //works great\ndocument.getElementById('co').onKeyPress=load; \n//not sure how to detect when user press Enter\n</code></pre>\n\n<p>html</p>\n\n<pre><code>//no form just a single input field\n&lt;input type='text' id='co'&gt;\n</code></pre>\n",
            "last_activity_date": 1341590901,
            "question_id": 11365632,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "How to detect when use press Enter in input field"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<pre><code>If DataStore.Record.Exists(theRecord) Then\n\n    Dim script As String = \"alert('Record exists')\"\n    If Not Page.ClientScript.IsStartUpScriptRegistered(Me.GetType(), \"alertscript\") Then\n        Page.ClientScript.RegisterStartUpScript(Me.GetType(), \"alertscript\", script, True)\n\n    End If\nEnd If\n</code></pre>\n\n<p>you would do it like above, where you should replaceDataStore.Record.Exists(theRecord) with condition that checks database record exists </p>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>You need to think about your script in a slightly different way - remember, JavaScript runs client-side, and VB.NET runs server-side. So you can't \"call\" JavaScript from the server side.</p>\n\n<p>However, you can <strong><em>generate</em></strong> JavaScript on the server side, but it will need to be output to the page before it can run.</p>\n\n<p>If you were doing a full page postback, a crude way of achieving it would be to assign the script or function to a <code>Literal</code> control, which renders its <code>Text</code> property on the HTML page exactly as written.</p>\n\n<p>Then, your script will execute at the point the <code>Literal</code> is rendered.</p>\n\n<p>A neater way of doing it is to add your script to the page via a <code>ScriptManager</code> as you noted. Rather than a <code>StartupScript</code>, you could try using <code>.RegisterClientScriptBlock()</code> instead? You don't mention what it is about your situation that doesn't work?</p>\n\n<p>The most comprehensive way of doing it would be to use AJAX - either .NET's built-in framework, or jQuery. jQuery's AJAX (and AJAX in general) is a separate topic, which you can read about <a href=\"http://api.jquery.com/jQuery.ajax/\">here</a>.</p>\n",
                    "is_accepted": false,
                    "score": 8
                }
            ],
            "body": "<p>How can I call a javascript function from code behind?<br>\nThe most popular response is \"<code>ScriptManager.RegisterStartupScript</code>\" however, that does not work in my situation.  </p>\n\n<p>I have a vb class that is doing a database check to see if a record exists. If exists, then call a javascript function to display an alert(\"Record exists\")  </p>\n\n<p>So I am doing something like  </p>\n\n<pre><code>Dim strMessage as string = \"javascript:RecordExists('Param');\"  \n</code></pre>\n\n<p>How do I call this function from my vb.net class?</p>\n",
            "last_activity_date": 1344935068,
            "question_id": 7673795,
            "score": 6,
            "tags": [
                "javascript",
                "asp.net",
                "vb.net",
                "code-behind"
            ],
            "title": "Call javascript from vb.net code behind"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<pre><code>var arr = [];\narr[0] = [];\narr[0][0] = [];\narr[0][0][0] = \"3 dimentional array\"\n</code></pre>\n\n<p>Multi dimentional arrays have a lot of gaps unless they are used properly. A two dimensional array is called a matrix.</p>\n\n<p>I believe your data contains a space seperate string called \"tags\" containing the tags and a single url.</p>\n\n<pre><code>var tagObject = {};\ndata.photoset.photo.forEach(function(val) {\n  val.tags.split(\" \").forEach(function(tag) {\n    if (!tagObject[tag]) {\n      tagObject[tag] = [];\n    }\n    tagObject[tag].push(val.url_sq);\n  });\n});\nconsole.log(tagObject); \n/*\n  {\n    \"sea\": [\"url1\", \"url2\", ...],\n    \"things\": [\"url4\", ...],\n    ...\n  }\n*/\n</code></pre>\n\n<p>I don't know how it returns multiple tags.</p>\n",
                    "is_accepted": true,
                    "score": 10
                },
                {
                    "body": "<p>I think the syntax you are attempting to achieve is something like the following:</p>\n\n<pre><code>var item = {\"tags\":\"blah\",\"url_sq\":\"example.com\"}; // for sake of example.\nvar imageArray = [];\n$.each(data.photoset.photo, function(i, item) {\n   imageArray.push({\"tags\":item.tags,\"url\":item.url_sq});\n});\n</code></pre>\n\n<p>and then reference it like this:</p>\n\n<pre><code>imageArray[0].tags\nimageArray[0].url\nimageArray[1].tags\nimageArray[1].url\n...\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>JavaScript doesn't have true multidimensional arrays (heck, it doesn't even have true regular arrays...), but, like most languages, it instead uses arrays of arrays. However, to me it looks like you need an object (kinda similar to PHP's arrays) containing arrays.</p>\n\n<pre><code>var data = {\n    tag1: ['URL_1', 'URL_2', 'URL_3', 'URL_n']\n};\n// Then accessed like:\ndata.tag1; // ['URL_1', ...]\ndata.tag1[0]; // 'URL_1'\ndata.tag1[1]; // 'URL_2'\n// etc.\n</code></pre>\n\n<p>So, you're problem would look something like this:</p>\n\n<pre><code>var tags = {};\n$.each(data.photoset.photo, function (i, item) {\n    $.each(item.tags.split(\" \"), function (i, tag) {\n        if (!tags[tag])\n            tags[tag] = [];\n        tags[tag].push(item.url_sq);\n    });\n});\n// tags is now something like:\n// {\n    \"foo\": [\"/url.html\", \"/other-url/\", ...],\n    \"bar\": [\"/yes-im-a-lisp-programmer-and-thats-why-i-hypenate-things-that-others-might-underscore-or-camelcase/\", ...],\n    ...\n//}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>Maybe something like that in your <code>each</code>:</p>\n\n<pre><code>if ( imageArray[item.tags] != null ){\n   imageArray[item.tags][imageArray[item.tags].length] = item.url_sq;\n}else{\n   imageArray[item.tags] = [];\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>I think something like this should do what you want</p>\n\n<pre><code> var imageArray = [];   \n\n $.each(data.photoset.photo, function(i, item) {\n\n   // if the tag is new, then create an array\n   if(!imageArray[item.tags])\n     imageArray[item.tags] = [];\n\n   // push the item url onto the tag\n   imageArray[item.tags].push(item.url_sq);\n\n });\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I am trying to create a very basic Flickr gallery using the Flickr API. What I want to achieve is sorting my pictures by tag. What I am using is jQuery.getJSON() so that I can parse the API response of <a href=\"http://www.flickr.com/services/api/flickr.photosets.getPhotos.htm\" rel=\"nofollow\">flickr.photosets.getPhotos</a>.  </p>\n\n<p>The data I am interested in getting from Flickr is the tag and the URL associated to each photo. The problem with this is that the only logical way out of this for me is creating a multidimensional array of the following format:</p>\n\n<pre><code>Array['tag1'] =&gt; ['URL_1', 'URL_2', 'URL_3', 'URL_n'];\n</code></pre>\n\n<p>However, I cannot find any way to achieve this. My code looks like this:</p>\n\n<pre><code>$.getJSON('http://api.flickr.com/services/rest/?api_key=xxx&amp;method=flickr.photosets.getPhotos&amp;user_id=xxx&amp;format=json&amp;extras=tags%2C+url_l%2C+url_sq&amp;nojsoncallback=1&amp;photoset_id=xxx', \n   function(data) {\n\n     var imageArray = [];   \n     $.each(data.photoset.photo, function(i, item) {\n\n       imageArray[item.tags] = [item.url_sq,];\n\n     });\n});\n</code></pre>\n\n<p>I am aware that the code might look awkward, but I've tried everything and there's no way I can figure this out.</p>\n",
            "last_activity_date": 1405588741,
            "question_id": 7521796,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "arrays",
                "multidimensional-array",
                "flickr"
            ],
            "title": "Is it possible to create an empty multidimensional array in javascript/jquery?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>I think <code>.data(\"autocomplete\")</code> isn't returning an object, as the error says:</p>\n\n<blockquote>\n  <p>Cannot set property '_renderItem' of undefined</p>\n</blockquote>\n\n<p>If you are doing this:</p>\n\n<pre><code>$('.foo').data(\"autocomplete\")._render...;\n</code></pre>\n\n<p>You try breaking it up:</p>\n\n<pre><code>$('.foo').data(\"autocomplete\");\n$('.foo')._renderItem = ...;\n</code></pre>\n\n<p>I've never encountered <code>_renderItem</code>, so I'll look more in to that.</p>\n\n<hr>\n\n<p>Actually, this question seems to explain a problem really similar to your's: <a href=\"http://stackoverflow.com/questions/5086952/using-renderitem-kind-of-breaks-autocomplete-field\">Using _renderItem kind of breaks autocomplete field</a></p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<pre><code>$(...).data('autocomplete')\n</code></pre>\n\n<p>is undefined, and you can't set a property of undefined.  try:</p>\n\n<pre><code>var obj = $(...).data('autocomplete');\nobj &amp;&amp; (obj._renderItem = function(){\n   ...\n});\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 8
                },
                {
                    "body": "<p>why not just wrap the autocomplete code in a check to see if that element exists?</p>\n\n<p>something like this:</p>\n\n<pre><code>if ($'#myElementId').length) {\n    $('#myElementId').data( \"autocomplete\" )._renderItem = function( ul, item ) {\n         return $( \"&lt;li&gt;&lt;/li&gt;\" )\n           .data( \"item.autocomplete\", item )\n           .append( \"&lt;a&gt;\" + item.topic.name + \"&lt;/a&gt;\" )\n           .appendTo( ul );\n    };\n}\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>this problem appeared to me when i upgrade the jquery ui from old one to 1.10.0</p>\n\n<p>just change </p>\n\n<pre><code>$('.foo').data(\"autocomplete\")._render...;\n</code></pre>\n\n<p>To</p>\n\n<pre><code>$('.foo').data(\"uiAutocomplete\")._render...;\n</code></pre>\n\n<p>source\n<a href=\"http://stackoverflow.com/questions/14461787/jqueryui-1-10-0-autocompleter-renderitem-problems\">JQueryUI 1.10.0 Autocompleter renderItem problems</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                }
            ],
            "body": "<p>I get this JS error:</p>\n\n<pre><code>jquery-1.5.1.min.js:16Uncaught TypeError: Cannot set property '_renderItem' of undefined\nd.d.extend._Deferred.f.resolveWithjquery-1.5.1.min.js:16\nd.d.extend.readyjquery-1.5.1.min.js:16\nd.c.addEventListener.A\n</code></pre>\n\n<p>and it's from this code for the jquery UI autocomplete plugin in my application.js file:</p>\n\n<pre><code>    .data( \"autocomplete\" )._renderItem = function( ul, item ) {\n         return $( \"&lt;li&gt;&lt;/li&gt;\" )\n           .data( \"item.autocomplete\", item )\n           .append( \"&lt;a&gt;\" + item.topic.name + \"&lt;/a&gt;\" )\n           .appendTo( ul );\n            };\n</code></pre>\n\n<p>I get this code whenever I load a page that does NOT have the text field that the autocomplete code is acting on. Why and how can I get rid of this error?</p>\n\n<p>I'd like to note that although I am getting this error, my application is working normally. Should I even be worrying about this error? </p>\n",
            "last_activity_date": 1359321024,
            "question_id": 5590776,
            "score": 6,
            "tags": [
                "javascript",
                "jquery",
                "debugging",
                "autocomplete"
            ],
            "title": "Why am I getting this JS error?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>As a <strong>user</strong>, you currently cannot force the the popup to stay open. That is a UI decision the UI team made. If you want to want to force a setup, you can have other way to show this by changing the popup icon, open a new tab when it requests, or new popup view for registration.</p>\n\n<p>As a <strong>developer</strong>, inspect the popup, and it will stay open.</p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>In an answer to a FAQ here: <a href=\"http://developer.chrome.com/extensions/faq.html#faq-persist-popups\" rel=\"nofollow\">http://developer.chrome.com/extensions/faq.html#faq-persist-popups</a></p>\n\n<p>Popups automatically close when the user focuses on some portion of the browser outside of the popup. There is no way to keep the popup open after the user has clicked away.</p>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>If I open my extension popup then I open another window or tab following the popup does not stay open if I return to it. Is there a way to force it so the popup stays open? Thanks!</p>\n",
            "last_activity_date": 1418855674,
            "question_id": 4146930,
            "score": 6,
            "tags": [
                "javascript",
                "google-chrome",
                "google-chrome-extension"
            ],
            "title": "How to keep Google Chrome Extension popop open?"
        },
        {
            "answer_count": 4,
            "answers": [
                {
                    "body": "<p>Try:</p>\n\n<pre><code>document.scripts[document.scripts.length-1]; // add .src to get href\n//or\ndocument.getElementsByTagName(\"script\")[document.getElementsByTagName(\"script\").length-1];\n//for (maybe) better compatibility\n</code></pre>\n\n<p>Which gets the last script in the DOM. If your script is being executed while it is being loaded, this will return the right element.</p>\n\n<p>Save it to a variable for use in functions which will be used later.</p>\n\n<pre><code>var thisScript = document.scripts[document.scripts.length-1];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>Give this script tag an id, and write:</p>\n\n<pre><code>var src = document.getElementById('scriptID').attributes['src'];\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In the moment in which the current script is being executed, will be the last <code>script</code> element in the DOM, therefore you can get it by:</p>\n\n<pre><code>var scripts = document.getElementsByTagName('script'),\n    currentScriptSrc = scripts[scripts.length-1].src;\n</code></pre>\n\n<p>Check this <a href=\"http://jsbin.com/umuyo3/edit\">example</a> that loads this <a href=\"http://jsbin.com/iyure3\">script</a>.</p>\n\n<p><strong>Edit:</strong> Taking in consideration the @kangax's comment, about the <code>async</code> and <code>defer</code> attributes, the only safe way IMO, previously knowing the file name, would be to inspect the <code>script</code> elements on the page, examining its <code>src</code> attribute, some libraries like <a href=\"http://github.com/madrobby/scriptaculous/blob/master/src/scriptaculous.js#L54-62\">Scriptaculous.us</a> use this technique, for example:</p>\n\n<pre><code>var scripts = document.getElementsByTagName('script'),\n    len = scripts.length,\n    re = /howdy\\.js$/,\n    src, howdyScriptSrc;\n\nwhile (len--) {\n  src = scripts[len].src;\n  if (src &amp;&amp; src.match(re)) {\n    howdyScriptSrc = src;\n    break;\n  }\n}\n\u200b\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 13
                },
                {
                    "body": "<p>Try this:</p>\n\n<pre><code>function getScriptSourceName(name){\n    var scripts = document.getElementsByTagName('script');\n    for (i=0;i&lt;scripts.length;i++){\n        if (scripts[i].src.indexOf(name) &gt; -1)\n            return scripts[i].src;\n    }\n}\n\ngetScriptSourceName('howdy.js');\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How can a javascript file know where it is located? For example:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"http://mysite.com/scripts/howdy.js\"&gt;&lt;/script&gt;\n</code></pre>\n\n<p>How can the code in <code>howdy.js</code> know about <code>http://mysite.com/scripts/howdy.js</code>?</p>\n\n<p>Edit: Clarification. I cannot rely on searching the DOM for my script tag because I need to know about it before the DOM may be ready.</p>\n",
            "last_activity_date": 1413063097,
            "question_id": 3548857,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "How to get the location (src) of a javascript file?"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>I have not worked with text selection enough to provide real help, but what you are trying to do can be done. You will want to look into the following two functions:</p>\n\n<ol>\n<li><code>createRange()</code> <a href=\"http://msdn.microsoft.com/en-us/library/ms536394%28VS.85%29.aspx\">MSDN</a>  |  <a href=\"https://developer.mozilla.org/en/DOM/document.createRange\">MDC</a></li>\n<li><code>getRangeAt()</code> <a href=\"https://developer.mozilla.org/en/DOM/Selection/getRangeAt\">MDC</a></li>\n</ol>\n\n<p>I know it can be implemented cross browser. You can see some of it in action here:</p>\n\n<p><a href=\"http://fuelyourcoding.com/a-few-strategies-for-using-javascript/\">http://fuelyourcoding.com/a-few-strategies-for-using-javascript/</a></p>\n\n<p>By scrolling to the bottom and clicking the Elephant Icon, which uses the Evernote script. However, my script first selects the main content area (you will see it flash orange) and then it deselects once the capture is made.</p>\n\n<p>Here is a mini jQuery plugin that does it. It was adapted by me from some site, and like the comments say, I feel horrible for not remembering. Its really important to note I adapted it to jQuery, but the code came from some site where they explained how to do it:</p>\n\n<pre><code>// Adapted this from somewhere. Feel horrible for not remembering.\n$.fn.autoSelect = function(){\n    var selectTarget = this[0]; // Select first element from jQuery collection\n    if(selectTarget != null) {\n         if(selectTarget.tagName == 'TEXTAREA' || (selectTarget.tagName == \"INPUT\" &amp;&amp; selectTarget.type == \"text\")) {\n             selectTarget.select();\n         } else if(window.getSelection) { // FF, Safari, Opera\n             var sel = window.getSelection();\n             var range = document.createRange();\n             range.selectNode(selectTarget);\n             sel.removeAllRanges();\n             sel.addRange(range);\n         } else { // IE\n             document.selection.empty();\n             var range = document.body.createTextRange();\n             range.moveToElementText(selectTarget);\n             range.select();\n         };\n    };\n    return this; // Don't break the chain\n};\n</code></pre>\n\n<p><em>It seems this script is a few places online, but <a href=\"http://forum.depiak.catreloaded.net/viewtopic.php?f=7&amp;t=56\">here is another variation on it</a></em></p>\n",
                    "is_accepted": true,
                    "score": 6
                },
                {
                    "body": "<p>As an example, and the easiest one, let's say you want to move the user's selection to contain the contents of an element. The following will work in all major browsers:</p>\n\n<pre><code>function selectElementContents(el) {\n    var body = document.body, range, sel;\n    if (body.createTextRange) {\n        range = body.createTextRange();\n        range.moveToElementText(el);\n        range.select();\n    } else if (document.createRange &amp;&amp; window.getSelection) {\n        range = document.createRange();\n        range.selectNodeContents(el);\n        sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n}\n\nselectElementContents( document.getElementById(\"someElement\") );\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                }
            ],
            "body": "<p>I wanna modify the document selection (user currently selected by mouse or keyboard), how to do it in a cross browser way?</p>\n",
            "last_activity_date": 1263600887,
            "question_id": 2075304,
            "score": 6,
            "tags": [
                "javascript"
            ],
            "title": "how to modify the document selection in javascript?"
        },
        {
            "answer_count": 6,
            "answers": [
                {
                    "body": "<pre><code> &lt;input name=\"q\" onfocus=\"if (this.value=='search') this.value = ''\" type=\"text\" value=\"search\"&gt;\n</code></pre>\n\n<p>...from the <strong>Stack Overflow</strong> search box.</p>\n\n<p><hr></p>\n\n<p>You could also add the <code>onblur</code> event to check: <code>if (this.value=='') this.value = 'search'</code></p>\n\n<p>This would re-print the watermark when the user clicks outside the textbox and the field is empty. </p>\n",
                    "is_accepted": false,
                    "score": 17
                },
                {
                    "body": "<p>There are a lot of tutorials on how to do this.  <a href=\"http://www.electrictoolbox.com/jquery-change-default-value-on-focus/\" rel=\"nofollow\">Here's one walkthrough</a> using the jQuery javascript framework.</p>\n\n<p>Here's <a href=\"http://www.willasrari.com/blog/create-textbox-watermark-using-css-and-javascript/000285.aspx\" rel=\"nofollow\">another popular blog post</a> about it, just using regular javascript.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>JS:</p>\n\n<pre><code>   function clearDefault(ctl){\n       if(ctl.value==ctl.defaultValue) { ctl.value = \"\"; }\n    }\n</code></pre>\n\n<p>In your textbox include <code>onfocus=\"clearDefault(this)\"</code> and set its text to \"username\" or \"password\".</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>See this article <a href=\"http://www.alistapart.com/articles/makingcompactformsmoreaccessible\" rel=\"nofollow\">http://www.alistapart.com/articles/makingcompactformsmoreaccessible</a>. Of course, if you are using jQuery, there are \"Label over\" plugins.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In laymen's terms:</p>\n\n<ul>\n<li>When focusing on the input, if the value is \"Username\" then set it to \"\"</li>\n<li>When removing focus from the box, if the value is \"\" (i.e. nothing was entered), reset it to \"Username\" to still provide feedback to the user since they haven't yet entered data</li>\n</ul>\n\n<p>The code:</p>\n\n<pre><code>&lt;input value=\"Username\" onfocus=\"if(this.value=='Username') this.value = ''\" onblur=\"if(this.value=='') this.value = 'Username'\" type=\"text\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>A more modern way is to use \"PlaceHolder\"</p>\n\n<pre><code>&lt;input type=\"text\" placeholder=\"search\" /&gt;\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>I would like to know how to put text in a textbox when the page loads. Example: If I have a login page, I would have 2 textboxes named \"username\" and \"password\". When the page loads I want the the textbox to load with \"username\" written inside, so I won't have to put a label for that outside. But when the user clicks inside textbox it should disppear. How do I do this?</p>\n",
            "last_activity_date": 1406913841,
            "question_id": 1911301,
            "score": 6,
            "tags": [
                "javascript",
                "watermark"
            ],
            "title": "Javascript &quot;watermarks&quot; for textboxes"
        },
        {
            "answer_count": 2,
            "answers": [
                {
                    "body": "<p>Things are now routed through Element storage : ) </p>\n\n<p><code>Element.getStorage(yourElement).get('prototype_event_registry')</code> will give you an instance of Prototype's <code>Hash</code>, so you can do anything that you would do with hash.</p>\n\n<pre><code>// to see which event types are being observed\nElement.getStorage(yourElement).get('prototype_event_registry').keys();\n\n// to get array of handlers for particular event type\nElement.getStorage(yourElement).get('prototype_event_registry').get('click');\n\n// to get array of all handlers\nElement.getStorage(yourElement).get('prototype_event_registry').values();\n\n// etc.\n</code></pre>\n\n<p>Note that <strong>these are undocumented internal details</strong> which might be changed in the future, so I wouldn't rely on them except for, perhaps, debugging purposes.</p>\n",
                    "is_accepted": false,
                    "score": 4
                },
                {
                    "body": "<p>I've update the answer <a href=\"http://stackoverflow.com/questions/446892/how-to-find-event-listeners-on-a-dom-node\">you linked to</a> with more comprehensive <code>Prototype</code> coverage accounting for changes in versions <code>1.6.0</code> to <code>1.6.1</code>.</p>\n\n<p>It got very messy in between there, but 1.6.1 is somewhat clean:</p>\n\n<pre><code>var handler = function() { alert('clicked!') };\n$(element).observe('click', handler);\n\n// inspect\nvar clickEvents = element.getStorage().get('prototype_event_registry').get('click');\nclickEvents.each(function(wrapper){\n    alert(wrapper.handler) // alerts \"function() { alert('clicked!') }\"\n})\n</code></pre>\n",
                    "is_accepted": true,
                    "score": 6
                }
            ],
            "body": "<p>I'm looking for an updated answer to <a href=\"http://stackoverflow.com/questions/446892/how-to-find-event-listeners-on-a-dom-node\">this question</a>. </p>\n\n<p>It seems that Event.observers is no longer used (perhaps to avoid memory leaks) in Prototype 1.6+, so how do I track down now what event listeners are attached to an element?</p>\n\n<p>I know Firebug has a \"break on next\" button, but there are several mouse listeners on the body element that execute before I can get to the behavior that I want on another particular element, so is there some other way?</p>\n",
            "last_activity_date": 1325079054,
            "question_id": 1422696,
            "score": 6,
            "tags": [
                "javascript",
                "events",
                "prototypejs",
                "listener",
                "observer-pattern"
            ],
            "title": "Update: How to find event listeners on a DOM node in prototype?"
        },
        {
            "answer_count": 5,
            "answers": [
                {
                    "body": "<p>What context is the file running in, and where are you going to save the new XML data?</p>\n\n<p>(The usual context is the browser, in which case you're basically able to display it or post it back to the server.)</p>\n\n<p>But if you're writing a script that would run outside the browser, it depends.</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>AFAIK you can't really create a new xml file with client-side Javascript, usually this is done through a server-side language ( Javascript can be used for server side but it's a rarity ).</p>\n\n<p>Is there any particular reason why you can't go with PHP or Python to create the xml file?</p>\n",
                    "is_accepted": false,
                    "score": 0
                },
                {
                    "body": "<p>In IE you can manipulate XML using an ActiveX.<br />\nThere is also a built in object for FF and other W3C complient browsers.<br />\nI recommend you to take a look at <a href=\"http://www.devarticles.com/c/a/JavaScript/JavaScript-and-XML/\" rel=\"nofollow\">this article</a>.</p>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>I've found Ariel Flesler's XMLWriter constructor function to be a good start for creating XML from scratch, take a look at this </p>\n\n<p><a href=\"http://flesler.blogspot.com/2008/03/xmlwriter-for-javascript.html\">http://flesler.blogspot.com/2008/03/xmlwriter-for-javascript.html</a></p>\n\n<p>Example</p>\n\n<pre><code>function test(){    \n   var v = new  XMLWriter();\n   v.writeStartDocument(true);\n   v.writeElementString('test','Hello World');\n   v.writeAttributeString('foo','bar');\n   v.writeEndDocument();\n   console.log( v.flush() );\n}\n</code></pre>\n\n<p>Result</p>\n\n<pre><code>&lt;?xml version=\"1.0\" encoding=\"ISO-8859-1\" standalone=\"true\" ?&gt;\n&lt;test foo=\"bar\"&gt;Hello World&lt;/test&gt;\n</code></pre>\n\n<p>One caveat to keep in mind is that it doesn't escape strings.</p>\n\n<p>See also\n<a href=\"http://stackoverflow.com/questions/4065365/libraries-to-write-xml-with-javascript\">Libraries to write xml with JavaScript</a></p>\n",
                    "is_accepted": false,
                    "score": 5
                },
                {
                    "body": "<p>I've created two functions as follows:</p>\n\n<pre><code>function loadXMLDoc(filename){\n  if (window.XMLHttpRequest){\n      xhttp=new XMLHttpRequest();\n  }\n  else {\n  xhttp=new ActiveXObject(\"Microsoft.XMLHTTP\"); // code for IE 5-6\n  }\n  xhttp.open(\"GET\",filename,false);\n  xhttp.send();\n  return xhttp.responseXML;\n}\n</code></pre>\n\n<p>And, to write the XML into a local file call the following function.</p>\n\n<pre><code>function writeXML() \n    {\n        var xmlDoc = new ActiveXObject(\"Microsoft.XMLDOM\");\n        var fso = new ActiveXObject(\"Scripting.FileSystemObject\");\n        var FILENAME=\"D:/YourXMLName/xml\";\n        var file = fso.CreateTextFile(FILENAME, true);\n        file.WriteLine('&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\\n');\n        file.WriteLine('&lt;PersonInfo&gt;\\n');\n        file.WriteLine('&gt;&lt;/Person&gt;\\n');\n        } \n        file.WriteLine('&lt;/PersonInfo&gt;\\n');\n        file.Close();\n    } \n</code></pre>\n\n<p>I hope this helps, or else you can try <a href=\"http://flesler.blogspot.in/2008/03/xmlwriter-for-javascript.html\" rel=\"nofollow\">Ariel Flesler's XMLWriter</a> for creating XML in memory.</p>\n",
                    "is_accepted": false,
                    "score": 1
                }
            ],
            "body": "<p>How do i create new xml file and also modify any xml file means add more nodes in xml file using javascript.?</p>\n\n<p>Thanks in advance...</p>\n",
            "last_activity_date": 1405410981,
            "question_id": 1192286,
            "score": 6,
            "tags": [
                "javascript",
                "xml"
            ],
            "title": "create and modify xml file using javascript"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>I believe the maximum length depends not only on the browser, but also on the web server. For example, the Apache HTTP server has a <a href=\"http://httpd.apache.org/docs/2.0/mod/core.html#limitrequestbody\" rel=\"nofollow\">LimitRequestBody directive</a> which allows anywhere from 0 bytes to 2GB worth of data.</p>\n",
                    "is_accepted": true,
                    "score": 4
                },
                {
                    "body": "<p>According to the <a href=\"http://www.xmlrpc.com/spec\" rel=\"nofollow\">XMLRPC spec</a>, the only real limits are on the size of integers and doubles.</p>\n",
                    "is_accepted": false,
                    "score": 2
                },
                {
                    "body": "<p>You don't specify how it fails however your encoding is incorrect.  You should use encodeURIComponent not encodeURI.</p>\n\n<p>Default the maximum size of the request entity body on the client is likely only limited by the available memory.  The server as has already been pointed out may reject entity bodies over a certain size.  IIS 6 and 7 for example have a 200KB default limit.</p>\n",
                    "is_accepted": false,
                    "score": 2
                }
            ],
            "body": "<p>Is there a documented max to the length of the string data you can use in the send method of an XMLHttpRequest for the major browser implementations?</p>\n\n<p>I am running into an issue with a JavaScript XMLHttpRequest Post failing in FireFox 3 when the data is over approx 3k. I was assuming the Post would behave the same as a conventional Form Post.</p>\n\n<p>The W3C docs mention the data param of the send method is a DOMString but I am not sure how the major browsers implement that.</p>\n\n<p>Here is a simplified version of my JavaScript, if bigText is over about 3k it fails, otherwise it works...</p>\n\n<pre><code>var xhReq = createXMLHttpRequest();\n\nfunction createXMLHttpRequest() {\n  try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e) {}\n  try { return new ActiveXObject(\"Microsoft.XMLHTTP\"); } catch (e) {}\n  try { return new XMLHttpRequest(); } catch(e) {}\n  alert(\"XMLHttpRequest not supported\");\n  return null;\n}\n\nfunction mySubmit(id, bigText) {\n  var url    = \"SubmitPost.cfm\";\n  var params = \"id=\" + id + \"&amp;bigtext=\" + encodeURI(bigText);\n\n  xhReq.open(\"POST\", url, true);\n\n  //Send the header information along with the request\n  xhReq.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhReq.setRequestHeader(\"Content-length\", params.length);\n  xhReq.setRequestHeader(\"Connection\", \"close\");\n\n  xhReq.onreadystatechange = onPostSubmit;\n  xhReq.send(params);\n}\n\nfunction onPostSubmit() {\n\n  if (xhReq.readyState==4 || xhReq.readyState==\"complete\")\n     { \n     if (xhReq.status != 200)\n        {\n        alert('BadStatus');\n        return;\n        }\n    } \n}\n</code></pre>\n",
            "last_activity_date": 1222347214,
            "question_id": 124742,
            "score": 6,
            "tags": [
                "javascript",
                "ajax",
                "xmlhttprequest"
            ],
            "title": "Max length of send() data param on XMLHttpRequest Post"
        },
        {
            "answer_count": 3,
            "answers": [
                {
                    "body": "<p>The pattern for instantiating an orthographic camera in three.js is:</p>\n\n<pre><code>var camera = new THREE.OrthographicCamera( width / - 2, width / 2, height / 2, height / - 2, near, far );\n</code></pre>\n\n<p>where <code>width</code> and <code>height</code> are the width and height of the camera's cuboid-shaped frustum measured in <em>world-space</em> units.</p>\n\n<p><code>near</code> and <code>far</code> are the <em>world-space</em> distances to the near and far planes of the frustum. Both <code>near</code> and <code>far</code> should be greater than zero.</p>\n\n<p>To prevent distortion, you will typically want the aspect ratio of the orthographic camera ( <code>width / height</code> ) to match the aspect ratio of the render's canvas.</p>\n\n<p>It is unfortunate that many of the three.js examples pass <code>window.innerWidth</code> and <code>window.innerHeight</code> as args to this constructor. Doing so only makes sense if the orthographic camera is used for rendering to a texture.</p>\n\n<p>three.js r.58</p>\n",
                    "is_accepted": true,
                    "score": 9
                },
                {
                    "body": "<pre><code>            camera.top = (.95*camera.top);\n            camera.bottom = (.95*camera.bottom);\n            camera.left = (.95*camera.left);\n            camera.right = (.95*camera.right);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 1
                },
                {
                    "body": "<p>For future reference:\n<a href=\"https://www.udacity.com/course/viewer#!/c-cs291/l-158750187/m-169414761\" rel=\"nofollow\">good 5min video</a></p>\n\n<pre><code>var w = container.clientWidth;\nvar h = container.clientHeight;\nvar viewSize = h;\nvar aspectRatio = w / h;\n\n_viewport = {\n    viewSize: viewSize,\n    aspectRatio: aspectRatio,\n    left: (-aspectRatio * viewSize) / 2,\n    right: (aspectRatio * viewSize) / 2,\n    top: viewSize / 2,\n    bottom: -viewSize / 2,\n    near: -100,\n    far: 100\n}\n\n_camera = new THREE.OrthographicCamera ( \n    _viewport.left, \n    _viewport.right, \n    _viewport.top, \n    _viewport.bottom, \n    _viewport.near, \n    _viewport.far \n);\n</code></pre>\n",
                    "is_accepted": false,
                    "score": 0
                }
            ],
            "body": "<p>I've working on an app wich displays some 3D models. We load the models, create the meshes, add them to the scene...standard procedure. After the last mesh is added, we compute the bounding box in order to move the camera and cover all the scene, using the size of the total geometry and the size of the viewport to do the math. </p>\n\n<pre><code>    if (bounds.bx / bounds.by &lt; camera.aspect) {\n        /* Vertical max */\n        r = bounds.by / (2 * Math.tan(Math.PI / 8));\n    } else {\n        /* Horizontal max */\n        hFOV = 2 * Math.atan(Math.tan(Math.PI / 8) * camera.aspect);\n        r = bounds.bx / (2 * Math.tan((hFOV / 2)));\n    }\n</code></pre>\n\n<p><code>bounds</code> is an object containing the width and height of the bounding box. After this calculation, we move the camera(plus a little ratio, just aesthetics, we want a little room between the geometry and the screen border :) ) and render</p>\n\n<pre><code>    camera.position.z = r * 1.05;\n</code></pre>\n\n<p>So far this is implemented and runs ok. This has been done with PerspectiveCamera. Now we want to change that and use OrthographicCamera...turns out to be a mess. Models are too small, we lose the mousewheel zoom from the TrackBall Controls and the algorithm to move the camera is not working anymore. Also I don't understand the parameters of the constructor for the camera...these width and height are for the geometry or the viewport?</p>\n",
            "last_activity_date": 1423146281,
            "question_id": 17558085,
            "score": 5,
            "tags": [
                "javascript",
                "3d",
                "three.js"
            ],
            "title": "Three.js - Orthographic camera"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Client side JavaScript function to upload the WAV blob:</p>\n\n<pre><code>function upload(blob) {\n  var xhr=new XMLHttpRequest();\n  xhr.onload=function(e) {\n      if(this.readyState === 4) {\n          console.log(\"Server returned: \",e.target.responseText));\n      }\n  };\n  var fd=new FormData();\n  fd.append(\"that_random_filename.wav\",blob);\n  xhr.open(\"POST\",\"&lt;url&gt;\",true);\n  xhr.send(fd);\n}\n</code></pre>\n\n<p>PHP file <code>upload_wav.php</code>:</p>\n\n<pre><code>&lt;?php\n// get the temporary name that PHP gave to the uploaded file\n$tmp_filename=$_FILES[\"that_random_filename.wav\"][\"tmp_name\"];\n// rename the temporary file (because PHP deletes the file as soon as it's done with it)\nrename($tmp_filename,\"/tmp/uploaded_audio.wav\");\n?&gt;\n</code></pre>\n\n<p>after which you can play the file <code>/tmp/uploaded_audio.wav</code>.</p>\n\n<p>But remember! <code>/tmp/uploaded_audio.wav</code> was created by the user <code>www-data</code>, and (by PHP default) is not readable by the user. To automate adding the appropriate permissions, append the line</p>\n\n<pre><code>chmod(\"/tmp/uploaded_audio.wav\",0755);\n</code></pre>\n\n<p>to the end of the PHP (before the PHP end tag <code>?&gt;</code>).</p>\n\n<p>Hope this helps.</p>\n",
                    "is_accepted": true,
                    "score": 7
                }
            ],
            "body": "<p>I've seen many partial answers to this here and elsewhere, but I am very much a novice coder and am hoping for a thorough solution. I have been able to set up recording audio from a laptop mic in Chrome Canary (v. 29.x) and can, using recorder.js, relatively easily set up recording a .wav file and saving that locally, a la:</p>\n\n<p><a href=\"http://webaudiodemos.appspot.com/AudioRecorder/index.html\">http://webaudiodemos.appspot.com/AudioRecorder/index.html</a></p>\n\n<p>But I need to be able to save the file onto a Linux server I have running. It's the actual sending of the blob recorded data to the server and saving it out as a .wav file that's catching me up. I don't have the requisite PHP and/or AJAX knowledge about how to save the blob to a URL and to deal, as I have been given to understand, with binaries on Linux that make saving that .wav file challenging indeed. I'd greatly welcome any pointers in the right direction.</p>\n",
            "last_activity_date": 1401187034,
            "question_id": 16616010,
            "score": 5,
            "tags": [
                "php",
                "javascript",
                "ajax",
                "html5-audio"
            ],
            "title": "Saving WAV File Recorded in Chrome to Server"
        },
        {
            "answer_count": 1,
            "answers": [
                {
                    "body": "<p>Don't use overview_path for the polyline, it doesn't include all the points, grab the points out of all the legs and use them to create the polyline.</p>\n\n<pre><code>var polyline = new google.maps.Polyline({\n  path: [],\n  strokeColor: '#FF0000',\n  strokeWeight: 3\n});\nvar bounds = new google.maps.LatLngBounds();\n\n\nvar legs = response.routes[0].legs;\nfor (i=0;i&lt;legs.length;i++) {\n  var steps = legs[i].steps;\n  for (j=0;j&lt;steps.length;j++) {\n    var nextSegment = steps[j].path;\n    for (k=0;k&lt;nextSegment.length;k++) {\n      polyline.getPath().push(nextSegment[k]);\n      bounds.extend(nextSegment[k]);\n    }\n  }\n}\n\npolyline.setMap(map);\nmap.fitBounds(bounds);\n</code></pre>\n\n<p><a href=\"http://www.geocodezip.com/v3_directions_custom_iconsC.html\" rel=\"nofollow\">example</a></p>\n",
                    "is_accepted": true,
                    "score": 5
                }
            ],
            "body": "<p>I am trying to get a polyline on a Google map after getting directions. I want to use the v3_epoly (<a href=\"http://www.geocodezip.com/scripts/v3_epoly.js\">http://www.geocodezip.com/scripts/v3_epoly.js</a>) to place markers along a polyline.</p>\n\n<p>I found this post: <a href=\"https://groups.google.com/forum/?fromgroups=#!topic/google-maps-js-api-v3/WwrkpCxE5fw\">https://groups.google.com/forum/?fromgroups=#!topic/google-maps-js-api-v3/WwrkpCxE5fw</a>, which worked, but I found it wasn't completely accurate. In the image, the Google directions is the light blue and the polyline is the darker blue:</p>\n\n<p><img src=\"http://i.stack.imgur.com/RqKB6.png\" alt=\"enter image description here\"></p>\n\n<p>You can see it's quite inaccurate.</p>\n\n<p>This is the code:</p>\n\n<pre><code>directions_service.route(req, function(response, status) {\n  if (status == google.maps.DirectionsStatus.OK) {\n    path = response.routes[0].overview_path;\n    $(path).each(function(index, item) {\n      route.getPath().push(item);\n      bounds.extend(item);\n    });\n    route.setMap(map);\n    map.fitBounds(bounds);\n    directions_display.setDirections(response);\n  }\n});\n</code></pre>\n\n<p>Anyone know either how to improve this accuracy or to get the polyline another way?</p>\n\n<p>EDIT:</p>\n\n<p>I wanted to add the code that got it working:</p>\n\n<pre><code>legs = response.routes[0].legs;\n$(legs).each(function(index, item) {\n  steps = item.steps;\n  $(steps).each(function(index, item) {\n    path = item.path;\n    $(path).each(function(index, item) {\n      route.getPath().push(item);\n      counter++;\n      bounds.extend(item);\n    });\n  });\n});\n</code></pre>\n",
            "last_activity_date": 1376260951,
            "question_id": 16180104,
            "score": 5,
            "tags": [
                "javascript",
                "google-maps-api-3"
            ],
            "title": "Get a polyline from Google maps directions V3"
        }
    ]
}
